<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="719670"><g><title>std::sys::unix::futex::futex_wait (156 samples, 0.02%)</title><rect x="0.0014%" y="773" width="0.0217%" height="15" fill="rgb(227,0,7)" fg:x="10" fg:w="156"/><text x="0.2514%" y="783.50"></text></g><g><title>syscall (153 samples, 0.02%)</title><rect x="0.0018%" y="757" width="0.0213%" height="15" fill="rgb(217,0,24)" fg:x="13" fg:w="153"/><text x="0.2518%" y="767.50"></text></g><g><title>[unknown] (150 samples, 0.02%)</title><rect x="0.0022%" y="741" width="0.0208%" height="15" fill="rgb(221,193,54)" fg:x="16" fg:w="150"/><text x="0.2522%" y="751.50"></text></g><g><title>[unknown] (147 samples, 0.02%)</title><rect x="0.0026%" y="725" width="0.0204%" height="15" fill="rgb(248,212,6)" fg:x="19" fg:w="147"/><text x="0.2526%" y="735.50"></text></g><g><title>[unknown] (139 samples, 0.02%)</title><rect x="0.0038%" y="709" width="0.0193%" height="15" fill="rgb(208,68,35)" fg:x="27" fg:w="139"/><text x="0.2538%" y="719.50"></text></g><g><title>[unknown] (137 samples, 0.02%)</title><rect x="0.0040%" y="693" width="0.0190%" height="15" fill="rgb(232,128,0)" fg:x="29" fg:w="137"/><text x="0.2540%" y="703.50"></text></g><g><title>[unknown] (136 samples, 0.02%)</title><rect x="0.0042%" y="677" width="0.0189%" height="15" fill="rgb(207,160,47)" fg:x="30" fg:w="136"/><text x="0.2542%" y="687.50"></text></g><g><title>[unknown] (130 samples, 0.02%)</title><rect x="0.0050%" y="661" width="0.0181%" height="15" fill="rgb(228,23,34)" fg:x="36" fg:w="130"/><text x="0.2550%" y="671.50"></text></g><g><title>[unknown] (111 samples, 0.02%)</title><rect x="0.0076%" y="645" width="0.0154%" height="15" fill="rgb(218,30,26)" fg:x="55" fg:w="111"/><text x="0.2576%" y="655.50"></text></g><g><title>[unknown] (101 samples, 0.01%)</title><rect x="0.0090%" y="629" width="0.0140%" height="15" fill="rgb(220,122,19)" fg:x="65" fg:w="101"/><text x="0.2590%" y="639.50"></text></g><g><title>[unknown] (90 samples, 0.01%)</title><rect x="0.0106%" y="613" width="0.0125%" height="15" fill="rgb(250,228,42)" fg:x="76" fg:w="90"/><text x="0.2606%" y="623.50"></text></g><g><title>[libc.so.6] (170 samples, 0.02%)</title><rect x="0.0000%" y="949" width="0.0236%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="170"/><text x="0.2500%" y="959.50"></text></g><g><title>[libc.so.6] (170 samples, 0.02%)</title><rect x="0.0000%" y="933" width="0.0236%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="170"/><text x="0.2500%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (170 samples, 0.02%)</title><rect x="0.0000%" y="917" width="0.0236%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="170"/><text x="0.2500%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (170 samples, 0.02%)</title><rect x="0.0000%" y="901" width="0.0236%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="170"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (170 samples, 0.02%)</title><rect x="0.0000%" y="885" width="0.0236%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="170"/><text x="0.2500%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (170 samples, 0.02%)</title><rect x="0.0000%" y="869" width="0.0236%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="170"/><text x="0.2500%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (170 samples, 0.02%)</title><rect x="0.0000%" y="853" width="0.0236%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="170"/><text x="0.2500%" y="863.50"></text></g><g><title>parking::Parker::park_timeout (163 samples, 0.02%)</title><rect x="0.0010%" y="837" width="0.0226%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="163"/><text x="0.2510%" y="847.50"></text></g><g><title>parking::Inner::park (163 samples, 0.02%)</title><rect x="0.0010%" y="821" width="0.0226%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="163"/><text x="0.2510%" y="831.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (162 samples, 0.02%)</title><rect x="0.0011%" y="805" width="0.0225%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="162"/><text x="0.2511%" y="815.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (162 samples, 0.02%)</title><rect x="0.0011%" y="789" width="0.0225%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="162"/><text x="0.2511%" y="799.50"></text></g><g><title>async-io (171 samples, 0.02%)</title><rect x="0.0000%" y="965" width="0.0238%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="171"/><text x="0.2500%" y="975.50"></text></g><g><title>[anon] (80 samples, 0.01%)</title><rect x="0.0245%" y="949" width="0.0111%" height="15" fill="rgb(247,18,42)" fg:x="176" fg:w="80"/><text x="0.2745%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (138 samples, 0.02%)</title><rect x="0.0528%" y="693" width="0.0192%" height="15" fill="rgb(241,131,45)" fg:x="380" fg:w="138"/><text x="0.3028%" y="703.50"></text></g><g><title>cfree (128 samples, 0.02%)</title><rect x="0.0542%" y="677" width="0.0178%" height="15" fill="rgb(249,31,29)" fg:x="390" fg:w="128"/><text x="0.3042%" y="687.50"></text></g><g><title>[libc.so.6] (96 samples, 0.01%)</title><rect x="0.0586%" y="661" width="0.0133%" height="15" fill="rgb(225,111,53)" fg:x="422" fg:w="96"/><text x="0.3086%" y="671.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as core::iter::traits::iterator::Iterator&gt;::next (298 samples, 0.04%)</title><rect x="0.8207%" y="661" width="0.0414%" height="15" fill="rgb(238,160,17)" fg:x="5906" fg:w="298"/><text x="1.0707%" y="671.50"></text></g><g><title>&lt;[u8: 32] as bitcoin_hashes::hex::FromHex&gt;::from_byte_iter (2,390 samples, 0.33%)</title><rect x="0.5312%" y="677" width="0.3321%" height="15" fill="rgb(214,148,48)" fg:x="3823" fg:w="2390"/><text x="0.7812%" y="687.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as core::iter::traits::iterator::Iterator&gt;::next (476 samples, 0.07%)</title><rect x="1.0383%" y="661" width="0.0661%" height="15" fill="rgb(232,36,49)" fg:x="7472" fg:w="476"/><text x="1.2883%" y="671.50"></text></g><g><title>[libc.so.6] (80 samples, 0.01%)</title><rect x="1.1580%" y="581" width="0.0111%" height="15" fill="rgb(209,103,24)" fg:x="8334" fg:w="80"/><text x="1.4080%" y="591.50"></text></g><g><title>[libc.so.6] (240 samples, 0.03%)</title><rect x="1.1359%" y="597" width="0.0333%" height="15" fill="rgb(229,88,8)" fg:x="8175" fg:w="240"/><text x="1.3859%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (452 samples, 0.06%)</title><rect x="1.1066%" y="661" width="0.0628%" height="15" fill="rgb(213,181,19)" fg:x="7964" fg:w="452"/><text x="1.3566%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (442 samples, 0.06%)</title><rect x="1.1080%" y="645" width="0.0614%" height="15" fill="rgb(254,191,54)" fg:x="7974" fg:w="442"/><text x="1.3580%" y="655.50"></text></g><g><title>realloc (415 samples, 0.06%)</title><rect x="1.1118%" y="629" width="0.0577%" height="15" fill="rgb(241,83,37)" fg:x="8001" fg:w="415"/><text x="1.3618%" y="639.50"></text></g><g><title>[libc.so.6] (303 samples, 0.04%)</title><rect x="1.1273%" y="613" width="0.0421%" height="15" fill="rgb(233,36,39)" fg:x="8113" fg:w="303"/><text x="1.3773%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,373 samples, 0.33%)</title><rect x="0.8633%" y="677" width="0.3297%" height="15" fill="rgb(226,3,54)" fg:x="6213" fg:w="2373"/><text x="1.1133%" y="687.50"></text></g><g><title>malloc (170 samples, 0.02%)</title><rect x="1.1694%" y="661" width="0.0236%" height="15" fill="rgb(245,192,40)" fg:x="8416" fg:w="170"/><text x="1.4194%" y="671.50"></text></g><g><title>[libc.so.6] (140 samples, 0.02%)</title><rect x="1.1736%" y="645" width="0.0195%" height="15" fill="rgb(238,167,29)" fg:x="8446" fg:w="140"/><text x="1.4236%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as core::iter::traits::iterator::Iterator&gt;::next (1,125 samples, 0.16%)</title><rect x="1.1930%" y="677" width="0.1563%" height="15" fill="rgb(232,182,51)" fg:x="8586" fg:w="1125"/><text x="1.4430%" y="687.50"></text></g><g><title>&lt;utreexo_wallet::blockchain::udata::LeafData as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (201 samples, 0.03%)</title><rect x="1.3566%" y="677" width="0.0279%" height="15" fill="rgb(231,60,39)" fg:x="9763" fg:w="201"/><text x="1.6066%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (271 samples, 0.04%)</title><rect x="1.3873%" y="677" width="0.0377%" height="15" fill="rgb(208,69,12)" fg:x="9984" fg:w="271"/><text x="1.6373%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (261 samples, 0.04%)</title><rect x="1.3887%" y="661" width="0.0363%" height="15" fill="rgb(235,93,37)" fg:x="9994" fg:w="261"/><text x="1.6387%" y="671.50"></text></g><g><title>realloc (238 samples, 0.03%)</title><rect x="1.3919%" y="645" width="0.0331%" height="15" fill="rgb(213,116,39)" fg:x="10017" fg:w="238"/><text x="1.6419%" y="655.50"></text></g><g><title>[libc.so.6] (210 samples, 0.03%)</title><rect x="1.3958%" y="629" width="0.0292%" height="15" fill="rgb(222,207,29)" fg:x="10045" fg:w="210"/><text x="1.6458%" y="639.50"></text></g><g><title>[libc.so.6] (191 samples, 0.03%)</title><rect x="1.3984%" y="613" width="0.0265%" height="15" fill="rgb(206,96,30)" fg:x="10064" fg:w="191"/><text x="1.6484%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,844 samples, 1.37%)</title><rect x="0.0720%" y="693" width="1.3678%" height="15" fill="rgb(218,138,4)" fg:x="518" fg:w="9844"/><text x="0.3220%" y="703.50"></text></g><g><title>[libc.so.6] (101 samples, 0.01%)</title><rect x="1.4905%" y="645" width="0.0140%" height="15" fill="rgb(250,191,14)" fg:x="10727" fg:w="101"/><text x="1.7405%" y="655.50"></text></g><g><title>[libc.so.6] (76 samples, 0.01%)</title><rect x="1.5734%" y="613" width="0.0106%" height="15" fill="rgb(239,60,40)" fg:x="11323" fg:w="76"/><text x="1.8234%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (781 samples, 0.11%)</title><rect x="1.4757%" y="661" width="0.1085%" height="15" fill="rgb(206,27,48)" fg:x="10620" fg:w="781"/><text x="1.7257%" y="671.50"></text></g><g><title>malloc (562 samples, 0.08%)</title><rect x="1.5061%" y="645" width="0.0781%" height="15" fill="rgb(225,35,8)" fg:x="10839" fg:w="562"/><text x="1.7561%" y="655.50"></text></g><g><title>[libc.so.6] (418 samples, 0.06%)</title><rect x="1.5261%" y="629" width="0.0581%" height="15" fill="rgb(250,213,24)" fg:x="10983" fg:w="418"/><text x="1.7761%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (908 samples, 0.13%)</title><rect x="1.4729%" y="677" width="0.1262%" height="15" fill="rgb(247,123,22)" fg:x="10600" fg:w="908"/><text x="1.7229%" y="687.50"></text></g><g><title>malloc (103 samples, 0.01%)</title><rect x="1.5848%" y="661" width="0.0143%" height="15" fill="rgb(231,138,38)" fg:x="11405" fg:w="103"/><text x="1.8348%" y="671.50"></text></g><g><title>[libc.so.6] (98 samples, 0.01%)</title><rect x="1.5854%" y="645" width="0.0136%" height="15" fill="rgb(231,145,46)" fg:x="11410" fg:w="98"/><text x="1.8354%" y="655.50"></text></g><g><title>[libc.so.6] (73 samples, 0.01%)</title><rect x="1.5889%" y="629" width="0.0101%" height="15" fill="rgb(251,118,11)" fg:x="11435" fg:w="73"/><text x="1.8389%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (172 samples, 0.02%)</title><rect x="1.6028%" y="677" width="0.0239%" height="15" fill="rgb(217,147,25)" fg:x="11535" fg:w="172"/><text x="1.8528%" y="687.50"></text></g><g><title>cfree (158 samples, 0.02%)</title><rect x="1.6048%" y="661" width="0.0220%" height="15" fill="rgb(247,81,37)" fg:x="11549" fg:w="158"/><text x="1.8548%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (152 samples, 0.02%)</title><rect x="1.6645%" y="549" width="0.0211%" height="15" fill="rgb(209,12,38)" fg:x="11979" fg:w="152"/><text x="1.9145%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (179 samples, 0.02%)</title><rect x="1.6623%" y="565" width="0.0249%" height="15" fill="rgb(227,1,9)" fg:x="11963" fg:w="179"/><text x="1.9123%" y="575.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (202 samples, 0.03%)</title><rect x="1.6599%" y="581" width="0.0281%" height="15" fill="rgb(248,47,43)" fg:x="11946" fg:w="202"/><text x="1.9099%" y="591.50"></text></g><g><title>sled::pin (253 samples, 0.04%)</title><rect x="1.6531%" y="613" width="0.0352%" height="15" fill="rgb(221,10,30)" fg:x="11897" fg:w="253"/><text x="1.9031%" y="623.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (210 samples, 0.03%)</title><rect x="1.6591%" y="597" width="0.0292%" height="15" fill="rgb(210,229,1)" fg:x="11940" fg:w="210"/><text x="1.9091%" y="607.50"></text></g><g><title>sled::node::Node::index_next_node (131 samples, 0.02%)</title><rect x="1.7104%" y="581" width="0.0182%" height="15" fill="rgb(222,148,37)" fg:x="12309" fg:w="131"/><text x="1.9604%" y="591.50"></text></g><g><title>sled::binary_search::binary_search_lub (107 samples, 0.01%)</title><rect x="1.7137%" y="565" width="0.0149%" height="15" fill="rgb(234,67,33)" fg:x="12333" fg:w="107"/><text x="1.9637%" y="575.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (106 samples, 0.01%)</title><rect x="1.7472%" y="549" width="0.0147%" height="15" fill="rgb(247,98,35)" fg:x="12574" fg:w="106"/><text x="1.9972%" y="559.50"></text></g><g><title>sled::pagecache::PageCache::allocate_inner (114 samples, 0.02%)</title><rect x="1.7464%" y="565" width="0.0158%" height="15" fill="rgb(247,138,52)" fg:x="12568" fg:w="114"/><text x="1.9964%" y="575.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (100 samples, 0.01%)</title><rect x="1.7628%" y="549" width="0.0139%" height="15" fill="rgb(213,79,30)" fg:x="12686" fg:w="100"/><text x="2.0128%" y="559.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (111 samples, 0.02%)</title><rect x="1.7766%" y="549" width="0.0154%" height="15" fill="rgb(246,177,23)" fg:x="12786" fg:w="111"/><text x="2.0266%" y="559.50"></text></g><g><title>sled::tree::Tree::split_node (483 samples, 0.07%)</title><rect x="1.7286%" y="581" width="0.0671%" height="15" fill="rgb(230,62,27)" fg:x="12440" fg:w="483"/><text x="1.9786%" y="591.50"></text></g><g><title>sled::pagecache::PageCache::replace (241 samples, 0.03%)</title><rect x="1.7622%" y="565" width="0.0335%" height="15" fill="rgb(216,154,8)" fg:x="12682" fg:w="241"/><text x="2.0122%" y="575.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (1,343 samples, 0.19%)</title><rect x="1.6378%" y="645" width="0.1866%" height="15" fill="rgb(244,35,45)" fg:x="11787" fg:w="1343"/><text x="1.8878%" y="655.50"></text></g><g><title>sled::tree::Tree::get (1,268 samples, 0.18%)</title><rect x="1.6483%" y="629" width="0.1762%" height="15" fill="rgb(251,115,12)" fg:x="11862" fg:w="1268"/><text x="1.8983%" y="639.50"></text></g><g><title>sled::tree::Tree::get_inner (980 samples, 0.14%)</title><rect x="1.6883%" y="613" width="0.1362%" height="15" fill="rgb(240,54,50)" fg:x="12150" fg:w="980"/><text x="1.9383%" y="623.50"></text></g><g><title>sled::tree::Tree::view_for_key (880 samples, 0.12%)</title><rect x="1.7022%" y="597" width="0.1223%" height="15" fill="rgb(233,84,52)" fg:x="12250" fg:w="880"/><text x="1.9522%" y="607.50"></text></g><g><title>sled::tree::Tree::view_for_pid (207 samples, 0.03%)</title><rect x="1.7957%" y="581" width="0.0288%" height="15" fill="rgb(207,117,47)" fg:x="12923" fg:w="207"/><text x="2.0457%" y="591.50"></text></g><g><title>sled::pagecache::PageCache::get (181 samples, 0.03%)</title><rect x="1.7993%" y="565" width="0.0252%" height="15" fill="rgb(249,43,39)" fg:x="12949" fg:w="181"/><text x="2.0493%" y="575.50"></text></g><g><title>&lt;utreexo_wallet::blockchain::chain_state::ChainState&lt;PersistedState&gt; as utreexo_wallet::blockchain::BlockchainInterface&gt;::get_block_header (1,497 samples, 0.21%)</title><rect x="1.6274%" y="677" width="0.2080%" height="15" fill="rgb(209,38,44)" fg:x="11712" fg:w="1497"/><text x="1.8774%" y="687.50"></text></g><g><title>&lt;utreexo_wallet::blockchain::chainstore::KvChainStore as utreexo_wallet::blockchain::chainstore::ChainStore&gt;::get_header (1,482 samples, 0.21%)</title><rect x="1.6295%" y="661" width="0.2059%" height="15" fill="rgb(236,212,23)" fg:x="11727" fg:w="1482"/><text x="1.8795%" y="671.50"></text></g><g><title>sled::db::Db::open_tree (79 samples, 0.01%)</title><rect x="1.8244%" y="645" width="0.0110%" height="15" fill="rgb(242,79,21)" fg:x="13130" fg:w="79"/><text x="2.0744%" y="655.50"></text></g><g><title>[libc.so.6] (100 samples, 0.01%)</title><rect x="1.9345%" y="597" width="0.0139%" height="15" fill="rgb(211,96,35)" fg:x="13922" fg:w="100"/><text x="2.1845%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (785 samples, 0.11%)</title><rect x="1.8397%" y="645" width="0.1091%" height="15" fill="rgb(253,215,40)" fg:x="13240" fg:w="785"/><text x="2.0897%" y="655.50"></text></g><g><title>malloc (711 samples, 0.10%)</title><rect x="1.8500%" y="629" width="0.0988%" height="15" fill="rgb(211,81,21)" fg:x="13314" fg:w="711"/><text x="2.1000%" y="639.50"></text></g><g><title>[libc.so.6] (526 samples, 0.07%)</title><rect x="1.8757%" y="613" width="0.0731%" height="15" fill="rgb(208,190,38)" fg:x="13499" fg:w="526"/><text x="2.1257%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (818 samples, 0.11%)</title><rect x="1.8375%" y="661" width="0.1137%" height="15" fill="rgb(235,213,38)" fg:x="13224" fg:w="818"/><text x="2.0875%" y="671.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (216 samples, 0.03%)</title><rect x="1.9997%" y="549" width="0.0300%" height="15" fill="rgb(237,122,38)" fg:x="14391" fg:w="216"/><text x="2.2497%" y="559.50"></text></g><g><title>async_executor::Runner::new (305 samples, 0.04%)</title><rect x="1.9884%" y="565" width="0.0424%" height="15" fill="rgb(244,218,35)" fg:x="14310" fg:w="305"/><text x="2.2384%" y="575.50"></text></g><g><title>event_listener::List::notify (316 samples, 0.04%)</title><rect x="2.0515%" y="517" width="0.0439%" height="15" fill="rgb(240,68,47)" fg:x="14764" fg:w="316"/><text x="2.3015%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (305 samples, 0.04%)</title><rect x="2.0530%" y="501" width="0.0424%" height="15" fill="rgb(210,16,53)" fg:x="14775" fg:w="305"/><text x="2.3030%" y="511.50"></text></g><g><title>parking::Unparker::unpark (273 samples, 0.04%)</title><rect x="2.0575%" y="485" width="0.0379%" height="15" fill="rgb(235,124,12)" fg:x="14807" fg:w="273"/><text x="2.3075%" y="495.50"></text></g><g><title>syscall (243 samples, 0.03%)</title><rect x="2.0616%" y="469" width="0.0338%" height="15" fill="rgb(224,169,11)" fg:x="14837" fg:w="243"/><text x="2.3116%" y="479.50"></text></g><g><title>[unknown] (225 samples, 0.03%)</title><rect x="2.0641%" y="453" width="0.0313%" height="15" fill="rgb(250,166,2)" fg:x="14855" fg:w="225"/><text x="2.3141%" y="463.50"></text></g><g><title>[unknown] (210 samples, 0.03%)</title><rect x="2.0662%" y="437" width="0.0292%" height="15" fill="rgb(242,216,29)" fg:x="14870" fg:w="210"/><text x="2.3162%" y="447.50"></text></g><g><title>[unknown] (195 samples, 0.03%)</title><rect x="2.0683%" y="421" width="0.0271%" height="15" fill="rgb(230,116,27)" fg:x="14885" fg:w="195"/><text x="2.3183%" y="431.50"></text></g><g><title>[unknown] (187 samples, 0.03%)</title><rect x="2.0694%" y="405" width="0.0260%" height="15" fill="rgb(228,99,48)" fg:x="14893" fg:w="187"/><text x="2.3194%" y="415.50"></text></g><g><title>[unknown] (172 samples, 0.02%)</title><rect x="2.0715%" y="389" width="0.0239%" height="15" fill="rgb(253,11,6)" fg:x="14908" fg:w="172"/><text x="2.3215%" y="399.50"></text></g><g><title>[unknown] (155 samples, 0.02%)</title><rect x="2.0739%" y="373" width="0.0215%" height="15" fill="rgb(247,143,39)" fg:x="14925" fg:w="155"/><text x="2.3239%" y="383.50"></text></g><g><title>[unknown] (115 samples, 0.02%)</title><rect x="2.0794%" y="357" width="0.0160%" height="15" fill="rgb(236,97,10)" fg:x="14965" fg:w="115"/><text x="2.3294%" y="367.50"></text></g><g><title>[unknown] (78 samples, 0.01%)</title><rect x="2.0846%" y="341" width="0.0108%" height="15" fill="rgb(233,208,19)" fg:x="15002" fg:w="78"/><text x="2.3346%" y="351.50"></text></g><g><title>event_listener::Event::notify (334 samples, 0.05%)</title><rect x="2.0491%" y="533" width="0.0464%" height="15" fill="rgb(216,164,2)" fg:x="14747" fg:w="334"/><text x="2.2991%" y="543.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (400 samples, 0.06%)</title><rect x="2.0412%" y="549" width="0.0556%" height="15" fill="rgb(220,129,5)" fg:x="14690" fg:w="400"/><text x="2.2912%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (913 samples, 0.13%)</title><rect x="1.9702%" y="581" width="0.1269%" height="15" fill="rgb(242,17,10)" fg:x="14179" fg:w="913"/><text x="2.2202%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (416 samples, 0.06%)</title><rect x="2.0393%" y="565" width="0.0578%" height="15" fill="rgb(242,107,0)" fg:x="14676" fg:w="416"/><text x="2.2893%" y="575.50"></text></g><g><title>async_std::task::builder::Builder::blocking (1,196 samples, 0.17%)</title><rect x="1.9512%" y="661" width="0.1662%" height="15" fill="rgb(251,28,31)" fg:x="14042" fg:w="1196"/><text x="2.2012%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,156 samples, 0.16%)</title><rect x="1.9567%" y="645" width="0.1606%" height="15" fill="rgb(233,223,10)" fg:x="14082" fg:w="1156"/><text x="2.2067%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,126 samples, 0.16%)</title><rect x="1.9609%" y="629" width="0.1565%" height="15" fill="rgb(215,21,27)" fg:x="14112" fg:w="1126"/><text x="2.2109%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,099 samples, 0.15%)</title><rect x="1.9647%" y="613" width="0.1527%" height="15" fill="rgb(232,23,21)" fg:x="14139" fg:w="1099"/><text x="2.2147%" y="623.50"></text></g><g><title>async_io::driver::block_on (1,082 samples, 0.15%)</title><rect x="1.9670%" y="597" width="0.1503%" height="15" fill="rgb(244,5,23)" fg:x="14156" fg:w="1082"/><text x="2.2170%" y="607.50"></text></g><g><title>&lt;utreexo_wallet::blockchain::chain_state::ChainState&lt;PersistedState&gt; as utreexo_wallet::blockchain::BlockchainProviderInterface&gt;::notify (2,228 samples, 0.31%)</title><rect x="1.8354%" y="677" width="0.3096%" height="15" fill="rgb(226,81,46)" fg:x="13209" fg:w="2228"/><text x="2.0854%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (199 samples, 0.03%)</title><rect x="2.1174%" y="661" width="0.0277%" height="15" fill="rgb(247,70,30)" fg:x="15238" fg:w="199"/><text x="2.3674%" y="671.50"></text></g><g><title>cfree (155 samples, 0.02%)</title><rect x="2.1235%" y="645" width="0.0215%" height="15" fill="rgb(212,68,19)" fg:x="15282" fg:w="155"/><text x="2.3735%" y="655.50"></text></g><g><title>[libc.so.6] (89 samples, 0.01%)</title><rect x="2.1326%" y="629" width="0.0124%" height="15" fill="rgb(240,187,13)" fg:x="15348" fg:w="89"/><text x="2.3826%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (155 samples, 0.02%)</title><rect x="2.1510%" y="629" width="0.0215%" height="15" fill="rgb(223,113,26)" fg:x="15480" fg:w="155"/><text x="2.4010%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (152 samples, 0.02%)</title><rect x="2.1514%" y="613" width="0.0211%" height="15" fill="rgb(206,192,2)" fg:x="15483" fg:w="152"/><text x="2.4014%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (161 samples, 0.02%)</title><rect x="2.1503%" y="645" width="0.0224%" height="15" fill="rgb(241,108,4)" fg:x="15475" fg:w="161"/><text x="2.4003%" y="655.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (292 samples, 0.04%)</title><rect x="2.1492%" y="661" width="0.0406%" height="15" fill="rgb(247,173,49)" fg:x="15467" fg:w="292"/><text x="2.3992%" y="671.50"></text></g><g><title>std::io::Write::write_all (121 samples, 0.02%)</title><rect x="2.1729%" y="645" width="0.0168%" height="15" fill="rgb(224,114,35)" fg:x="15638" fg:w="121"/><text x="2.4229%" y="655.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (110 samples, 0.02%)</title><rect x="2.1745%" y="629" width="0.0153%" height="15" fill="rgb(245,159,27)" fg:x="15649" fg:w="110"/><text x="2.4245%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (102 samples, 0.01%)</title><rect x="2.1756%" y="613" width="0.0142%" height="15" fill="rgb(245,172,44)" fg:x="15657" fg:w="102"/><text x="2.4256%" y="623.50"></text></g><g><title>bitcoin::consensus::encode::serialize (85 samples, 0.01%)</title><rect x="2.1898%" y="661" width="0.0118%" height="15" fill="rgb(236,23,11)" fg:x="15759" fg:w="85"/><text x="2.4398%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (75 samples, 0.01%)</title><rect x="2.1911%" y="645" width="0.0104%" height="15" fill="rgb(205,117,38)" fg:x="15769" fg:w="75"/><text x="2.4411%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (285 samples, 0.04%)</title><rect x="2.2321%" y="565" width="0.0396%" height="15" fill="rgb(237,72,25)" fg:x="16064" fg:w="285"/><text x="2.4821%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (351 samples, 0.05%)</title><rect x="2.2260%" y="581" width="0.0488%" height="15" fill="rgb(244,70,9)" fg:x="16020" fg:w="351"/><text x="2.4760%" y="591.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (401 samples, 0.06%)</title><rect x="2.2216%" y="597" width="0.0557%" height="15" fill="rgb(217,125,39)" fg:x="15988" fg:w="401"/><text x="2.4716%" y="607.50"></text></g><g><title>sled::pin (436 samples, 0.06%)</title><rect x="2.2178%" y="629" width="0.0606%" height="15" fill="rgb(235,36,10)" fg:x="15961" fg:w="436"/><text x="2.4678%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (417 samples, 0.06%)</title><rect x="2.2205%" y="613" width="0.0579%" height="15" fill="rgb(251,123,47)" fg:x="15980" fg:w="417"/><text x="2.4705%" y="623.50"></text></g><g><title>sled::node::Node::node_kv_pair (115 samples, 0.02%)</title><rect x="2.2874%" y="613" width="0.0160%" height="15" fill="rgb(221,13,13)" fg:x="16462" fg:w="115"/><text x="2.5374%" y="623.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (82 samples, 0.01%)</title><rect x="2.2920%" y="597" width="0.0114%" height="15" fill="rgb(238,131,9)" fg:x="16495" fg:w="82"/><text x="2.5420%" y="607.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (403 samples, 0.06%)</title><rect x="2.3112%" y="597" width="0.0560%" height="15" fill="rgb(211,50,8)" fg:x="16633" fg:w="403"/><text x="2.5612%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (391 samples, 0.05%)</title><rect x="2.3129%" y="581" width="0.0543%" height="15" fill="rgb(245,182,24)" fg:x="16645" fg:w="391"/><text x="2.5629%" y="591.50"></text></g><g><title>[libc.so.6] (123 samples, 0.02%)</title><rect x="2.4183%" y="501" width="0.0171%" height="15" fill="rgb(242,14,37)" fg:x="17404" fg:w="123"/><text x="2.6683%" y="511.50"></text></g><g><title>[libc.so.6] (242 samples, 0.03%)</title><rect x="2.4019%" y="533" width="0.0336%" height="15" fill="rgb(246,228,12)" fg:x="17286" fg:w="242"/><text x="2.6519%" y="543.50"></text></g><g><title>[libc.so.6] (242 samples, 0.03%)</title><rect x="2.4019%" y="517" width="0.0336%" height="15" fill="rgb(213,55,15)" fg:x="17286" fg:w="242"/><text x="2.6519%" y="527.50"></text></g><g><title>sled::node::Node::apply (365 samples, 0.05%)</title><rect x="2.3857%" y="597" width="0.0507%" height="15" fill="rgb(209,9,3)" fg:x="17169" fg:w="365"/><text x="2.6357%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (304 samples, 0.04%)</title><rect x="2.3942%" y="581" width="0.0422%" height="15" fill="rgb(230,59,30)" fg:x="17230" fg:w="304"/><text x="2.6442%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (294 samples, 0.04%)</title><rect x="2.3955%" y="565" width="0.0409%" height="15" fill="rgb(209,121,21)" fg:x="17240" fg:w="294"/><text x="2.6455%" y="575.50"></text></g><g><title>realloc (285 samples, 0.04%)</title><rect x="2.3968%" y="549" width="0.0396%" height="15" fill="rgb(220,109,13)" fg:x="17249" fg:w="285"/><text x="2.6468%" y="559.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (100 samples, 0.01%)</title><rect x="2.4471%" y="581" width="0.0139%" height="15" fill="rgb(232,18,1)" fg:x="17611" fg:w="100"/><text x="2.6971%" y="591.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (183 samples, 0.03%)</title><rect x="2.4364%" y="597" width="0.0254%" height="15" fill="rgb(215,41,42)" fg:x="17534" fg:w="183"/><text x="2.6864%" y="607.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (148 samples, 0.02%)</title><rect x="2.4660%" y="549" width="0.0206%" height="15" fill="rgb(224,123,36)" fg:x="17747" fg:w="148"/><text x="2.7160%" y="559.50"></text></g><g><title>&lt;crc32fast::Hasher as core::hash::Hasher&gt;::write (154 samples, 0.02%)</title><rect x="2.4654%" y="565" width="0.0214%" height="15" fill="rgb(240,125,3)" fg:x="17743" fg:w="154"/><text x="2.7154%" y="575.50"></text></g><g><title>sled::pagecache::PageCache::link (1,351 samples, 0.19%)</title><rect x="2.3034%" y="613" width="0.1877%" height="15" fill="rgb(205,98,50)" fg:x="16577" fg:w="1351"/><text x="2.5534%" y="623.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (211 samples, 0.03%)</title><rect x="2.4618%" y="597" width="0.0293%" height="15" fill="rgb(205,185,37)" fg:x="17717" fg:w="211"/><text x="2.7118%" y="607.50"></text></g><g><title>sled::pagecache::reservation::Reservation::flush (189 samples, 0.03%)</title><rect x="2.4649%" y="581" width="0.0263%" height="15" fill="rgb(238,207,15)" fg:x="17739" fg:w="189"/><text x="2.7149%" y="591.50"></text></g><g><title>sled::node::Node::index_next_node (160 samples, 0.02%)</title><rect x="2.5010%" y="597" width="0.0222%" height="15" fill="rgb(213,199,42)" fg:x="17999" fg:w="160"/><text x="2.7510%" y="607.50"></text></g><g><title>sled::binary_search::binary_search_lub (123 samples, 0.02%)</title><rect x="2.5061%" y="581" width="0.0171%" height="15" fill="rgb(235,201,11)" fg:x="18036" fg:w="123"/><text x="2.7561%" y="591.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (77 samples, 0.01%)</title><rect x="2.5239%" y="581" width="0.0107%" height="15" fill="rgb(207,46,11)" fg:x="18164" fg:w="77"/><text x="2.7739%" y="591.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (89 samples, 0.01%)</title><rect x="2.5426%" y="565" width="0.0124%" height="15" fill="rgb(241,35,35)" fg:x="18298" fg:w="89"/><text x="2.7926%" y="575.50"></text></g><g><title>sled::pagecache::PageCache::allocate_inner (95 samples, 0.01%)</title><rect x="2.5421%" y="581" width="0.0132%" height="15" fill="rgb(243,32,47)" fg:x="18295" fg:w="95"/><text x="2.7921%" y="591.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (88 samples, 0.01%)</title><rect x="2.5606%" y="549" width="0.0122%" height="15" fill="rgb(247,202,23)" fg:x="18428" fg:w="88"/><text x="2.8106%" y="559.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (122 samples, 0.02%)</title><rect x="2.5564%" y="565" width="0.0170%" height="15" fill="rgb(219,102,11)" fg:x="18398" fg:w="122"/><text x="2.8064%" y="575.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (144 samples, 0.02%)</title><rect x="2.5734%" y="565" width="0.0200%" height="15" fill="rgb(243,110,44)" fg:x="18520" fg:w="144"/><text x="2.8234%" y="575.50"></text></g><g><title>sled::tree::Tree::split_node (528 samples, 0.07%)</title><rect x="2.5232%" y="597" width="0.0734%" height="15" fill="rgb(222,74,54)" fg:x="18159" fg:w="528"/><text x="2.7732%" y="607.50"></text></g><g><title>sled::pagecache::PageCache::replace (297 samples, 0.04%)</title><rect x="2.5553%" y="581" width="0.0413%" height="15" fill="rgb(216,99,12)" fg:x="18390" fg:w="297"/><text x="2.8053%" y="591.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (3,131 samples, 0.44%)</title><rect x="2.2031%" y="661" width="0.4351%" height="15" fill="rgb(226,22,26)" fg:x="15855" fg:w="3131"/><text x="2.4531%" y="671.50"></text></g><g><title>sled::tree::Tree::insert (3,068 samples, 0.43%)</title><rect x="2.2118%" y="645" width="0.4263%" height="15" fill="rgb(217,163,10)" fg:x="15918" fg:w="3068"/><text x="2.4618%" y="655.50"></text></g><g><title>sled::tree::Tree::insert_inner (2,589 samples, 0.36%)</title><rect x="2.2784%" y="629" width="0.3597%" height="15" fill="rgb(213,25,53)" fg:x="16397" fg:w="2589"/><text x="2.5284%" y="639.50"></text></g><g><title>sled::tree::Tree::view_for_key (1,050 samples, 0.15%)</title><rect x="2.4923%" y="613" width="0.1459%" height="15" fill="rgb(252,105,26)" fg:x="17936" fg:w="1050"/><text x="2.7423%" y="623.50"></text></g><g><title>sled::tree::Tree::view_for_pid (299 samples, 0.04%)</title><rect x="2.5966%" y="597" width="0.0415%" height="15" fill="rgb(220,39,43)" fg:x="18687" fg:w="299"/><text x="2.8466%" y="607.50"></text></g><g><title>sled::pagecache::PageCache::get (263 samples, 0.04%)</title><rect x="2.6016%" y="581" width="0.0365%" height="15" fill="rgb(229,68,48)" fg:x="18723" fg:w="263"/><text x="2.8516%" y="591.50"></text></g><g><title>&lt;utreexo_wallet::blockchain::chainstore::KvChainStore as utreexo_wallet::blockchain::chainstore::ChainStore&gt;::save_header (3,586 samples, 0.50%)</title><rect x="2.1450%" y="677" width="0.4983%" height="15" fill="rgb(252,8,32)" fg:x="15437" fg:w="3586"/><text x="2.3950%" y="687.50"></text></g><g><title>[libc.so.6] (144 samples, 0.02%)</title><rect x="2.6433%" y="677" width="0.0200%" height="15" fill="rgb(223,20,43)" fg:x="19023" fg:w="144"/><text x="2.8933%" y="687.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (74 samples, 0.01%)</title><rect x="2.6816%" y="629" width="0.0103%" height="15" fill="rgb(229,81,49)" fg:x="19299" fg:w="74"/><text x="2.9316%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (74 samples, 0.01%)</title><rect x="2.6816%" y="613" width="0.0103%" height="15" fill="rgb(236,28,36)" fg:x="19299" fg:w="74"/><text x="2.9316%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (76 samples, 0.01%)</title><rect x="2.6815%" y="645" width="0.0106%" height="15" fill="rgb(249,185,26)" fg:x="19298" fg:w="76"/><text x="2.9315%" y="655.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (142 samples, 0.02%)</title><rect x="2.6798%" y="677" width="0.0197%" height="15" fill="rgb(249,174,33)" fg:x="19286" fg:w="142"/><text x="2.9298%" y="687.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (137 samples, 0.02%)</title><rect x="2.6805%" y="661" width="0.0190%" height="15" fill="rgb(233,201,37)" fg:x="19291" fg:w="137"/><text x="2.9305%" y="671.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (468 samples, 0.07%)</title><rect x="2.7046%" y="629" width="0.0650%" height="15" fill="rgb(221,78,26)" fg:x="19464" fg:w="468"/><text x="2.9546%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (456 samples, 0.06%)</title><rect x="2.7062%" y="613" width="0.0634%" height="15" fill="rgb(250,127,30)" fg:x="19476" fg:w="456"/><text x="2.9562%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (482 samples, 0.07%)</title><rect x="2.7030%" y="645" width="0.0670%" height="15" fill="rgb(230,49,44)" fg:x="19453" fg:w="482"/><text x="2.9530%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (312 samples, 0.04%)</title><rect x="2.7802%" y="629" width="0.0434%" height="15" fill="rgb(229,67,23)" fg:x="20008" fg:w="312"/><text x="3.0302%" y="639.50"></text></g><g><title>std::io::Write::write_all (163 samples, 0.02%)</title><rect x="2.8009%" y="613" width="0.0226%" height="15" fill="rgb(249,83,47)" fg:x="20157" fg:w="163"/><text x="3.0509%" y="623.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (140 samples, 0.02%)</title><rect x="2.8041%" y="597" width="0.0195%" height="15" fill="rgb(215,43,3)" fg:x="20180" fg:w="140"/><text x="3.0541%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (130 samples, 0.02%)</title><rect x="2.8055%" y="581" width="0.0181%" height="15" fill="rgb(238,154,13)" fg:x="20190" fg:w="130"/><text x="3.0555%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,007 samples, 0.14%)</title><rect x="2.8292%" y="613" width="0.1399%" height="15" fill="rgb(219,56,2)" fg:x="20361" fg:w="1007"/><text x="3.0792%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (980 samples, 0.14%)</title><rect x="2.8330%" y="597" width="0.1362%" height="15" fill="rgb(233,0,4)" fg:x="20388" fg:w="980"/><text x="3.0830%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,033 samples, 0.14%)</title><rect x="2.8273%" y="629" width="0.1435%" height="15" fill="rgb(235,30,7)" fg:x="20347" fg:w="1033"/><text x="3.0773%" y="639.50"></text></g><g><title>[libc.so.6] (143 samples, 0.02%)</title><rect x="3.0485%" y="565" width="0.0199%" height="15" fill="rgb(250,79,13)" fg:x="21939" fg:w="143"/><text x="3.2985%" y="575.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (703 samples, 0.10%)</title><rect x="2.9708%" y="629" width="0.0977%" height="15" fill="rgb(211,146,34)" fg:x="21380" fg:w="703"/><text x="3.2208%" y="639.50"></text></g><g><title>std::io::Write::write_all (699 samples, 0.10%)</title><rect x="2.9714%" y="613" width="0.0971%" height="15" fill="rgb(228,22,38)" fg:x="21384" fg:w="699"/><text x="3.2214%" y="623.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (679 samples, 0.09%)</title><rect x="2.9741%" y="597" width="0.0943%" height="15" fill="rgb(235,168,5)" fg:x="21404" fg:w="679"/><text x="3.2241%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (672 samples, 0.09%)</title><rect x="2.9751%" y="581" width="0.0934%" height="15" fill="rgb(221,155,16)" fg:x="21411" fg:w="672"/><text x="3.2251%" y="591.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (2,222 samples, 0.31%)</title><rect x="2.7706%" y="645" width="0.3088%" height="15" fill="rgb(215,215,53)" fg:x="19939" fg:w="2222"/><text x="3.0206%" y="655.50"></text></g><g><title>std::io::Write::write_all (78 samples, 0.01%)</title><rect x="3.0685%" y="629" width="0.0108%" height="15" fill="rgb(223,4,10)" fg:x="22083" fg:w="78"/><text x="3.3185%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (220 samples, 0.03%)</title><rect x="3.0806%" y="613" width="0.0306%" height="15" fill="rgb(234,103,6)" fg:x="22170" fg:w="220"/><text x="3.3306%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (210 samples, 0.03%)</title><rect x="3.0820%" y="597" width="0.0292%" height="15" fill="rgb(227,97,0)" fg:x="22180" fg:w="210"/><text x="3.3320%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (226 samples, 0.03%)</title><rect x="3.0800%" y="629" width="0.0314%" height="15" fill="rgb(234,150,53)" fg:x="22166" fg:w="226"/><text x="3.3300%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (132 samples, 0.02%)</title><rect x="3.1123%" y="597" width="0.0183%" height="15" fill="rgb(228,201,54)" fg:x="22398" fg:w="132"/><text x="3.3623%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (128 samples, 0.02%)</title><rect x="3.1128%" y="581" width="0.0178%" height="15" fill="rgb(222,22,37)" fg:x="22402" fg:w="128"/><text x="3.3628%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (135 samples, 0.02%)</title><rect x="3.1120%" y="613" width="0.0188%" height="15" fill="rgb(237,53,32)" fg:x="22396" fg:w="135"/><text x="3.3620%" y="623.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (81 samples, 0.01%)</title><rect x="3.1394%" y="597" width="0.0113%" height="15" fill="rgb(233,25,53)" fg:x="22593" fg:w="81"/><text x="3.3894%" y="607.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (177 samples, 0.02%)</title><rect x="3.1310%" y="613" width="0.0246%" height="15" fill="rgb(210,40,34)" fg:x="22533" fg:w="177"/><text x="3.3810%" y="623.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (385 samples, 0.05%)</title><rect x="3.1117%" y="629" width="0.0535%" height="15" fill="rgb(241,220,44)" fg:x="22394" fg:w="385"/><text x="3.3617%" y="639.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (747 samples, 0.10%)</title><rect x="3.0793%" y="645" width="0.1038%" height="15" fill="rgb(235,28,35)" fg:x="22161" fg:w="747"/><text x="3.3293%" y="655.50"></text></g><g><title>std::io::Write::write_all (129 samples, 0.02%)</title><rect x="3.1652%" y="629" width="0.0179%" height="15" fill="rgb(210,56,17)" fg:x="22779" fg:w="129"/><text x="3.4152%" y="639.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (124 samples, 0.02%)</title><rect x="3.1659%" y="613" width="0.0172%" height="15" fill="rgb(224,130,29)" fg:x="22784" fg:w="124"/><text x="3.4159%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (123 samples, 0.02%)</title><rect x="3.1660%" y="597" width="0.0171%" height="15" fill="rgb(235,212,8)" fg:x="22785" fg:w="123"/><text x="3.4160%" y="607.50"></text></g><g><title>bitcoin::blockdata::block::Block::check_merkle_root (3,717 samples, 0.52%)</title><rect x="2.6996%" y="677" width="0.5165%" height="15" fill="rgb(223,33,50)" fg:x="19428" fg:w="3717"/><text x="2.9496%" y="687.50"></text></g><g><title>bitcoin::util::hash::bitcoin_merkle_root (3,714 samples, 0.52%)</title><rect x="2.7000%" y="661" width="0.5161%" height="15" fill="rgb(219,149,13)" fg:x="19431" fg:w="3714"/><text x="2.9500%" y="671.50"></text></g><g><title>std::io::Write::write_all (227 samples, 0.03%)</title><rect x="3.1845%" y="645" width="0.0315%" height="15" fill="rgb(250,156,29)" fg:x="22918" fg:w="227"/><text x="3.4345%" y="655.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (223 samples, 0.03%)</title><rect x="3.1851%" y="629" width="0.0310%" height="15" fill="rgb(216,193,19)" fg:x="22922" fg:w="223"/><text x="3.4351%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (221 samples, 0.03%)</title><rect x="3.1853%" y="613" width="0.0307%" height="15" fill="rgb(216,135,14)" fg:x="22924" fg:w="221"/><text x="3.4353%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (79 samples, 0.01%)</title><rect x="3.2300%" y="645" width="0.0110%" height="15" fill="rgb(241,47,5)" fg:x="23245" fg:w="79"/><text x="3.4800%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (78 samples, 0.01%)</title><rect x="3.2301%" y="629" width="0.0108%" height="15" fill="rgb(233,42,35)" fg:x="23246" fg:w="78"/><text x="3.4801%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (74 samples, 0.01%)</title><rect x="3.2306%" y="613" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="23250" fg:w="74"/><text x="3.4806%" y="623.50"></text></g><g><title>bitcoin::blockdata::block::Block::compute_witness_commitment (124 samples, 0.02%)</title><rect x="3.2241%" y="661" width="0.0172%" height="15" fill="rgb(207,181,40)" fg:x="23203" fg:w="124"/><text x="3.4741%" y="671.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (440 samples, 0.06%)</title><rect x="3.2489%" y="613" width="0.0611%" height="15" fill="rgb(254,173,49)" fg:x="23381" fg:w="440"/><text x="3.4989%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (422 samples, 0.06%)</title><rect x="3.2514%" y="597" width="0.0586%" height="15" fill="rgb(221,1,38)" fg:x="23399" fg:w="422"/><text x="3.5014%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (458 samples, 0.06%)</title><rect x="3.2475%" y="629" width="0.0636%" height="15" fill="rgb(206,124,46)" fg:x="23371" fg:w="458"/><text x="3.4975%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (244 samples, 0.03%)</title><rect x="3.3236%" y="613" width="0.0339%" height="15" fill="rgb(249,21,11)" fg:x="23919" fg:w="244"/><text x="3.5736%" y="623.50"></text></g><g><title>std::io::Write::write_all (152 samples, 0.02%)</title><rect x="3.3364%" y="597" width="0.0211%" height="15" fill="rgb(222,201,40)" fg:x="24011" fg:w="152"/><text x="3.5864%" y="607.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (129 samples, 0.02%)</title><rect x="3.3396%" y="581" width="0.0179%" height="15" fill="rgb(235,61,29)" fg:x="24034" fg:w="129"/><text x="3.5896%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (120 samples, 0.02%)</title><rect x="3.3408%" y="565" width="0.0167%" height="15" fill="rgb(219,207,3)" fg:x="24043" fg:w="120"/><text x="3.5908%" y="575.50"></text></g><g><title>[libc.so.6] (190 samples, 0.03%)</title><rect x="3.4767%" y="549" width="0.0264%" height="15" fill="rgb(222,56,46)" fg:x="25021" fg:w="190"/><text x="3.7267%" y="559.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,050 samples, 0.15%)</title><rect x="3.3575%" y="613" width="0.1459%" height="15" fill="rgb(239,76,54)" fg:x="24163" fg:w="1050"/><text x="3.6075%" y="623.50"></text></g><g><title>std::io::Write::write_all (1,047 samples, 0.15%)</title><rect x="3.3579%" y="597" width="0.1455%" height="15" fill="rgb(231,124,27)" fg:x="24166" fg:w="1047"/><text x="3.6079%" y="607.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,032 samples, 0.14%)</title><rect x="3.3600%" y="581" width="0.1434%" height="15" fill="rgb(249,195,6)" fg:x="24181" fg:w="1032"/><text x="3.6100%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,020 samples, 0.14%)</title><rect x="3.3617%" y="565" width="0.1417%" height="15" fill="rgb(237,174,47)" fg:x="24193" fg:w="1020"/><text x="3.6117%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (798 samples, 0.11%)</title><rect x="3.5115%" y="597" width="0.1109%" height="15" fill="rgb(206,201,31)" fg:x="25271" fg:w="798"/><text x="3.7615%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (762 samples, 0.11%)</title><rect x="3.5165%" y="581" width="0.1059%" height="15" fill="rgb(231,57,52)" fg:x="25307" fg:w="762"/><text x="3.7665%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (827 samples, 0.11%)</title><rect x="3.5087%" y="613" width="0.1149%" height="15" fill="rgb(248,177,22)" fg:x="25251" fg:w="827"/><text x="3.7587%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (432 samples, 0.06%)</title><rect x="3.6282%" y="565" width="0.0600%" height="15" fill="rgb(215,211,37)" fg:x="26111" fg:w="432"/><text x="3.8782%" y="575.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (466 samples, 0.06%)</title><rect x="3.6236%" y="613" width="0.0648%" height="15" fill="rgb(241,128,51)" fg:x="26078" fg:w="466"/><text x="3.8736%" y="623.50"></text></g><g><title>std::io::Write::write_all (461 samples, 0.06%)</title><rect x="3.6243%" y="597" width="0.0641%" height="15" fill="rgb(227,165,31)" fg:x="26083" fg:w="461"/><text x="3.8743%" y="607.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (442 samples, 0.06%)</title><rect x="3.6269%" y="581" width="0.0614%" height="15" fill="rgb(228,167,24)" fg:x="26102" fg:w="442"/><text x="3.8769%" y="591.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::wtxid (2,795 samples, 0.39%)</title><rect x="3.3115%" y="629" width="0.3884%" height="15" fill="rgb(228,143,12)" fg:x="23832" fg:w="2795"/><text x="3.5615%" y="639.50"></text></g><g><title>std::io::Write::write_all (83 samples, 0.01%)</title><rect x="3.6884%" y="613" width="0.0115%" height="15" fill="rgb(249,149,8)" fg:x="26544" fg:w="83"/><text x="3.9384%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (242 samples, 0.03%)</title><rect x="3.7006%" y="597" width="0.0336%" height="15" fill="rgb(243,35,44)" fg:x="26632" fg:w="242"/><text x="3.9506%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (232 samples, 0.03%)</title><rect x="3.7020%" y="581" width="0.0322%" height="15" fill="rgb(246,89,9)" fg:x="26642" fg:w="232"/><text x="3.9520%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (246 samples, 0.03%)</title><rect x="3.7002%" y="613" width="0.0342%" height="15" fill="rgb(233,213,13)" fg:x="26629" fg:w="246"/><text x="3.9502%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (121 samples, 0.02%)</title><rect x="3.7349%" y="581" width="0.0168%" height="15" fill="rgb(233,141,41)" fg:x="26879" fg:w="121"/><text x="3.9849%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (118 samples, 0.02%)</title><rect x="3.7353%" y="565" width="0.0164%" height="15" fill="rgb(239,167,4)" fg:x="26882" fg:w="118"/><text x="3.9853%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (126 samples, 0.02%)</title><rect x="3.7346%" y="597" width="0.0175%" height="15" fill="rgb(209,217,16)" fg:x="26877" fg:w="126"/><text x="3.9846%" y="607.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (72 samples, 0.01%)</title><rect x="3.7605%" y="581" width="0.0100%" height="15" fill="rgb(219,88,35)" fg:x="27063" fg:w="72"/><text x="4.0105%" y="591.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (160 samples, 0.02%)</title><rect x="3.7521%" y="597" width="0.0222%" height="15" fill="rgb(220,193,23)" fg:x="27003" fg:w="160"/><text x="4.0021%" y="607.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (344 samples, 0.05%)</title><rect x="3.7344%" y="613" width="0.0478%" height="15" fill="rgb(230,90,52)" fg:x="26875" fg:w="344"/><text x="3.9844%" y="623.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (709 samples, 0.10%)</title><rect x="3.6999%" y="629" width="0.0985%" height="15" fill="rgb(252,106,19)" fg:x="26627" fg:w="709"/><text x="3.9499%" y="639.50"></text></g><g><title>std::io::Write::write_all (117 samples, 0.02%)</title><rect x="3.7822%" y="613" width="0.0163%" height="15" fill="rgb(206,74,20)" fg:x="27219" fg:w="117"/><text x="4.0322%" y="623.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (114 samples, 0.02%)</title><rect x="3.7826%" y="597" width="0.0158%" height="15" fill="rgb(230,138,44)" fg:x="27222" fg:w="114"/><text x="4.0326%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (112 samples, 0.02%)</title><rect x="3.7828%" y="581" width="0.0156%" height="15" fill="rgb(235,182,43)" fg:x="27224" fg:w="112"/><text x="4.0328%" y="591.50"></text></g><g><title>bitcoin::blockdata::block::Block::witness_root (4,254 samples, 0.59%)</title><rect x="3.2413%" y="661" width="0.5911%" height="15" fill="rgb(242,16,51)" fg:x="23327" fg:w="4254"/><text x="3.4913%" y="671.50"></text></g><g><title>bitcoin::util::hash::bitcoin_merkle_root (4,249 samples, 0.59%)</title><rect x="3.2420%" y="645" width="0.5904%" height="15" fill="rgb(248,9,4)" fg:x="23332" fg:w="4249"/><text x="3.4920%" y="655.50"></text></g><g><title>std::io::Write::write_all (243 samples, 0.03%)</title><rect x="3.7987%" y="629" width="0.0338%" height="15" fill="rgb(210,31,22)" fg:x="27338" fg:w="243"/><text x="4.0487%" y="639.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (234 samples, 0.03%)</title><rect x="3.7999%" y="613" width="0.0325%" height="15" fill="rgb(239,54,39)" fg:x="27347" fg:w="234"/><text x="4.0499%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (230 samples, 0.03%)</title><rect x="3.8005%" y="597" width="0.0320%" height="15" fill="rgb(230,99,41)" fg:x="27351" fg:w="230"/><text x="4.0505%" y="607.50"></text></g><g><title>bitcoin::blockdata::block::Block::check_witness_commitment (4,437 samples, 0.62%)</title><rect x="3.2161%" y="677" width="0.6165%" height="15" fill="rgb(253,106,12)" fg:x="23145" fg:w="4437"/><text x="3.4661%" y="687.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (85 samples, 0.01%)</title><rect x="3.8355%" y="645" width="0.0118%" height="15" fill="rgb(213,46,41)" fg:x="27603" fg:w="85"/><text x="4.0855%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (82 samples, 0.01%)</title><rect x="3.8359%" y="629" width="0.0114%" height="15" fill="rgb(215,133,35)" fg:x="27606" fg:w="82"/><text x="4.0859%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (82 samples, 0.01%)</title><rect x="3.8359%" y="613" width="0.0114%" height="15" fill="rgb(213,28,5)" fg:x="27606" fg:w="82"/><text x="4.0859%" y="623.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::validate_pow (158 samples, 0.02%)</title><rect x="3.8334%" y="677" width="0.0220%" height="15" fill="rgb(215,77,49)" fg:x="27588" fg:w="158"/><text x="4.0834%" y="687.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (147 samples, 0.02%)</title><rect x="3.8350%" y="661" width="0.0204%" height="15" fill="rgb(248,100,22)" fg:x="27599" fg:w="147"/><text x="4.0850%" y="671.50"></text></g><g><title>bitcoin::blockdata::script::Script::is_provably_unspendable (86 samples, 0.01%)</title><rect x="3.8554%" y="677" width="0.0119%" height="15" fill="rgb(208,67,9)" fg:x="27746" fg:w="86"/><text x="4.1054%" y="687.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (131 samples, 0.02%)</title><rect x="3.9051%" y="645" width="0.0182%" height="15" fill="rgb(219,133,21)" fg:x="28104" fg:w="131"/><text x="4.1551%" y="655.50"></text></g><g><title>std::io::Write::write_all (90 samples, 0.01%)</title><rect x="3.9108%" y="629" width="0.0125%" height="15" fill="rgb(246,46,29)" fg:x="28145" fg:w="90"/><text x="4.1608%" y="639.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (240 samples, 0.03%)</title><rect x="3.9285%" y="645" width="0.0333%" height="15" fill="rgb(246,185,52)" fg:x="28272" fg:w="240"/><text x="4.1785%" y="655.50"></text></g><g><title>std::io::Write::write_all (216 samples, 0.03%)</title><rect x="3.9318%" y="629" width="0.0300%" height="15" fill="rgb(252,136,11)" fg:x="28296" fg:w="216"/><text x="4.1818%" y="639.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (145 samples, 0.02%)</title><rect x="3.9417%" y="613" width="0.0201%" height="15" fill="rgb(219,138,53)" fg:x="28367" fg:w="145"/><text x="4.1917%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (126 samples, 0.02%)</title><rect x="3.9443%" y="597" width="0.0175%" height="15" fill="rgb(211,51,23)" fg:x="28386" fg:w="126"/><text x="4.1943%" y="607.50"></text></g><g><title>[libc.so.6] (91 samples, 0.01%)</title><rect x="4.1343%" y="597" width="0.0126%" height="15" fill="rgb(247,221,28)" fg:x="29753" fg:w="91"/><text x="4.3843%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,829 samples, 0.25%)</title><rect x="3.8929%" y="661" width="0.2541%" height="15" fill="rgb(251,222,45)" fg:x="28016" fg:w="1829"/><text x="4.1429%" y="671.50"></text></g><g><title>std::io::Write::write_all (1,333 samples, 0.19%)</title><rect x="3.9618%" y="645" width="0.1852%" height="15" fill="rgb(217,162,53)" fg:x="28512" fg:w="1333"/><text x="4.2118%" y="655.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,216 samples, 0.17%)</title><rect x="3.9781%" y="629" width="0.1690%" height="15" fill="rgb(229,93,14)" fg:x="28629" fg:w="1216"/><text x="4.2281%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,162 samples, 0.16%)</title><rect x="3.9856%" y="613" width="0.1615%" height="15" fill="rgb(209,67,49)" fg:x="28683" fg:w="1162"/><text x="4.2356%" y="623.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (109 samples, 0.02%)</title><rect x="4.1470%" y="661" width="0.0151%" height="15" fill="rgb(213,87,29)" fg:x="29845" fg:w="109"/><text x="4.3970%" y="671.50"></text></g><g><title>std::io::Write::write_all (83 samples, 0.01%)</title><rect x="4.1507%" y="645" width="0.0115%" height="15" fill="rgb(205,151,52)" fg:x="29871" fg:w="83"/><text x="4.4007%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (3,545 samples, 0.49%)</title><rect x="4.1880%" y="629" width="0.4926%" height="15" fill="rgb(253,215,39)" fg:x="30140" fg:w="3545"/><text x="4.4380%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (3,675 samples, 0.51%)</title><rect x="4.1701%" y="645" width="0.5107%" height="15" fill="rgb(221,220,41)" fg:x="30011" fg:w="3675"/><text x="4.4201%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (3,762 samples, 0.52%)</title><rect x="4.1637%" y="661" width="0.5227%" height="15" fill="rgb(218,133,21)" fg:x="29965" fg:w="3762"/><text x="4.4137%" y="671.50"></text></g><g><title>[libc.so.6] (427 samples, 0.06%)</title><rect x="5.6434%" y="597" width="0.0593%" height="15" fill="rgb(221,193,43)" fg:x="40614" fg:w="427"/><text x="5.8934%" y="607.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (7,322 samples, 1.02%)</title><rect x="4.6866%" y="661" width="1.0174%" height="15" fill="rgb(240,128,52)" fg:x="33728" fg:w="7322"/><text x="4.9366%" y="671.50"></text></g><g><title>std::io::Write::write_all (7,245 samples, 1.01%)</title><rect x="4.6973%" y="645" width="1.0067%" height="15" fill="rgb(253,114,12)" fg:x="33805" fg:w="7245"/><text x="4.9473%" y="655.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (6,935 samples, 0.96%)</title><rect x="4.7404%" y="629" width="0.9636%" height="15" fill="rgb(215,223,47)" fg:x="34115" fg:w="6935"/><text x="4.9904%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (6,787 samples, 0.94%)</title><rect x="4.7609%" y="613" width="0.9431%" height="15" fill="rgb(248,225,23)" fg:x="34263" fg:w="6787"/><text x="5.0109%" y="623.50"></text></g><g><title>[libc.so.6] (102 samples, 0.01%)</title><rect x="5.9369%" y="613" width="0.0142%" height="15" fill="rgb(250,108,0)" fg:x="42726" fg:w="102"/><text x="6.1869%" y="623.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (14,964 samples, 2.08%)</title><rect x="3.8721%" y="677" width="2.0793%" height="15" fill="rgb(228,208,7)" fg:x="27866" fg:w="14964"/><text x="4.1221%" y="687.50">b..</text></g><g><title>std::io::Write::write_all (1,780 samples, 0.25%)</title><rect x="5.7040%" y="661" width="0.2473%" height="15" fill="rgb(244,45,10)" fg:x="41050" fg:w="1780"/><text x="5.9540%" y="671.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,627 samples, 0.23%)</title><rect x="5.7253%" y="645" width="0.2261%" height="15" fill="rgb(207,125,25)" fg:x="41203" fg:w="1627"/><text x="5.9753%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,537 samples, 0.21%)</title><rect x="5.7378%" y="629" width="0.2136%" height="15" fill="rgb(210,195,18)" fg:x="41293" fg:w="1537"/><text x="5.9878%" y="639.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (283 samples, 0.04%)</title><rect x="5.9513%" y="677" width="0.0393%" height="15" fill="rgb(249,80,12)" fg:x="42830" fg:w="283"/><text x="6.2013%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (269 samples, 0.04%)</title><rect x="5.9533%" y="661" width="0.0374%" height="15" fill="rgb(221,65,9)" fg:x="42844" fg:w="269"/><text x="6.2033%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (249 samples, 0.03%)</title><rect x="5.9561%" y="645" width="0.0346%" height="15" fill="rgb(235,49,36)" fg:x="42864" fg:w="249"/><text x="6.2061%" y="655.50"></text></g><g><title>realloc (214 samples, 0.03%)</title><rect x="5.9609%" y="629" width="0.0297%" height="15" fill="rgb(225,32,20)" fg:x="42899" fg:w="214"/><text x="6.2109%" y="639.50"></text></g><g><title>[libc.so.6] (120 samples, 0.02%)</title><rect x="5.9740%" y="613" width="0.0167%" height="15" fill="rgb(215,141,46)" fg:x="42993" fg:w="120"/><text x="6.2240%" y="623.50"></text></g><g><title>[libc.so.6] (100 samples, 0.01%)</title><rect x="5.9768%" y="597" width="0.0139%" height="15" fill="rgb(250,160,47)" fg:x="43013" fg:w="100"/><text x="6.2268%" y="607.50"></text></g><g><title>cfree (172 samples, 0.02%)</title><rect x="5.9907%" y="677" width="0.0239%" height="15" fill="rgb(216,222,40)" fg:x="43113" fg:w="172"/><text x="6.2407%" y="687.50"></text></g><g><title>[libc.so.6] (144 samples, 0.02%)</title><rect x="5.9946%" y="661" width="0.0200%" height="15" fill="rgb(234,217,39)" fg:x="43141" fg:w="144"/><text x="6.2446%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (276 samples, 0.04%)</title><rect x="6.0260%" y="677" width="0.0384%" height="15" fill="rgb(207,178,40)" fg:x="43367" fg:w="276"/><text x="6.2760%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (182 samples, 0.03%)</title><rect x="6.0390%" y="661" width="0.0253%" height="15" fill="rgb(221,136,13)" fg:x="43461" fg:w="182"/><text x="6.2890%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (155 samples, 0.02%)</title><rect x="6.0428%" y="645" width="0.0215%" height="15" fill="rgb(249,199,10)" fg:x="43488" fg:w="155"/><text x="6.2928%" y="655.50"></text></g><g><title>[libc.so.6] (117 samples, 0.02%)</title><rect x="6.1249%" y="645" width="0.0163%" height="15" fill="rgb(249,222,13)" fg:x="44079" fg:w="117"/><text x="6.3749%" y="655.50"></text></g><g><title>cfree (142 samples, 0.02%)</title><rect x="7.3607%" y="629" width="0.0197%" height="15" fill="rgb(244,185,38)" fg:x="52973" fg:w="142"/><text x="7.6107%" y="639.50"></text></g><g><title>[libc.so.6] (99 samples, 0.01%)</title><rect x="7.3667%" y="613" width="0.0138%" height="15" fill="rgb(236,202,9)" fg:x="53016" fg:w="99"/><text x="7.6167%" y="623.50"></text></g><g><title>[libc.so.6] (109 samples, 0.02%)</title><rect x="7.3953%" y="613" width="0.0151%" height="15" fill="rgb(250,229,37)" fg:x="53222" fg:w="109"/><text x="7.6453%" y="623.50"></text></g><g><title>alloc::slice::merge_sort (9,071 samples, 1.26%)</title><rect x="6.1503%" y="645" width="1.2604%" height="15" fill="rgb(206,174,23)" fg:x="44262" fg:w="9071"/><text x="6.4003%" y="655.50"></text></g><g><title>malloc (218 samples, 0.03%)</title><rect x="7.3805%" y="629" width="0.0303%" height="15" fill="rgb(211,33,43)" fg:x="53115" fg:w="218"/><text x="7.6305%" y="639.50"></text></g><g><title>malloc (117 samples, 0.02%)</title><rect x="7.4199%" y="645" width="0.0163%" height="15" fill="rgb(245,58,50)" fg:x="53399" fg:w="117"/><text x="7.6699%" y="655.50"></text></g><g><title>[libc.so.6] (133 samples, 0.02%)</title><rect x="7.4537%" y="629" width="0.0185%" height="15" fill="rgb(244,68,36)" fg:x="53642" fg:w="133"/><text x="7.7037%" y="639.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::verify (11,507 samples, 1.60%)</title><rect x="6.0643%" y="677" width="1.5989%" height="15" fill="rgb(232,229,15)" fg:x="43643" fg:w="11507"/><text x="6.3143%" y="687.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes (11,472 samples, 1.59%)</title><rect x="6.0692%" y="661" width="1.5941%" height="15" fill="rgb(254,30,23)" fg:x="43678" fg:w="11472"/><text x="6.3192%" y="671.50"></text></g><g><title>rustreexo::accumulator::types::parent_hash (1,634 samples, 0.23%)</title><rect x="7.4362%" y="645" width="0.2270%" height="15" fill="rgb(235,160,14)" fg:x="53516" fg:w="1634"/><text x="7.6862%" y="655.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (1,358 samples, 0.19%)</title><rect x="7.4745%" y="629" width="0.1887%" height="15" fill="rgb(212,155,44)" fg:x="53792" fg:w="1358"/><text x="7.7245%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (151 samples, 0.02%)</title><rect x="7.7544%" y="661" width="0.0210%" height="15" fill="rgb(226,2,50)" fg:x="55806" fg:w="151"/><text x="8.0044%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (141 samples, 0.02%)</title><rect x="7.7558%" y="645" width="0.0196%" height="15" fill="rgb(234,177,6)" fg:x="55816" fg:w="141"/><text x="8.0058%" y="655.50"></text></g><g><title>realloc (116 samples, 0.02%)</title><rect x="7.7593%" y="629" width="0.0161%" height="15" fill="rgb(217,24,9)" fg:x="55841" fg:w="116"/><text x="8.0093%" y="639.50"></text></g><g><title>[libc.so.6] (104 samples, 0.01%)</title><rect x="7.7609%" y="613" width="0.0145%" height="15" fill="rgb(220,13,46)" fg:x="55853" fg:w="104"/><text x="8.0109%" y="623.50"></text></g><g><title>[libc.so.6] (99 samples, 0.01%)</title><rect x="7.7616%" y="597" width="0.0138%" height="15" fill="rgb(239,221,27)" fg:x="55858" fg:w="99"/><text x="8.0116%" y="607.50"></text></g><g><title>alloc::slice::merge_sort (1,101 samples, 0.15%)</title><rect x="7.7754%" y="661" width="0.1530%" height="15" fill="rgb(222,198,25)" fg:x="55957" fg:w="1101"/><text x="8.0254%" y="671.50"></text></g><g><title>malloc (108 samples, 0.02%)</title><rect x="7.9133%" y="645" width="0.0150%" height="15" fill="rgb(211,99,13)" fg:x="56950" fg:w="108"/><text x="8.1633%" y="655.50"></text></g><g><title>[libc.so.6] (264 samples, 0.04%)</title><rect x="8.0258%" y="645" width="0.0367%" height="15" fill="rgb(232,111,31)" fg:x="57759" fg:w="264"/><text x="8.2758%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (119 samples, 0.02%)</title><rect x="10.4212%" y="629" width="0.0165%" height="15" fill="rgb(245,82,37)" fg:x="74998" fg:w="119"/><text x="10.6712%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (88 samples, 0.01%)</title><rect x="10.4255%" y="613" width="0.0122%" height="15" fill="rgb(227,149,46)" fg:x="75029" fg:w="88"/><text x="10.6755%" y="623.50"></text></g><g><title>[libc.so.6] (205 samples, 0.03%)</title><rect x="10.4462%" y="613" width="0.0285%" height="15" fill="rgb(218,36,50)" fg:x="75178" fg:w="205"/><text x="10.6962%" y="623.50"></text></g><g><title>cfree (267 samples, 0.04%)</title><rect x="10.4377%" y="629" width="0.0371%" height="15" fill="rgb(226,80,48)" fg:x="75117" fg:w="267"/><text x="10.6877%" y="639.50"></text></g><g><title>alloc::slice::merge_sort (17,608 samples, 2.45%)</title><rect x="8.0712%" y="645" width="2.4467%" height="15" fill="rgb(238,224,15)" fg:x="58086" fg:w="17608"/><text x="8.3212%" y="655.50">al..</text></g><g><title>malloc (310 samples, 0.04%)</title><rect x="10.4748%" y="629" width="0.0431%" height="15" fill="rgb(241,136,10)" fg:x="75384" fg:w="310"/><text x="10.7248%" y="639.50"></text></g><g><title>[libc.so.6] (170 samples, 0.02%)</title><rect x="10.4943%" y="613" width="0.0236%" height="15" fill="rgb(208,32,45)" fg:x="75524" fg:w="170"/><text x="10.7443%" y="623.50"></text></g><g><title>malloc (121 samples, 0.02%)</title><rect x="10.5301%" y="645" width="0.0168%" height="15" fill="rgb(207,135,9)" fg:x="75782" fg:w="121"/><text x="10.7801%" y="655.50"></text></g><g><title>[libc.so.6] (248 samples, 0.03%)</title><rect x="10.5725%" y="629" width="0.0345%" height="15" fill="rgb(206,86,44)" fg:x="76087" fg:w="248"/><text x="10.8225%" y="639.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes (21,441 samples, 2.98%)</title><rect x="7.9313%" y="661" width="2.9793%" height="15" fill="rgb(245,177,15)" fg:x="57079" fg:w="21441"/><text x="8.1813%" y="671.50">rus..</text></g><g><title>rustreexo::accumulator::types::parent_hash (2,617 samples, 0.36%)</title><rect x="10.5469%" y="645" width="0.3636%" height="15" fill="rgb(206,64,50)" fg:x="75903" fg:w="2617"/><text x="10.7969%" y="655.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (2,167 samples, 0.30%)</title><rect x="10.6094%" y="629" width="0.3011%" height="15" fill="rgb(234,36,40)" fg:x="76353" fg:w="2167"/><text x="10.8594%" y="639.50"></text></g><g><title>[libc.so.6] (95 samples, 0.01%)</title><rect x="10.9211%" y="645" width="0.0132%" height="15" fill="rgb(213,64,8)" fg:x="78596" fg:w="95"/><text x="11.1711%" y="655.50"></text></g><g><title>rustreexo::accumulator::types::parent_hash (900 samples, 0.13%)</title><rect x="10.9106%" y="661" width="0.1251%" height="15" fill="rgb(210,75,36)" fg:x="78520" fg:w="900"/><text x="11.1606%" y="671.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (723 samples, 0.10%)</title><rect x="10.9352%" y="645" width="0.1005%" height="15" fill="rgb(229,88,21)" fg:x="78697" fg:w="723"/><text x="11.1852%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as core::iter::traits::iterator::Iterator&gt;::next (7,389 samples, 1.03%)</title><rect x="24.7352%" y="629" width="1.0267%" height="15" fill="rgb(252,204,47)" fg:x="178012" fg:w="7389"/><text x="24.9852%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as core::iter::traits::iterator::Iterator&gt;::size_hint (222 samples, 0.03%)</title><rect x="25.7619%" y="629" width="0.0308%" height="15" fill="rgb(208,77,27)" fg:x="185401" fg:w="222"/><text x="26.0119%" y="639.50"></text></g><g><title>&lt;[u8: 32] as bitcoin_hashes::hex::FromHex&gt;::from_byte_iter (102,776 samples, 14.28%)</title><rect x="11.5456%" y="645" width="14.2810%" height="15" fill="rgb(221,76,26)" fg:x="83090" fg:w="102776"/><text x="11.7956%" y="655.50">&lt;[u8: 32] as bitcoin_h..</text></g><g><title>[unknown] (243 samples, 0.03%)</title><rect x="25.7928%" y="629" width="0.0338%" height="15" fill="rgb(225,139,18)" fg:x="185623" fg:w="243"/><text x="26.0428%" y="639.50"></text></g><g><title>[unknown] (232 samples, 0.03%)</title><rect x="25.7943%" y="613" width="0.0322%" height="15" fill="rgb(230,137,11)" fg:x="185634" fg:w="232"/><text x="26.0443%" y="623.50"></text></g><g><title>[unknown] (224 samples, 0.03%)</title><rect x="25.7954%" y="597" width="0.0311%" height="15" fill="rgb(212,28,1)" fg:x="185642" fg:w="224"/><text x="26.0454%" y="607.50"></text></g><g><title>[unknown] (222 samples, 0.03%)</title><rect x="25.7957%" y="581" width="0.0308%" height="15" fill="rgb(248,164,17)" fg:x="185644" fg:w="222"/><text x="26.0457%" y="591.50"></text></g><g><title>[unknown] (214 samples, 0.03%)</title><rect x="25.7968%" y="565" width="0.0297%" height="15" fill="rgb(222,171,42)" fg:x="185652" fg:w="214"/><text x="26.0468%" y="575.50"></text></g><g><title>[unknown] (200 samples, 0.03%)</title><rect x="25.7988%" y="549" width="0.0278%" height="15" fill="rgb(243,84,45)" fg:x="185666" fg:w="200"/><text x="26.0488%" y="559.50"></text></g><g><title>[unknown] (187 samples, 0.03%)</title><rect x="25.8006%" y="533" width="0.0260%" height="15" fill="rgb(252,49,23)" fg:x="185679" fg:w="187"/><text x="26.0506%" y="543.50"></text></g><g><title>[unknown] (149 samples, 0.02%)</title><rect x="25.8059%" y="517" width="0.0207%" height="15" fill="rgb(215,19,7)" fg:x="185717" fg:w="149"/><text x="26.0559%" y="527.50"></text></g><g><title>[unknown] (135 samples, 0.02%)</title><rect x="25.8078%" y="501" width="0.0188%" height="15" fill="rgb(238,81,41)" fg:x="185731" fg:w="135"/><text x="26.0578%" y="511.50"></text></g><g><title>[unknown] (116 samples, 0.02%)</title><rect x="25.8104%" y="485" width="0.0161%" height="15" fill="rgb(210,199,37)" fg:x="185750" fg:w="116"/><text x="26.0604%" y="495.50"></text></g><g><title>[unknown] (96 samples, 0.01%)</title><rect x="25.8132%" y="469" width="0.0133%" height="15" fill="rgb(244,192,49)" fg:x="185770" fg:w="96"/><text x="26.0632%" y="479.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_inner (1,348 samples, 0.19%)</title><rect x="25.8286%" y="645" width="0.1873%" height="15" fill="rgb(226,211,11)" fg:x="185881" fg:w="1348"/><text x="26.0786%" y="655.50"></text></g><g><title>[libc.so.6] (682 samples, 0.09%)</title><rect x="26.0483%" y="597" width="0.0948%" height="15" fill="rgb(236,162,54)" fg:x="187462" fg:w="682"/><text x="26.2983%" y="607.50"></text></g><g><title>[libc.so.6] (641 samples, 0.09%)</title><rect x="26.0540%" y="581" width="0.0891%" height="15" fill="rgb(220,229,9)" fg:x="187503" fg:w="641"/><text x="26.3040%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (878 samples, 0.12%)</title><rect x="26.0212%" y="645" width="0.1220%" height="15" fill="rgb(250,87,22)" fg:x="187267" fg:w="878"/><text x="26.2712%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (865 samples, 0.12%)</title><rect x="26.0230%" y="629" width="0.1202%" height="15" fill="rgb(239,43,17)" fg:x="187280" fg:w="865"/><text x="26.2730%" y="639.50"></text></g><g><title>realloc (843 samples, 0.12%)</title><rect x="26.0261%" y="613" width="0.1171%" height="15" fill="rgb(231,177,25)" fg:x="187302" fg:w="843"/><text x="26.2761%" y="623.50"></text></g><g><title>bitcoin_hashes::hex::HexIterator::new (182 samples, 0.03%)</title><rect x="26.1432%" y="645" width="0.0253%" height="15" fill="rgb(219,179,1)" fg:x="188145" fg:w="182"/><text x="26.3932%" y="655.50"></text></g><g><title>rustreexo::accumulator::stump::Stump::modify (133,330 samples, 18.53%)</title><rect x="7.6632%" y="677" width="18.5265%" height="15" fill="rgb(238,219,53)" fg:x="55150" fg:w="133330"/><text x="7.9132%" y="687.50">rustreexo::accumulator::stump..</text></g><g><title>rustreexo::accumulator::util::roots_to_destroy (109,058 samples, 15.15%)</title><rect x="11.0359%" y="661" width="15.1539%" height="15" fill="rgb(232,167,36)" fg:x="79422" fg:w="109058"/><text x="11.2859%" y="671.50">rustreexo::accumulator:..</text></g><g><title>malloc (83 samples, 0.01%)</title><rect x="26.1782%" y="645" width="0.0115%" height="15" fill="rgb(244,19,51)" fg:x="188397" fg:w="83"/><text x="26.4282%" y="655.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (1,057 samples, 0.15%)</title><rect x="26.1921%" y="677" width="0.1469%" height="15" fill="rgb(224,6,22)" fg:x="188497" fg:w="1057"/><text x="26.4421%" y="687.50"></text></g><g><title>[libc.so.6] (225 samples, 0.03%)</title><rect x="26.3928%" y="549" width="0.0313%" height="15" fill="rgb(224,145,5)" fg:x="189941" fg:w="225"/><text x="26.6428%" y="559.50"></text></g><g><title>[libc.so.6] (204 samples, 0.03%)</title><rect x="26.3957%" y="533" width="0.0283%" height="15" fill="rgb(234,130,49)" fg:x="189962" fg:w="204"/><text x="26.6457%" y="543.50"></text></g><g><title>[libc.so.6] (111 samples, 0.02%)</title><rect x="26.4086%" y="517" width="0.0154%" height="15" fill="rgb(254,6,2)" fg:x="190055" fg:w="111"/><text x="26.6586%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (343 samples, 0.05%)</title><rect x="26.3767%" y="597" width="0.0477%" height="15" fill="rgb(208,96,46)" fg:x="189825" fg:w="343"/><text x="26.6267%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (330 samples, 0.05%)</title><rect x="26.3785%" y="581" width="0.0459%" height="15" fill="rgb(239,3,39)" fg:x="189838" fg:w="330"/><text x="26.6285%" y="591.50"></text></g><g><title>realloc (286 samples, 0.04%)</title><rect x="26.3846%" y="565" width="0.0397%" height="15" fill="rgb(233,210,1)" fg:x="189882" fg:w="286"/><text x="26.6346%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (405 samples, 0.06%)</title><rect x="26.3694%" y="613" width="0.0563%" height="15" fill="rgb(244,137,37)" fg:x="189773" fg:w="405"/><text x="26.6194%" y="623.50"></text></g><g><title>[libc.so.6] (88 samples, 0.01%)</title><rect x="26.4424%" y="549" width="0.0122%" height="15" fill="rgb(240,136,2)" fg:x="190298" fg:w="88"/><text x="26.6924%" y="559.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (209 samples, 0.03%)</title><rect x="26.4257%" y="613" width="0.0290%" height="15" fill="rgb(239,18,37)" fg:x="190178" fg:w="209"/><text x="26.6757%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (133 samples, 0.02%)</title><rect x="26.4363%" y="597" width="0.0185%" height="15" fill="rgb(218,185,22)" fg:x="190254" fg:w="133"/><text x="26.6863%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 samples, 0.02%)</title><rect x="26.4367%" y="581" width="0.0181%" height="15" fill="rgb(225,218,4)" fg:x="190257" fg:w="130"/><text x="26.6867%" y="591.50"></text></g><g><title>realloc (115 samples, 0.02%)</title><rect x="26.4388%" y="565" width="0.0160%" height="15" fill="rgb(230,182,32)" fg:x="190272" fg:w="115"/><text x="26.6888%" y="575.50"></text></g><g><title>[libc.so.6] (80 samples, 0.01%)</title><rect x="26.4614%" y="597" width="0.0111%" height="15" fill="rgb(242,56,43)" fg:x="190435" fg:w="80"/><text x="26.7114%" y="607.50"></text></g><g><title>bitcoin::consensus::encode::serialize (1,087 samples, 0.15%)</title><rect x="26.3553%" y="645" width="0.1510%" height="15" fill="rgb(233,99,24)" fg:x="189671" fg:w="1087"/><text x="26.6053%" y="655.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,083 samples, 0.15%)</title><rect x="26.3558%" y="629" width="0.1505%" height="15" fill="rgb(234,209,42)" fg:x="189675" fg:w="1083"/><text x="26.6058%" y="639.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (331 samples, 0.05%)</title><rect x="26.4603%" y="613" width="0.0460%" height="15" fill="rgb(227,7,12)" fg:x="190427" fg:w="331"/><text x="26.7103%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 samples, 0.03%)</title><rect x="26.4725%" y="597" width="0.0338%" height="15" fill="rgb(245,203,43)" fg:x="190515" fg:w="243"/><text x="26.7225%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (235 samples, 0.03%)</title><rect x="26.4737%" y="581" width="0.0327%" height="15" fill="rgb(238,205,33)" fg:x="190523" fg:w="235"/><text x="26.7237%" y="591.50"></text></g><g><title>realloc (221 samples, 0.03%)</title><rect x="26.4756%" y="565" width="0.0307%" height="15" fill="rgb(231,56,7)" fg:x="190537" fg:w="221"/><text x="26.7256%" y="575.50"></text></g><g><title>[libc.so.6] (191 samples, 0.03%)</title><rect x="26.4798%" y="549" width="0.0265%" height="15" fill="rgb(244,186,29)" fg:x="190567" fg:w="191"/><text x="26.7298%" y="559.50"></text></g><g><title>[libc.so.6] (163 samples, 0.02%)</title><rect x="26.4837%" y="533" width="0.0226%" height="15" fill="rgb(234,111,31)" fg:x="190595" fg:w="163"/><text x="26.7337%" y="543.50"></text></g><g><title>CSHA256::Finalize (985 samples, 0.14%)</title><rect x="27.3475%" y="581" width="0.1369%" height="15" fill="rgb(241,149,10)" fg:x="196812" fg:w="985"/><text x="27.5975%" y="591.50"></text></g><g><title>CSHA256::Write (966 samples, 0.13%)</title><rect x="27.3502%" y="565" width="0.1342%" height="15" fill="rgb(249,206,44)" fg:x="196831" fg:w="966"/><text x="27.6002%" y="575.50"></text></g><g><title>[libc.so.6] (2,334 samples, 0.32%)</title><rect x="33.6492%" y="565" width="0.3243%" height="15" fill="rgb(251,153,30)" fg:x="242163" fg:w="2334"/><text x="33.8992%" y="575.50"></text></g><g><title>CSHA256::Write (46,861 samples, 6.51%)</title><rect x="27.4845%" y="581" width="6.5115%" height="15" fill="rgb(239,152,38)" fg:x="197798" fg:w="46861"/><text x="27.7345%" y="591.50">CSHA256::..</text></g><g><title>[utreexo-wallet] (92 samples, 0.01%)</title><rect x="33.9832%" y="565" width="0.0128%" height="15" fill="rgb(249,139,47)" fg:x="244567" fg:w="92"/><text x="34.2332%" y="575.50"></text></g><g><title>CTransaction::ComputeHash (48,802 samples, 6.78%)</title><rect x="27.2234%" y="597" width="6.7812%" height="15" fill="rgb(244,64,35)" fg:x="195919" fg:w="48802"/><text x="27.4734%" y="607.50">CTransact..</text></g><g><title>CSHA256::Finalize (892 samples, 0.12%)</title><rect x="34.4554%" y="565" width="0.1239%" height="15" fill="rgb(216,46,15)" fg:x="247965" fg:w="892"/><text x="34.7054%" y="575.50"></text></g><g><title>CSHA256::Write (871 samples, 0.12%)</title><rect x="34.4583%" y="549" width="0.1210%" height="15" fill="rgb(250,74,19)" fg:x="247986" fg:w="871"/><text x="34.7083%" y="559.50"></text></g><g><title>[libc.so.6] (3,410 samples, 0.47%)</title><rect x="54.7719%" y="549" width="0.4738%" height="15" fill="rgb(249,42,33)" fg:x="394177" fg:w="3410"/><text x="55.0219%" y="559.50"></text></g><g><title>[unknown] (252 samples, 0.04%)</title><rect x="55.2457%" y="549" width="0.0350%" height="15" fill="rgb(242,149,17)" fg:x="397587" fg:w="252"/><text x="55.4957%" y="559.50"></text></g><g><title>[unknown] (242 samples, 0.03%)</title><rect x="55.2471%" y="533" width="0.0336%" height="15" fill="rgb(244,29,21)" fg:x="397597" fg:w="242"/><text x="55.4971%" y="543.50"></text></g><g><title>[unknown] (233 samples, 0.03%)</title><rect x="55.2484%" y="517" width="0.0324%" height="15" fill="rgb(220,130,37)" fg:x="397606" fg:w="233"/><text x="55.4984%" y="527.50"></text></g><g><title>[unknown] (227 samples, 0.03%)</title><rect x="55.2492%" y="501" width="0.0315%" height="15" fill="rgb(211,67,2)" fg:x="397612" fg:w="227"/><text x="55.4992%" y="511.50"></text></g><g><title>[unknown] (220 samples, 0.03%)</title><rect x="55.2502%" y="485" width="0.0306%" height="15" fill="rgb(235,68,52)" fg:x="397619" fg:w="220"/><text x="55.5002%" y="495.50"></text></g><g><title>[unknown] (204 samples, 0.03%)</title><rect x="55.2524%" y="469" width="0.0283%" height="15" fill="rgb(246,142,3)" fg:x="397635" fg:w="204"/><text x="55.5024%" y="479.50"></text></g><g><title>[unknown] (192 samples, 0.03%)</title><rect x="55.2541%" y="453" width="0.0267%" height="15" fill="rgb(241,25,7)" fg:x="397647" fg:w="192"/><text x="55.5041%" y="463.50"></text></g><g><title>[unknown] (175 samples, 0.02%)</title><rect x="55.2564%" y="437" width="0.0243%" height="15" fill="rgb(242,119,39)" fg:x="397664" fg:w="175"/><text x="55.5064%" y="447.50"></text></g><g><title>[unknown] (166 samples, 0.02%)</title><rect x="55.2577%" y="421" width="0.0231%" height="15" fill="rgb(241,98,45)" fg:x="397673" fg:w="166"/><text x="55.5077%" y="431.50"></text></g><g><title>[unknown] (140 samples, 0.02%)</title><rect x="55.2613%" y="405" width="0.0195%" height="15" fill="rgb(254,28,30)" fg:x="397699" fg:w="140"/><text x="55.5113%" y="415.50"></text></g><g><title>[unknown] (110 samples, 0.02%)</title><rect x="55.2655%" y="389" width="0.0153%" height="15" fill="rgb(241,142,54)" fg:x="397729" fg:w="110"/><text x="55.5155%" y="399.50"></text></g><g><title>[unknown] (82 samples, 0.01%)</title><rect x="55.2694%" y="373" width="0.0114%" height="15" fill="rgb(222,85,15)" fg:x="397757" fg:w="82"/><text x="55.5194%" y="383.50"></text></g><g><title>CSHA256::Write (149,187 samples, 20.73%)</title><rect x="34.5795%" y="565" width="20.7299%" height="15" fill="rgb(210,85,47)" fg:x="248858" fg:w="149187"/><text x="34.8295%" y="575.50">CSHA256::Write</text></g><g><title>[utreexo-wallet] (206 samples, 0.03%)</title><rect x="55.2808%" y="549" width="0.0286%" height="15" fill="rgb(224,206,25)" fg:x="397839" fg:w="206"/><text x="55.5308%" y="559.50"></text></g><g><title>[libc.so.6] (1,004 samples, 0.14%)</title><rect x="56.1848%" y="533" width="0.1395%" height="15" fill="rgb(243,201,19)" fg:x="404345" fg:w="1004"/><text x="56.4348%" y="543.50"></text></g><g><title>CSHA256::Write (6,076 samples, 0.84%)</title><rect x="55.4850%" y="549" width="0.8443%" height="15" fill="rgb(236,59,4)" fg:x="399309" fg:w="6076"/><text x="55.7350%" y="559.50"></text></g><g><title>WriteCompactSize&lt;CHashWriter&gt; (7,341 samples, 1.02%)</title><rect x="55.3094%" y="565" width="1.0201%" height="15" fill="rgb(254,179,45)" fg:x="398045" fg:w="7341"/><text x="55.5594%" y="575.50"></text></g><g><title>CTransaction::ComputeWitnessHash (160,655 samples, 22.32%)</title><rect x="34.0070%" y="581" width="22.3234%" height="15" fill="rgb(226,14,10)" fg:x="244738" fg:w="160655"/><text x="34.2570%" y="591.50">CTransaction::ComputeWitnessHash</text></g><g><title>CTransaction::CTransaction (209,508 samples, 29.11%)</title><rect x="27.2189%" y="613" width="29.1117%" height="15" fill="rgb(244,27,41)" fg:x="195886" fg:w="209508"/><text x="27.4689%" y="623.50">CTransaction::CTransaction</text></g><g><title>CTransaction::ComputeWitnessHash (160,673 samples, 22.33%)</title><rect x="34.0046%" y="597" width="22.3259%" height="15" fill="rgb(235,35,32)" fg:x="244721" fg:w="160673"/><text x="34.2546%" y="607.50">CTransaction::ComputeWitnessHash</text></g><g><title>CSHA256::Finalize (2,892 samples, 0.40%)</title><rect x="56.4014%" y="597" width="0.4019%" height="15" fill="rgb(218,68,31)" fg:x="405904" fg:w="2892"/><text x="56.6514%" y="607.50"></text></g><g><title>CSHA256::Write (2,836 samples, 0.39%)</title><rect x="56.4092%" y="581" width="0.3941%" height="15" fill="rgb(207,120,37)" fg:x="405960" fg:w="2836"/><text x="56.6592%" y="591.50"></text></g><g><title>[libc.so.6] (1,406 samples, 0.20%)</title><rect x="62.4697%" y="581" width="0.1954%" height="15" fill="rgb(227,98,0)" fg:x="449576" fg:w="1406"/><text x="62.7197%" y="591.50"></text></g><g><title>CSHA256::Write (42,269 samples, 5.87%)</title><rect x="56.8037%" y="597" width="5.8734%" height="15" fill="rgb(207,7,3)" fg:x="408799" fg:w="42269"/><text x="57.0537%" y="607.50">CSHA256..</text></g><g><title>PrecomputedTransactionData::PrecomputedTransactionData&lt;CTransaction&gt; (45,679 samples, 6.35%)</title><rect x="56.3305%" y="613" width="6.3472%" height="15" fill="rgb(206,98,19)" fg:x="405394" fg:w="45679"/><text x="56.5805%" y="623.50">Precompu..</text></g><g><title>ReadCompactSize&lt;(anonymous namespace)::TxInputStream&gt; (806 samples, 0.11%)</title><rect x="62.6778%" y="613" width="0.1120%" height="15" fill="rgb(217,5,26)" fg:x="451073" fg:w="806"/><text x="62.9278%" y="623.50"></text></g><g><title>Unserialize_impl&lt;(anonymous namespace)::TxInputStream, 28u, unsigned char&gt; (1,440 samples, 0.20%)</title><rect x="62.9839%" y="597" width="0.2001%" height="15" fill="rgb(235,190,38)" fg:x="453276" fg:w="1440"/><text x="63.2339%" y="607.50"></text></g><g><title>ReadCompactSize&lt;(anonymous namespace)::TxInputStream&gt; (935 samples, 0.13%)</title><rect x="63.0540%" y="581" width="0.1299%" height="15" fill="rgb(247,86,24)" fg:x="453781" fg:w="935"/><text x="63.3040%" y="591.50"></text></g><g><title>[libc.so.6] (294 samples, 0.04%)</title><rect x="63.3824%" y="533" width="0.0409%" height="15" fill="rgb(205,101,16)" fg:x="456144" fg:w="294"/><text x="63.6324%" y="543.50"></text></g><g><title>[libc.so.6] (798 samples, 0.11%)</title><rect x="63.3125%" y="549" width="0.1109%" height="15" fill="rgb(246,168,33)" fg:x="455641" fg:w="798"/><text x="63.5625%" y="559.50"></text></g><g><title>operator new (1,724 samples, 0.24%)</title><rect x="63.1841%" y="597" width="0.2396%" height="15" fill="rgb(231,114,1)" fg:x="454717" fg:w="1724"/><text x="63.4341%" y="607.50"></text></g><g><title>malloc (1,706 samples, 0.24%)</title><rect x="63.1866%" y="581" width="0.2371%" height="15" fill="rgb(207,184,53)" fg:x="454735" fg:w="1706"/><text x="63.4366%" y="591.50"></text></g><g><title>[libc.so.6] (1,686 samples, 0.23%)</title><rect x="63.1894%" y="565" width="0.2343%" height="15" fill="rgb(224,95,51)" fg:x="454755" fg:w="1686"/><text x="63.4394%" y="575.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (4,566 samples, 0.63%)</title><rect x="62.7898%" y="613" width="0.6345%" height="15" fill="rgb(212,188,45)" fg:x="451879" fg:w="4566"/><text x="63.0398%" y="623.50"></text></g><g><title>Unserialize_impl&lt;(anonymous namespace)::TxInputStream, 28u, unsigned char&gt; (95 samples, 0.01%)</title><rect x="63.4320%" y="597" width="0.0132%" height="15" fill="rgb(223,154,38)" fg:x="456501" fg:w="95"/><text x="63.6820%" y="607.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (226 samples, 0.03%)</title><rect x="63.4242%" y="613" width="0.0314%" height="15" fill="rgb(251,22,52)" fg:x="456445" fg:w="226"/><text x="63.6742%" y="623.50"></text></g><g><title>std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt;::reserve (75 samples, 0.01%)</title><rect x="63.4452%" y="597" width="0.0104%" height="15" fill="rgb(229,209,22)" fg:x="456596" fg:w="75"/><text x="63.6952%" y="607.50"></text></g><g><title>operator new (122 samples, 0.02%)</title><rect x="63.5258%" y="565" width="0.0170%" height="15" fill="rgb(234,138,34)" fg:x="457176" fg:w="122"/><text x="63.7758%" y="575.50"></text></g><g><title>malloc (113 samples, 0.02%)</title><rect x="63.5270%" y="549" width="0.0157%" height="15" fill="rgb(212,95,11)" fg:x="457185" fg:w="113"/><text x="63.7770%" y="559.50"></text></g><g><title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const&amp;&gt; (241 samples, 0.03%)</title><rect x="63.5095%" y="581" width="0.0335%" height="15" fill="rgb(240,179,47)" fg:x="457059" fg:w="241"/><text x="63.7595%" y="591.50"></text></g><g><title>EvalScript (502 samples, 0.07%)</title><rect x="63.4745%" y="597" width="0.0698%" height="15" fill="rgb(240,163,11)" fg:x="456807" fg:w="502"/><text x="63.7245%" y="607.50"></text></g><g><title>CRIPEMD160::Finalize (251 samples, 0.03%)</title><rect x="63.6090%" y="549" width="0.0349%" height="15" fill="rgb(236,37,12)" fg:x="457775" fg:w="251"/><text x="63.8590%" y="559.50"></text></g><g><title>CRIPEMD160::Write (240 samples, 0.03%)</title><rect x="63.6105%" y="533" width="0.0333%" height="15" fill="rgb(232,164,16)" fg:x="457786" fg:w="240"/><text x="63.8605%" y="543.50"></text></g><g><title>CSHA256::Finalize (389 samples, 0.05%)</title><rect x="63.6461%" y="549" width="0.0541%" height="15" fill="rgb(244,205,15)" fg:x="458042" fg:w="389"/><text x="63.8961%" y="559.50"></text></g><g><title>CSHA256::Write (378 samples, 0.05%)</title><rect x="63.6476%" y="533" width="0.0525%" height="15" fill="rgb(223,117,47)" fg:x="458053" fg:w="378"/><text x="63.8976%" y="543.50"></text></g><g><title>secp256k1_fe_mul_inner (555 samples, 0.08%)</title><rect x="64.8636%" y="485" width="0.0771%" height="15" fill="rgb(244,107,35)" fg:x="466804" fg:w="555"/><text x="65.1136%" y="495.50"></text></g><g><title>secp256k1_ge_set_xo_var (8,993 samples, 1.25%)</title><rect x="63.7266%" y="501" width="1.2496%" height="15" fill="rgb(205,140,8)" fg:x="458621" fg:w="8993"/><text x="63.9766%" y="511.50"></text></g><g><title>secp256k1_fe_sqr_inner (237 samples, 0.03%)</title><rect x="64.9432%" y="485" width="0.0329%" height="15" fill="rgb(228,84,46)" fg:x="467377" fg:w="237"/><text x="65.1932%" y="495.50"></text></g><g><title>secp256k1_ec_pubkey_parse (9,064 samples, 1.26%)</title><rect x="63.7214%" y="517" width="1.2595%" height="15" fill="rgb(254,188,9)" fg:x="458584" fg:w="9064"/><text x="63.9714%" y="527.50"></text></g><g><title>secp256k1_fe_mul_inner (117 samples, 0.02%)</title><rect x="65.7928%" y="453" width="0.0163%" height="15" fill="rgb(206,112,54)" fg:x="473491" fg:w="117"/><text x="66.0428%" y="463.50"></text></g><g><title>secp256k1_fe_mul_inner (2,217 samples, 0.31%)</title><rect x="65.8421%" y="437" width="0.3081%" height="15" fill="rgb(216,84,49)" fg:x="473846" fg:w="2217"/><text x="66.0921%" y="447.50"></text></g><g><title>secp256k1_fe_normalize_weak (115 samples, 0.02%)</title><rect x="66.1502%" y="437" width="0.0160%" height="15" fill="rgb(214,194,35)" fg:x="476063" fg:w="115"/><text x="66.4002%" y="447.50"></text></g><g><title>secp256k1_gej_add_ge_var (3,264 samples, 0.45%)</title><rect x="65.8091%" y="453" width="0.4535%" height="15" fill="rgb(249,28,3)" fg:x="473608" fg:w="3264"/><text x="66.0591%" y="463.50"></text></g><g><title>secp256k1_fe_sqr_inner (688 samples, 0.10%)</title><rect x="66.1670%" y="437" width="0.0956%" height="15" fill="rgb(222,56,52)" fg:x="476184" fg:w="688"/><text x="66.4170%" y="447.50"></text></g><g><title>secp256k1_fe_mul_inner (137 samples, 0.02%)</title><rect x="66.2769%" y="437" width="0.0190%" height="15" fill="rgb(245,217,50)" fg:x="476975" fg:w="137"/><text x="66.5269%" y="447.50"></text></g><g><title>secp256k1_ecmult_odd_multiples_table (3,827 samples, 0.53%)</title><rect x="65.7750%" y="469" width="0.5318%" height="15" fill="rgb(213,201,24)" fg:x="473363" fg:w="3827"/><text x="66.0250%" y="479.50"></text></g><g><title>secp256k1_gej_double_var (318 samples, 0.04%)</title><rect x="66.2626%" y="453" width="0.0442%" height="15" fill="rgb(248,116,28)" fg:x="476872" fg:w="318"/><text x="66.5126%" y="463.50"></text></g><g><title>secp256k1_fe_sqr_inner (78 samples, 0.01%)</title><rect x="66.2959%" y="437" width="0.0108%" height="15" fill="rgb(219,72,43)" fg:x="477112" fg:w="78"/><text x="66.5459%" y="447.50"></text></g><g><title>secp256k1_ecmult_wnaf (1,193 samples, 0.17%)</title><rect x="66.3068%" y="469" width="0.1658%" height="15" fill="rgb(209,138,14)" fg:x="477190" fg:w="1193"/><text x="66.5568%" y="479.50"></text></g><g><title>secp256k1_fe_mul_inner (6,456 samples, 0.90%)</title><rect x="66.4725%" y="469" width="0.8971%" height="15" fill="rgb(222,18,33)" fg:x="478383" fg:w="6456"/><text x="66.7225%" y="479.50"></text></g><g><title>secp256k1_fe_normalize_weak (210 samples, 0.03%)</title><rect x="67.3696%" y="469" width="0.0292%" height="15" fill="rgb(213,199,7)" fg:x="484839" fg:w="210"/><text x="67.6196%" y="479.50"></text></g><g><title>secp256k1_fe_sqr_inner (1,814 samples, 0.25%)</title><rect x="67.4016%" y="469" width="0.2521%" height="15" fill="rgb(250,110,10)" fg:x="485069" fg:w="1814"/><text x="67.6516%" y="479.50"></text></g><g><title>secp256k1_fe_mul_inner (13,415 samples, 1.86%)</title><rect x="67.8323%" y="453" width="1.8640%" height="15" fill="rgb(248,123,6)" fg:x="488169" fg:w="13415"/><text x="68.0823%" y="463.50">s..</text></g><g><title>secp256k1_fe_normalize_weak (633 samples, 0.09%)</title><rect x="69.6964%" y="453" width="0.0880%" height="15" fill="rgb(206,91,31)" fg:x="501584" fg:w="633"/><text x="69.9464%" y="463.50"></text></g><g><title>secp256k1_gej_add_ge_var (19,491 samples, 2.71%)</title><rect x="67.6536%" y="469" width="2.7083%" height="15" fill="rgb(211,154,13)" fg:x="486883" fg:w="19491"/><text x="67.9036%" y="479.50">se..</text></g><g><title>secp256k1_fe_sqr_inner (4,112 samples, 0.57%)</title><rect x="69.7906%" y="453" width="0.5714%" height="15" fill="rgb(225,148,7)" fg:x="502262" fg:w="4112"/><text x="70.0406%" y="463.50"></text></g><g><title>[unknown] (78 samples, 0.01%)</title><rect x="73.5069%" y="453" width="0.0108%" height="15" fill="rgb(220,160,43)" fg:x="529007" fg:w="78"/><text x="73.7569%" y="463.50"></text></g><g><title>[unknown] (74 samples, 0.01%)</title><rect x="73.5074%" y="437" width="0.0103%" height="15" fill="rgb(213,52,39)" fg:x="529011" fg:w="74"/><text x="73.7574%" y="447.50"></text></g><g><title>secp256k1_fe_mul_inner (30,296 samples, 4.21%)</title><rect x="73.5177%" y="453" width="4.2097%" height="15" fill="rgb(243,137,7)" fg:x="529085" fg:w="30296"/><text x="73.7677%" y="463.50">secp2..</text></g><g><title>[unknown] (87 samples, 0.01%)</title><rect x="77.7153%" y="437" width="0.0121%" height="15" fill="rgb(230,79,13)" fg:x="559294" fg:w="87"/><text x="77.9653%" y="447.50"></text></g><g><title>[unknown] (84 samples, 0.01%)</title><rect x="77.7158%" y="421" width="0.0117%" height="15" fill="rgb(247,105,23)" fg:x="559297" fg:w="84"/><text x="77.9658%" y="431.50"></text></g><g><title>[unknown] (82 samples, 0.01%)</title><rect x="77.7160%" y="405" width="0.0114%" height="15" fill="rgb(223,179,41)" fg:x="559299" fg:w="82"/><text x="77.9660%" y="415.50"></text></g><g><title>[unknown] (80 samples, 0.01%)</title><rect x="77.7163%" y="389" width="0.0111%" height="15" fill="rgb(218,9,34)" fg:x="559301" fg:w="80"/><text x="77.9663%" y="399.50"></text></g><g><title>[unknown] (77 samples, 0.01%)</title><rect x="77.7167%" y="373" width="0.0107%" height="15" fill="rgb(222,106,8)" fg:x="559304" fg:w="77"/><text x="77.9667%" y="383.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (107,909 samples, 14.99%)</title><rect x="64.9998%" y="485" width="14.9942%" height="15" fill="rgb(211,220,0)" fg:x="467784" fg:w="107909"/><text x="65.2498%" y="495.50">secp256k1_ecmult_straus..</text></g><g><title>secp256k1_gej_double_var (69,319 samples, 9.63%)</title><rect x="70.3620%" y="469" width="9.6321%" height="15" fill="rgb(229,52,16)" fg:x="506374" fg:w="69319"/><text x="70.6120%" y="479.50">secp256k1_gej_..</text></g><g><title>secp256k1_fe_sqr_inner (16,312 samples, 2.27%)</title><rect x="77.7274%" y="453" width="2.2666%" height="15" fill="rgb(212,155,18)" fg:x="559381" fg:w="16312"/><text x="77.9774%" y="463.50">s..</text></g><g><title>secp256k1_gej_eq_x_var (86 samples, 0.01%)</title><rect x="79.9958%" y="485" width="0.0119%" height="15" fill="rgb(242,21,14)" fg:x="575706" fg:w="86"/><text x="80.2458%" y="495.50"></text></g><g><title>secp256k1_scalar_mul_512 (1,003 samples, 0.14%)</title><rect x="80.0381%" y="469" width="0.1394%" height="15" fill="rgb(222,19,48)" fg:x="576010" fg:w="1003"/><text x="80.2881%" y="479.50"></text></g><g><title>secp256k1_scalar_reduce_512 (11,874 samples, 1.65%)</title><rect x="80.1774%" y="469" width="1.6499%" height="15" fill="rgb(232,45,27)" fg:x="577013" fg:w="11874"/><text x="80.4274%" y="479.50"></text></g><g><title>secp256k1_scalar_inverse (18,689 samples, 2.60%)</title><rect x="80.0104%" y="485" width="2.5969%" height="15" fill="rgb(249,103,42)" fg:x="575811" fg:w="18689"/><text x="80.2604%" y="495.50">se..</text></g><g><title>secp256k1_scalar_sqr_512 (5,613 samples, 0.78%)</title><rect x="81.8274%" y="469" width="0.7799%" height="15" fill="rgb(246,81,33)" fg:x="588887" fg:w="5613"/><text x="82.0774%" y="479.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (126,880 samples, 17.63%)</title><rect x="64.9952%" y="501" width="17.6303%" height="15" fill="rgb(252,33,42)" fg:x="467751" fg:w="126880"/><text x="65.2452%" y="511.50">secp256k1_ecdsa_sig_verify</text></g><g><title>secp256k1_scalar_reduce_512 (82 samples, 0.01%)</title><rect x="82.6141%" y="485" width="0.0114%" height="15" fill="rgb(209,212,41)" fg:x="594549" fg:w="82"/><text x="82.8641%" y="495.50"></text></g><g><title>CPubKey::Verify (136,132 samples, 18.92%)</title><rect x="63.7134%" y="533" width="18.9159%" height="15" fill="rgb(207,154,6)" fg:x="458526" fg:w="136132"/><text x="63.9634%" y="543.50">CPubKey::Verify</text></g><g><title>secp256k1_ecdsa_verify (126,928 samples, 17.64%)</title><rect x="64.9923%" y="517" width="17.6370%" height="15" fill="rgb(223,64,47)" fg:x="467730" fg:w="126928"/><text x="65.2423%" y="527.50">secp256k1_ecdsa_verify</text></g><g><title>CSHA256::Finalize (715 samples, 0.10%)</title><rect x="82.6375%" y="517" width="0.0994%" height="15" fill="rgb(211,161,38)" fg:x="594717" fg:w="715"/><text x="82.8875%" y="527.50"></text></g><g><title>CSHA256::Write (701 samples, 0.10%)</title><rect x="82.6394%" y="501" width="0.0974%" height="15" fill="rgb(219,138,40)" fg:x="594731" fg:w="701"/><text x="82.8894%" y="511.50"></text></g><g><title>[libc.so.6] (74 samples, 0.01%)</title><rect x="82.8502%" y="501" width="0.0103%" height="15" fill="rgb(241,228,46)" fg:x="596248" fg:w="74"/><text x="83.1002%" y="511.50"></text></g><g><title>CSHA256::Write (899 samples, 0.12%)</title><rect x="82.7368%" y="517" width="0.1249%" height="15" fill="rgb(223,209,38)" fg:x="595432" fg:w="899"/><text x="82.9868%" y="527.50"></text></g><g><title>SignatureHash&lt;CTransaction&gt; (1,694 samples, 0.24%)</title><rect x="82.6293%" y="533" width="0.2354%" height="15" fill="rgb(236,164,45)" fg:x="594658" fg:w="1694"/><text x="82.8793%" y="543.50"></text></g><g><title>GenericTransactionSignatureChecker&lt;CTransaction&gt;::CheckSig (137,948 samples, 19.17%)</title><rect x="63.7039%" y="549" width="19.1682%" height="15" fill="rgb(231,15,5)" fg:x="458458" fg:w="137948"/><text x="63.9539%" y="559.50">GenericTransactionSignatureChe..</text></g><g><title>cfree (125 samples, 0.02%)</title><rect x="82.8860%" y="549" width="0.0174%" height="15" fill="rgb(252,35,15)" fg:x="596506" fg:w="125"/><text x="83.1360%" y="559.50"></text></g><g><title>operator new (119 samples, 0.02%)</title><rect x="82.9052%" y="549" width="0.0165%" height="15" fill="rgb(248,181,18)" fg:x="596644" fg:w="119"/><text x="83.1552%" y="559.50"></text></g><g><title>malloc (108 samples, 0.02%)</title><rect x="82.9067%" y="533" width="0.0150%" height="15" fill="rgb(233,39,42)" fg:x="596655" fg:w="108"/><text x="83.1567%" y="543.50"></text></g><g><title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; const&amp;&gt; (93 samples, 0.01%)</title><rect x="82.9220%" y="549" width="0.0129%" height="15" fill="rgb(238,110,33)" fg:x="596765" fg:w="93"/><text x="83.1720%" y="559.50"></text></g><g><title>EvalScript (139,390 samples, 19.37%)</title><rect x="63.5690%" y="565" width="19.3686%" height="15" fill="rgb(233,195,10)" fg:x="457487" fg:w="139390"/><text x="63.8190%" y="575.50">EvalScript</text></g><g><title>ExecuteWitnessScript (139,547 samples, 19.39%)</title><rect x="63.5627%" y="581" width="19.3904%" height="15" fill="rgb(254,105,3)" fg:x="457442" fg:w="139547"/><text x="63.8127%" y="591.50">ExecuteWitnessScript</text></g><g><title>operator new (72 samples, 0.01%)</title><rect x="82.9432%" y="565" width="0.0100%" height="15" fill="rgb(221,225,9)" fg:x="596917" fg:w="72"/><text x="83.1932%" y="575.50"></text></g><g><title>VerifyWitnessProgram (139,682 samples, 19.41%)</title><rect x="63.5443%" y="597" width="19.4092%" height="15" fill="rgb(224,227,45)" fg:x="457309" fg:w="139682"/><text x="63.7943%" y="607.50">VerifyWitnessProgram</text></g><g><title>VerifyScript (140,379 samples, 19.51%)</title><rect x="63.4556%" y="613" width="19.5060%" height="15" fill="rgb(229,198,43)" fg:x="456671" fg:w="140379"/><text x="63.7056%" y="623.50">VerifyScript</text></g><g><title>[libc.so.6] (920 samples, 0.13%)</title><rect x="82.9616%" y="613" width="0.1278%" height="15" fill="rgb(206,209,35)" fg:x="597050" fg:w="920"/><text x="83.2116%" y="623.50"></text></g><g><title>[libc.so.6] (2,225 samples, 0.31%)</title><rect x="84.8476%" y="565" width="0.3092%" height="15" fill="rgb(245,195,53)" fg:x="610623" fg:w="2225"/><text x="85.0976%" y="575.50"></text></g><g><title>[libc.so.6] (5,051 samples, 0.70%)</title><rect x="84.4555%" y="581" width="0.7018%" height="15" fill="rgb(240,92,26)" fg:x="607801" fg:w="5051"/><text x="84.7055%" y="591.50"></text></g><g><title>[libc.so.6] (13,642 samples, 1.90%)</title><rect x="83.2633%" y="597" width="1.8956%" height="15" fill="rgb(207,40,23)" fg:x="599221" fg:w="13642"/><text x="83.5133%" y="607.50">[..</text></g><g><title>cfree (14,877 samples, 2.07%)</title><rect x="83.0924%" y="613" width="2.0672%" height="15" fill="rgb(223,111,35)" fg:x="597991" fg:w="14877"/><text x="83.3424%" y="623.50">c..</text></g><g><title>operator delete (74 samples, 0.01%)</title><rect x="85.1611%" y="613" width="0.0103%" height="15" fill="rgb(229,147,28)" fg:x="612879" fg:w="74"/><text x="85.4111%" y="623.50"></text></g><g><title>[libc.so.6] (199 samples, 0.03%)</title><rect x="86.0986%" y="565" width="0.0277%" height="15" fill="rgb(211,29,28)" fg:x="619626" fg:w="199"/><text x="86.3486%" y="575.50"></text></g><g><title>[libc.so.6] (1,827 samples, 0.25%)</title><rect x="85.8731%" y="581" width="0.2539%" height="15" fill="rgb(228,72,33)" fg:x="618003" fg:w="1827"/><text x="86.1231%" y="591.50"></text></g><g><title>operator new (6,883 samples, 0.96%)</title><rect x="85.1715%" y="613" width="0.9564%" height="15" fill="rgb(205,214,31)" fg:x="612954" fg:w="6883"/><text x="85.4215%" y="623.50"></text></g><g><title>malloc (6,689 samples, 0.93%)</title><rect x="85.1985%" y="597" width="0.9295%" height="15" fill="rgb(224,111,15)" fg:x="613148" fg:w="6689"/><text x="85.4485%" y="607.50"></text></g><g><title>[libc.so.6] (761 samples, 0.11%)</title><rect x="86.2968%" y="597" width="0.1057%" height="15" fill="rgb(253,21,26)" fg:x="621052" fg:w="761"/><text x="86.5468%" y="607.50"></text></g><g><title>[libc.so.6] (348 samples, 0.05%)</title><rect x="88.3437%" y="549" width="0.0484%" height="15" fill="rgb(245,139,43)" fg:x="635783" fg:w="348"/><text x="88.5937%" y="559.50"></text></g><g><title>[libc.so.6] (2,830 samples, 0.39%)</title><rect x="87.9998%" y="565" width="0.3932%" height="15" fill="rgb(252,170,7)" fg:x="633308" fg:w="2830"/><text x="88.2498%" y="575.50"></text></g><g><title>operator new (14,336 samples, 1.99%)</title><rect x="86.4031%" y="597" width="1.9920%" height="15" fill="rgb(231,118,14)" fg:x="621817" fg:w="14336"/><text x="86.6531%" y="607.50">o..</text></g><g><title>malloc (13,985 samples, 1.94%)</title><rect x="86.4518%" y="581" width="1.9433%" height="15" fill="rgb(238,83,0)" fg:x="622168" fg:w="13985"/><text x="86.7018%" y="591.50">m..</text></g><g><title>bitcoinconsensus::verify_with_flags (445,442 samples, 61.90%)</title><rect x="26.5070%" y="645" width="61.8953%" height="15" fill="rgb(221,39,39)" fg:x="190763" fg:w="445442"/><text x="26.7570%" y="655.50">bitcoinconsensus::verify_with_flags</text></g><g><title>verify_script (445,426 samples, 61.89%)</title><rect x="26.5092%" y="629" width="61.8931%" height="15" fill="rgb(222,119,46)" fg:x="190779" fg:w="445426"/><text x="26.7592%" y="639.50">verify_script</text></g><g><title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (16,365 samples, 2.27%)</title><rect x="86.1284%" y="613" width="2.2740%" height="15" fill="rgb(222,165,49)" fg:x="619840" fg:w="16365"/><text x="86.3784%" y="623.50">s..</text></g><g><title>[libc.so.6] (92 samples, 0.01%)</title><rect x="88.4083%" y="629" width="0.0128%" height="15" fill="rgb(219,113,52)" fg:x="636248" fg:w="92"/><text x="88.6583%" y="639.50"></text></g><g><title>cfree (136 samples, 0.02%)</title><rect x="88.4023%" y="645" width="0.0189%" height="15" fill="rgb(214,7,15)" fg:x="636205" fg:w="136"/><text x="88.6523%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (101 samples, 0.01%)</title><rect x="88.4212%" y="645" width="0.0140%" height="15" fill="rgb(235,32,4)" fg:x="636341" fg:w="101"/><text x="88.6712%" y="655.50"></text></g><g><title>&lt;utreexo_wallet::blockchain::chain_state::ChainState&lt;PersistedState&gt; as utreexo_wallet::blockchain::BlockchainProviderInterface&gt;::connect_block (626,234 samples, 87.02%)</title><rect x="1.4423%" y="693" width="87.0168%" height="15" fill="rgb(238,90,54)" fg:x="10380" fg:w="626234"/><text x="1.6923%" y="703.50">&lt;utreexo_wallet::blockchain::chain_state::ChainState&lt;PersistedState&gt; as utreexo_wallet::blockchain::BlockchainProviderInterface&gt;::connect_block</text></g><g><title>utreexo_wallet::blockchain::chain_state::ChainState&lt;PersistedState&gt;::verify_block_transactions (447,044 samples, 62.12%)</title><rect x="26.3412%" y="677" width="62.1179%" height="15" fill="rgb(213,208,19)" fg:x="189570" fg:w="447044"/><text x="26.5912%" y="687.50">utreexo_wallet::blockchain::chain_state::ChainState&lt;PersistedState&gt;::verify_block_transactions</text></g><g><title>bitcoin::blockdata::transaction::Transaction::verify (446,982 samples, 62.11%)</title><rect x="26.3499%" y="661" width="62.1093%" height="15" fill="rgb(233,156,4)" fg:x="189632" fg:w="446982"/><text x="26.5999%" y="671.50">bitcoin::blockdata::transaction::Transaction::verify</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (172 samples, 0.02%)</title><rect x="88.4353%" y="645" width="0.0239%" height="15" fill="rgb(207,194,5)" fg:x="636442" fg:w="172"/><text x="88.6853%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (79 samples, 0.01%)</title><rect x="88.4630%" y="661" width="0.0110%" height="15" fill="rgb(206,111,30)" fg:x="636642" fg:w="79"/><text x="88.7130%" y="671.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (79 samples, 0.01%)</title><rect x="88.4630%" y="645" width="0.0110%" height="15" fill="rgb(243,70,54)" fg:x="636642" fg:w="79"/><text x="88.7130%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (74 samples, 0.01%)</title><rect x="88.4637%" y="629" width="0.0103%" height="15" fill="rgb(242,28,8)" fg:x="636647" fg:w="74"/><text x="88.7137%" y="639.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (142 samples, 0.02%)</title><rect x="88.4624%" y="693" width="0.0197%" height="15" fill="rgb(219,106,18)" fg:x="636637" fg:w="142"/><text x="88.7124%" y="703.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (142 samples, 0.02%)</title><rect x="88.4624%" y="677" width="0.0197%" height="15" fill="rgb(244,222,10)" fg:x="636637" fg:w="142"/><text x="88.7124%" y="687.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (91 samples, 0.01%)</title><rect x="88.4879%" y="645" width="0.0126%" height="15" fill="rgb(236,179,52)" fg:x="636821" fg:w="91"/><text x="88.7379%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (88 samples, 0.01%)</title><rect x="88.4883%" y="629" width="0.0122%" height="15" fill="rgb(213,23,39)" fg:x="636824" fg:w="88"/><text x="88.7383%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (94 samples, 0.01%)</title><rect x="88.4876%" y="661" width="0.0131%" height="15" fill="rgb(238,48,10)" fg:x="636819" fg:w="94"/><text x="88.7376%" y="671.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::validate_pow (241 samples, 0.03%)</title><rect x="88.4839%" y="693" width="0.0335%" height="15" fill="rgb(251,196,23)" fg:x="636792" fg:w="241"/><text x="88.7339%" y="703.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (231 samples, 0.03%)</title><rect x="88.4853%" y="677" width="0.0321%" height="15" fill="rgb(250,152,24)" fg:x="636802" fg:w="231"/><text x="88.7353%" y="687.50"></text></g><g><title>std::io::Write::write_all (117 samples, 0.02%)</title><rect x="88.5011%" y="661" width="0.0163%" height="15" fill="rgb(209,150,17)" fg:x="636916" fg:w="117"/><text x="88.7511%" y="671.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (110 samples, 0.02%)</title><rect x="88.5021%" y="645" width="0.0153%" height="15" fill="rgb(234,202,34)" fg:x="636923" fg:w="110"/><text x="88.7521%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (99 samples, 0.01%)</title><rect x="88.5036%" y="629" width="0.0138%" height="15" fill="rgb(253,148,53)" fg:x="636934" fg:w="99"/><text x="88.7536%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (78 samples, 0.01%)</title><rect x="88.5949%" y="613" width="0.0108%" height="15" fill="rgb(218,129,16)" fg:x="637591" fg:w="78"/><text x="88.8449%" y="623.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (151 samples, 0.02%)</title><rect x="88.5849%" y="661" width="0.0210%" height="15" fill="rgb(216,85,19)" fg:x="637519" fg:w="151"/><text x="88.8349%" y="671.50"></text></g><g><title>std::io::Write::write_all (128 samples, 0.02%)</title><rect x="88.5881%" y="645" width="0.0178%" height="15" fill="rgb(235,228,7)" fg:x="637542" fg:w="128"/><text x="88.8381%" y="655.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (93 samples, 0.01%)</title><rect x="88.5930%" y="629" width="0.0129%" height="15" fill="rgb(245,175,0)" fg:x="637577" fg:w="93"/><text x="88.8430%" y="639.50"></text></g><g><title>[libc.so.6] (76 samples, 0.01%)</title><rect x="88.7280%" y="613" width="0.0106%" height="15" fill="rgb(208,168,36)" fg:x="638549" fg:w="76"/><text x="88.9780%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,395 samples, 0.19%)</title><rect x="88.5449%" y="677" width="0.1938%" height="15" fill="rgb(246,171,24)" fg:x="637231" fg:w="1395"/><text x="88.7949%" y="687.50"></text></g><g><title>std::io::Write::write_all (956 samples, 0.13%)</title><rect x="88.6059%" y="661" width="0.1328%" height="15" fill="rgb(215,142,24)" fg:x="637670" fg:w="956"/><text x="88.8559%" y="671.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (876 samples, 0.12%)</title><rect x="88.6170%" y="645" width="0.1217%" height="15" fill="rgb(250,187,7)" fg:x="637750" fg:w="876"/><text x="88.8670%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (852 samples, 0.12%)</title><rect x="88.6203%" y="629" width="0.1184%" height="15" fill="rgb(228,66,33)" fg:x="637774" fg:w="852"/><text x="88.8703%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (2,101 samples, 0.29%)</title><rect x="88.7564%" y="661" width="0.2919%" height="15" fill="rgb(234,215,21)" fg:x="638753" fg:w="2101"/><text x="89.0064%" y="671.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2,026 samples, 0.28%)</title><rect x="88.7668%" y="645" width="0.2815%" height="15" fill="rgb(222,191,20)" fg:x="638828" fg:w="2026"/><text x="89.0168%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (2,154 samples, 0.30%)</title><rect x="88.7508%" y="677" width="0.2993%" height="15" fill="rgb(245,79,54)" fg:x="638713" fg:w="2154"/><text x="89.0008%" y="687.50"></text></g><g><title>[libc.so.6] (440 samples, 0.06%)</title><rect x="89.5870%" y="613" width="0.0611%" height="15" fill="rgb(240,10,37)" fg:x="644731" fg:w="440"/><text x="89.8370%" y="623.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (4,309 samples, 0.60%)</title><rect x="89.0503%" y="677" width="0.5987%" height="15" fill="rgb(214,192,32)" fg:x="640868" fg:w="4309"/><text x="89.3003%" y="687.50"></text></g><g><title>std::io::Write::write_all (4,268 samples, 0.59%)</title><rect x="89.0560%" y="661" width="0.5930%" height="15" fill="rgb(209,36,54)" fg:x="640909" fg:w="4268"/><text x="89.3060%" y="671.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (4,099 samples, 0.57%)</title><rect x="89.0794%" y="645" width="0.5696%" height="15" fill="rgb(220,10,11)" fg:x="641078" fg:w="4099"/><text x="89.3294%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (4,017 samples, 0.56%)</title><rect x="89.0908%" y="629" width="0.5582%" height="15" fill="rgb(221,106,17)" fg:x="641160" fg:w="4017"/><text x="89.3408%" y="639.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (9,201 samples, 1.28%)</title><rect x="88.5174%" y="693" width="1.2785%" height="15" fill="rgb(251,142,44)" fg:x="637033" fg:w="9201"/><text x="88.7674%" y="703.50"></text></g><g><title>std::io::Write::write_all (1,057 samples, 0.15%)</title><rect x="89.6490%" y="677" width="0.1469%" height="15" fill="rgb(238,13,15)" fg:x="645177" fg:w="1057"/><text x="89.8990%" y="687.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (964 samples, 0.13%)</title><rect x="89.6619%" y="661" width="0.1340%" height="15" fill="rgb(208,107,27)" fg:x="645270" fg:w="964"/><text x="89.9119%" y="671.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (917 samples, 0.13%)</title><rect x="89.6685%" y="645" width="0.1274%" height="15" fill="rgb(205,136,37)" fg:x="645317" fg:w="917"/><text x="89.9185%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (366 samples, 0.05%)</title><rect x="89.8184%" y="661" width="0.0509%" height="15" fill="rgb(250,205,27)" fg:x="646396" fg:w="366"/><text x="90.0684%" y="671.50"></text></g><g><title>malloc (160 samples, 0.02%)</title><rect x="89.8470%" y="645" width="0.0222%" height="15" fill="rgb(210,80,43)" fg:x="646602" fg:w="160"/><text x="90.0970%" y="655.50"></text></g><g><title>[libc.so.6] (116 samples, 0.02%)</title><rect x="89.8531%" y="629" width="0.0161%" height="15" fill="rgb(247,160,36)" fg:x="646646" fg:w="116"/><text x="90.1031%" y="639.50"></text></g><g><title>[libc.so.6] (325 samples, 0.05%)</title><rect x="89.8918%" y="581" width="0.0452%" height="15" fill="rgb(234,13,49)" fg:x="646924" fg:w="325"/><text x="90.1418%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (378 samples, 0.05%)</title><rect x="89.8845%" y="629" width="0.0525%" height="15" fill="rgb(234,122,0)" fg:x="646872" fg:w="378"/><text x="90.1345%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (373 samples, 0.05%)</title><rect x="89.8852%" y="613" width="0.0518%" height="15" fill="rgb(207,146,38)" fg:x="646877" fg:w="373"/><text x="90.1352%" y="623.50"></text></g><g><title>malloc (363 samples, 0.05%)</title><rect x="89.8866%" y="597" width="0.0504%" height="15" fill="rgb(207,177,25)" fg:x="646887" fg:w="363"/><text x="90.1366%" y="607.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (467 samples, 0.06%)</title><rect x="89.8734%" y="645" width="0.0649%" height="15" fill="rgb(211,178,42)" fg:x="646792" fg:w="467"/><text x="90.1234%" y="655.50"></text></g><g><title>[libc.so.6] (102 samples, 0.01%)</title><rect x="89.9484%" y="629" width="0.0142%" height="15" fill="rgb(230,69,54)" fg:x="647332" fg:w="102"/><text x="90.1984%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (673 samples, 0.09%)</title><rect x="89.8692%" y="661" width="0.0935%" height="15" fill="rgb(214,135,41)" fg:x="646762" fg:w="673"/><text x="90.1192%" y="671.50"></text></g><g><title>malloc (168 samples, 0.02%)</title><rect x="89.9394%" y="645" width="0.0233%" height="15" fill="rgb(237,67,25)" fg:x="647267" fg:w="168"/><text x="90.1894%" y="655.50"></text></g><g><title>__libc_calloc (234 samples, 0.03%)</title><rect x="89.9787%" y="645" width="0.0325%" height="15" fill="rgb(222,189,50)" fg:x="647550" fg:w="234"/><text x="90.2287%" y="655.50"></text></g><g><title>[libc.so.6] (164 samples, 0.02%)</title><rect x="89.9885%" y="629" width="0.0228%" height="15" fill="rgb(245,148,34)" fg:x="647620" fg:w="164"/><text x="90.2385%" y="639.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (391 samples, 0.05%)</title><rect x="89.9628%" y="661" width="0.0543%" height="15" fill="rgb(222,29,6)" fg:x="647435" fg:w="391"/><text x="90.2128%" y="671.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,546 samples, 0.21%)</title><rect x="89.8031%" y="677" width="0.2148%" height="15" fill="rgb(221,189,43)" fg:x="646286" fg:w="1546"/><text x="90.0531%" y="687.50"></text></g><g><title>bitcoin::consensus::encode::deserialize_partial (1,609 samples, 0.22%)</title><rect x="89.7959%" y="693" width="0.2236%" height="15" fill="rgb(207,36,27)" fg:x="646234" fg:w="1609"/><text x="90.0459%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (74 samples, 0.01%)</title><rect x="90.0345%" y="597" width="0.0103%" height="15" fill="rgb(217,90,24)" fg:x="647951" fg:w="74"/><text x="90.2845%" y="607.50"></text></g><g><title>core::fmt::Formatter::pad_integral (88 samples, 0.01%)</title><rect x="90.0454%" y="597" width="0.0122%" height="15" fill="rgb(224,66,35)" fg:x="648030" fg:w="88"/><text x="90.2954%" y="607.50"></text></g><g><title>core::fmt::run (199 samples, 0.03%)</title><rect x="90.0302%" y="645" width="0.0277%" height="15" fill="rgb(221,13,50)" fg:x="647920" fg:w="199"/><text x="90.2802%" y="655.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (175 samples, 0.02%)</title><rect x="90.0335%" y="629" width="0.0243%" height="15" fill="rgb(236,68,49)" fg:x="647944" fg:w="175"/><text x="90.2835%" y="639.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (169 samples, 0.02%)</title><rect x="90.0343%" y="613" width="0.0235%" height="15" fill="rgb(229,146,28)" fg:x="647950" fg:w="169"/><text x="90.2843%" y="623.50"></text></g><g><title>bitcoin_hashes::hex::format_hex_reverse (278 samples, 0.04%)</title><rect x="90.0215%" y="693" width="0.0386%" height="15" fill="rgb(225,31,38)" fg:x="647858" fg:w="278"/><text x="90.2715%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (255 samples, 0.04%)</title><rect x="90.0247%" y="677" width="0.0354%" height="15" fill="rgb(250,208,3)" fg:x="647881" fg:w="255"/><text x="90.2747%" y="687.50"></text></g><g><title>core::fmt::write (227 samples, 0.03%)</title><rect x="90.0286%" y="661" width="0.0315%" height="15" fill="rgb(246,54,23)" fg:x="647909" fg:w="227"/><text x="90.2786%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (110 samples, 0.02%)</title><rect x="90.0775%" y="565" width="0.0153%" height="15" fill="rgb(243,76,11)" fg:x="648261" fg:w="110"/><text x="90.3275%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (99 samples, 0.01%)</title><rect x="90.0791%" y="549" width="0.0138%" height="15" fill="rgb(245,21,50)" fg:x="648272" fg:w="99"/><text x="90.3291%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (93 samples, 0.01%)</title><rect x="90.0799%" y="533" width="0.0129%" height="15" fill="rgb(228,9,43)" fg:x="648278" fg:w="93"/><text x="90.3299%" y="543.50"></text></g><g><title>realloc (81 samples, 0.01%)</title><rect x="90.0816%" y="517" width="0.0113%" height="15" fill="rgb(208,100,47)" fg:x="648290" fg:w="81"/><text x="90.3316%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (140 samples, 0.02%)</title><rect x="90.0745%" y="597" width="0.0195%" height="15" fill="rgb(232,26,8)" fg:x="648239" fg:w="140"/><text x="90.3245%" y="607.50"></text></g><g><title>std::io::Write::write_all (120 samples, 0.02%)</title><rect x="90.0773%" y="581" width="0.0167%" height="15" fill="rgb(216,166,38)" fg:x="648259" fg:w="120"/><text x="90.3273%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (168 samples, 0.02%)</title><rect x="90.0713%" y="613" width="0.0233%" height="15" fill="rgb(251,202,51)" fg:x="648216" fg:w="168"/><text x="90.3213%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (215 samples, 0.03%)</title><rect x="90.0682%" y="645" width="0.0299%" height="15" fill="rgb(254,216,34)" fg:x="648194" fg:w="215"/><text x="90.3182%" y="655.50"></text></g><g><title>serde_json::raw::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;serde_json::raw::RawValue&gt;&gt;::deserialize (198 samples, 0.03%)</title><rect x="90.0706%" y="629" width="0.0275%" height="15" fill="rgb(251,32,27)" fg:x="648211" fg:w="198"/><text x="90.3206%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (225 samples, 0.03%)</title><rect x="90.0670%" y="661" width="0.0313%" height="15" fill="rgb(208,127,28)" fg:x="648185" fg:w="225"/><text x="90.3170%" y="671.50"></text></g><g><title>__close (1,964 samples, 0.27%)</title><rect x="90.1209%" y="629" width="0.2729%" height="15" fill="rgb(224,137,22)" fg:x="648573" fg:w="1964"/><text x="90.3709%" y="639.50"></text></g><g><title>[unknown] (1,939 samples, 0.27%)</title><rect x="90.1244%" y="613" width="0.2694%" height="15" fill="rgb(254,70,32)" fg:x="648598" fg:w="1939"/><text x="90.3744%" y="623.50"></text></g><g><title>[unknown] (1,920 samples, 0.27%)</title><rect x="90.1270%" y="597" width="0.2668%" height="15" fill="rgb(229,75,37)" fg:x="648617" fg:w="1920"/><text x="90.3770%" y="607.50"></text></g><g><title>[unknown] (1,891 samples, 0.26%)</title><rect x="90.1310%" y="581" width="0.2628%" height="15" fill="rgb(252,64,23)" fg:x="648646" fg:w="1891"/><text x="90.3810%" y="591.50"></text></g><g><title>[unknown] (1,885 samples, 0.26%)</title><rect x="90.1319%" y="565" width="0.2619%" height="15" fill="rgb(232,162,48)" fg:x="648652" fg:w="1885"/><text x="90.3819%" y="575.50"></text></g><g><title>[unknown] (1,846 samples, 0.26%)</title><rect x="90.1373%" y="549" width="0.2565%" height="15" fill="rgb(246,160,12)" fg:x="648691" fg:w="1846"/><text x="90.3873%" y="559.50"></text></g><g><title>[unknown] (1,813 samples, 0.25%)</title><rect x="90.1419%" y="533" width="0.2519%" height="15" fill="rgb(247,166,0)" fg:x="648724" fg:w="1813"/><text x="90.3919%" y="543.50"></text></g><g><title>[unknown] (1,768 samples, 0.25%)</title><rect x="90.1481%" y="517" width="0.2457%" height="15" fill="rgb(249,219,21)" fg:x="648769" fg:w="1768"/><text x="90.3981%" y="527.50"></text></g><g><title>[unknown] (1,736 samples, 0.24%)</title><rect x="90.1526%" y="501" width="0.2412%" height="15" fill="rgb(205,209,3)" fg:x="648801" fg:w="1736"/><text x="90.4026%" y="511.50"></text></g><g><title>[unknown] (1,673 samples, 0.23%)</title><rect x="90.1613%" y="485" width="0.2325%" height="15" fill="rgb(243,44,1)" fg:x="648864" fg:w="1673"/><text x="90.4113%" y="495.50"></text></g><g><title>[unknown] (1,618 samples, 0.22%)</title><rect x="90.1690%" y="469" width="0.2248%" height="15" fill="rgb(206,159,16)" fg:x="648919" fg:w="1618"/><text x="90.4190%" y="479.50"></text></g><g><title>[unknown] (1,567 samples, 0.22%)</title><rect x="90.1761%" y="453" width="0.2177%" height="15" fill="rgb(244,77,30)" fg:x="648970" fg:w="1567"/><text x="90.4261%" y="463.50"></text></g><g><title>[unknown] (1,506 samples, 0.21%)</title><rect x="90.1845%" y="437" width="0.2093%" height="15" fill="rgb(218,69,12)" fg:x="649031" fg:w="1506"/><text x="90.4345%" y="447.50"></text></g><g><title>[unknown] (1,436 samples, 0.20%)</title><rect x="90.1943%" y="421" width="0.1995%" height="15" fill="rgb(212,87,7)" fg:x="649101" fg:w="1436"/><text x="90.4443%" y="431.50"></text></g><g><title>[unknown] (1,389 samples, 0.19%)</title><rect x="90.2008%" y="405" width="0.1930%" height="15" fill="rgb(245,114,25)" fg:x="649148" fg:w="1389"/><text x="90.4508%" y="415.50"></text></g><g><title>[unknown] (1,318 samples, 0.18%)</title><rect x="90.2107%" y="389" width="0.1831%" height="15" fill="rgb(210,61,42)" fg:x="649219" fg:w="1318"/><text x="90.4607%" y="399.50"></text></g><g><title>[unknown] (1,184 samples, 0.16%)</title><rect x="90.2293%" y="373" width="0.1645%" height="15" fill="rgb(211,52,33)" fg:x="649353" fg:w="1184"/><text x="90.4793%" y="383.50"></text></g><g><title>[unknown] (1,107 samples, 0.15%)</title><rect x="90.2400%" y="357" width="0.1538%" height="15" fill="rgb(234,58,33)" fg:x="649430" fg:w="1107"/><text x="90.4900%" y="367.50"></text></g><g><title>[unknown] (1,039 samples, 0.14%)</title><rect x="90.2494%" y="341" width="0.1444%" height="15" fill="rgb(220,115,36)" fg:x="649498" fg:w="1039"/><text x="90.4994%" y="351.50"></text></g><g><title>[unknown] (973 samples, 0.14%)</title><rect x="90.2586%" y="325" width="0.1352%" height="15" fill="rgb(243,153,54)" fg:x="649564" fg:w="973"/><text x="90.5086%" y="335.50"></text></g><g><title>[unknown] (920 samples, 0.13%)</title><rect x="90.2660%" y="309" width="0.1278%" height="15" fill="rgb(251,47,18)" fg:x="649617" fg:w="920"/><text x="90.5160%" y="319.50"></text></g><g><title>[unknown] (857 samples, 0.12%)</title><rect x="90.2747%" y="293" width="0.1191%" height="15" fill="rgb(242,102,42)" fg:x="649680" fg:w="857"/><text x="90.5247%" y="303.50"></text></g><g><title>[unknown] (829 samples, 0.12%)</title><rect x="90.2786%" y="277" width="0.1152%" height="15" fill="rgb(234,31,38)" fg:x="649708" fg:w="829"/><text x="90.5286%" y="287.50"></text></g><g><title>[unknown] (794 samples, 0.11%)</title><rect x="90.2835%" y="261" width="0.1103%" height="15" fill="rgb(221,117,51)" fg:x="649743" fg:w="794"/><text x="90.5335%" y="271.50"></text></g><g><title>[unknown] (759 samples, 0.11%)</title><rect x="90.2883%" y="245" width="0.1055%" height="15" fill="rgb(212,20,18)" fg:x="649778" fg:w="759"/><text x="90.5383%" y="255.50"></text></g><g><title>[unknown] (724 samples, 0.10%)</title><rect x="90.2932%" y="229" width="0.1006%" height="15" fill="rgb(245,133,36)" fg:x="649813" fg:w="724"/><text x="90.5432%" y="239.50"></text></g><g><title>[unknown] (681 samples, 0.09%)</title><rect x="90.2992%" y="213" width="0.0946%" height="15" fill="rgb(212,6,19)" fg:x="649856" fg:w="681"/><text x="90.5492%" y="223.50"></text></g><g><title>[unknown] (653 samples, 0.09%)</title><rect x="90.3031%" y="197" width="0.0907%" height="15" fill="rgb(218,1,36)" fg:x="649884" fg:w="653"/><text x="90.5531%" y="207.50"></text></g><g><title>[unknown] (582 samples, 0.08%)</title><rect x="90.3129%" y="181" width="0.0809%" height="15" fill="rgb(246,84,54)" fg:x="649955" fg:w="582"/><text x="90.5629%" y="191.50"></text></g><g><title>[unknown] (496 samples, 0.07%)</title><rect x="90.3249%" y="165" width="0.0689%" height="15" fill="rgb(242,110,6)" fg:x="650041" fg:w="496"/><text x="90.5749%" y="175.50"></text></g><g><title>[unknown] (426 samples, 0.06%)</title><rect x="90.3346%" y="149" width="0.0592%" height="15" fill="rgb(214,47,5)" fg:x="650111" fg:w="426"/><text x="90.5846%" y="159.50"></text></g><g><title>[unknown] (358 samples, 0.05%)</title><rect x="90.3440%" y="133" width="0.0497%" height="15" fill="rgb(218,159,25)" fg:x="650179" fg:w="358"/><text x="90.5940%" y="143.50"></text></g><g><title>[unknown] (312 samples, 0.04%)</title><rect x="90.3504%" y="117" width="0.0434%" height="15" fill="rgb(215,211,28)" fg:x="650225" fg:w="312"/><text x="90.6004%" y="127.50"></text></g><g><title>[unknown] (216 samples, 0.03%)</title><rect x="90.3638%" y="101" width="0.0300%" height="15" fill="rgb(238,59,32)" fg:x="650321" fg:w="216"/><text x="90.6138%" y="111.50"></text></g><g><title>[unknown] (120 samples, 0.02%)</title><rect x="90.3771%" y="85" width="0.0167%" height="15" fill="rgb(226,82,3)" fg:x="650417" fg:w="120"/><text x="90.6271%" y="95.50"></text></g><g><title>jsonrpc::_::&lt;impl serde::ser::Serialize for jsonrpc::Request&gt;::serialize (103 samples, 0.01%)</title><rect x="90.4156%" y="629" width="0.0143%" height="15" fill="rgb(240,164,32)" fg:x="650694" fg:w="103"/><text x="90.6656%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (72 samples, 0.01%)</title><rect x="90.4199%" y="613" width="0.0100%" height="15" fill="rgb(232,46,7)" fg:x="650725" fg:w="72"/><text x="90.6699%" y="623.50"></text></g><g><title>recv (829 samples, 0.12%)</title><rect x="90.4516%" y="517" width="0.1152%" height="15" fill="rgb(229,129,53)" fg:x="650953" fg:w="829"/><text x="90.7016%" y="527.50"></text></g><g><title>[unknown] (804 samples, 0.11%)</title><rect x="90.4551%" y="501" width="0.1117%" height="15" fill="rgb(234,188,29)" fg:x="650978" fg:w="804"/><text x="90.7051%" y="511.50"></text></g><g><title>[unknown] (785 samples, 0.11%)</title><rect x="90.4577%" y="485" width="0.1091%" height="15" fill="rgb(246,141,4)" fg:x="650997" fg:w="785"/><text x="90.7077%" y="495.50"></text></g><g><title>[unknown] (762 samples, 0.11%)</title><rect x="90.4609%" y="469" width="0.1059%" height="15" fill="rgb(229,23,39)" fg:x="651020" fg:w="762"/><text x="90.7109%" y="479.50"></text></g><g><title>[unknown] (757 samples, 0.11%)</title><rect x="90.4616%" y="453" width="0.1052%" height="15" fill="rgb(206,12,3)" fg:x="651025" fg:w="757"/><text x="90.7116%" y="463.50"></text></g><g><title>[unknown] (733 samples, 0.10%)</title><rect x="90.4649%" y="437" width="0.1019%" height="15" fill="rgb(252,226,20)" fg:x="651049" fg:w="733"/><text x="90.7149%" y="447.50"></text></g><g><title>[unknown] (695 samples, 0.10%)</title><rect x="90.4702%" y="421" width="0.0966%" height="15" fill="rgb(216,123,35)" fg:x="651087" fg:w="695"/><text x="90.7202%" y="431.50"></text></g><g><title>[unknown] (663 samples, 0.09%)</title><rect x="90.4747%" y="405" width="0.0921%" height="15" fill="rgb(212,68,40)" fg:x="651119" fg:w="663"/><text x="90.7247%" y="415.50"></text></g><g><title>[unknown] (620 samples, 0.09%)</title><rect x="90.4806%" y="389" width="0.0862%" height="15" fill="rgb(254,125,32)" fg:x="651162" fg:w="620"/><text x="90.7306%" y="399.50"></text></g><g><title>[unknown] (579 samples, 0.08%)</title><rect x="90.4863%" y="373" width="0.0805%" height="15" fill="rgb(253,97,22)" fg:x="651203" fg:w="579"/><text x="90.7363%" y="383.50"></text></g><g><title>[unknown] (483 samples, 0.07%)</title><rect x="90.4997%" y="357" width="0.0671%" height="15" fill="rgb(241,101,14)" fg:x="651299" fg:w="483"/><text x="90.7497%" y="367.50"></text></g><g><title>[unknown] (445 samples, 0.06%)</title><rect x="90.5050%" y="341" width="0.0618%" height="15" fill="rgb(238,103,29)" fg:x="651337" fg:w="445"/><text x="90.7550%" y="351.50"></text></g><g><title>[unknown] (397 samples, 0.06%)</title><rect x="90.5116%" y="325" width="0.0552%" height="15" fill="rgb(233,195,47)" fg:x="651385" fg:w="397"/><text x="90.7616%" y="335.50"></text></g><g><title>[unknown] (352 samples, 0.05%)</title><rect x="90.5179%" y="309" width="0.0489%" height="15" fill="rgb(246,218,30)" fg:x="651430" fg:w="352"/><text x="90.7679%" y="319.50"></text></g><g><title>[unknown] (301 samples, 0.04%)</title><rect x="90.5250%" y="293" width="0.0418%" height="15" fill="rgb(219,145,47)" fg:x="651481" fg:w="301"/><text x="90.7750%" y="303.50"></text></g><g><title>[unknown] (203 samples, 0.03%)</title><rect x="90.5386%" y="277" width="0.0282%" height="15" fill="rgb(243,12,26)" fg:x="651579" fg:w="203"/><text x="90.7886%" y="287.50"></text></g><g><title>[unknown] (122 samples, 0.02%)</title><rect x="90.5498%" y="261" width="0.0170%" height="15" fill="rgb(214,87,16)" fg:x="651660" fg:w="122"/><text x="90.7998%" y="271.50"></text></g><g><title>std::io::default_read_buf (896 samples, 0.12%)</title><rect x="90.4437%" y="597" width="0.1245%" height="15" fill="rgb(208,99,42)" fg:x="650896" fg:w="896"/><text x="90.6937%" y="607.50"></text></g><g><title>std::net::udp::UdpSocket::recv (839 samples, 0.12%)</title><rect x="90.4516%" y="581" width="0.1166%" height="15" fill="rgb(253,99,2)" fg:x="650953" fg:w="839"/><text x="90.7016%" y="591.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (839 samples, 0.12%)</title><rect x="90.4516%" y="565" width="0.1166%" height="15" fill="rgb(220,168,23)" fg:x="650953" fg:w="839"/><text x="90.7016%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (839 samples, 0.12%)</title><rect x="90.4516%" y="549" width="0.1166%" height="15" fill="rgb(242,38,24)" fg:x="650953" fg:w="839"/><text x="90.7016%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (839 samples, 0.12%)</title><rect x="90.4516%" y="533" width="0.1166%" height="15" fill="rgb(225,182,9)" fg:x="650953" fg:w="839"/><text x="90.7016%" y="543.50"></text></g><g><title>std::io::append_to_string (1,012 samples, 0.14%)</title><rect x="90.4319%" y="613" width="0.1406%" height="15" fill="rgb(243,178,37)" fg:x="650811" fg:w="1012"/><text x="90.6819%" y="623.50"></text></g><g><title>jsonrpc::simple_http::get_line (1,073 samples, 0.15%)</title><rect x="90.4299%" y="629" width="0.1491%" height="15" fill="rgb(232,139,19)" fg:x="650797" fg:w="1073"/><text x="90.6799%" y="639.50"></text></g><g><title>[libc.so.6] (88 samples, 0.01%)</title><rect x="90.8269%" y="517" width="0.0122%" height="15" fill="rgb(225,201,24)" fg:x="653654" fg:w="88"/><text x="91.0769%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (148 samples, 0.02%)</title><rect x="90.8187%" y="581" width="0.0206%" height="15" fill="rgb(221,47,46)" fg:x="653595" fg:w="148"/><text x="91.0687%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (148 samples, 0.02%)</title><rect x="90.8187%" y="565" width="0.0206%" height="15" fill="rgb(249,23,13)" fg:x="653595" fg:w="148"/><text x="91.0687%" y="575.50"></text></g><g><title>realloc (93 samples, 0.01%)</title><rect x="90.8264%" y="549" width="0.0129%" height="15" fill="rgb(219,9,5)" fg:x="653650" fg:w="93"/><text x="91.0764%" y="559.50"></text></g><g><title>[libc.so.6] (91 samples, 0.01%)</title><rect x="90.8266%" y="533" width="0.0126%" height="15" fill="rgb(254,171,16)" fg:x="653652" fg:w="91"/><text x="91.0766%" y="543.50"></text></g><g><title>recv (738 samples, 0.10%)</title><rect x="90.8441%" y="501" width="0.1025%" height="15" fill="rgb(230,171,20)" fg:x="653778" fg:w="738"/><text x="91.0941%" y="511.50"></text></g><g><title>[unknown] (706 samples, 0.10%)</title><rect x="90.8486%" y="485" width="0.0981%" height="15" fill="rgb(210,71,41)" fg:x="653810" fg:w="706"/><text x="91.0986%" y="495.50"></text></g><g><title>[unknown] (679 samples, 0.09%)</title><rect x="90.8523%" y="469" width="0.0943%" height="15" fill="rgb(206,173,20)" fg:x="653837" fg:w="679"/><text x="91.1023%" y="479.50"></text></g><g><title>[unknown] (628 samples, 0.09%)</title><rect x="90.8594%" y="453" width="0.0873%" height="15" fill="rgb(233,88,34)" fg:x="653888" fg:w="628"/><text x="91.1094%" y="463.50"></text></g><g><title>[unknown] (617 samples, 0.09%)</title><rect x="90.8610%" y="437" width="0.0857%" height="15" fill="rgb(223,209,46)" fg:x="653899" fg:w="617"/><text x="91.1110%" y="447.50"></text></g><g><title>[unknown] (587 samples, 0.08%)</title><rect x="90.8651%" y="421" width="0.0816%" height="15" fill="rgb(250,43,18)" fg:x="653929" fg:w="587"/><text x="91.1151%" y="431.50"></text></g><g><title>[unknown] (555 samples, 0.08%)</title><rect x="90.8696%" y="405" width="0.0771%" height="15" fill="rgb(208,13,10)" fg:x="653961" fg:w="555"/><text x="91.1196%" y="415.50"></text></g><g><title>[unknown] (522 samples, 0.07%)</title><rect x="90.8742%" y="389" width="0.0725%" height="15" fill="rgb(212,200,36)" fg:x="653994" fg:w="522"/><text x="91.1242%" y="399.50"></text></g><g><title>[unknown] (485 samples, 0.07%)</title><rect x="90.8793%" y="373" width="0.0674%" height="15" fill="rgb(225,90,30)" fg:x="654031" fg:w="485"/><text x="91.1293%" y="383.50"></text></g><g><title>[unknown] (431 samples, 0.06%)</title><rect x="90.8868%" y="357" width="0.0599%" height="15" fill="rgb(236,182,39)" fg:x="654085" fg:w="431"/><text x="91.1368%" y="367.50"></text></g><g><title>[unknown] (388 samples, 0.05%)</title><rect x="90.8928%" y="341" width="0.0539%" height="15" fill="rgb(212,144,35)" fg:x="654128" fg:w="388"/><text x="91.1428%" y="351.50"></text></g><g><title>[unknown] (367 samples, 0.05%)</title><rect x="90.8957%" y="325" width="0.0510%" height="15" fill="rgb(228,63,44)" fg:x="654149" fg:w="367"/><text x="91.1457%" y="335.50"></text></g><g><title>[unknown] (313 samples, 0.04%)</title><rect x="90.9032%" y="309" width="0.0435%" height="15" fill="rgb(228,109,6)" fg:x="654203" fg:w="313"/><text x="91.1532%" y="319.50"></text></g><g><title>[unknown] (282 samples, 0.04%)</title><rect x="90.9075%" y="293" width="0.0392%" height="15" fill="rgb(238,117,24)" fg:x="654234" fg:w="282"/><text x="91.1575%" y="303.50"></text></g><g><title>[unknown] (247 samples, 0.03%)</title><rect x="90.9124%" y="277" width="0.0343%" height="15" fill="rgb(242,26,26)" fg:x="654269" fg:w="247"/><text x="91.1624%" y="287.50"></text></g><g><title>[unknown] (187 samples, 0.03%)</title><rect x="90.9207%" y="261" width="0.0260%" height="15" fill="rgb(221,92,48)" fg:x="654329" fg:w="187"/><text x="91.1707%" y="271.50"></text></g><g><title>[unknown] (120 samples, 0.02%)</title><rect x="90.9300%" y="245" width="0.0167%" height="15" fill="rgb(209,209,32)" fg:x="654396" fg:w="120"/><text x="91.1800%" y="255.50"></text></g><g><title>std::io::default_read_buf (757 samples, 0.11%)</title><rect x="90.8427%" y="581" width="0.1052%" height="15" fill="rgb(221,70,22)" fg:x="653768" fg:w="757"/><text x="91.0927%" y="591.50"></text></g><g><title>std::net::udp::UdpSocket::recv (749 samples, 0.10%)</title><rect x="90.8439%" y="565" width="0.1041%" height="15" fill="rgb(248,145,5)" fg:x="653776" fg:w="749"/><text x="91.0939%" y="575.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (748 samples, 0.10%)</title><rect x="90.8440%" y="549" width="0.1039%" height="15" fill="rgb(226,116,26)" fg:x="653777" fg:w="748"/><text x="91.0940%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (748 samples, 0.10%)</title><rect x="90.8440%" y="533" width="0.1039%" height="15" fill="rgb(244,5,17)" fg:x="653777" fg:w="748"/><text x="91.0940%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (748 samples, 0.10%)</title><rect x="90.8440%" y="517" width="0.1039%" height="15" fill="rgb(252,159,33)" fg:x="653777" fg:w="748"/><text x="91.0940%" y="527.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,057 samples, 0.15%)</title><rect x="90.8043%" y="613" width="0.1469%" height="15" fill="rgb(206,71,0)" fg:x="653491" fg:w="1057"/><text x="91.0543%" y="623.50"></text></g><g><title>std::io::append_to_string (1,047 samples, 0.15%)</title><rect x="90.8056%" y="597" width="0.1455%" height="15" fill="rgb(233,118,54)" fg:x="653501" fg:w="1047"/><text x="91.0556%" y="607.50"></text></g><g><title>jsonrpc::simple_http::get_lines (2,792 samples, 0.39%)</title><rect x="90.5790%" y="629" width="0.3880%" height="15" fill="rgb(234,83,48)" fg:x="651870" fg:w="2792"/><text x="90.8290%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (475 samples, 0.07%)</title><rect x="90.9784%" y="597" width="0.0660%" height="15" fill="rgb(228,3,54)" fg:x="654744" fg:w="475"/><text x="91.2284%" y="607.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (368 samples, 0.05%)</title><rect x="90.9932%" y="581" width="0.0511%" height="15" fill="rgb(226,155,13)" fg:x="654851" fg:w="368"/><text x="91.2432%" y="591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (356 samples, 0.05%)</title><rect x="90.9949%" y="565" width="0.0495%" height="15" fill="rgb(241,28,37)" fg:x="654863" fg:w="356"/><text x="91.2449%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (559 samples, 0.08%)</title><rect x="90.9699%" y="613" width="0.0777%" height="15" fill="rgb(233,93,10)" fg:x="654683" fg:w="559"/><text x="91.2199%" y="623.50"></text></g><g><title>serde_json::de::from_str (577 samples, 0.08%)</title><rect x="90.9689%" y="629" width="0.0802%" height="15" fill="rgb(225,113,19)" fg:x="654676" fg:w="577"/><text x="91.2189%" y="639.50"></text></g><g><title>__send (8,892 samples, 1.24%)</title><rect x="91.0598%" y="581" width="1.2356%" height="15" fill="rgb(241,2,18)" fg:x="655330" fg:w="8892"/><text x="91.3098%" y="591.50"></text></g><g><title>[unknown] (8,705 samples, 1.21%)</title><rect x="91.0858%" y="565" width="1.2096%" height="15" fill="rgb(228,207,21)" fg:x="655517" fg:w="8705"/><text x="91.3358%" y="575.50"></text></g><g><title>[unknown] (8,405 samples, 1.17%)</title><rect x="91.1275%" y="549" width="1.1679%" height="15" fill="rgb(213,211,35)" fg:x="655817" fg:w="8405"/><text x="91.3775%" y="559.50"></text></g><g><title>[unknown] (8,021 samples, 1.11%)</title><rect x="91.1808%" y="533" width="1.1145%" height="15" fill="rgb(209,83,10)" fg:x="656201" fg:w="8021"/><text x="91.4308%" y="543.50"></text></g><g><title>[unknown] (7,932 samples, 1.10%)</title><rect x="91.1932%" y="517" width="1.1022%" height="15" fill="rgb(209,164,1)" fg:x="656290" fg:w="7932"/><text x="91.4432%" y="527.50"></text></g><g><title>[unknown] (7,751 samples, 1.08%)</title><rect x="91.2183%" y="501" width="1.0770%" height="15" fill="rgb(213,184,43)" fg:x="656471" fg:w="7751"/><text x="91.4683%" y="511.50"></text></g><g><title>[unknown] (7,665 samples, 1.07%)</title><rect x="91.2303%" y="485" width="1.0651%" height="15" fill="rgb(231,61,34)" fg:x="656557" fg:w="7665"/><text x="91.4803%" y="495.50"></text></g><g><title>[unknown] (7,486 samples, 1.04%)</title><rect x="91.2552%" y="469" width="1.0402%" height="15" fill="rgb(235,75,3)" fg:x="656736" fg:w="7486"/><text x="91.5052%" y="479.50"></text></g><g><title>[unknown] (7,270 samples, 1.01%)</title><rect x="91.2852%" y="453" width="1.0102%" height="15" fill="rgb(220,106,47)" fg:x="656952" fg:w="7270"/><text x="91.5352%" y="463.50"></text></g><g><title>[unknown] (7,015 samples, 0.97%)</title><rect x="91.3206%" y="437" width="0.9748%" height="15" fill="rgb(210,196,33)" fg:x="657207" fg:w="7015"/><text x="91.5706%" y="447.50"></text></g><g><title>[unknown] (6,303 samples, 0.88%)</title><rect x="91.4195%" y="421" width="0.8758%" height="15" fill="rgb(229,154,42)" fg:x="657919" fg:w="6303"/><text x="91.6695%" y="431.50"></text></g><g><title>[unknown] (5,773 samples, 0.80%)</title><rect x="91.4932%" y="405" width="0.8022%" height="15" fill="rgb(228,114,26)" fg:x="658449" fg:w="5773"/><text x="91.7432%" y="415.50"></text></g><g><title>[unknown] (4,905 samples, 0.68%)</title><rect x="91.6138%" y="389" width="0.6816%" height="15" fill="rgb(208,144,1)" fg:x="659317" fg:w="4905"/><text x="91.8638%" y="399.50"></text></g><g><title>[unknown] (4,290 samples, 0.60%)</title><rect x="91.6993%" y="373" width="0.5961%" height="15" fill="rgb(239,112,37)" fg:x="659932" fg:w="4290"/><text x="91.9493%" y="383.50"></text></g><g><title>[unknown] (3,976 samples, 0.55%)</title><rect x="91.7429%" y="357" width="0.5525%" height="15" fill="rgb(210,96,50)" fg:x="660246" fg:w="3976"/><text x="91.9929%" y="367.50"></text></g><g><title>[unknown] (3,672 samples, 0.51%)</title><rect x="91.7851%" y="341" width="0.5102%" height="15" fill="rgb(222,178,2)" fg:x="660550" fg:w="3672"/><text x="92.0351%" y="351.50"></text></g><g><title>[unknown] (3,430 samples, 0.48%)</title><rect x="91.8188%" y="325" width="0.4766%" height="15" fill="rgb(226,74,18)" fg:x="660792" fg:w="3430"/><text x="92.0688%" y="335.50"></text></g><g><title>[unknown] (3,122 samples, 0.43%)</title><rect x="91.8615%" y="309" width="0.4338%" height="15" fill="rgb(225,67,54)" fg:x="661100" fg:w="3122"/><text x="92.1115%" y="319.50"></text></g><g><title>[unknown] (3,017 samples, 0.42%)</title><rect x="91.8761%" y="293" width="0.4192%" height="15" fill="rgb(251,92,32)" fg:x="661205" fg:w="3017"/><text x="92.1261%" y="303.50"></text></g><g><title>[unknown] (2,882 samples, 0.40%)</title><rect x="91.8949%" y="277" width="0.4005%" height="15" fill="rgb(228,149,22)" fg:x="661340" fg:w="2882"/><text x="92.1449%" y="287.50"></text></g><g><title>[unknown] (2,689 samples, 0.37%)</title><rect x="91.9217%" y="261" width="0.3736%" height="15" fill="rgb(243,54,13)" fg:x="661533" fg:w="2689"/><text x="92.1717%" y="271.50"></text></g><g><title>[unknown] (2,543 samples, 0.35%)</title><rect x="91.9420%" y="245" width="0.3534%" height="15" fill="rgb(243,180,28)" fg:x="661679" fg:w="2543"/><text x="92.1920%" y="255.50"></text></g><g><title>[unknown] (2,381 samples, 0.33%)</title><rect x="91.9645%" y="229" width="0.3308%" height="15" fill="rgb(208,167,24)" fg:x="661841" fg:w="2381"/><text x="92.2145%" y="239.50"></text></g><g><title>[unknown] (2,163 samples, 0.30%)</title><rect x="91.9948%" y="213" width="0.3006%" height="15" fill="rgb(245,73,45)" fg:x="662059" fg:w="2163"/><text x="92.2448%" y="223.50"></text></g><g><title>[unknown] (1,889 samples, 0.26%)</title><rect x="92.0329%" y="197" width="0.2625%" height="15" fill="rgb(237,203,48)" fg:x="662333" fg:w="1889"/><text x="92.2829%" y="207.50"></text></g><g><title>[unknown] (1,690 samples, 0.23%)</title><rect x="92.0605%" y="181" width="0.2348%" height="15" fill="rgb(211,197,16)" fg:x="662532" fg:w="1690"/><text x="92.3105%" y="191.50"></text></g><g><title>[unknown] (1,414 samples, 0.20%)</title><rect x="92.0989%" y="165" width="0.1965%" height="15" fill="rgb(243,99,51)" fg:x="662808" fg:w="1414"/><text x="92.3489%" y="175.50"></text></g><g><title>[unknown] (1,148 samples, 0.16%)</title><rect x="92.1358%" y="149" width="0.1595%" height="15" fill="rgb(215,123,29)" fg:x="663074" fg:w="1148"/><text x="92.3858%" y="159.50"></text></g><g><title>[unknown] (805 samples, 0.11%)</title><rect x="92.1835%" y="133" width="0.1119%" height="15" fill="rgb(239,186,37)" fg:x="663417" fg:w="805"/><text x="92.4335%" y="143.50"></text></g><g><title>[unknown] (520 samples, 0.07%)</title><rect x="92.2231%" y="117" width="0.0723%" height="15" fill="rgb(252,136,39)" fg:x="663702" fg:w="520"/><text x="92.4731%" y="127.50"></text></g><g><title>[unknown] (396 samples, 0.06%)</title><rect x="92.2403%" y="101" width="0.0550%" height="15" fill="rgb(223,213,32)" fg:x="663826" fg:w="396"/><text x="92.4903%" y="111.50"></text></g><g><title>[unknown] (318 samples, 0.04%)</title><rect x="92.2512%" y="85" width="0.0442%" height="15" fill="rgb(233,115,5)" fg:x="663904" fg:w="318"/><text x="92.5012%" y="95.50"></text></g><g><title>[unknown] (255 samples, 0.04%)</title><rect x="92.2599%" y="69" width="0.0354%" height="15" fill="rgb(207,226,44)" fg:x="663967" fg:w="255"/><text x="92.5099%" y="79.50"></text></g><g><title>[unknown] (169 samples, 0.02%)</title><rect x="92.2719%" y="53" width="0.0235%" height="15" fill="rgb(208,126,0)" fg:x="664053" fg:w="169"/><text x="92.5219%" y="63.50"></text></g><g><title>[unknown] (92 samples, 0.01%)</title><rect x="92.2826%" y="37" width="0.0128%" height="15" fill="rgb(244,66,21)" fg:x="664130" fg:w="92"/><text x="92.5326%" y="47.50"></text></g><g><title>std::io::Write::write_all (9,031 samples, 1.25%)</title><rect x="91.0491%" y="629" width="1.2549%" height="15" fill="rgb(222,97,12)" fg:x="655253" fg:w="9031"/><text x="91.2991%" y="639.50"></text></g><g><title>std::net::udp::UdpSocket::send (8,976 samples, 1.25%)</title><rect x="91.0567%" y="613" width="1.2472%" height="15" fill="rgb(219,213,19)" fg:x="655308" fg:w="8976"/><text x="91.3067%" y="623.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (8,958 samples, 1.24%)</title><rect x="91.0592%" y="597" width="1.2447%" height="15" fill="rgb(252,169,30)" fg:x="655326" fg:w="8958"/><text x="91.3092%" y="607.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (194 samples, 0.03%)</title><rect x="92.3040%" y="629" width="0.0270%" height="15" fill="rgb(206,32,51)" fg:x="664284" fg:w="194"/><text x="92.5540%" y="639.50"></text></g><g><title>malloc (188 samples, 0.03%)</title><rect x="92.3048%" y="613" width="0.0261%" height="15" fill="rgb(250,172,42)" fg:x="664290" fg:w="188"/><text x="92.5548%" y="623.50"></text></g><g><title>[libc.so.6] (176 samples, 0.02%)</title><rect x="92.3065%" y="597" width="0.0245%" height="15" fill="rgb(209,34,43)" fg:x="664302" fg:w="176"/><text x="92.5565%" y="607.50"></text></g><g><title>[libc.so.6] (141 samples, 0.02%)</title><rect x="92.3113%" y="581" width="0.0196%" height="15" fill="rgb(223,11,35)" fg:x="664337" fg:w="141"/><text x="92.5613%" y="591.50"></text></g><g><title>__poll (160 samples, 0.02%)</title><rect x="92.3322%" y="581" width="0.0222%" height="15" fill="rgb(251,219,26)" fg:x="664487" fg:w="160"/><text x="92.5822%" y="591.50"></text></g><g><title>[unknown] (149 samples, 0.02%)</title><rect x="92.3337%" y="565" width="0.0207%" height="15" fill="rgb(231,119,3)" fg:x="664498" fg:w="149"/><text x="92.5837%" y="575.50"></text></g><g><title>[unknown] (131 samples, 0.02%)</title><rect x="92.3362%" y="549" width="0.0182%" height="15" fill="rgb(216,97,11)" fg:x="664516" fg:w="131"/><text x="92.5862%" y="559.50"></text></g><g><title>[unknown] (104 samples, 0.01%)</title><rect x="92.3400%" y="533" width="0.0145%" height="15" fill="rgb(223,59,9)" fg:x="664543" fg:w="104"/><text x="92.5900%" y="543.50"></text></g><g><title>[unknown] (97 samples, 0.01%)</title><rect x="92.3409%" y="517" width="0.0135%" height="15" fill="rgb(233,93,31)" fg:x="664550" fg:w="97"/><text x="92.5909%" y="527.50"></text></g><g><title>connect (2,498 samples, 0.35%)</title><rect x="92.3544%" y="581" width="0.3471%" height="15" fill="rgb(239,81,33)" fg:x="664647" fg:w="2498"/><text x="92.6044%" y="591.50"></text></g><g><title>[unknown] (2,468 samples, 0.34%)</title><rect x="92.3586%" y="565" width="0.3429%" height="15" fill="rgb(213,120,34)" fg:x="664677" fg:w="2468"/><text x="92.6086%" y="575.50"></text></g><g><title>[unknown] (2,443 samples, 0.34%)</title><rect x="92.3621%" y="549" width="0.3395%" height="15" fill="rgb(243,49,53)" fg:x="664702" fg:w="2443"/><text x="92.6121%" y="559.50"></text></g><g><title>[unknown] (2,409 samples, 0.33%)</title><rect x="92.3668%" y="533" width="0.3347%" height="15" fill="rgb(247,216,33)" fg:x="664736" fg:w="2409"/><text x="92.6168%" y="543.50"></text></g><g><title>[unknown] (2,400 samples, 0.33%)</title><rect x="92.3680%" y="517" width="0.3335%" height="15" fill="rgb(226,26,14)" fg:x="664745" fg:w="2400"/><text x="92.6180%" y="527.50"></text></g><g><title>[unknown] (2,376 samples, 0.33%)</title><rect x="92.3714%" y="501" width="0.3302%" height="15" fill="rgb(215,49,53)" fg:x="664769" fg:w="2376"/><text x="92.6214%" y="511.50"></text></g><g><title>[unknown] (2,349 samples, 0.33%)</title><rect x="92.3751%" y="485" width="0.3264%" height="15" fill="rgb(245,162,40)" fg:x="664796" fg:w="2349"/><text x="92.6251%" y="495.50"></text></g><g><title>[unknown] (2,315 samples, 0.32%)</title><rect x="92.3798%" y="469" width="0.3217%" height="15" fill="rgb(229,68,17)" fg:x="664830" fg:w="2315"/><text x="92.6298%" y="479.50"></text></g><g><title>[unknown] (2,278 samples, 0.32%)</title><rect x="92.3850%" y="453" width="0.3165%" height="15" fill="rgb(213,182,10)" fg:x="664867" fg:w="2278"/><text x="92.6350%" y="463.50"></text></g><g><title>[unknown] (2,145 samples, 0.30%)</title><rect x="92.4035%" y="437" width="0.2981%" height="15" fill="rgb(245,125,30)" fg:x="665000" fg:w="2145"/><text x="92.6535%" y="447.50"></text></g><g><title>[unknown] (1,946 samples, 0.27%)</title><rect x="92.4311%" y="421" width="0.2704%" height="15" fill="rgb(232,202,2)" fg:x="665199" fg:w="1946"/><text x="92.6811%" y="431.50"></text></g><g><title>[unknown] (1,787 samples, 0.25%)</title><rect x="92.4532%" y="405" width="0.2483%" height="15" fill="rgb(237,140,51)" fg:x="665358" fg:w="1787"/><text x="92.7032%" y="415.50"></text></g><g><title>[unknown] (1,610 samples, 0.22%)</title><rect x="92.4778%" y="389" width="0.2237%" height="15" fill="rgb(236,157,25)" fg:x="665535" fg:w="1610"/><text x="92.7278%" y="399.50"></text></g><g><title>[unknown] (1,484 samples, 0.21%)</title><rect x="92.4953%" y="373" width="0.2062%" height="15" fill="rgb(219,209,0)" fg:x="665661" fg:w="1484"/><text x="92.7453%" y="383.50"></text></g><g><title>[unknown] (1,328 samples, 0.18%)</title><rect x="92.5170%" y="357" width="0.1845%" height="15" fill="rgb(240,116,54)" fg:x="665817" fg:w="1328"/><text x="92.7670%" y="367.50"></text></g><g><title>[unknown] (1,256 samples, 0.17%)</title><rect x="92.5270%" y="341" width="0.1745%" height="15" fill="rgb(216,10,36)" fg:x="665889" fg:w="1256"/><text x="92.7770%" y="351.50"></text></g><g><title>[unknown] (1,207 samples, 0.17%)</title><rect x="92.5338%" y="325" width="0.1677%" height="15" fill="rgb(222,72,44)" fg:x="665938" fg:w="1207"/><text x="92.7838%" y="335.50"></text></g><g><title>[unknown] (1,179 samples, 0.16%)</title><rect x="92.5377%" y="309" width="0.1638%" height="15" fill="rgb(232,159,9)" fg:x="665966" fg:w="1179"/><text x="92.7877%" y="319.50"></text></g><g><title>[unknown] (1,157 samples, 0.16%)</title><rect x="92.5407%" y="293" width="0.1608%" height="15" fill="rgb(210,39,32)" fg:x="665988" fg:w="1157"/><text x="92.7907%" y="303.50"></text></g><g><title>[unknown] (1,126 samples, 0.16%)</title><rect x="92.5451%" y="277" width="0.1565%" height="15" fill="rgb(216,194,45)" fg:x="666019" fg:w="1126"/><text x="92.7951%" y="287.50"></text></g><g><title>[unknown] (1,099 samples, 0.15%)</title><rect x="92.5488%" y="261" width="0.1527%" height="15" fill="rgb(218,18,35)" fg:x="666046" fg:w="1099"/><text x="92.7988%" y="271.50"></text></g><g><title>[unknown] (1,066 samples, 0.15%)</title><rect x="92.5534%" y="245" width="0.1481%" height="15" fill="rgb(207,83,51)" fg:x="666079" fg:w="1066"/><text x="92.8034%" y="255.50"></text></g><g><title>[unknown] (1,029 samples, 0.14%)</title><rect x="92.5585%" y="229" width="0.1430%" height="15" fill="rgb(225,63,43)" fg:x="666116" fg:w="1029"/><text x="92.8085%" y="239.50"></text></g><g><title>[unknown] (933 samples, 0.13%)</title><rect x="92.5719%" y="213" width="0.1296%" height="15" fill="rgb(207,57,36)" fg:x="666212" fg:w="933"/><text x="92.8219%" y="223.50"></text></g><g><title>[unknown] (807 samples, 0.11%)</title><rect x="92.5894%" y="197" width="0.1121%" height="15" fill="rgb(216,99,33)" fg:x="666338" fg:w="807"/><text x="92.8394%" y="207.50"></text></g><g><title>[unknown] (705 samples, 0.10%)</title><rect x="92.6036%" y="181" width="0.0980%" height="15" fill="rgb(225,42,16)" fg:x="666440" fg:w="705"/><text x="92.8536%" y="191.50"></text></g><g><title>[unknown] (554 samples, 0.08%)</title><rect x="92.6245%" y="165" width="0.0770%" height="15" fill="rgb(220,201,45)" fg:x="666591" fg:w="554"/><text x="92.8745%" y="175.50"></text></g><g><title>[unknown] (426 samples, 0.06%)</title><rect x="92.6423%" y="149" width="0.0592%" height="15" fill="rgb(225,33,4)" fg:x="666719" fg:w="426"/><text x="92.8923%" y="159.50"></text></g><g><title>[unknown] (310 samples, 0.04%)</title><rect x="92.6584%" y="133" width="0.0431%" height="15" fill="rgb(224,33,50)" fg:x="666835" fg:w="310"/><text x="92.9084%" y="143.50"></text></g><g><title>[unknown] (195 samples, 0.03%)</title><rect x="92.6744%" y="117" width="0.0271%" height="15" fill="rgb(246,198,51)" fg:x="666950" fg:w="195"/><text x="92.9244%" y="127.50"></text></g><g><title>[unknown] (112 samples, 0.02%)</title><rect x="92.6860%" y="101" width="0.0156%" height="15" fill="rgb(205,22,4)" fg:x="667033" fg:w="112"/><text x="92.9360%" y="111.50"></text></g><g><title>[unknown] (87 samples, 0.01%)</title><rect x="92.6894%" y="85" width="0.0121%" height="15" fill="rgb(206,3,8)" fg:x="667058" fg:w="87"/><text x="92.9394%" y="95.50"></text></g><g><title>ioctl (179 samples, 0.02%)</title><rect x="92.7137%" y="565" width="0.0249%" height="15" fill="rgb(251,23,15)" fg:x="667233" fg:w="179"/><text x="92.9637%" y="575.50"></text></g><g><title>[unknown] (147 samples, 0.02%)</title><rect x="92.7182%" y="549" width="0.0204%" height="15" fill="rgb(252,88,28)" fg:x="667265" fg:w="147"/><text x="92.9682%" y="559.50"></text></g><g><title>[unknown] (115 samples, 0.02%)</title><rect x="92.7226%" y="533" width="0.0160%" height="15" fill="rgb(212,127,14)" fg:x="667297" fg:w="115"/><text x="92.9726%" y="543.50"></text></g><g><title>[unknown] (93 samples, 0.01%)</title><rect x="92.7257%" y="517" width="0.0129%" height="15" fill="rgb(247,145,37)" fg:x="667319" fg:w="93"/><text x="92.9757%" y="527.50"></text></g><g><title>[unknown] (80 samples, 0.01%)</title><rect x="92.7275%" y="501" width="0.0111%" height="15" fill="rgb(209,117,53)" fg:x="667332" fg:w="80"/><text x="92.9775%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::set_nonblocking (212 samples, 0.03%)</title><rect x="92.7094%" y="581" width="0.0295%" height="15" fill="rgb(212,90,42)" fg:x="667202" fg:w="212"/><text x="92.9594%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::connect_timeout (2,960 samples, 0.41%)</title><rect x="92.3311%" y="597" width="0.4113%" height="15" fill="rgb(218,164,37)" fg:x="664479" fg:w="2960"/><text x="92.5811%" y="607.50"></text></g><g><title>std::net::tcp::TcpStream::connect_timeout (3,642 samples, 0.51%)</title><rect x="92.3309%" y="629" width="0.5061%" height="15" fill="rgb(246,65,34)" fg:x="664478" fg:w="3642"/><text x="92.5809%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::connect_timeout (3,642 samples, 0.51%)</title><rect x="92.3309%" y="613" width="0.5061%" height="15" fill="rgb(231,100,33)" fg:x="664478" fg:w="3642"/><text x="92.5809%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::new (681 samples, 0.09%)</title><rect x="92.7424%" y="597" width="0.0946%" height="15" fill="rgb(228,126,14)" fg:x="667439" fg:w="681"/><text x="92.9924%" y="607.50"></text></g><g><title>__socket (670 samples, 0.09%)</title><rect x="92.7439%" y="581" width="0.0931%" height="15" fill="rgb(215,173,21)" fg:x="667450" fg:w="670"/><text x="92.9939%" y="591.50"></text></g><g><title>[unknown] (654 samples, 0.09%)</title><rect x="92.7461%" y="565" width="0.0909%" height="15" fill="rgb(210,6,40)" fg:x="667466" fg:w="654"/><text x="92.9961%" y="575.50"></text></g><g><title>[unknown] (638 samples, 0.09%)</title><rect x="92.7483%" y="549" width="0.0887%" height="15" fill="rgb(212,48,18)" fg:x="667482" fg:w="638"/><text x="92.9983%" y="559.50"></text></g><g><title>[unknown] (628 samples, 0.09%)</title><rect x="92.7497%" y="533" width="0.0873%" height="15" fill="rgb(230,214,11)" fg:x="667492" fg:w="628"/><text x="92.9997%" y="543.50"></text></g><g><title>[unknown] (616 samples, 0.09%)</title><rect x="92.7514%" y="517" width="0.0856%" height="15" fill="rgb(254,105,39)" fg:x="667504" fg:w="616"/><text x="93.0014%" y="527.50"></text></g><g><title>[unknown] (603 samples, 0.08%)</title><rect x="92.7532%" y="501" width="0.0838%" height="15" fill="rgb(245,158,5)" fg:x="667517" fg:w="603"/><text x="93.0032%" y="511.50"></text></g><g><title>[unknown] (577 samples, 0.08%)</title><rect x="92.7568%" y="485" width="0.0802%" height="15" fill="rgb(249,208,11)" fg:x="667543" fg:w="577"/><text x="93.0068%" y="495.50"></text></g><g><title>[unknown] (534 samples, 0.07%)</title><rect x="92.7628%" y="469" width="0.0742%" height="15" fill="rgb(210,39,28)" fg:x="667586" fg:w="534"/><text x="93.0128%" y="479.50"></text></g><g><title>[unknown] (491 samples, 0.07%)</title><rect x="92.7688%" y="453" width="0.0682%" height="15" fill="rgb(211,56,53)" fg:x="667629" fg:w="491"/><text x="93.0188%" y="463.50"></text></g><g><title>[unknown] (444 samples, 0.06%)</title><rect x="92.7753%" y="437" width="0.0617%" height="15" fill="rgb(226,201,30)" fg:x="667676" fg:w="444"/><text x="93.0253%" y="447.50"></text></g><g><title>[unknown] (330 samples, 0.05%)</title><rect x="92.7911%" y="421" width="0.0459%" height="15" fill="rgb(239,101,34)" fg:x="667790" fg:w="330"/><text x="93.0411%" y="431.50"></text></g><g><title>[unknown] (243 samples, 0.03%)</title><rect x="92.8032%" y="405" width="0.0338%" height="15" fill="rgb(226,209,5)" fg:x="667877" fg:w="243"/><text x="93.0532%" y="415.50"></text></g><g><title>[unknown] (92 samples, 0.01%)</title><rect x="92.8242%" y="389" width="0.0128%" height="15" fill="rgb(250,105,47)" fg:x="668028" fg:w="92"/><text x="93.0742%" y="399.50"></text></g><g><title>setsockopt (114 samples, 0.02%)</title><rect x="92.8371%" y="581" width="0.0158%" height="15" fill="rgb(230,72,3)" fg:x="668121" fg:w="114"/><text x="93.0871%" y="591.50"></text></g><g><title>[unknown] (106 samples, 0.01%)</title><rect x="92.8382%" y="565" width="0.0147%" height="15" fill="rgb(232,218,39)" fg:x="668129" fg:w="106"/><text x="93.0882%" y="575.50"></text></g><g><title>[unknown] (97 samples, 0.01%)</title><rect x="92.8395%" y="549" width="0.0135%" height="15" fill="rgb(248,166,6)" fg:x="668138" fg:w="97"/><text x="93.0895%" y="559.50"></text></g><g><title>[unknown] (92 samples, 0.01%)</title><rect x="92.8402%" y="533" width="0.0128%" height="15" fill="rgb(247,89,20)" fg:x="668143" fg:w="92"/><text x="93.0902%" y="543.50"></text></g><g><title>[unknown] (82 samples, 0.01%)</title><rect x="92.8416%" y="517" width="0.0114%" height="15" fill="rgb(248,130,54)" fg:x="668153" fg:w="82"/><text x="93.0916%" y="527.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::set_read_timeout (118 samples, 0.02%)</title><rect x="92.8370%" y="629" width="0.0164%" height="15" fill="rgb(234,196,4)" fg:x="668120" fg:w="118"/><text x="93.0870%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (117 samples, 0.02%)</title><rect x="92.8371%" y="613" width="0.0163%" height="15" fill="rgb(250,143,31)" fg:x="668121" fg:w="117"/><text x="93.0871%" y="623.50"></text></g><g><title>std::sys_common::net::setsockopt (117 samples, 0.02%)</title><rect x="92.8371%" y="597" width="0.0163%" height="15" fill="rgb(211,110,34)" fg:x="668121" fg:w="117"/><text x="93.0871%" y="607.50"></text></g><g><title>setsockopt (92 samples, 0.01%)</title><rect x="92.8535%" y="581" width="0.0128%" height="15" fill="rgb(215,124,48)" fg:x="668239" fg:w="92"/><text x="93.1035%" y="591.50"></text></g><g><title>[unknown] (89 samples, 0.01%)</title><rect x="92.8539%" y="565" width="0.0124%" height="15" fill="rgb(216,46,13)" fg:x="668242" fg:w="89"/><text x="93.1039%" y="575.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::set_write_timeout (95 samples, 0.01%)</title><rect x="92.8534%" y="629" width="0.0132%" height="15" fill="rgb(205,184,25)" fg:x="668238" fg:w="95"/><text x="93.1034%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (94 samples, 0.01%)</title><rect x="92.8535%" y="613" width="0.0131%" height="15" fill="rgb(228,1,10)" fg:x="668239" fg:w="94"/><text x="93.1035%" y="623.50"></text></g><g><title>std::sys_common::net::setsockopt (94 samples, 0.01%)</title><rect x="92.8535%" y="597" width="0.0131%" height="15" fill="rgb(213,116,27)" fg:x="668239" fg:w="94"/><text x="93.1035%" y="607.50"></text></g><g><title>jsonrpc::client::Client::send_request (19,904 samples, 2.77%)</title><rect x="90.1037%" y="661" width="2.7657%" height="15" fill="rgb(241,95,50)" fg:x="648449" fg:w="19904"/><text x="90.3537%" y="671.50">js..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (19,894 samples, 2.76%)</title><rect x="90.1050%" y="645" width="2.7643%" height="15" fill="rgb(238,48,32)" fg:x="648459" fg:w="19894"/><text x="90.3550%" y="655.50">&lt;j..</text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (423 samples, 0.06%)</title><rect x="92.8715%" y="629" width="0.0588%" height="15" fill="rgb(235,113,49)" fg:x="668368" fg:w="423"/><text x="93.1215%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (495 samples, 0.07%)</title><rect x="92.8702%" y="645" width="0.0688%" height="15" fill="rgb(205,127,43)" fg:x="668359" fg:w="495"/><text x="93.1202%" y="655.50"></text></g><g><title>serde_json::de::from_str (506 samples, 0.07%)</title><rect x="92.8694%" y="661" width="0.0703%" height="15" fill="rgb(250,162,2)" fg:x="668353" fg:w="506"/><text x="93.1194%" y="671.50"></text></g><g><title>&lt;btcd_rpc::client::BTCDClient as btcd_rpc::client::BtcdRpc&gt;::call (20,700 samples, 2.88%)</title><rect x="90.0641%" y="677" width="2.8763%" height="15" fill="rgb(220,13,41)" fg:x="648164" fg:w="20700"/><text x="90.3141%" y="687.50">&lt;b..</text></g><g><title>btcd_rpc::client::BtcdRpc::getblock (20,760 samples, 2.88%)</title><rect x="90.0602%" y="693" width="2.8847%" height="15" fill="rgb(249,221,25)" fg:x="648136" fg:w="20760"/><text x="90.3102%" y="703.50">bt..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.01%)</title><rect x="92.9516%" y="645" width="0.0133%" height="15" fill="rgb(215,208,19)" fg:x="668945" fg:w="96"/><text x="93.2016%" y="655.50"></text></g><g><title>serde_json::raw::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;serde_json::raw::RawValue&gt;&gt;::deserialize (87 samples, 0.01%)</title><rect x="92.9529%" y="629" width="0.0121%" height="15" fill="rgb(236,175,2)" fg:x="668954" fg:w="87"/><text x="93.2029%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (114 samples, 0.02%)</title><rect x="92.9494%" y="661" width="0.0158%" height="15" fill="rgb(241,52,2)" fg:x="668929" fg:w="114"/><text x="93.1994%" y="671.50"></text></g><g><title>__close (1,891 samples, 0.26%)</title><rect x="92.9897%" y="629" width="0.2628%" height="15" fill="rgb(248,140,14)" fg:x="669219" fg:w="1891"/><text x="93.2397%" y="639.50"></text></g><g><title>[unknown] (1,871 samples, 0.26%)</title><rect x="92.9925%" y="613" width="0.2600%" height="15" fill="rgb(253,22,42)" fg:x="669239" fg:w="1871"/><text x="93.2425%" y="623.50"></text></g><g><title>[unknown] (1,855 samples, 0.26%)</title><rect x="92.9947%" y="597" width="0.2578%" height="15" fill="rgb(234,61,47)" fg:x="669255" fg:w="1855"/><text x="93.2447%" y="607.50"></text></g><g><title>[unknown] (1,827 samples, 0.25%)</title><rect x="92.9986%" y="581" width="0.2539%" height="15" fill="rgb(208,226,15)" fg:x="669283" fg:w="1827"/><text x="93.2486%" y="591.50"></text></g><g><title>[unknown] (1,823 samples, 0.25%)</title><rect x="92.9992%" y="565" width="0.2533%" height="15" fill="rgb(217,221,4)" fg:x="669287" fg:w="1823"/><text x="93.2492%" y="575.50"></text></g><g><title>[unknown] (1,804 samples, 0.25%)</title><rect x="93.0018%" y="549" width="0.2507%" height="15" fill="rgb(212,174,34)" fg:x="669306" fg:w="1804"/><text x="93.2518%" y="559.50"></text></g><g><title>[unknown] (1,773 samples, 0.25%)</title><rect x="93.0061%" y="533" width="0.2464%" height="15" fill="rgb(253,83,4)" fg:x="669337" fg:w="1773"/><text x="93.2561%" y="543.50"></text></g><g><title>[unknown] (1,721 samples, 0.24%)</title><rect x="93.0133%" y="517" width="0.2391%" height="15" fill="rgb(250,195,49)" fg:x="669389" fg:w="1721"/><text x="93.2633%" y="527.50"></text></g><g><title>[unknown] (1,689 samples, 0.23%)</title><rect x="93.0178%" y="501" width="0.2347%" height="15" fill="rgb(241,192,25)" fg:x="669421" fg:w="1689"/><text x="93.2678%" y="511.50"></text></g><g><title>[unknown] (1,613 samples, 0.22%)</title><rect x="93.0283%" y="485" width="0.2241%" height="15" fill="rgb(208,124,10)" fg:x="669497" fg:w="1613"/><text x="93.2783%" y="495.50"></text></g><g><title>[unknown] (1,559 samples, 0.22%)</title><rect x="93.0358%" y="469" width="0.2166%" height="15" fill="rgb(222,33,0)" fg:x="669551" fg:w="1559"/><text x="93.2858%" y="479.50"></text></g><g><title>[unknown] (1,507 samples, 0.21%)</title><rect x="93.0431%" y="453" width="0.2094%" height="15" fill="rgb(234,209,28)" fg:x="669603" fg:w="1507"/><text x="93.2931%" y="463.50"></text></g><g><title>[unknown] (1,441 samples, 0.20%)</title><rect x="93.0522%" y="437" width="0.2002%" height="15" fill="rgb(224,11,23)" fg:x="669669" fg:w="1441"/><text x="93.3022%" y="447.50"></text></g><g><title>[unknown] (1,371 samples, 0.19%)</title><rect x="93.0620%" y="421" width="0.1905%" height="15" fill="rgb(232,99,1)" fg:x="669739" fg:w="1371"/><text x="93.3120%" y="431.50"></text></g><g><title>[unknown] (1,331 samples, 0.18%)</title><rect x="93.0675%" y="405" width="0.1849%" height="15" fill="rgb(237,95,45)" fg:x="669779" fg:w="1331"/><text x="93.3175%" y="415.50"></text></g><g><title>[unknown] (1,259 samples, 0.17%)</title><rect x="93.0775%" y="389" width="0.1749%" height="15" fill="rgb(208,109,11)" fg:x="669851" fg:w="1259"/><text x="93.3275%" y="399.50"></text></g><g><title>[unknown] (1,133 samples, 0.16%)</title><rect x="93.0950%" y="373" width="0.1574%" height="15" fill="rgb(216,190,48)" fg:x="669977" fg:w="1133"/><text x="93.3450%" y="383.50"></text></g><g><title>[unknown] (1,063 samples, 0.15%)</title><rect x="93.1048%" y="357" width="0.1477%" height="15" fill="rgb(251,171,36)" fg:x="670047" fg:w="1063"/><text x="93.3548%" y="367.50"></text></g><g><title>[unknown] (1,016 samples, 0.14%)</title><rect x="93.1113%" y="341" width="0.1412%" height="15" fill="rgb(230,62,22)" fg:x="670094" fg:w="1016"/><text x="93.3613%" y="351.50"></text></g><g><title>[unknown] (940 samples, 0.13%)</title><rect x="93.1218%" y="325" width="0.1306%" height="15" fill="rgb(225,114,35)" fg:x="670170" fg:w="940"/><text x="93.3718%" y="335.50"></text></g><g><title>[unknown] (891 samples, 0.12%)</title><rect x="93.1287%" y="309" width="0.1238%" height="15" fill="rgb(215,118,42)" fg:x="670219" fg:w="891"/><text x="93.3787%" y="319.50"></text></g><g><title>[unknown] (816 samples, 0.11%)</title><rect x="93.1391%" y="293" width="0.1134%" height="15" fill="rgb(243,119,21)" fg:x="670294" fg:w="816"/><text x="93.3891%" y="303.50"></text></g><g><title>[unknown] (789 samples, 0.11%)</title><rect x="93.1428%" y="277" width="0.1096%" height="15" fill="rgb(252,177,53)" fg:x="670321" fg:w="789"/><text x="93.3928%" y="287.50"></text></g><g><title>[unknown] (752 samples, 0.10%)</title><rect x="93.1480%" y="261" width="0.1045%" height="15" fill="rgb(237,209,29)" fg:x="670358" fg:w="752"/><text x="93.3980%" y="271.50"></text></g><g><title>[unknown] (727 samples, 0.10%)</title><rect x="93.1514%" y="245" width="0.1010%" height="15" fill="rgb(212,65,23)" fg:x="670383" fg:w="727"/><text x="93.4014%" y="255.50"></text></g><g><title>[unknown] (691 samples, 0.10%)</title><rect x="93.1564%" y="229" width="0.0960%" height="15" fill="rgb(230,222,46)" fg:x="670419" fg:w="691"/><text x="93.4064%" y="239.50"></text></g><g><title>[unknown] (649 samples, 0.09%)</title><rect x="93.1623%" y="213" width="0.0902%" height="15" fill="rgb(215,135,32)" fg:x="670461" fg:w="649"/><text x="93.4123%" y="223.50"></text></g><g><title>[unknown] (616 samples, 0.09%)</title><rect x="93.1669%" y="197" width="0.0856%" height="15" fill="rgb(246,101,22)" fg:x="670494" fg:w="616"/><text x="93.4169%" y="207.50"></text></g><g><title>[unknown] (561 samples, 0.08%)</title><rect x="93.1745%" y="181" width="0.0780%" height="15" fill="rgb(206,107,13)" fg:x="670549" fg:w="561"/><text x="93.4245%" y="191.50"></text></g><g><title>[unknown] (477 samples, 0.07%)</title><rect x="93.1862%" y="165" width="0.0663%" height="15" fill="rgb(250,100,44)" fg:x="670633" fg:w="477"/><text x="93.4362%" y="175.50"></text></g><g><title>[unknown] (408 samples, 0.06%)</title><rect x="93.1958%" y="149" width="0.0567%" height="15" fill="rgb(231,147,38)" fg:x="670702" fg:w="408"/><text x="93.4458%" y="159.50"></text></g><g><title>[unknown] (364 samples, 0.05%)</title><rect x="93.2019%" y="133" width="0.0506%" height="15" fill="rgb(229,8,40)" fg:x="670746" fg:w="364"/><text x="93.4519%" y="143.50"></text></g><g><title>[unknown] (329 samples, 0.05%)</title><rect x="93.2067%" y="117" width="0.0457%" height="15" fill="rgb(221,135,30)" fg:x="670781" fg:w="329"/><text x="93.4567%" y="127.50"></text></g><g><title>[unknown] (240 samples, 0.03%)</title><rect x="93.2191%" y="101" width="0.0333%" height="15" fill="rgb(249,193,18)" fg:x="670870" fg:w="240"/><text x="93.4691%" y="111.50"></text></g><g><title>[unknown] (141 samples, 0.02%)</title><rect x="93.2329%" y="85" width="0.0196%" height="15" fill="rgb(209,133,39)" fg:x="670969" fg:w="141"/><text x="93.4829%" y="95.50"></text></g><g><title>[unknown] (72 samples, 0.01%)</title><rect x="93.2425%" y="69" width="0.0100%" height="15" fill="rgb(232,100,14)" fg:x="671038" fg:w="72"/><text x="93.4925%" y="79.50"></text></g><g><title>jsonrpc::_::&lt;impl serde::ser::Serialize for jsonrpc::Request&gt;::serialize (99 samples, 0.01%)</title><rect x="93.2784%" y="629" width="0.0138%" height="15" fill="rgb(224,185,1)" fg:x="671297" fg:w="99"/><text x="93.5284%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (88 samples, 0.01%)</title><rect x="93.2800%" y="613" width="0.0122%" height="15" fill="rgb(223,139,8)" fg:x="671308" fg:w="88"/><text x="93.5300%" y="623.50"></text></g><g><title>recv (831 samples, 0.12%)</title><rect x="93.3114%" y="517" width="0.1155%" height="15" fill="rgb(232,213,38)" fg:x="671534" fg:w="831"/><text x="93.5614%" y="527.50"></text></g><g><title>[unknown] (816 samples, 0.11%)</title><rect x="93.3135%" y="501" width="0.1134%" height="15" fill="rgb(207,94,22)" fg:x="671549" fg:w="816"/><text x="93.5635%" y="511.50"></text></g><g><title>[unknown] (807 samples, 0.11%)</title><rect x="93.3147%" y="485" width="0.1121%" height="15" fill="rgb(219,183,54)" fg:x="671558" fg:w="807"/><text x="93.5647%" y="495.50"></text></g><g><title>[unknown] (781 samples, 0.11%)</title><rect x="93.3183%" y="469" width="0.1085%" height="15" fill="rgb(216,185,54)" fg:x="671584" fg:w="781"/><text x="93.5683%" y="479.50"></text></g><g><title>[unknown] (776 samples, 0.11%)</title><rect x="93.3190%" y="453" width="0.1078%" height="15" fill="rgb(254,217,39)" fg:x="671589" fg:w="776"/><text x="93.5690%" y="463.50"></text></g><g><title>[unknown] (759 samples, 0.11%)</title><rect x="93.3214%" y="437" width="0.1055%" height="15" fill="rgb(240,178,23)" fg:x="671606" fg:w="759"/><text x="93.5714%" y="447.50"></text></g><g><title>[unknown] (725 samples, 0.10%)</title><rect x="93.3261%" y="421" width="0.1007%" height="15" fill="rgb(218,11,47)" fg:x="671640" fg:w="725"/><text x="93.5761%" y="431.50"></text></g><g><title>[unknown] (699 samples, 0.10%)</title><rect x="93.3297%" y="405" width="0.0971%" height="15" fill="rgb(218,51,51)" fg:x="671666" fg:w="699"/><text x="93.5797%" y="415.50"></text></g><g><title>[unknown] (648 samples, 0.09%)</title><rect x="93.3368%" y="389" width="0.0900%" height="15" fill="rgb(238,126,27)" fg:x="671717" fg:w="648"/><text x="93.5868%" y="399.50"></text></g><g><title>[unknown] (611 samples, 0.08%)</title><rect x="93.3419%" y="373" width="0.0849%" height="15" fill="rgb(249,202,22)" fg:x="671754" fg:w="611"/><text x="93.5919%" y="383.50"></text></g><g><title>[unknown] (524 samples, 0.07%)</title><rect x="93.3540%" y="357" width="0.0728%" height="15" fill="rgb(254,195,49)" fg:x="671841" fg:w="524"/><text x="93.6040%" y="367.50"></text></g><g><title>[unknown] (496 samples, 0.07%)</title><rect x="93.3579%" y="341" width="0.0689%" height="15" fill="rgb(208,123,14)" fg:x="671869" fg:w="496"/><text x="93.6079%" y="351.50"></text></g><g><title>[unknown] (459 samples, 0.06%)</title><rect x="93.3631%" y="325" width="0.0638%" height="15" fill="rgb(224,200,8)" fg:x="671906" fg:w="459"/><text x="93.6131%" y="335.50"></text></g><g><title>[unknown] (404 samples, 0.06%)</title><rect x="93.3707%" y="309" width="0.0561%" height="15" fill="rgb(217,61,36)" fg:x="671961" fg:w="404"/><text x="93.6207%" y="319.50"></text></g><g><title>[unknown] (341 samples, 0.05%)</title><rect x="93.3795%" y="293" width="0.0474%" height="15" fill="rgb(206,35,45)" fg:x="672024" fg:w="341"/><text x="93.6295%" y="303.50"></text></g><g><title>[unknown] (209 samples, 0.03%)</title><rect x="93.3978%" y="277" width="0.0290%" height="15" fill="rgb(217,65,33)" fg:x="672156" fg:w="209"/><text x="93.6478%" y="287.50"></text></g><g><title>[unknown] (110 samples, 0.02%)</title><rect x="93.4116%" y="261" width="0.0153%" height="15" fill="rgb(222,158,48)" fg:x="672255" fg:w="110"/><text x="93.6616%" y="271.50"></text></g><g><title>std::io::default_read_buf (873 samples, 0.12%)</title><rect x="93.3060%" y="597" width="0.1213%" height="15" fill="rgb(254,2,54)" fg:x="671495" fg:w="873"/><text x="93.5560%" y="607.50"></text></g><g><title>std::net::udp::UdpSocket::recv (837 samples, 0.12%)</title><rect x="93.3110%" y="581" width="0.1163%" height="15" fill="rgb(250,143,38)" fg:x="671531" fg:w="837"/><text x="93.5610%" y="591.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (837 samples, 0.12%)</title><rect x="93.3110%" y="565" width="0.1163%" height="15" fill="rgb(248,25,0)" fg:x="671531" fg:w="837"/><text x="93.5610%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (837 samples, 0.12%)</title><rect x="93.3110%" y="549" width="0.1163%" height="15" fill="rgb(206,152,27)" fg:x="671531" fg:w="837"/><text x="93.5610%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (837 samples, 0.12%)</title><rect x="93.3110%" y="533" width="0.1163%" height="15" fill="rgb(240,77,30)" fg:x="671531" fg:w="837"/><text x="93.5610%" y="543.50"></text></g><g><title>std::io::append_to_string (983 samples, 0.14%)</title><rect x="93.2933%" y="613" width="0.1366%" height="15" fill="rgb(231,5,3)" fg:x="671404" fg:w="983"/><text x="93.5433%" y="623.50"></text></g><g><title>jsonrpc::simple_http::get_line (1,029 samples, 0.14%)</title><rect x="93.2922%" y="629" width="0.1430%" height="15" fill="rgb(207,226,32)" fg:x="671396" fg:w="1029"/><text x="93.5422%" y="639.50"></text></g><g><title>recv (518 samples, 0.07%)</title><rect x="93.4512%" y="501" width="0.0720%" height="15" fill="rgb(222,207,47)" fg:x="672540" fg:w="518"/><text x="93.7012%" y="511.50"></text></g><g><title>[unknown] (502 samples, 0.07%)</title><rect x="93.4534%" y="485" width="0.0698%" height="15" fill="rgb(229,115,45)" fg:x="672556" fg:w="502"/><text x="93.7034%" y="495.50"></text></g><g><title>[unknown] (491 samples, 0.07%)</title><rect x="93.4549%" y="469" width="0.0682%" height="15" fill="rgb(224,191,6)" fg:x="672567" fg:w="491"/><text x="93.7049%" y="479.50"></text></g><g><title>[unknown] (454 samples, 0.06%)</title><rect x="93.4601%" y="453" width="0.0631%" height="15" fill="rgb(230,227,24)" fg:x="672604" fg:w="454"/><text x="93.7101%" y="463.50"></text></g><g><title>[unknown] (449 samples, 0.06%)</title><rect x="93.4608%" y="437" width="0.0624%" height="15" fill="rgb(228,80,19)" fg:x="672609" fg:w="449"/><text x="93.7108%" y="447.50"></text></g><g><title>[unknown] (431 samples, 0.06%)</title><rect x="93.4633%" y="421" width="0.0599%" height="15" fill="rgb(247,229,0)" fg:x="672627" fg:w="431"/><text x="93.7133%" y="431.50"></text></g><g><title>[unknown] (395 samples, 0.05%)</title><rect x="93.4683%" y="405" width="0.0549%" height="15" fill="rgb(237,194,15)" fg:x="672663" fg:w="395"/><text x="93.7183%" y="415.50"></text></g><g><title>[unknown] (369 samples, 0.05%)</title><rect x="93.4719%" y="389" width="0.0513%" height="15" fill="rgb(219,203,20)" fg:x="672689" fg:w="369"/><text x="93.7219%" y="399.50"></text></g><g><title>[unknown] (346 samples, 0.05%)</title><rect x="93.4751%" y="373" width="0.0481%" height="15" fill="rgb(234,128,8)" fg:x="672712" fg:w="346"/><text x="93.7251%" y="383.50"></text></g><g><title>[unknown] (325 samples, 0.05%)</title><rect x="93.4780%" y="357" width="0.0452%" height="15" fill="rgb(248,202,8)" fg:x="672733" fg:w="325"/><text x="93.7280%" y="367.50"></text></g><g><title>[unknown] (292 samples, 0.04%)</title><rect x="93.4826%" y="341" width="0.0406%" height="15" fill="rgb(206,104,37)" fg:x="672766" fg:w="292"/><text x="93.7326%" y="351.50"></text></g><g><title>[unknown] (261 samples, 0.04%)</title><rect x="93.4869%" y="325" width="0.0363%" height="15" fill="rgb(223,8,27)" fg:x="672797" fg:w="261"/><text x="93.7369%" y="335.50"></text></g><g><title>[unknown] (248 samples, 0.03%)</title><rect x="93.4887%" y="309" width="0.0345%" height="15" fill="rgb(216,217,28)" fg:x="672810" fg:w="248"/><text x="93.7387%" y="319.50"></text></g><g><title>[unknown] (233 samples, 0.03%)</title><rect x="93.4908%" y="293" width="0.0324%" height="15" fill="rgb(249,199,1)" fg:x="672825" fg:w="233"/><text x="93.7408%" y="303.50"></text></g><g><title>[unknown] (202 samples, 0.03%)</title><rect x="93.4951%" y="277" width="0.0281%" height="15" fill="rgb(240,85,17)" fg:x="672856" fg:w="202"/><text x="93.7451%" y="287.50"></text></g><g><title>[unknown] (150 samples, 0.02%)</title><rect x="93.5023%" y="261" width="0.0208%" height="15" fill="rgb(206,108,45)" fg:x="672908" fg:w="150"/><text x="93.7523%" y="271.50"></text></g><g><title>[unknown] (109 samples, 0.02%)</title><rect x="93.5080%" y="245" width="0.0151%" height="15" fill="rgb(245,210,41)" fg:x="672949" fg:w="109"/><text x="93.7580%" y="255.50"></text></g><g><title>std::io::default_read_buf (533 samples, 0.07%)</title><rect x="93.4496%" y="581" width="0.0741%" height="15" fill="rgb(206,13,37)" fg:x="672529" fg:w="533"/><text x="93.6996%" y="591.50"></text></g><g><title>std::net::udp::UdpSocket::recv (526 samples, 0.07%)</title><rect x="93.4506%" y="565" width="0.0731%" height="15" fill="rgb(250,61,18)" fg:x="672536" fg:w="526"/><text x="93.7006%" y="575.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (522 samples, 0.07%)</title><rect x="93.4512%" y="549" width="0.0725%" height="15" fill="rgb(235,172,48)" fg:x="672540" fg:w="522"/><text x="93.7012%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::read (522 samples, 0.07%)</title><rect x="93.4512%" y="533" width="0.0725%" height="15" fill="rgb(249,201,17)" fg:x="672540" fg:w="522"/><text x="93.7012%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (522 samples, 0.07%)</title><rect x="93.4512%" y="517" width="0.0725%" height="15" fill="rgb(219,208,6)" fg:x="672540" fg:w="522"/><text x="93.7012%" y="527.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (595 samples, 0.08%)</title><rect x="93.4435%" y="613" width="0.0827%" height="15" fill="rgb(248,31,23)" fg:x="672485" fg:w="595"/><text x="93.6935%" y="623.50"></text></g><g><title>std::io::append_to_string (590 samples, 0.08%)</title><rect x="93.4442%" y="597" width="0.0820%" height="15" fill="rgb(245,15,42)" fg:x="672490" fg:w="590"/><text x="93.6942%" y="607.50"></text></g><g><title>jsonrpc::simple_http::get_lines (668 samples, 0.09%)</title><rect x="93.4352%" y="629" width="0.0928%" height="15" fill="rgb(222,217,39)" fg:x="672425" fg:w="668"/><text x="93.6852%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (90 samples, 0.01%)</title><rect x="93.5412%" y="597" width="0.0125%" height="15" fill="rgb(210,219,27)" fg:x="673188" fg:w="90"/><text x="93.7912%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (185 samples, 0.03%)</title><rect x="93.5308%" y="613" width="0.0257%" height="15" fill="rgb(252,166,36)" fg:x="673113" fg:w="185"/><text x="93.7808%" y="623.50"></text></g><g><title>serde_json::de::from_str (201 samples, 0.03%)</title><rect x="93.5301%" y="629" width="0.0279%" height="15" fill="rgb(245,132,34)" fg:x="673108" fg:w="201"/><text x="93.7801%" y="639.50"></text></g><g><title>__send (8,997 samples, 1.25%)</title><rect x="93.5726%" y="581" width="1.2502%" height="15" fill="rgb(236,54,3)" fg:x="673414" fg:w="8997"/><text x="93.8226%" y="591.50"></text></g><g><title>[unknown] (8,808 samples, 1.22%)</title><rect x="93.5989%" y="565" width="1.2239%" height="15" fill="rgb(241,173,43)" fg:x="673603" fg:w="8808"/><text x="93.8489%" y="575.50"></text></g><g><title>[unknown] (8,479 samples, 1.18%)</title><rect x="93.6446%" y="549" width="1.1782%" height="15" fill="rgb(215,190,9)" fg:x="673932" fg:w="8479"/><text x="93.8946%" y="559.50"></text></g><g><title>[unknown] (8,054 samples, 1.12%)</title><rect x="93.7036%" y="533" width="1.1191%" height="15" fill="rgb(242,101,16)" fg:x="674357" fg:w="8054"/><text x="93.9536%" y="543.50"></text></g><g><title>[unknown] (7,962 samples, 1.11%)</title><rect x="93.7164%" y="517" width="1.1063%" height="15" fill="rgb(223,190,21)" fg:x="674449" fg:w="7962"/><text x="93.9664%" y="527.50"></text></g><g><title>[unknown] (7,764 samples, 1.08%)</title><rect x="93.7439%" y="501" width="1.0788%" height="15" fill="rgb(215,228,25)" fg:x="674647" fg:w="7764"/><text x="93.9939%" y="511.50"></text></g><g><title>[unknown] (7,664 samples, 1.06%)</title><rect x="93.7578%" y="485" width="1.0649%" height="15" fill="rgb(225,36,22)" fg:x="674747" fg:w="7664"/><text x="94.0078%" y="495.50"></text></g><g><title>[unknown] (7,495 samples, 1.04%)</title><rect x="93.7813%" y="469" width="1.0414%" height="15" fill="rgb(251,106,46)" fg:x="674916" fg:w="7495"/><text x="94.0313%" y="479.50"></text></g><g><title>[unknown] (7,285 samples, 1.01%)</title><rect x="93.8105%" y="453" width="1.0123%" height="15" fill="rgb(208,90,1)" fg:x="675126" fg:w="7285"/><text x="94.0605%" y="463.50"></text></g><g><title>[unknown] (7,041 samples, 0.98%)</title><rect x="93.8444%" y="437" width="0.9784%" height="15" fill="rgb(243,10,4)" fg:x="675370" fg:w="7041"/><text x="94.0944%" y="447.50"></text></g><g><title>[unknown] (6,319 samples, 0.88%)</title><rect x="93.9447%" y="421" width="0.8780%" height="15" fill="rgb(212,137,27)" fg:x="676092" fg:w="6319"/><text x="94.1947%" y="431.50"></text></g><g><title>[unknown] (5,763 samples, 0.80%)</title><rect x="94.0220%" y="405" width="0.8008%" height="15" fill="rgb(231,220,49)" fg:x="676648" fg:w="5763"/><text x="94.2720%" y="415.50"></text></g><g><title>[unknown] (4,862 samples, 0.68%)</title><rect x="94.1472%" y="389" width="0.6756%" height="15" fill="rgb(237,96,20)" fg:x="677549" fg:w="4862"/><text x="94.3972%" y="399.50"></text></g><g><title>[unknown] (4,291 samples, 0.60%)</title><rect x="94.2265%" y="373" width="0.5962%" height="15" fill="rgb(239,229,30)" fg:x="678120" fg:w="4291"/><text x="94.4765%" y="383.50"></text></g><g><title>[unknown] (3,964 samples, 0.55%)</title><rect x="94.2720%" y="357" width="0.5508%" height="15" fill="rgb(219,65,33)" fg:x="678447" fg:w="3964"/><text x="94.5220%" y="367.50"></text></g><g><title>[unknown] (3,679 samples, 0.51%)</title><rect x="94.3116%" y="341" width="0.5112%" height="15" fill="rgb(243,134,7)" fg:x="678732" fg:w="3679"/><text x="94.5616%" y="351.50"></text></g><g><title>[unknown] (3,431 samples, 0.48%)</title><rect x="94.3460%" y="325" width="0.4767%" height="15" fill="rgb(216,177,54)" fg:x="678980" fg:w="3431"/><text x="94.5960%" y="335.50"></text></g><g><title>[unknown] (3,107 samples, 0.43%)</title><rect x="94.3910%" y="309" width="0.4317%" height="15" fill="rgb(211,160,20)" fg:x="679304" fg:w="3107"/><text x="94.6410%" y="319.50"></text></g><g><title>[unknown] (3,029 samples, 0.42%)</title><rect x="94.4019%" y="293" width="0.4209%" height="15" fill="rgb(239,85,39)" fg:x="679382" fg:w="3029"/><text x="94.6519%" y="303.50"></text></g><g><title>[unknown] (2,897 samples, 0.40%)</title><rect x="94.4202%" y="277" width="0.4025%" height="15" fill="rgb(232,125,22)" fg:x="679514" fg:w="2897"/><text x="94.6702%" y="287.50"></text></g><g><title>[unknown] (2,717 samples, 0.38%)</title><rect x="94.4452%" y="261" width="0.3775%" height="15" fill="rgb(244,57,34)" fg:x="679694" fg:w="2717"/><text x="94.6952%" y="271.50"></text></g><g><title>[unknown] (2,540 samples, 0.35%)</title><rect x="94.4698%" y="245" width="0.3529%" height="15" fill="rgb(214,203,32)" fg:x="679871" fg:w="2540"/><text x="94.7198%" y="255.50"></text></g><g><title>[unknown] (2,362 samples, 0.33%)</title><rect x="94.4946%" y="229" width="0.3282%" height="15" fill="rgb(207,58,43)" fg:x="680049" fg:w="2362"/><text x="94.7446%" y="239.50"></text></g><g><title>[unknown] (2,135 samples, 0.30%)</title><rect x="94.5261%" y="213" width="0.2967%" height="15" fill="rgb(215,193,15)" fg:x="680276" fg:w="2135"/><text x="94.7761%" y="223.50"></text></g><g><title>[unknown] (1,870 samples, 0.26%)</title><rect x="94.5629%" y="197" width="0.2598%" height="15" fill="rgb(232,15,44)" fg:x="680541" fg:w="1870"/><text x="94.8129%" y="207.50"></text></g><g><title>[unknown] (1,661 samples, 0.23%)</title><rect x="94.5920%" y="181" width="0.2308%" height="15" fill="rgb(212,3,48)" fg:x="680750" fg:w="1661"/><text x="94.8420%" y="191.50"></text></g><g><title>[unknown] (1,359 samples, 0.19%)</title><rect x="94.6339%" y="165" width="0.1888%" height="15" fill="rgb(218,128,7)" fg:x="681052" fg:w="1359"/><text x="94.8839%" y="175.50"></text></g><g><title>[unknown] (1,134 samples, 0.16%)</title><rect x="94.6652%" y="149" width="0.1576%" height="15" fill="rgb(226,216,39)" fg:x="681277" fg:w="1134"/><text x="94.9152%" y="159.50"></text></g><g><title>[unknown] (771 samples, 0.11%)</title><rect x="94.7156%" y="133" width="0.1071%" height="15" fill="rgb(243,47,51)" fg:x="681640" fg:w="771"/><text x="94.9656%" y="143.50"></text></g><g><title>[unknown] (482 samples, 0.07%)</title><rect x="94.7558%" y="117" width="0.0670%" height="15" fill="rgb(241,183,40)" fg:x="681929" fg:w="482"/><text x="95.0058%" y="127.50"></text></g><g><title>[unknown] (353 samples, 0.05%)</title><rect x="94.7737%" y="101" width="0.0491%" height="15" fill="rgb(231,217,32)" fg:x="682058" fg:w="353"/><text x="95.0237%" y="111.50"></text></g><g><title>[unknown] (288 samples, 0.04%)</title><rect x="94.7827%" y="85" width="0.0400%" height="15" fill="rgb(229,61,38)" fg:x="682123" fg:w="288"/><text x="95.0327%" y="95.50"></text></g><g><title>[unknown] (234 samples, 0.03%)</title><rect x="94.7903%" y="69" width="0.0325%" height="15" fill="rgb(225,210,5)" fg:x="682177" fg:w="234"/><text x="95.0403%" y="79.50"></text></g><g><title>[unknown] (174 samples, 0.02%)</title><rect x="94.7986%" y="53" width="0.0242%" height="15" fill="rgb(231,79,45)" fg:x="682237" fg:w="174"/><text x="95.0486%" y="63.50"></text></g><g><title>[unknown] (101 samples, 0.01%)</title><rect x="94.8087%" y="37" width="0.0140%" height="15" fill="rgb(224,100,7)" fg:x="682310" fg:w="101"/><text x="95.0587%" y="47.50"></text></g><g><title>std::io::Write::write_all (9,172 samples, 1.27%)</title><rect x="93.5580%" y="629" width="1.2745%" height="15" fill="rgb(241,198,18)" fg:x="673309" fg:w="9172"/><text x="93.8080%" y="639.50"></text></g><g><title>std::net::udp::UdpSocket::send (9,098 samples, 1.26%)</title><rect x="93.5683%" y="613" width="1.2642%" height="15" fill="rgb(252,97,53)" fg:x="673383" fg:w="9098"/><text x="93.8183%" y="623.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (9,070 samples, 1.26%)</title><rect x="93.5722%" y="597" width="1.2603%" height="15" fill="rgb(220,88,7)" fg:x="673411" fg:w="9070"/><text x="93.8222%" y="607.50"></text></g><g><title>[libc.so.6] (311 samples, 0.04%)</title><rect x="94.8565%" y="581" width="0.0432%" height="15" fill="rgb(213,176,14)" fg:x="682654" fg:w="311"/><text x="95.1065%" y="591.50"></text></g><g><title>[libc.so.6] (468 samples, 0.07%)</title><rect x="94.8349%" y="597" width="0.0650%" height="15" fill="rgb(246,73,7)" fg:x="682498" fg:w="468"/><text x="95.0849%" y="607.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (488 samples, 0.07%)</title><rect x="94.8325%" y="629" width="0.0678%" height="15" fill="rgb(245,64,36)" fg:x="682481" fg:w="488"/><text x="95.0825%" y="639.50"></text></g><g><title>malloc (482 samples, 0.07%)</title><rect x="94.8333%" y="613" width="0.0670%" height="15" fill="rgb(245,80,10)" fg:x="682487" fg:w="482"/><text x="95.0833%" y="623.50"></text></g><g><title>__poll (207 samples, 0.03%)</title><rect x="94.9025%" y="581" width="0.0288%" height="15" fill="rgb(232,107,50)" fg:x="682985" fg:w="207"/><text x="95.1525%" y="591.50"></text></g><g><title>[unknown] (188 samples, 0.03%)</title><rect x="94.9052%" y="565" width="0.0261%" height="15" fill="rgb(253,3,0)" fg:x="683004" fg:w="188"/><text x="95.1552%" y="575.50"></text></g><g><title>[unknown] (171 samples, 0.02%)</title><rect x="94.9075%" y="549" width="0.0238%" height="15" fill="rgb(212,99,53)" fg:x="683021" fg:w="171"/><text x="95.1575%" y="559.50"></text></g><g><title>[unknown] (140 samples, 0.02%)</title><rect x="94.9118%" y="533" width="0.0195%" height="15" fill="rgb(249,111,54)" fg:x="683052" fg:w="140"/><text x="95.1618%" y="543.50"></text></g><g><title>[unknown] (133 samples, 0.02%)</title><rect x="94.9128%" y="517" width="0.0185%" height="15" fill="rgb(249,55,30)" fg:x="683059" fg:w="133"/><text x="95.1628%" y="527.50"></text></g><g><title>[unknown] (89 samples, 0.01%)</title><rect x="94.9189%" y="501" width="0.0124%" height="15" fill="rgb(237,47,42)" fg:x="683103" fg:w="89"/><text x="95.1689%" y="511.50"></text></g><g><title>connect (3,313 samples, 0.46%)</title><rect x="94.9313%" y="581" width="0.4603%" height="15" fill="rgb(211,20,18)" fg:x="683192" fg:w="3313"/><text x="95.1813%" y="591.50"></text></g><g><title>[unknown] (3,272 samples, 0.45%)</title><rect x="94.9370%" y="565" width="0.4547%" height="15" fill="rgb(231,203,46)" fg:x="683233" fg:w="3272"/><text x="95.1870%" y="575.50"></text></g><g><title>[unknown] (3,248 samples, 0.45%)</title><rect x="94.9403%" y="549" width="0.4513%" height="15" fill="rgb(237,142,3)" fg:x="683257" fg:w="3248"/><text x="95.1903%" y="559.50"></text></g><g><title>[unknown] (3,220 samples, 0.45%)</title><rect x="94.9442%" y="533" width="0.4474%" height="15" fill="rgb(241,107,1)" fg:x="683285" fg:w="3220"/><text x="95.1942%" y="543.50"></text></g><g><title>[unknown] (3,215 samples, 0.45%)</title><rect x="94.9449%" y="517" width="0.4467%" height="15" fill="rgb(229,83,13)" fg:x="683290" fg:w="3215"/><text x="95.1949%" y="527.50"></text></g><g><title>[unknown] (3,200 samples, 0.44%)</title><rect x="94.9470%" y="501" width="0.4446%" height="15" fill="rgb(241,91,40)" fg:x="683305" fg:w="3200"/><text x="95.1970%" y="511.50"></text></g><g><title>[unknown] (3,165 samples, 0.44%)</title><rect x="94.9519%" y="485" width="0.4398%" height="15" fill="rgb(225,3,45)" fg:x="683340" fg:w="3165"/><text x="95.2019%" y="495.50"></text></g><g><title>[unknown] (3,129 samples, 0.43%)</title><rect x="94.9569%" y="469" width="0.4348%" height="15" fill="rgb(244,223,14)" fg:x="683376" fg:w="3129"/><text x="95.2069%" y="479.50"></text></g><g><title>[unknown] (3,085 samples, 0.43%)</title><rect x="94.9630%" y="453" width="0.4287%" height="15" fill="rgb(224,124,37)" fg:x="683420" fg:w="3085"/><text x="95.2130%" y="463.50"></text></g><g><title>[unknown] (2,902 samples, 0.40%)</title><rect x="94.9884%" y="437" width="0.4032%" height="15" fill="rgb(251,171,30)" fg:x="683603" fg:w="2902"/><text x="95.2384%" y="447.50"></text></g><g><title>[unknown] (2,664 samples, 0.37%)</title><rect x="95.0215%" y="421" width="0.3702%" height="15" fill="rgb(236,46,54)" fg:x="683841" fg:w="2664"/><text x="95.2715%" y="431.50"></text></g><g><title>[unknown] (2,411 samples, 0.34%)</title><rect x="95.0566%" y="405" width="0.3350%" height="15" fill="rgb(245,213,5)" fg:x="684094" fg:w="2411"/><text x="95.3066%" y="415.50"></text></g><g><title>[unknown] (2,113 samples, 0.29%)</title><rect x="95.0980%" y="389" width="0.2936%" height="15" fill="rgb(230,144,27)" fg:x="684392" fg:w="2113"/><text x="95.3480%" y="399.50"></text></g><g><title>[unknown] (1,955 samples, 0.27%)</title><rect x="95.1200%" y="373" width="0.2717%" height="15" fill="rgb(220,86,6)" fg:x="684550" fg:w="1955"/><text x="95.3700%" y="383.50"></text></g><g><title>[unknown] (1,777 samples, 0.25%)</title><rect x="95.1447%" y="357" width="0.2469%" height="15" fill="rgb(240,20,13)" fg:x="684728" fg:w="1777"/><text x="95.3947%" y="367.50"></text></g><g><title>[unknown] (1,650 samples, 0.23%)</title><rect x="95.1624%" y="341" width="0.2293%" height="15" fill="rgb(217,89,34)" fg:x="684855" fg:w="1650"/><text x="95.4124%" y="351.50"></text></g><g><title>[unknown] (1,570 samples, 0.22%)</title><rect x="95.1735%" y="325" width="0.2182%" height="15" fill="rgb(229,13,5)" fg:x="684935" fg:w="1570"/><text x="95.4235%" y="335.50"></text></g><g><title>[unknown] (1,535 samples, 0.21%)</title><rect x="95.1783%" y="309" width="0.2133%" height="15" fill="rgb(244,67,35)" fg:x="684970" fg:w="1535"/><text x="95.4283%" y="319.50"></text></g><g><title>[unknown] (1,501 samples, 0.21%)</title><rect x="95.1831%" y="293" width="0.2086%" height="15" fill="rgb(221,40,2)" fg:x="685004" fg:w="1501"/><text x="95.4331%" y="303.50"></text></g><g><title>[unknown] (1,462 samples, 0.20%)</title><rect x="95.1885%" y="277" width="0.2031%" height="15" fill="rgb(237,157,21)" fg:x="685043" fg:w="1462"/><text x="95.4385%" y="287.50"></text></g><g><title>[unknown] (1,401 samples, 0.19%)</title><rect x="95.1970%" y="261" width="0.1947%" height="15" fill="rgb(222,94,11)" fg:x="685104" fg:w="1401"/><text x="95.4470%" y="271.50"></text></g><g><title>[unknown] (1,354 samples, 0.19%)</title><rect x="95.2035%" y="245" width="0.1881%" height="15" fill="rgb(249,113,6)" fg:x="685151" fg:w="1354"/><text x="95.4535%" y="255.50"></text></g><g><title>[unknown] (1,309 samples, 0.18%)</title><rect x="95.2097%" y="229" width="0.1819%" height="15" fill="rgb(238,137,36)" fg:x="685196" fg:w="1309"/><text x="95.4597%" y="239.50"></text></g><g><title>[unknown] (1,174 samples, 0.16%)</title><rect x="95.2285%" y="213" width="0.1631%" height="15" fill="rgb(210,102,26)" fg:x="685331" fg:w="1174"/><text x="95.4785%" y="223.50"></text></g><g><title>[unknown] (1,015 samples, 0.14%)</title><rect x="95.2506%" y="197" width="0.1410%" height="15" fill="rgb(218,30,30)" fg:x="685490" fg:w="1015"/><text x="95.5006%" y="207.50"></text></g><g><title>[unknown] (889 samples, 0.12%)</title><rect x="95.2681%" y="181" width="0.1235%" height="15" fill="rgb(214,67,26)" fg:x="685616" fg:w="889"/><text x="95.5181%" y="191.50"></text></g><g><title>[unknown] (693 samples, 0.10%)</title><rect x="95.2953%" y="165" width="0.0963%" height="15" fill="rgb(251,9,53)" fg:x="685812" fg:w="693"/><text x="95.5453%" y="175.50"></text></g><g><title>[unknown] (504 samples, 0.07%)</title><rect x="95.3216%" y="149" width="0.0700%" height="15" fill="rgb(228,204,25)" fg:x="686001" fg:w="504"/><text x="95.5716%" y="159.50"></text></g><g><title>[unknown] (352 samples, 0.05%)</title><rect x="95.3427%" y="133" width="0.0489%" height="15" fill="rgb(207,153,8)" fg:x="686153" fg:w="352"/><text x="95.5927%" y="143.50"></text></g><g><title>[unknown] (245 samples, 0.03%)</title><rect x="95.3576%" y="117" width="0.0340%" height="15" fill="rgb(242,9,16)" fg:x="686260" fg:w="245"/><text x="95.6076%" y="127.50"></text></g><g><title>[unknown] (157 samples, 0.02%)</title><rect x="95.3698%" y="101" width="0.0218%" height="15" fill="rgb(217,211,10)" fg:x="686348" fg:w="157"/><text x="95.6198%" y="111.50"></text></g><g><title>[unknown] (120 samples, 0.02%)</title><rect x="95.3750%" y="85" width="0.0167%" height="15" fill="rgb(219,228,52)" fg:x="686385" fg:w="120"/><text x="95.6250%" y="95.50"></text></g><g><title>[unknown] (84 samples, 0.01%)</title><rect x="95.3800%" y="69" width="0.0117%" height="15" fill="rgb(231,92,29)" fg:x="686421" fg:w="84"/><text x="95.6300%" y="79.50"></text></g><g><title>ioctl (177 samples, 0.02%)</title><rect x="95.4016%" y="565" width="0.0246%" height="15" fill="rgb(232,8,23)" fg:x="686577" fg:w="177"/><text x="95.6516%" y="575.50"></text></g><g><title>[unknown] (141 samples, 0.02%)</title><rect x="95.4066%" y="549" width="0.0196%" height="15" fill="rgb(216,211,34)" fg:x="686613" fg:w="141"/><text x="95.6566%" y="559.50"></text></g><g><title>[unknown] (124 samples, 0.02%)</title><rect x="95.4090%" y="533" width="0.0172%" height="15" fill="rgb(236,151,0)" fg:x="686630" fg:w="124"/><text x="95.6590%" y="543.50"></text></g><g><title>[unknown] (97 samples, 0.01%)</title><rect x="95.4128%" y="517" width="0.0135%" height="15" fill="rgb(209,168,3)" fg:x="686657" fg:w="97"/><text x="95.6628%" y="527.50"></text></g><g><title>[unknown] (80 samples, 0.01%)</title><rect x="95.4151%" y="501" width="0.0111%" height="15" fill="rgb(208,129,28)" fg:x="686674" fg:w="80"/><text x="95.6651%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::set_nonblocking (202 samples, 0.03%)</title><rect x="95.3983%" y="581" width="0.0281%" height="15" fill="rgb(229,78,22)" fg:x="686553" fg:w="202"/><text x="95.6483%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::connect_timeout (3,805 samples, 0.53%)</title><rect x="94.9017%" y="597" width="0.5287%" height="15" fill="rgb(228,187,13)" fg:x="682979" fg:w="3805"/><text x="95.1517%" y="607.50"></text></g><g><title>std::net::tcp::TcpStream::connect_timeout (4,697 samples, 0.65%)</title><rect x="94.9003%" y="629" width="0.6527%" height="15" fill="rgb(240,119,24)" fg:x="682969" fg:w="4697"/><text x="95.1503%" y="639.50"></text></g><g><title>std::sys_common::net::TcpStream::connect_timeout (4,688 samples, 0.65%)</title><rect x="94.9016%" y="613" width="0.6514%" height="15" fill="rgb(209,194,42)" fg:x="682978" fg:w="4688"/><text x="95.1516%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::new (882 samples, 0.12%)</title><rect x="95.4304%" y="597" width="0.1226%" height="15" fill="rgb(247,200,46)" fg:x="686784" fg:w="882"/><text x="95.6804%" y="607.50"></text></g><g><title>__socket (875 samples, 0.12%)</title><rect x="95.4314%" y="581" width="0.1216%" height="15" fill="rgb(218,76,16)" fg:x="686791" fg:w="875"/><text x="95.6814%" y="591.50"></text></g><g><title>[unknown] (857 samples, 0.12%)</title><rect x="95.4339%" y="565" width="0.1191%" height="15" fill="rgb(225,21,48)" fg:x="686809" fg:w="857"/><text x="95.6839%" y="575.50"></text></g><g><title>[unknown] (844 samples, 0.12%)</title><rect x="95.4357%" y="549" width="0.1173%" height="15" fill="rgb(239,223,50)" fg:x="686822" fg:w="844"/><text x="95.6857%" y="559.50"></text></g><g><title>[unknown] (830 samples, 0.12%)</title><rect x="95.4376%" y="533" width="0.1153%" height="15" fill="rgb(244,45,21)" fg:x="686836" fg:w="830"/><text x="95.6876%" y="543.50"></text></g><g><title>[unknown] (821 samples, 0.11%)</title><rect x="95.4389%" y="517" width="0.1141%" height="15" fill="rgb(232,33,43)" fg:x="686845" fg:w="821"/><text x="95.6889%" y="527.50"></text></g><g><title>[unknown] (799 samples, 0.11%)</title><rect x="95.4419%" y="501" width="0.1110%" height="15" fill="rgb(209,8,3)" fg:x="686867" fg:w="799"/><text x="95.6919%" y="511.50"></text></g><g><title>[unknown] (766 samples, 0.11%)</title><rect x="95.4465%" y="485" width="0.1064%" height="15" fill="rgb(214,25,53)" fg:x="686900" fg:w="766"/><text x="95.6965%" y="495.50"></text></g><g><title>[unknown] (697 samples, 0.10%)</title><rect x="95.4561%" y="469" width="0.0968%" height="15" fill="rgb(254,186,54)" fg:x="686969" fg:w="697"/><text x="95.7061%" y="479.50"></text></g><g><title>[unknown] (643 samples, 0.09%)</title><rect x="95.4636%" y="453" width="0.0893%" height="15" fill="rgb(208,174,49)" fg:x="687023" fg:w="643"/><text x="95.7136%" y="463.50"></text></g><g><title>[unknown] (559 samples, 0.08%)</title><rect x="95.4753%" y="437" width="0.0777%" height="15" fill="rgb(233,191,51)" fg:x="687107" fg:w="559"/><text x="95.7253%" y="447.50"></text></g><g><title>[unknown] (431 samples, 0.06%)</title><rect x="95.4931%" y="421" width="0.0599%" height="15" fill="rgb(222,134,10)" fg:x="687235" fg:w="431"/><text x="95.7431%" y="431.50"></text></g><g><title>[unknown] (306 samples, 0.04%)</title><rect x="95.5104%" y="405" width="0.0425%" height="15" fill="rgb(230,226,20)" fg:x="687360" fg:w="306"/><text x="95.7604%" y="415.50"></text></g><g><title>[unknown] (139 samples, 0.02%)</title><rect x="95.5336%" y="389" width="0.0193%" height="15" fill="rgb(251,111,25)" fg:x="687527" fg:w="139"/><text x="95.7836%" y="399.50"></text></g><g><title>setsockopt (146 samples, 0.02%)</title><rect x="95.5539%" y="581" width="0.0203%" height="15" fill="rgb(224,40,46)" fg:x="687673" fg:w="146"/><text x="95.8039%" y="591.50"></text></g><g><title>[unknown] (134 samples, 0.02%)</title><rect x="95.5556%" y="565" width="0.0186%" height="15" fill="rgb(236,108,47)" fg:x="687685" fg:w="134"/><text x="95.8056%" y="575.50"></text></g><g><title>[unknown] (122 samples, 0.02%)</title><rect x="95.5573%" y="549" width="0.0170%" height="15" fill="rgb(234,93,0)" fg:x="687697" fg:w="122"/><text x="95.8073%" y="559.50"></text></g><g><title>[unknown] (109 samples, 0.02%)</title><rect x="95.5591%" y="533" width="0.0151%" height="15" fill="rgb(224,213,32)" fg:x="687710" fg:w="109"/><text x="95.8091%" y="543.50"></text></g><g><title>[unknown] (99 samples, 0.01%)</title><rect x="95.5605%" y="517" width="0.0138%" height="15" fill="rgb(251,11,48)" fg:x="687720" fg:w="99"/><text x="95.8105%" y="527.50"></text></g><g><title>[unknown] (81 samples, 0.01%)</title><rect x="95.5630%" y="501" width="0.0113%" height="15" fill="rgb(236,173,5)" fg:x="687738" fg:w="81"/><text x="95.8130%" y="511.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::set_read_timeout (158 samples, 0.02%)</title><rect x="95.5530%" y="629" width="0.0220%" height="15" fill="rgb(230,95,12)" fg:x="687666" fg:w="158"/><text x="95.8030%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (156 samples, 0.02%)</title><rect x="95.5532%" y="613" width="0.0217%" height="15" fill="rgb(232,209,1)" fg:x="687668" fg:w="156"/><text x="95.8032%" y="623.50"></text></g><g><title>std::sys_common::net::setsockopt (151 samples, 0.02%)</title><rect x="95.5539%" y="597" width="0.0210%" height="15" fill="rgb(232,6,1)" fg:x="687673" fg:w="151"/><text x="95.8039%" y="607.50"></text></g><g><title>setsockopt (95 samples, 0.01%)</title><rect x="95.5751%" y="581" width="0.0132%" height="15" fill="rgb(210,224,50)" fg:x="687825" fg:w="95"/><text x="95.8251%" y="591.50"></text></g><g><title>[unknown] (90 samples, 0.01%)</title><rect x="95.5757%" y="565" width="0.0125%" height="15" fill="rgb(228,127,35)" fg:x="687830" fg:w="90"/><text x="95.8257%" y="575.50"></text></g><g><title>[unknown] (72 samples, 0.01%)</title><rect x="95.5783%" y="549" width="0.0100%" height="15" fill="rgb(245,102,45)" fg:x="687848" fg:w="72"/><text x="95.8283%" y="559.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::set_write_timeout (97 samples, 0.01%)</title><rect x="95.5749%" y="629" width="0.0135%" height="15" fill="rgb(214,1,49)" fg:x="687824" fg:w="97"/><text x="95.8249%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (96 samples, 0.01%)</title><rect x="95.5751%" y="613" width="0.0133%" height="15" fill="rgb(226,163,40)" fg:x="687825" fg:w="96"/><text x="95.8251%" y="623.50"></text></g><g><title>std::sys_common::net::setsockopt (96 samples, 0.01%)</title><rect x="95.5751%" y="597" width="0.0133%" height="15" fill="rgb(239,212,28)" fg:x="687825" fg:w="96"/><text x="95.8251%" y="607.50"></text></g><g><title>jsonrpc::client::Client::send_request (18,865 samples, 2.62%)</title><rect x="92.9705%" y="661" width="2.6213%" height="15" fill="rgb(220,20,13)" fg:x="669081" fg:w="18865"/><text x="93.2205%" y="671.50">js..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (18,861 samples, 2.62%)</title><rect x="92.9711%" y="645" width="2.6208%" height="15" fill="rgb(210,164,35)" fg:x="669085" fg:w="18861"/><text x="93.2211%" y="655.50">&lt;j..</text></g><g><title>&lt;btcd_rpc::client::BTCDClient as btcd_rpc::client::BtcdRpc&gt;::call (19,106 samples, 2.65%)</title><rect x="92.9465%" y="677" width="2.6548%" height="15" fill="rgb(248,109,41)" fg:x="668908" fg:w="19106"/><text x="93.1965%" y="687.50">&lt;b..</text></g><g><title>btcd_rpc::client::BtcdRpc::getblockhash (19,127 samples, 2.66%)</title><rect x="92.9448%" y="693" width="2.6577%" height="15" fill="rgb(238,23,50)" fg:x="668896" fg:w="19127"/><text x="93.1948%" y="703.50">bt..</text></g><g><title>serde_json::ser::format_escaped_str (91 samples, 0.01%)</title><rect x="95.6158%" y="613" width="0.0126%" height="15" fill="rgb(211,48,49)" fg:x="688118" fg:w="91"/><text x="95.8658%" y="623.50"></text></g><g><title>std::io::Write::write_all (75 samples, 0.01%)</title><rect x="95.6180%" y="597" width="0.0104%" height="15" fill="rgb(223,36,21)" fg:x="688134" fg:w="75"/><text x="95.8680%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (117 samples, 0.02%)</title><rect x="95.6129%" y="629" width="0.0163%" height="15" fill="rgb(207,123,46)" fg:x="688097" fg:w="117"/><text x="95.8629%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (166 samples, 0.02%)</title><rect x="95.6092%" y="661" width="0.0231%" height="15" fill="rgb(240,218,32)" fg:x="688071" fg:w="166"/><text x="95.8592%" y="671.50"></text></g><g><title>serde_json::raw::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;serde_json::raw::RawValue&gt;&gt;::deserialize (145 samples, 0.02%)</title><rect x="95.6122%" y="645" width="0.0201%" height="15" fill="rgb(252,5,43)" fg:x="688092" fg:w="145"/><text x="95.8622%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (171 samples, 0.02%)</title><rect x="95.6087%" y="677" width="0.0238%" height="15" fill="rgb(252,84,19)" fg:x="688067" fg:w="171"/><text x="95.8587%" y="687.50"></text></g><g><title>__close (1,955 samples, 0.27%)</title><rect x="95.6551%" y="645" width="0.2717%" height="15" fill="rgb(243,152,39)" fg:x="688401" fg:w="1955"/><text x="95.9051%" y="655.50"></text></g><g><title>[unknown] (1,938 samples, 0.27%)</title><rect x="95.6575%" y="629" width="0.2693%" height="15" fill="rgb(234,160,15)" fg:x="688418" fg:w="1938"/><text x="95.9075%" y="639.50"></text></g><g><title>[unknown] (1,918 samples, 0.27%)</title><rect x="95.6602%" y="613" width="0.2665%" height="15" fill="rgb(237,34,20)" fg:x="688438" fg:w="1918"/><text x="95.9102%" y="623.50"></text></g><g><title>[unknown] (1,890 samples, 0.26%)</title><rect x="95.6641%" y="597" width="0.2626%" height="15" fill="rgb(229,97,13)" fg:x="688466" fg:w="1890"/><text x="95.9141%" y="607.50"></text></g><g><title>[unknown] (1,884 samples, 0.26%)</title><rect x="95.6650%" y="581" width="0.2618%" height="15" fill="rgb(234,71,50)" fg:x="688472" fg:w="1884"/><text x="95.9150%" y="591.50"></text></g><g><title>[unknown] (1,869 samples, 0.26%)</title><rect x="95.6670%" y="565" width="0.2597%" height="15" fill="rgb(253,155,4)" fg:x="688487" fg:w="1869"/><text x="95.9170%" y="575.50"></text></g><g><title>[unknown] (1,824 samples, 0.25%)</title><rect x="95.6733%" y="549" width="0.2534%" height="15" fill="rgb(222,185,37)" fg:x="688532" fg:w="1824"/><text x="95.9233%" y="559.50"></text></g><g><title>[unknown] (1,793 samples, 0.25%)</title><rect x="95.6776%" y="533" width="0.2491%" height="15" fill="rgb(251,177,13)" fg:x="688563" fg:w="1793"/><text x="95.9276%" y="543.50"></text></g><g><title>[unknown] (1,746 samples, 0.24%)</title><rect x="95.6841%" y="517" width="0.2426%" height="15" fill="rgb(250,179,40)" fg:x="688610" fg:w="1746"/><text x="95.9341%" y="527.50"></text></g><g><title>[unknown] (1,676 samples, 0.23%)</title><rect x="95.6939%" y="501" width="0.2329%" height="15" fill="rgb(242,44,2)" fg:x="688680" fg:w="1676"/><text x="95.9439%" y="511.50"></text></g><g><title>[unknown] (1,615 samples, 0.22%)</title><rect x="95.7023%" y="485" width="0.2244%" height="15" fill="rgb(216,177,13)" fg:x="688741" fg:w="1615"/><text x="95.9523%" y="495.50"></text></g><g><title>[unknown] (1,570 samples, 0.22%)</title><rect x="95.7086%" y="469" width="0.2182%" height="15" fill="rgb(216,106,43)" fg:x="688786" fg:w="1570"/><text x="95.9586%" y="479.50"></text></g><g><title>[unknown] (1,500 samples, 0.21%)</title><rect x="95.7183%" y="453" width="0.2084%" height="15" fill="rgb(216,183,2)" fg:x="688856" fg:w="1500"/><text x="95.9683%" y="463.50"></text></g><g><title>[unknown] (1,422 samples, 0.20%)</title><rect x="95.7292%" y="437" width="0.1976%" height="15" fill="rgb(249,75,3)" fg:x="688934" fg:w="1422"/><text x="95.9792%" y="447.50"></text></g><g><title>[unknown] (1,366 samples, 0.19%)</title><rect x="95.7369%" y="421" width="0.1898%" height="15" fill="rgb(219,67,39)" fg:x="688990" fg:w="1366"/><text x="95.9869%" y="431.50"></text></g><g><title>[unknown] (1,283 samples, 0.18%)</title><rect x="95.7485%" y="405" width="0.1783%" height="15" fill="rgb(253,228,2)" fg:x="689073" fg:w="1283"/><text x="95.9985%" y="415.50"></text></g><g><title>[unknown] (1,174 samples, 0.16%)</title><rect x="95.7636%" y="389" width="0.1631%" height="15" fill="rgb(235,138,27)" fg:x="689182" fg:w="1174"/><text x="96.0136%" y="399.50"></text></g><g><title>[unknown] (1,114 samples, 0.15%)</title><rect x="95.7720%" y="373" width="0.1548%" height="15" fill="rgb(236,97,51)" fg:x="689242" fg:w="1114"/><text x="96.0220%" y="383.50"></text></g><g><title>[unknown] (1,052 samples, 0.15%)</title><rect x="95.7806%" y="357" width="0.1462%" height="15" fill="rgb(240,80,30)" fg:x="689304" fg:w="1052"/><text x="96.0306%" y="367.50"></text></g><g><title>[unknown] (981 samples, 0.14%)</title><rect x="95.7904%" y="341" width="0.1363%" height="15" fill="rgb(230,178,19)" fg:x="689375" fg:w="981"/><text x="96.0404%" y="351.50"></text></g><g><title>[unknown] (944 samples, 0.13%)</title><rect x="95.7956%" y="325" width="0.1312%" height="15" fill="rgb(210,190,27)" fg:x="689412" fg:w="944"/><text x="96.0456%" y="335.50"></text></g><g><title>[unknown] (880 samples, 0.12%)</title><rect x="95.8045%" y="309" width="0.1223%" height="15" fill="rgb(222,107,31)" fg:x="689476" fg:w="880"/><text x="96.0545%" y="319.50"></text></g><g><title>[unknown] (856 samples, 0.12%)</title><rect x="95.8078%" y="293" width="0.1189%" height="15" fill="rgb(216,127,34)" fg:x="689500" fg:w="856"/><text x="96.0578%" y="303.50"></text></g><g><title>[unknown] (819 samples, 0.11%)</title><rect x="95.8129%" y="277" width="0.1138%" height="15" fill="rgb(234,116,52)" fg:x="689537" fg:w="819"/><text x="96.0629%" y="287.50"></text></g><g><title>[unknown] (784 samples, 0.11%)</title><rect x="95.8178%" y="261" width="0.1089%" height="15" fill="rgb(222,124,15)" fg:x="689572" fg:w="784"/><text x="96.0678%" y="271.50"></text></g><g><title>[unknown] (749 samples, 0.10%)</title><rect x="95.8227%" y="245" width="0.1041%" height="15" fill="rgb(231,179,28)" fg:x="689607" fg:w="749"/><text x="96.0727%" y="255.50"></text></g><g><title>[unknown] (710 samples, 0.10%)</title><rect x="95.8281%" y="229" width="0.0987%" height="15" fill="rgb(226,93,45)" fg:x="689646" fg:w="710"/><text x="96.0781%" y="239.50"></text></g><g><title>[unknown] (670 samples, 0.09%)</title><rect x="95.8336%" y="213" width="0.0931%" height="15" fill="rgb(215,8,51)" fg:x="689686" fg:w="670"/><text x="96.0836%" y="223.50"></text></g><g><title>[unknown] (609 samples, 0.08%)</title><rect x="95.8421%" y="197" width="0.0846%" height="15" fill="rgb(223,106,5)" fg:x="689747" fg:w="609"/><text x="96.0921%" y="207.50"></text></g><g><title>[unknown] (522 samples, 0.07%)</title><rect x="95.8542%" y="181" width="0.0725%" height="15" fill="rgb(250,191,5)" fg:x="689834" fg:w="522"/><text x="96.1042%" y="191.50"></text></g><g><title>[unknown] (439 samples, 0.06%)</title><rect x="95.8657%" y="165" width="0.0610%" height="15" fill="rgb(242,132,44)" fg:x="689917" fg:w="439"/><text x="96.1157%" y="175.50"></text></g><g><title>[unknown] (382 samples, 0.05%)</title><rect x="95.8737%" y="149" width="0.0531%" height="15" fill="rgb(251,152,29)" fg:x="689974" fg:w="382"/><text x="96.1237%" y="159.50"></text></g><g><title>[unknown] (329 samples, 0.05%)</title><rect x="95.8810%" y="133" width="0.0457%" height="15" fill="rgb(218,179,5)" fg:x="690027" fg:w="329"/><text x="96.1310%" y="143.50"></text></g><g><title>[unknown] (233 samples, 0.03%)</title><rect x="95.8944%" y="117" width="0.0324%" height="15" fill="rgb(227,67,19)" fg:x="690123" fg:w="233"/><text x="96.1444%" y="127.50"></text></g><g><title>[unknown] (139 samples, 0.02%)</title><rect x="95.9074%" y="101" width="0.0193%" height="15" fill="rgb(233,119,31)" fg:x="690217" fg:w="139"/><text x="96.1574%" y="111.50"></text></g><g><title>[unknown] (78 samples, 0.01%)</title><rect x="95.9159%" y="85" width="0.0108%" height="15" fill="rgb(241,120,22)" fg:x="690278" fg:w="78"/><text x="96.1659%" y="95.50"></text></g><g><title>cfree (72 samples, 0.01%)</title><rect x="95.9302%" y="645" width="0.0100%" height="15" fill="rgb(224,102,30)" fg:x="690381" fg:w="72"/><text x="96.1802%" y="655.50"></text></g><g><title>jsonrpc::_::&lt;impl serde::ser::Serialize for jsonrpc::Request&gt;::serialize (124 samples, 0.02%)</title><rect x="95.9505%" y="645" width="0.0172%" height="15" fill="rgb(210,164,37)" fg:x="690527" fg:w="124"/><text x="96.2005%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (113 samples, 0.02%)</title><rect x="95.9520%" y="629" width="0.0157%" height="15" fill="rgb(226,191,16)" fg:x="690538" fg:w="113"/><text x="96.2020%" y="639.50"></text></g><g><title>recv (877 samples, 0.12%)</title><rect x="95.9934%" y="533" width="0.1219%" height="15" fill="rgb(214,40,45)" fg:x="690836" fg:w="877"/><text x="96.2434%" y="543.50"></text></g><g><title>[unknown] (858 samples, 0.12%)</title><rect x="95.9961%" y="517" width="0.1192%" height="15" fill="rgb(244,29,26)" fg:x="690855" fg:w="858"/><text x="96.2461%" y="527.50"></text></g><g><title>[unknown] (843 samples, 0.12%)</title><rect x="95.9982%" y="501" width="0.1171%" height="15" fill="rgb(216,16,5)" fg:x="690870" fg:w="843"/><text x="96.2482%" y="511.50"></text></g><g><title>[unknown] (810 samples, 0.11%)</title><rect x="96.0028%" y="485" width="0.1126%" height="15" fill="rgb(249,76,35)" fg:x="690903" fg:w="810"/><text x="96.2528%" y="495.50"></text></g><g><title>[unknown] (803 samples, 0.11%)</title><rect x="96.0037%" y="469" width="0.1116%" height="15" fill="rgb(207,11,44)" fg:x="690910" fg:w="803"/><text x="96.2537%" y="479.50"></text></g><g><title>[unknown] (791 samples, 0.11%)</title><rect x="96.0054%" y="453" width="0.1099%" height="15" fill="rgb(228,190,49)" fg:x="690922" fg:w="791"/><text x="96.2554%" y="463.50"></text></g><g><title>[unknown] (748 samples, 0.10%)</title><rect x="96.0114%" y="437" width="0.1039%" height="15" fill="rgb(214,173,12)" fg:x="690965" fg:w="748"/><text x="96.2614%" y="447.50"></text></g><g><title>[unknown] (723 samples, 0.10%)</title><rect x="96.0148%" y="421" width="0.1005%" height="15" fill="rgb(218,26,35)" fg:x="690990" fg:w="723"/><text x="96.2648%" y="431.50"></text></g><g><title>[unknown] (689 samples, 0.10%)</title><rect x="96.0196%" y="405" width="0.0957%" height="15" fill="rgb(220,200,19)" fg:x="691024" fg:w="689"/><text x="96.2696%" y="415.50"></text></g><g><title>[unknown] (639 samples, 0.09%)</title><rect x="96.0265%" y="389" width="0.0888%" height="15" fill="rgb(239,95,49)" fg:x="691074" fg:w="639"/><text x="96.2765%" y="399.50"></text></g><g><title>[unknown] (561 samples, 0.08%)</title><rect x="96.0374%" y="373" width="0.0780%" height="15" fill="rgb(235,85,53)" fg:x="691152" fg:w="561"/><text x="96.2874%" y="383.50"></text></g><g><title>[unknown] (531 samples, 0.07%)</title><rect x="96.0415%" y="357" width="0.0738%" height="15" fill="rgb(233,133,31)" fg:x="691182" fg:w="531"/><text x="96.2915%" y="367.50"></text></g><g><title>[unknown] (473 samples, 0.07%)</title><rect x="96.0496%" y="341" width="0.0657%" height="15" fill="rgb(218,25,20)" fg:x="691240" fg:w="473"/><text x="96.2996%" y="351.50"></text></g><g><title>[unknown] (423 samples, 0.06%)</title><rect x="96.0565%" y="325" width="0.0588%" height="15" fill="rgb(252,210,38)" fg:x="691290" fg:w="423"/><text x="96.3065%" y="335.50"></text></g><g><title>[unknown] (358 samples, 0.05%)</title><rect x="96.0656%" y="309" width="0.0497%" height="15" fill="rgb(242,134,21)" fg:x="691355" fg:w="358"/><text x="96.3156%" y="319.50"></text></g><g><title>[unknown] (237 samples, 0.03%)</title><rect x="96.0824%" y="293" width="0.0329%" height="15" fill="rgb(213,28,48)" fg:x="691476" fg:w="237"/><text x="96.3324%" y="303.50"></text></g><g><title>[unknown] (137 samples, 0.02%)</title><rect x="96.0963%" y="277" width="0.0190%" height="15" fill="rgb(250,196,2)" fg:x="691576" fg:w="137"/><text x="96.3463%" y="287.50"></text></g><g><title>std::io::default_read_buf (942 samples, 0.13%)</title><rect x="95.9855%" y="613" width="0.1309%" height="15" fill="rgb(227,5,17)" fg:x="690779" fg:w="942"/><text x="96.2355%" y="623.50"></text></g><g><title>std::net::udp::UdpSocket::recv (885 samples, 0.12%)</title><rect x="95.9934%" y="597" width="0.1230%" height="15" fill="rgb(221,226,24)" fg:x="690836" fg:w="885"/><text x="96.2434%" y="607.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (885 samples, 0.12%)</title><rect x="95.9934%" y="581" width="0.1230%" height="15" fill="rgb(211,5,48)" fg:x="690836" fg:w="885"/><text x="96.2434%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::read (885 samples, 0.12%)</title><rect x="95.9934%" y="565" width="0.1230%" height="15" fill="rgb(219,150,6)" fg:x="690836" fg:w="885"/><text x="96.2434%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (885 samples, 0.12%)</title><rect x="95.9934%" y="549" width="0.1230%" height="15" fill="rgb(251,46,16)" fg:x="690836" fg:w="885"/><text x="96.2434%" y="559.50"></text></g><g><title>std::io::append_to_string (1,071 samples, 0.15%)</title><rect x="95.9694%" y="629" width="0.1488%" height="15" fill="rgb(220,204,40)" fg:x="690663" fg:w="1071"/><text x="96.2194%" y="639.50"></text></g><g><title>jsonrpc::simple_http::get_line (1,112 samples, 0.15%)</title><rect x="95.9677%" y="645" width="0.1545%" height="15" fill="rgb(211,85,2)" fg:x="690651" fg:w="1112"/><text x="96.2177%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (89 samples, 0.01%)</title><rect x="96.3200%" y="597" width="0.0124%" height="15" fill="rgb(229,17,7)" fg:x="693186" fg:w="89"/><text x="96.5700%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (87 samples, 0.01%)</title><rect x="96.3203%" y="581" width="0.0121%" height="15" fill="rgb(239,72,28)" fg:x="693188" fg:w="87"/><text x="96.5703%" y="591.50"></text></g><g><title>recv (723 samples, 0.10%)</title><rect x="96.3379%" y="517" width="0.1005%" height="15" fill="rgb(230,47,54)" fg:x="693315" fg:w="723"/><text x="96.5879%" y="527.50"></text></g><g><title>[unknown] (709 samples, 0.10%)</title><rect x="96.3399%" y="501" width="0.0985%" height="15" fill="rgb(214,50,8)" fg:x="693329" fg:w="709"/><text x="96.5899%" y="511.50"></text></g><g><title>[unknown] (680 samples, 0.09%)</title><rect x="96.3439%" y="485" width="0.0945%" height="15" fill="rgb(216,198,43)" fg:x="693358" fg:w="680"/><text x="96.5939%" y="495.50"></text></g><g><title>[unknown] (634 samples, 0.09%)</title><rect x="96.3503%" y="469" width="0.0881%" height="15" fill="rgb(234,20,35)" fg:x="693404" fg:w="634"/><text x="96.6003%" y="479.50"></text></g><g><title>[unknown] (621 samples, 0.09%)</title><rect x="96.3521%" y="453" width="0.0863%" height="15" fill="rgb(254,45,19)" fg:x="693417" fg:w="621"/><text x="96.6021%" y="463.50"></text></g><g><title>[unknown] (585 samples, 0.08%)</title><rect x="96.3571%" y="437" width="0.0813%" height="15" fill="rgb(219,14,44)" fg:x="693453" fg:w="585"/><text x="96.6071%" y="447.50"></text></g><g><title>[unknown] (556 samples, 0.08%)</title><rect x="96.3611%" y="421" width="0.0773%" height="15" fill="rgb(217,220,26)" fg:x="693482" fg:w="556"/><text x="96.6111%" y="431.50"></text></g><g><title>[unknown] (514 samples, 0.07%)</title><rect x="96.3669%" y="405" width="0.0714%" height="15" fill="rgb(213,158,28)" fg:x="693524" fg:w="514"/><text x="96.6169%" y="415.50"></text></g><g><title>[unknown] (483 samples, 0.07%)</title><rect x="96.3713%" y="389" width="0.0671%" height="15" fill="rgb(252,51,52)" fg:x="693555" fg:w="483"/><text x="96.6213%" y="399.50"></text></g><g><title>[unknown] (438 samples, 0.06%)</title><rect x="96.3775%" y="373" width="0.0609%" height="15" fill="rgb(246,89,16)" fg:x="693600" fg:w="438"/><text x="96.6275%" y="383.50"></text></g><g><title>[unknown] (408 samples, 0.06%)</title><rect x="96.3817%" y="357" width="0.0567%" height="15" fill="rgb(216,158,49)" fg:x="693630" fg:w="408"/><text x="96.6317%" y="367.50"></text></g><g><title>[unknown] (385 samples, 0.05%)</title><rect x="96.3849%" y="341" width="0.0535%" height="15" fill="rgb(236,107,19)" fg:x="693653" fg:w="385"/><text x="96.6349%" y="351.50"></text></g><g><title>[unknown] (347 samples, 0.05%)</title><rect x="96.3902%" y="325" width="0.0482%" height="15" fill="rgb(228,185,30)" fg:x="693691" fg:w="347"/><text x="96.6402%" y="335.50"></text></g><g><title>[unknown] (308 samples, 0.04%)</title><rect x="96.3956%" y="309" width="0.0428%" height="15" fill="rgb(246,134,8)" fg:x="693730" fg:w="308"/><text x="96.6456%" y="319.50"></text></g><g><title>[unknown] (268 samples, 0.04%)</title><rect x="96.4011%" y="293" width="0.0372%" height="15" fill="rgb(214,143,50)" fg:x="693770" fg:w="268"/><text x="96.6511%" y="303.50"></text></g><g><title>[unknown] (193 samples, 0.03%)</title><rect x="96.4115%" y="277" width="0.0268%" height="15" fill="rgb(228,75,8)" fg:x="693845" fg:w="193"/><text x="96.6615%" y="287.50"></text></g><g><title>[unknown] (133 samples, 0.02%)</title><rect x="96.4199%" y="261" width="0.0185%" height="15" fill="rgb(207,175,4)" fg:x="693905" fg:w="133"/><text x="96.6699%" y="271.50"></text></g><g><title>std::io::default_read_buf (740 samples, 0.10%)</title><rect x="96.3369%" y="597" width="0.1028%" height="15" fill="rgb(205,108,24)" fg:x="693308" fg:w="740"/><text x="96.5869%" y="607.50"></text></g><g><title>std::net::udp::UdpSocket::recv (736 samples, 0.10%)</title><rect x="96.3375%" y="581" width="0.1023%" height="15" fill="rgb(244,120,49)" fg:x="693312" fg:w="736"/><text x="96.5875%" y="591.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (733 samples, 0.10%)</title><rect x="96.3379%" y="565" width="0.1019%" height="15" fill="rgb(223,47,38)" fg:x="693315" fg:w="733"/><text x="96.5879%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (733 samples, 0.10%)</title><rect x="96.3379%" y="549" width="0.1019%" height="15" fill="rgb(229,179,11)" fg:x="693315" fg:w="733"/><text x="96.5879%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (733 samples, 0.10%)</title><rect x="96.3379%" y="533" width="0.1019%" height="15" fill="rgb(231,122,1)" fg:x="693315" fg:w="733"/><text x="96.5879%" y="543.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (955 samples, 0.13%)</title><rect x="96.3100%" y="629" width="0.1327%" height="15" fill="rgb(245,119,9)" fg:x="693114" fg:w="955"/><text x="96.5600%" y="639.50"></text></g><g><title>std::io::append_to_string (946 samples, 0.13%)</title><rect x="96.3112%" y="613" width="0.1314%" height="15" fill="rgb(241,163,25)" fg:x="693123" fg:w="946"/><text x="96.5612%" y="623.50"></text></g><g><title>jsonrpc::simple_http::get_lines (2,392 samples, 0.33%)</title><rect x="96.1223%" y="645" width="0.3324%" height="15" fill="rgb(217,214,3)" fg:x="691763" fg:w="2392"/><text x="96.3723%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::end_raw_buffering (79 samples, 0.01%)</title><rect x="96.4731%" y="597" width="0.0110%" height="15" fill="rgb(240,86,28)" fg:x="694288" fg:w="79"/><text x="96.7231%" y="607.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (343 samples, 0.05%)</title><rect x="96.4951%" y="581" width="0.0477%" height="15" fill="rgb(215,47,9)" fg:x="694446" fg:w="343"/><text x="96.7451%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (625 samples, 0.09%)</title><rect x="96.4670%" y="613" width="0.0868%" height="15" fill="rgb(252,25,45)" fg:x="694244" fg:w="625"/><text x="96.7170%" y="623.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (502 samples, 0.07%)</title><rect x="96.4841%" y="597" width="0.0698%" height="15" fill="rgb(251,164,9)" fg:x="694367" fg:w="502"/><text x="96.7341%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (710 samples, 0.10%)</title><rect x="96.4588%" y="629" width="0.0987%" height="15" fill="rgb(233,194,0)" fg:x="694185" fg:w="710"/><text x="96.7088%" y="639.50"></text></g><g><title>serde_json::de::from_str (732 samples, 0.10%)</title><rect x="96.4578%" y="645" width="0.1017%" height="15" fill="rgb(249,111,24)" fg:x="694178" fg:w="732"/><text x="96.7078%" y="655.50"></text></g><g><title>__send (8,860 samples, 1.23%)</title><rect x="96.5713%" y="597" width="1.2311%" height="15" fill="rgb(250,223,3)" fg:x="694995" fg:w="8860"/><text x="96.8213%" y="607.50"></text></g><g><title>[unknown] (8,687 samples, 1.21%)</title><rect x="96.5954%" y="581" width="1.2071%" height="15" fill="rgb(236,178,37)" fg:x="695168" fg:w="8687"/><text x="96.8454%" y="591.50"></text></g><g><title>[unknown] (8,376 samples, 1.16%)</title><rect x="96.6386%" y="565" width="1.1639%" height="15" fill="rgb(241,158,50)" fg:x="695479" fg:w="8376"/><text x="96.8886%" y="575.50"></text></g><g><title>[unknown] (7,972 samples, 1.11%)</title><rect x="96.6947%" y="549" width="1.1077%" height="15" fill="rgb(213,121,41)" fg:x="695883" fg:w="7972"/><text x="96.9447%" y="559.50"></text></g><g><title>[unknown] (7,902 samples, 1.10%)</title><rect x="96.7045%" y="533" width="1.0980%" height="15" fill="rgb(240,92,3)" fg:x="695953" fg:w="7902"/><text x="96.9545%" y="543.50"></text></g><g><title>[unknown] (7,707 samples, 1.07%)</title><rect x="96.7316%" y="517" width="1.0709%" height="15" fill="rgb(205,123,3)" fg:x="696148" fg:w="7707"/><text x="96.9816%" y="527.50"></text></g><g><title>[unknown] (7,614 samples, 1.06%)</title><rect x="96.7445%" y="501" width="1.0580%" height="15" fill="rgb(205,97,47)" fg:x="696241" fg:w="7614"/><text x="96.9945%" y="511.50"></text></g><g><title>[unknown] (7,465 samples, 1.04%)</title><rect x="96.7652%" y="485" width="1.0373%" height="15" fill="rgb(247,152,14)" fg:x="696390" fg:w="7465"/><text x="97.0152%" y="495.50"></text></g><g><title>[unknown] (7,258 samples, 1.01%)</title><rect x="96.7939%" y="469" width="1.0085%" height="15" fill="rgb(248,195,53)" fg:x="696597" fg:w="7258"/><text x="97.0439%" y="479.50"></text></g><g><title>[unknown] (7,001 samples, 0.97%)</title><rect x="96.8297%" y="453" width="0.9728%" height="15" fill="rgb(226,201,16)" fg:x="696854" fg:w="7001"/><text x="97.0797%" y="463.50"></text></g><g><title>[unknown] (6,272 samples, 0.87%)</title><rect x="96.9310%" y="437" width="0.8715%" height="15" fill="rgb(205,98,0)" fg:x="697583" fg:w="6272"/><text x="97.1810%" y="447.50"></text></g><g><title>[unknown] (5,689 samples, 0.79%)</title><rect x="97.0120%" y="421" width="0.7905%" height="15" fill="rgb(214,191,48)" fg:x="698166" fg:w="5689"/><text x="97.2620%" y="431.50"></text></g><g><title>[unknown] (4,801 samples, 0.67%)</title><rect x="97.1354%" y="405" width="0.6671%" height="15" fill="rgb(237,112,39)" fg:x="699054" fg:w="4801"/><text x="97.3854%" y="415.50"></text></g><g><title>[unknown] (4,254 samples, 0.59%)</title><rect x="97.2114%" y="389" width="0.5911%" height="15" fill="rgb(247,203,27)" fg:x="699601" fg:w="4254"/><text x="97.4614%" y="399.50"></text></g><g><title>[unknown] (3,966 samples, 0.55%)</title><rect x="97.2514%" y="373" width="0.5511%" height="15" fill="rgb(235,124,28)" fg:x="699889" fg:w="3966"/><text x="97.5014%" y="383.50"></text></g><g><title>[unknown] (3,704 samples, 0.51%)</title><rect x="97.2878%" y="357" width="0.5147%" height="15" fill="rgb(208,207,46)" fg:x="700151" fg:w="3704"/><text x="97.5378%" y="367.50"></text></g><g><title>[unknown] (3,471 samples, 0.48%)</title><rect x="97.3202%" y="341" width="0.4823%" height="15" fill="rgb(234,176,4)" fg:x="700384" fg:w="3471"/><text x="97.5702%" y="351.50"></text></g><g><title>[unknown] (3,131 samples, 0.44%)</title><rect x="97.3674%" y="325" width="0.4351%" height="15" fill="rgb(230,133,28)" fg:x="700724" fg:w="3131"/><text x="97.6174%" y="335.50"></text></g><g><title>[unknown] (3,050 samples, 0.42%)</title><rect x="97.3787%" y="309" width="0.4238%" height="15" fill="rgb(211,137,40)" fg:x="700805" fg:w="3050"/><text x="97.6287%" y="319.50"></text></g><g><title>[unknown] (2,922 samples, 0.41%)</title><rect x="97.3964%" y="293" width="0.4060%" height="15" fill="rgb(254,35,13)" fg:x="700933" fg:w="2922"/><text x="97.6464%" y="303.50"></text></g><g><title>[unknown] (2,767 samples, 0.38%)</title><rect x="97.4180%" y="277" width="0.3845%" height="15" fill="rgb(225,49,51)" fg:x="701088" fg:w="2767"/><text x="97.6680%" y="287.50"></text></g><g><title>[unknown] (2,598 samples, 0.36%)</title><rect x="97.4415%" y="261" width="0.3610%" height="15" fill="rgb(251,10,15)" fg:x="701257" fg:w="2598"/><text x="97.6915%" y="271.50"></text></g><g><title>[unknown] (2,416 samples, 0.34%)</title><rect x="97.4668%" y="245" width="0.3357%" height="15" fill="rgb(228,207,15)" fg:x="701439" fg:w="2416"/><text x="97.7168%" y="255.50"></text></g><g><title>[unknown] (2,197 samples, 0.31%)</title><rect x="97.4972%" y="229" width="0.3053%" height="15" fill="rgb(241,99,19)" fg:x="701658" fg:w="2197"/><text x="97.7472%" y="239.50"></text></g><g><title>[unknown] (1,890 samples, 0.26%)</title><rect x="97.5398%" y="213" width="0.2626%" height="15" fill="rgb(207,104,49)" fg:x="701965" fg:w="1890"/><text x="97.7898%" y="223.50"></text></g><g><title>[unknown] (1,684 samples, 0.23%)</title><rect x="97.5685%" y="197" width="0.2340%" height="15" fill="rgb(234,99,18)" fg:x="702171" fg:w="1684"/><text x="97.8185%" y="207.50"></text></g><g><title>[unknown] (1,413 samples, 0.20%)</title><rect x="97.6061%" y="181" width="0.1963%" height="15" fill="rgb(213,191,49)" fg:x="702442" fg:w="1413"/><text x="97.8561%" y="191.50"></text></g><g><title>[unknown] (1,140 samples, 0.16%)</title><rect x="97.6441%" y="165" width="0.1584%" height="15" fill="rgb(210,226,19)" fg:x="702715" fg:w="1140"/><text x="97.8941%" y="175.50"></text></g><g><title>[unknown] (802 samples, 0.11%)</title><rect x="97.6910%" y="149" width="0.1114%" height="15" fill="rgb(229,97,18)" fg:x="703053" fg:w="802"/><text x="97.9410%" y="159.50"></text></g><g><title>[unknown] (506 samples, 0.07%)</title><rect x="97.7322%" y="133" width="0.0703%" height="15" fill="rgb(211,167,15)" fg:x="703349" fg:w="506"/><text x="97.9822%" y="143.50"></text></g><g><title>[unknown] (379 samples, 0.05%)</title><rect x="97.7498%" y="117" width="0.0527%" height="15" fill="rgb(210,169,34)" fg:x="703476" fg:w="379"/><text x="97.9998%" y="127.50"></text></g><g><title>[unknown] (290 samples, 0.04%)</title><rect x="97.7622%" y="101" width="0.0403%" height="15" fill="rgb(241,121,31)" fg:x="703565" fg:w="290"/><text x="98.0122%" y="111.50"></text></g><g><title>[unknown] (223 samples, 0.03%)</title><rect x="97.7715%" y="85" width="0.0310%" height="15" fill="rgb(232,40,11)" fg:x="703632" fg:w="223"/><text x="98.0215%" y="95.50"></text></g><g><title>[unknown] (154 samples, 0.02%)</title><rect x="97.7811%" y="69" width="0.0214%" height="15" fill="rgb(205,86,26)" fg:x="703701" fg:w="154"/><text x="98.0311%" y="79.50"></text></g><g><title>[unknown] (102 samples, 0.01%)</title><rect x="97.7883%" y="53" width="0.0142%" height="15" fill="rgb(231,126,28)" fg:x="703753" fg:w="102"/><text x="98.0383%" y="63.50"></text></g><g><title>std::io::Write::write_all (9,019 samples, 1.25%)</title><rect x="96.5595%" y="645" width="1.2532%" height="15" fill="rgb(219,221,18)" fg:x="694910" fg:w="9019"/><text x="96.8095%" y="655.50"></text></g><g><title>std::net::udp::UdpSocket::send (8,952 samples, 1.24%)</title><rect x="96.5688%" y="629" width="1.2439%" height="15" fill="rgb(211,40,0)" fg:x="694977" fg:w="8952"/><text x="96.8188%" y="639.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (8,936 samples, 1.24%)</title><rect x="96.5711%" y="613" width="1.2417%" height="15" fill="rgb(239,85,43)" fg:x="694993" fg:w="8936"/><text x="96.8211%" y="623.50"></text></g><g><title>std::sys::unix::cvt (74 samples, 0.01%)</title><rect x="97.8025%" y="597" width="0.0103%" height="15" fill="rgb(231,55,21)" fg:x="703855" fg:w="74"/><text x="98.0525%" y="607.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (81 samples, 0.01%)</title><rect x="97.8127%" y="645" width="0.0113%" height="15" fill="rgb(225,184,43)" fg:x="703929" fg:w="81"/><text x="98.0627%" y="655.50"></text></g><g><title>malloc (78 samples, 0.01%)</title><rect x="97.8132%" y="629" width="0.0108%" height="15" fill="rgb(251,158,41)" fg:x="703932" fg:w="78"/><text x="98.0632%" y="639.50"></text></g><g><title>__poll (220 samples, 0.03%)</title><rect x="97.8266%" y="597" width="0.0306%" height="15" fill="rgb(234,159,37)" fg:x="704029" fg:w="220"/><text x="98.0766%" y="607.50"></text></g><g><title>[unknown] (202 samples, 0.03%)</title><rect x="97.8291%" y="581" width="0.0281%" height="15" fill="rgb(216,204,22)" fg:x="704047" fg:w="202"/><text x="98.0791%" y="591.50"></text></g><g><title>[unknown] (175 samples, 0.02%)</title><rect x="97.8329%" y="565" width="0.0243%" height="15" fill="rgb(214,17,3)" fg:x="704074" fg:w="175"/><text x="98.0829%" y="575.50"></text></g><g><title>[unknown] (149 samples, 0.02%)</title><rect x="97.8365%" y="549" width="0.0207%" height="15" fill="rgb(212,111,17)" fg:x="704100" fg:w="149"/><text x="98.0865%" y="559.50"></text></g><g><title>[unknown] (140 samples, 0.02%)</title><rect x="97.8378%" y="533" width="0.0195%" height="15" fill="rgb(221,157,24)" fg:x="704109" fg:w="140"/><text x="98.0878%" y="543.50"></text></g><g><title>[unknown] (101 samples, 0.01%)</title><rect x="97.8432%" y="517" width="0.0140%" height="15" fill="rgb(252,16,13)" fg:x="704148" fg:w="101"/><text x="98.0932%" y="527.50"></text></g><g><title>connect (2,584 samples, 0.36%)</title><rect x="97.8572%" y="597" width="0.3591%" height="15" fill="rgb(221,62,2)" fg:x="704249" fg:w="2584"/><text x="98.1072%" y="607.50"></text></g><g><title>[unknown] (2,555 samples, 0.36%)</title><rect x="97.8612%" y="581" width="0.3550%" height="15" fill="rgb(247,87,22)" fg:x="704278" fg:w="2555"/><text x="98.1112%" y="591.50"></text></g><g><title>[unknown] (2,533 samples, 0.35%)</title><rect x="97.8643%" y="565" width="0.3520%" height="15" fill="rgb(215,73,9)" fg:x="704300" fg:w="2533"/><text x="98.1143%" y="575.50"></text></g><g><title>[unknown] (2,477 samples, 0.34%)</title><rect x="97.8721%" y="549" width="0.3442%" height="15" fill="rgb(207,175,33)" fg:x="704356" fg:w="2477"/><text x="98.1221%" y="559.50"></text></g><g><title>[unknown] (2,470 samples, 0.34%)</title><rect x="97.8731%" y="533" width="0.3432%" height="15" fill="rgb(243,129,54)" fg:x="704363" fg:w="2470"/><text x="98.1231%" y="543.50"></text></g><g><title>[unknown] (2,455 samples, 0.34%)</title><rect x="97.8751%" y="517" width="0.3411%" height="15" fill="rgb(227,119,45)" fg:x="704378" fg:w="2455"/><text x="98.1251%" y="527.50"></text></g><g><title>[unknown] (2,429 samples, 0.34%)</title><rect x="97.8787%" y="501" width="0.3375%" height="15" fill="rgb(205,109,36)" fg:x="704404" fg:w="2429"/><text x="98.1287%" y="511.50"></text></g><g><title>[unknown] (2,404 samples, 0.33%)</title><rect x="97.8822%" y="485" width="0.3340%" height="15" fill="rgb(205,6,39)" fg:x="704429" fg:w="2404"/><text x="98.1322%" y="495.50"></text></g><g><title>[unknown] (2,375 samples, 0.33%)</title><rect x="97.8863%" y="469" width="0.3300%" height="15" fill="rgb(221,32,16)" fg:x="704458" fg:w="2375"/><text x="98.1363%" y="479.50"></text></g><g><title>[unknown] (2,244 samples, 0.31%)</title><rect x="97.9045%" y="453" width="0.3118%" height="15" fill="rgb(228,144,50)" fg:x="704589" fg:w="2244"/><text x="98.1545%" y="463.50"></text></g><g><title>[unknown] (2,074 samples, 0.29%)</title><rect x="97.9281%" y="437" width="0.2882%" height="15" fill="rgb(229,201,53)" fg:x="704759" fg:w="2074"/><text x="98.1781%" y="447.50"></text></g><g><title>[unknown] (1,912 samples, 0.27%)</title><rect x="97.9506%" y="421" width="0.2657%" height="15" fill="rgb(249,153,27)" fg:x="704921" fg:w="1912"/><text x="98.2006%" y="431.50"></text></g><g><title>[unknown] (1,682 samples, 0.23%)</title><rect x="97.9825%" y="405" width="0.2337%" height="15" fill="rgb(227,106,25)" fg:x="705151" fg:w="1682"/><text x="98.2325%" y="415.50"></text></g><g><title>[unknown] (1,566 samples, 0.22%)</title><rect x="97.9987%" y="389" width="0.2176%" height="15" fill="rgb(230,65,29)" fg:x="705267" fg:w="1566"/><text x="98.2487%" y="399.50"></text></g><g><title>[unknown] (1,408 samples, 0.20%)</title><rect x="98.0206%" y="373" width="0.1956%" height="15" fill="rgb(221,57,46)" fg:x="705425" fg:w="1408"/><text x="98.2706%" y="383.50"></text></g><g><title>[unknown] (1,328 samples, 0.18%)</title><rect x="98.0317%" y="357" width="0.1845%" height="15" fill="rgb(229,161,17)" fg:x="705505" fg:w="1328"/><text x="98.2817%" y="367.50"></text></g><g><title>[unknown] (1,280 samples, 0.18%)</title><rect x="98.0384%" y="341" width="0.1779%" height="15" fill="rgb(222,213,11)" fg:x="705553" fg:w="1280"/><text x="98.2884%" y="351.50"></text></g><g><title>[unknown] (1,260 samples, 0.18%)</title><rect x="98.0412%" y="325" width="0.1751%" height="15" fill="rgb(235,35,13)" fg:x="705573" fg:w="1260"/><text x="98.2912%" y="335.50"></text></g><g><title>[unknown] (1,236 samples, 0.17%)</title><rect x="98.0445%" y="309" width="0.1717%" height="15" fill="rgb(233,158,34)" fg:x="705597" fg:w="1236"/><text x="98.2945%" y="319.50"></text></g><g><title>[unknown] (1,202 samples, 0.17%)</title><rect x="98.0492%" y="293" width="0.1670%" height="15" fill="rgb(215,151,48)" fg:x="705631" fg:w="1202"/><text x="98.2992%" y="303.50"></text></g><g><title>[unknown] (1,169 samples, 0.16%)</title><rect x="98.0538%" y="277" width="0.1624%" height="15" fill="rgb(229,84,14)" fg:x="705664" fg:w="1169"/><text x="98.3038%" y="287.50"></text></g><g><title>[unknown] (1,137 samples, 0.16%)</title><rect x="98.0583%" y="261" width="0.1580%" height="15" fill="rgb(229,68,14)" fg:x="705696" fg:w="1137"/><text x="98.3083%" y="271.50"></text></g><g><title>[unknown] (1,090 samples, 0.15%)</title><rect x="98.0648%" y="245" width="0.1515%" height="15" fill="rgb(243,106,26)" fg:x="705743" fg:w="1090"/><text x="98.3148%" y="255.50"></text></g><g><title>[unknown] (995 samples, 0.14%)</title><rect x="98.0780%" y="229" width="0.1383%" height="15" fill="rgb(206,45,38)" fg:x="705838" fg:w="995"/><text x="98.3280%" y="239.50"></text></g><g><title>[unknown] (881 samples, 0.12%)</title><rect x="98.0938%" y="213" width="0.1224%" height="15" fill="rgb(226,6,15)" fg:x="705952" fg:w="881"/><text x="98.3438%" y="223.50"></text></g><g><title>[unknown] (759 samples, 0.11%)</title><rect x="98.1108%" y="197" width="0.1055%" height="15" fill="rgb(232,22,54)" fg:x="706074" fg:w="759"/><text x="98.3608%" y="207.50"></text></g><g><title>[unknown] (601 samples, 0.08%)</title><rect x="98.1328%" y="181" width="0.0835%" height="15" fill="rgb(229,222,32)" fg:x="706232" fg:w="601"/><text x="98.3828%" y="191.50"></text></g><g><title>[unknown] (459 samples, 0.06%)</title><rect x="98.1525%" y="165" width="0.0638%" height="15" fill="rgb(228,62,29)" fg:x="706374" fg:w="459"/><text x="98.4025%" y="175.50"></text></g><g><title>[unknown] (343 samples, 0.05%)</title><rect x="98.1686%" y="149" width="0.0477%" height="15" fill="rgb(251,103,34)" fg:x="706490" fg:w="343"/><text x="98.4186%" y="159.50"></text></g><g><title>[unknown] (229 samples, 0.03%)</title><rect x="98.1844%" y="133" width="0.0318%" height="15" fill="rgb(233,12,30)" fg:x="706604" fg:w="229"/><text x="98.4344%" y="143.50"></text></g><g><title>[unknown] (141 samples, 0.02%)</title><rect x="98.1967%" y="117" width="0.0196%" height="15" fill="rgb(238,52,0)" fg:x="706692" fg:w="141"/><text x="98.4467%" y="127.50"></text></g><g><title>[unknown] (101 samples, 0.01%)</title><rect x="98.2022%" y="101" width="0.0140%" height="15" fill="rgb(223,98,5)" fg:x="706732" fg:w="101"/><text x="98.4522%" y="111.50"></text></g><g><title>ioctl (169 samples, 0.02%)</title><rect x="98.2252%" y="581" width="0.0235%" height="15" fill="rgb(228,75,37)" fg:x="706897" fg:w="169"/><text x="98.4752%" y="591.50"></text></g><g><title>[unknown] (141 samples, 0.02%)</title><rect x="98.2290%" y="565" width="0.0196%" height="15" fill="rgb(205,115,49)" fg:x="706925" fg:w="141"/><text x="98.4790%" y="575.50"></text></g><g><title>[unknown] (117 samples, 0.02%)</title><rect x="98.2324%" y="549" width="0.0163%" height="15" fill="rgb(250,154,43)" fg:x="706949" fg:w="117"/><text x="98.4824%" y="559.50"></text></g><g><title>[unknown] (91 samples, 0.01%)</title><rect x="98.2360%" y="533" width="0.0126%" height="15" fill="rgb(226,43,29)" fg:x="706975" fg:w="91"/><text x="98.4860%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::set_nonblocking (194 samples, 0.03%)</title><rect x="98.2220%" y="597" width="0.0270%" height="15" fill="rgb(249,228,39)" fg:x="706874" fg:w="194"/><text x="98.4720%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::connect_timeout (3,080 samples, 0.43%)</title><rect x="97.8247%" y="613" width="0.4280%" height="15" fill="rgb(216,79,43)" fg:x="704015" fg:w="3080"/><text x="98.0747%" y="623.50"></text></g><g><title>std::net::tcp::TcpStream::connect_timeout (3,770 samples, 0.52%)</title><rect x="97.8240%" y="645" width="0.5239%" height="15" fill="rgb(228,95,12)" fg:x="704010" fg:w="3770"/><text x="98.0740%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::connect_timeout (3,766 samples, 0.52%)</title><rect x="97.8246%" y="629" width="0.5233%" height="15" fill="rgb(249,221,15)" fg:x="704014" fg:w="3766"/><text x="98.0746%" y="639.50"></text></g><g><title>std::sys::unix::net::Socket::new (685 samples, 0.10%)</title><rect x="98.2527%" y="613" width="0.0952%" height="15" fill="rgb(233,34,13)" fg:x="707095" fg:w="685"/><text x="98.5027%" y="623.50"></text></g><g><title>__socket (679 samples, 0.09%)</title><rect x="98.2535%" y="597" width="0.0943%" height="15" fill="rgb(214,103,39)" fg:x="707101" fg:w="679"/><text x="98.5035%" y="607.50"></text></g><g><title>[unknown] (669 samples, 0.09%)</title><rect x="98.2549%" y="581" width="0.0930%" height="15" fill="rgb(251,126,39)" fg:x="707111" fg:w="669"/><text x="98.5049%" y="591.50"></text></g><g><title>[unknown] (656 samples, 0.09%)</title><rect x="98.2567%" y="565" width="0.0912%" height="15" fill="rgb(214,216,36)" fg:x="707124" fg:w="656"/><text x="98.5067%" y="575.50"></text></g><g><title>[unknown] (640 samples, 0.09%)</title><rect x="98.2589%" y="549" width="0.0889%" height="15" fill="rgb(220,221,8)" fg:x="707140" fg:w="640"/><text x="98.5089%" y="559.50"></text></g><g><title>[unknown] (635 samples, 0.09%)</title><rect x="98.2596%" y="533" width="0.0882%" height="15" fill="rgb(240,216,3)" fg:x="707145" fg:w="635"/><text x="98.5096%" y="543.50"></text></g><g><title>[unknown] (613 samples, 0.09%)</title><rect x="98.2627%" y="517" width="0.0852%" height="15" fill="rgb(232,218,17)" fg:x="707167" fg:w="613"/><text x="98.5127%" y="527.50"></text></g><g><title>[unknown] (586 samples, 0.08%)</title><rect x="98.2664%" y="501" width="0.0814%" height="15" fill="rgb(229,163,45)" fg:x="707194" fg:w="586"/><text x="98.5164%" y="511.50"></text></g><g><title>[unknown] (531 samples, 0.07%)</title><rect x="98.2741%" y="485" width="0.0738%" height="15" fill="rgb(231,110,42)" fg:x="707249" fg:w="531"/><text x="98.5241%" y="495.50"></text></g><g><title>[unknown] (487 samples, 0.07%)</title><rect x="98.2802%" y="469" width="0.0677%" height="15" fill="rgb(208,170,48)" fg:x="707293" fg:w="487"/><text x="98.5302%" y="479.50"></text></g><g><title>[unknown] (413 samples, 0.06%)</title><rect x="98.2905%" y="453" width="0.0574%" height="15" fill="rgb(239,116,25)" fg:x="707367" fg:w="413"/><text x="98.5405%" y="463.50"></text></g><g><title>[unknown] (316 samples, 0.04%)</title><rect x="98.3039%" y="437" width="0.0439%" height="15" fill="rgb(219,200,50)" fg:x="707464" fg:w="316"/><text x="98.5539%" y="447.50"></text></g><g><title>[unknown] (242 samples, 0.03%)</title><rect x="98.3142%" y="421" width="0.0336%" height="15" fill="rgb(245,200,0)" fg:x="707538" fg:w="242"/><text x="98.5642%" y="431.50"></text></g><g><title>[unknown] (103 samples, 0.01%)</title><rect x="98.3335%" y="405" width="0.0143%" height="15" fill="rgb(245,119,33)" fg:x="707677" fg:w="103"/><text x="98.5835%" y="415.50"></text></g><g><title>setsockopt (127 samples, 0.02%)</title><rect x="98.3479%" y="597" width="0.0176%" height="15" fill="rgb(231,125,12)" fg:x="707780" fg:w="127"/><text x="98.5979%" y="607.50"></text></g><g><title>[unknown] (120 samples, 0.02%)</title><rect x="98.3488%" y="581" width="0.0167%" height="15" fill="rgb(216,96,41)" fg:x="707787" fg:w="120"/><text x="98.5988%" y="591.50"></text></g><g><title>[unknown] (115 samples, 0.02%)</title><rect x="98.3495%" y="565" width="0.0160%" height="15" fill="rgb(248,43,45)" fg:x="707792" fg:w="115"/><text x="98.5995%" y="575.50"></text></g><g><title>[unknown] (103 samples, 0.01%)</title><rect x="98.3512%" y="549" width="0.0143%" height="15" fill="rgb(217,222,7)" fg:x="707804" fg:w="103"/><text x="98.6012%" y="559.50"></text></g><g><title>[unknown] (95 samples, 0.01%)</title><rect x="98.3523%" y="533" width="0.0132%" height="15" fill="rgb(233,28,6)" fg:x="707812" fg:w="95"/><text x="98.6023%" y="543.50"></text></g><g><title>[unknown] (75 samples, 0.01%)</title><rect x="98.3551%" y="517" width="0.0104%" height="15" fill="rgb(231,218,15)" fg:x="707832" fg:w="75"/><text x="98.6051%" y="527.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::set_read_timeout (129 samples, 0.02%)</title><rect x="98.3479%" y="645" width="0.0179%" height="15" fill="rgb(226,171,48)" fg:x="707780" fg:w="129"/><text x="98.5979%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (129 samples, 0.02%)</title><rect x="98.3479%" y="629" width="0.0179%" height="15" fill="rgb(235,201,9)" fg:x="707780" fg:w="129"/><text x="98.5979%" y="639.50"></text></g><g><title>std::sys_common::net::setsockopt (129 samples, 0.02%)</title><rect x="98.3479%" y="613" width="0.0179%" height="15" fill="rgb(217,80,15)" fg:x="707780" fg:w="129"/><text x="98.5979%" y="623.50"></text></g><g><title>setsockopt (103 samples, 0.01%)</title><rect x="98.3658%" y="597" width="0.0143%" height="15" fill="rgb(219,152,8)" fg:x="707909" fg:w="103"/><text x="98.6158%" y="607.50"></text></g><g><title>[unknown] (100 samples, 0.01%)</title><rect x="98.3662%" y="581" width="0.0139%" height="15" fill="rgb(243,107,38)" fg:x="707912" fg:w="100"/><text x="98.6162%" y="591.50"></text></g><g><title>[unknown] (81 samples, 0.01%)</title><rect x="98.3688%" y="565" width="0.0113%" height="15" fill="rgb(231,17,5)" fg:x="707931" fg:w="81"/><text x="98.6188%" y="575.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::set_write_timeout (106 samples, 0.01%)</title><rect x="98.3658%" y="645" width="0.0147%" height="15" fill="rgb(209,25,54)" fg:x="707909" fg:w="106"/><text x="98.6158%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (106 samples, 0.01%)</title><rect x="98.3658%" y="629" width="0.0147%" height="15" fill="rgb(219,0,2)" fg:x="707909" fg:w="106"/><text x="98.6158%" y="639.50"></text></g><g><title>std::sys_common::net::setsockopt (106 samples, 0.01%)</title><rect x="98.3658%" y="613" width="0.0147%" height="15" fill="rgb(246,9,5)" fg:x="707909" fg:w="106"/><text x="98.6158%" y="623.50"></text></g><g><title>jsonrpc::client::Client::send_request (19,741 samples, 2.74%)</title><rect x="95.6404%" y="677" width="2.7431%" height="15" fill="rgb(226,159,4)" fg:x="688295" fg:w="19741"/><text x="95.8904%" y="687.50">js..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (19,734 samples, 2.74%)</title><rect x="95.6413%" y="661" width="2.7421%" height="15" fill="rgb(219,175,34)" fg:x="688302" fg:w="19734"/><text x="95.8913%" y="671.50">&lt;j..</text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (431 samples, 0.06%)</title><rect x="98.4255%" y="581" width="0.0599%" height="15" fill="rgb(236,10,46)" fg:x="708339" fg:w="431"/><text x="98.6755%" y="591.50"></text></g><g><title>[libc.so.6] (158 samples, 0.02%)</title><rect x="98.5584%" y="549" width="0.0220%" height="15" fill="rgb(240,211,16)" fg:x="709295" fg:w="158"/><text x="98.8084%" y="559.50"></text></g><g><title>[libc.so.6] (442 samples, 0.06%)</title><rect x="98.5190%" y="565" width="0.0614%" height="15" fill="rgb(205,3,43)" fg:x="709012" fg:w="442"/><text x="98.7690%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,131 samples, 0.16%)</title><rect x="98.4234%" y="597" width="0.1572%" height="15" fill="rgb(245,7,22)" fg:x="708324" fg:w="1131"/><text x="98.6734%" y="607.50"></text></g><g><title>malloc (649 samples, 0.09%)</title><rect x="98.4904%" y="581" width="0.0902%" height="15" fill="rgb(239,132,32)" fg:x="708806" fg:w="649"/><text x="98.7404%" y="591.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,276 samples, 0.18%)</title><rect x="98.4100%" y="613" width="0.1773%" height="15" fill="rgb(228,202,34)" fg:x="708227" fg:w="1276"/><text x="98.6600%" y="623.50"></text></g><g><title>[libc.so.6] (104 samples, 0.01%)</title><rect x="98.5973%" y="565" width="0.0145%" height="15" fill="rgb(254,200,22)" fg:x="709575" fg:w="104"/><text x="98.8473%" y="575.50"></text></g><g><title>[libc.so.6] (95 samples, 0.01%)</title><rect x="98.5985%" y="549" width="0.0132%" height="15" fill="rgb(219,10,39)" fg:x="709584" fg:w="95"/><text x="98.8485%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1,549 samples, 0.22%)</title><rect x="98.3966%" y="629" width="0.2152%" height="15" fill="rgb(226,210,39)" fg:x="708131" fg:w="1549"/><text x="98.6466%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (177 samples, 0.02%)</title><rect x="98.5873%" y="613" width="0.0246%" height="15" fill="rgb(208,219,16)" fg:x="709503" fg:w="177"/><text x="98.8373%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (167 samples, 0.02%)</title><rect x="98.5887%" y="597" width="0.0232%" height="15" fill="rgb(216,158,51)" fg:x="709513" fg:w="167"/><text x="98.8387%" y="607.50"></text></g><g><title>realloc (123 samples, 0.02%)</title><rect x="98.5948%" y="581" width="0.0171%" height="15" fill="rgb(233,14,44)" fg:x="709557" fg:w="123"/><text x="98.8448%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1,578 samples, 0.22%)</title><rect x="98.3950%" y="645" width="0.2193%" height="15" fill="rgb(237,97,39)" fg:x="708119" fg:w="1578"/><text x="98.6450%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1,698 samples, 0.24%)</title><rect x="98.3859%" y="661" width="0.2359%" height="15" fill="rgb(218,198,43)" fg:x="708054" fg:w="1698"/><text x="98.6359%" y="671.50"></text></g><g><title>serde_json::de::from_str (1,717 samples, 0.24%)</title><rect x="98.3834%" y="677" width="0.2386%" height="15" fill="rgb(231,104,20)" fg:x="708036" fg:w="1717"/><text x="98.6334%" y="687.50"></text></g><g><title>btcd_rpc::client::BtcdRpc::getutreexoproof (21,745 samples, 3.02%)</title><rect x="95.6026%" y="693" width="3.0215%" height="15" fill="rgb(254,36,13)" fg:x="688023" fg:w="21745"/><text x="95.8526%" y="703.50">btc..</text></g><g><title>[libc.so.6] (179 samples, 0.02%)</title><rect x="98.6570%" y="661" width="0.0249%" height="15" fill="rgb(248,14,50)" fg:x="710005" fg:w="179"/><text x="98.9070%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (375 samples, 0.05%)</title><rect x="98.6301%" y="693" width="0.0521%" height="15" fill="rgb(217,107,29)" fg:x="709811" fg:w="375"/><text x="98.8801%" y="703.50"></text></g><g><title>cfree (329 samples, 0.05%)</title><rect x="98.6365%" y="677" width="0.0457%" height="15" fill="rgb(251,169,33)" fg:x="709857" fg:w="329"/><text x="98.8865%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (161 samples, 0.02%)</title><rect x="98.6906%" y="677" width="0.0224%" height="15" fill="rgb(217,108,32)" fg:x="710247" fg:w="161"/><text x="98.9406%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (86 samples, 0.01%)</title><rect x="98.7011%" y="661" width="0.0119%" height="15" fill="rgb(219,66,42)" fg:x="710322" fg:w="86"/><text x="98.9511%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (206 samples, 0.03%)</title><rect x="98.7344%" y="645" width="0.0286%" height="15" fill="rgb(206,180,7)" fg:x="710562" fg:w="206"/><text x="98.9844%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (136 samples, 0.02%)</title><rect x="98.7441%" y="629" width="0.0189%" height="15" fill="rgb(208,226,31)" fg:x="710632" fg:w="136"/><text x="98.9941%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (714 samples, 0.10%)</title><rect x="98.6822%" y="693" width="0.0992%" height="15" fill="rgb(218,26,49)" fg:x="710186" fg:w="714"/><text x="98.9322%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (492 samples, 0.07%)</title><rect x="98.7130%" y="677" width="0.0684%" height="15" fill="rgb(233,197,48)" fg:x="710408" fg:w="492"/><text x="98.9630%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (440 samples, 0.06%)</title><rect x="98.7202%" y="661" width="0.0611%" height="15" fill="rgb(252,181,51)" fg:x="710460" fg:w="440"/><text x="98.9702%" y="671.50"></text></g><g><title>malloc (132 samples, 0.02%)</title><rect x="98.7630%" y="645" width="0.0183%" height="15" fill="rgb(253,90,19)" fg:x="710768" fg:w="132"/><text x="99.0130%" y="655.50"></text></g><g><title>[libc.so.6] (111 samples, 0.02%)</title><rect x="98.7660%" y="629" width="0.0154%" height="15" fill="rgb(215,171,30)" fg:x="710789" fg:w="111"/><text x="99.0160%" y="639.50"></text></g><g><title>malloc (359 samples, 0.05%)</title><rect x="98.7825%" y="693" width="0.0499%" height="15" fill="rgb(214,222,9)" fg:x="710908" fg:w="359"/><text x="99.0325%" y="703.50"></text></g><g><title>[libc.so.6] (305 samples, 0.04%)</title><rect x="98.7900%" y="677" width="0.0424%" height="15" fill="rgb(223,3,22)" fg:x="710962" fg:w="305"/><text x="99.0400%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (711,043 samples, 98.80%)</title><rect x="0.0361%" y="789" width="98.8013%" height="15" fill="rgb(225,196,46)" fg:x="260" fg:w="711043"/><text x="0.2861%" y="799.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (711,043 samples, 98.80%)</title><rect x="0.0361%" y="773" width="98.8013%" height="15" fill="rgb(209,110,37)" fg:x="260" fg:w="711043"/><text x="0.2861%" y="783.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (711,043 samples, 98.80%)</title><rect x="0.0361%" y="757" width="98.8013%" height="15" fill="rgb(249,89,12)" fg:x="260" fg:w="711043"/><text x="0.2861%" y="767.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (711,043 samples, 98.80%)</title><rect x="0.0361%" y="741" width="98.8013%" height="15" fill="rgb(226,27,33)" fg:x="260" fg:w="711043"/><text x="0.2861%" y="751.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>utreexo_wallet::blockchain::cli_blockchain::UtreexodBackend::start_ibd (711,043 samples, 98.80%)</title><rect x="0.0361%" y="725" width="98.8013%" height="15" fill="rgb(213,82,22)" fg:x="260" fg:w="711043"/><text x="0.2861%" y="735.50">utreexo_wallet::blockchain::cli_blockchain::UtreexodBackend::start_ibd</text></g><g><title>utreexo_wallet::blockchain::cli_blockchain::UtreexodBackend::process_block (711,027 samples, 98.80%)</title><rect x="0.0384%" y="709" width="98.7990%" height="15" fill="rgb(248,140,0)" fg:x="276" fg:w="711027"/><text x="0.2884%" y="719.50">utreexo_wallet::blockchain::cli_blockchain::UtreexodBackend::process_block</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (711,045 samples, 98.80%)</title><rect x="0.0361%" y="805" width="98.8015%" height="15" fill="rgb(228,106,3)" fg:x="260" fg:w="711045"/><text x="0.2861%" y="815.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>[libc.so.6] (711,062 samples, 98.80%)</title><rect x="0.0356%" y="933" width="98.8039%" height="15" fill="rgb(209,23,37)" fg:x="256" fg:w="711062"/><text x="0.2856%" y="943.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (711,062 samples, 98.80%)</title><rect x="0.0356%" y="917" width="98.8039%" height="15" fill="rgb(241,93,50)" fg:x="256" fg:w="711062"/><text x="0.2856%" y="927.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (711,062 samples, 98.80%)</title><rect x="0.0356%" y="901" width="98.8039%" height="15" fill="rgb(253,46,43)" fg:x="256" fg:w="711062"/><text x="0.2856%" y="911.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (711,062 samples, 98.80%)</title><rect x="0.0356%" y="885" width="98.8039%" height="15" fill="rgb(226,206,43)" fg:x="256" fg:w="711062"/><text x="0.2856%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (711,062 samples, 98.80%)</title><rect x="0.0356%" y="869" width="98.8039%" height="15" fill="rgb(217,54,7)" fg:x="256" fg:w="711062"/><text x="0.2856%" y="879.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (711,058 samples, 98.80%)</title><rect x="0.0361%" y="853" width="98.8033%" height="15" fill="rgb(223,5,52)" fg:x="260" fg:w="711058"/><text x="0.2861%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>async_global_executor::threading::thread_main_loop (711,058 samples, 98.80%)</title><rect x="0.0361%" y="837" width="98.8033%" height="15" fill="rgb(206,52,46)" fg:x="260" fg:w="711058"/><text x="0.2861%" y="847.50">async_global_executor::threading::thread_main_loop</text></g><g><title>async_io::driver::block_on (711,058 samples, 98.80%)</title><rect x="0.0361%" y="821" width="98.8033%" height="15" fill="rgb(253,136,11)" fg:x="260" fg:w="711058"/><text x="0.2861%" y="831.50">async_io::driver::block_on</text></g><g><title>[libc.so.6] (711,064 samples, 98.80%)</title><rect x="0.0356%" y="949" width="98.8042%" height="15" fill="rgb(208,106,33)" fg:x="256" fg:w="711064"/><text x="0.2856%" y="959.50">[libc.so.6]</text></g><g><title>recv (80 samples, 0.01%)</title><rect x="98.9298%" y="933" width="0.0111%" height="15" fill="rgb(206,54,4)" fg:x="711968" fg:w="80"/><text x="99.1798%" y="943.50"></text></g><g><title>[unknown] (80 samples, 0.01%)</title><rect x="98.9298%" y="917" width="0.0111%" height="15" fill="rgb(213,3,15)" fg:x="711968" fg:w="80"/><text x="99.1798%" y="927.50"></text></g><g><title>[unknown] (756 samples, 0.11%)</title><rect x="98.8397%" y="949" width="0.1050%" height="15" fill="rgb(252,211,39)" fg:x="711320" fg:w="756"/><text x="99.0897%" y="959.50"></text></g><g><title>async-std/runti (711,908 samples, 98.92%)</title><rect x="0.0238%" y="965" width="98.9215%" height="15" fill="rgb(223,6,36)" fg:x="171" fg:w="711908"/><text x="0.2738%" y="975.50">async-std/runti</text></g><g><title>[libc.so.6] (94 samples, 0.01%)</title><rect x="98.9460%" y="949" width="0.0131%" height="15" fill="rgb(252,169,45)" fg:x="712085" fg:w="94"/><text x="99.1960%" y="959.50"></text></g><g><title>[libc.so.6] (94 samples, 0.01%)</title><rect x="98.9460%" y="933" width="0.0131%" height="15" fill="rgb(212,48,26)" fg:x="712085" fg:w="94"/><text x="99.1960%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (94 samples, 0.01%)</title><rect x="98.9460%" y="917" width="0.0131%" height="15" fill="rgb(251,102,48)" fg:x="712085" fg:w="94"/><text x="99.1960%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (94 samples, 0.01%)</title><rect x="98.9460%" y="901" width="0.0131%" height="15" fill="rgb(243,208,16)" fg:x="712085" fg:w="94"/><text x="99.1960%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (94 samples, 0.01%)</title><rect x="98.9460%" y="885" width="0.0131%" height="15" fill="rgb(219,96,24)" fg:x="712085" fg:w="94"/><text x="99.1960%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (94 samples, 0.01%)</title><rect x="98.9460%" y="869" width="0.0131%" height="15" fill="rgb(219,33,29)" fg:x="712085" fg:w="94"/><text x="99.1960%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (94 samples, 0.01%)</title><rect x="98.9460%" y="853" width="0.0131%" height="15" fill="rgb(223,176,5)" fg:x="712085" fg:w="94"/><text x="99.1960%" y="863.50"></text></g><g><title>sled-io-0 (95 samples, 0.01%)</title><rect x="98.9460%" y="965" width="0.0132%" height="15" fill="rgb(228,140,14)" fg:x="712085" fg:w="95"/><text x="99.1960%" y="975.50"></text></g><g><title>sled-io-1 (114 samples, 0.02%)</title><rect x="98.9592%" y="965" width="0.0158%" height="15" fill="rgb(217,179,31)" fg:x="712180" fg:w="114"/><text x="99.2092%" y="975.50"></text></g><g><title>[libc.so.6] (114 samples, 0.02%)</title><rect x="98.9592%" y="949" width="0.0158%" height="15" fill="rgb(230,9,30)" fg:x="712180" fg:w="114"/><text x="99.2092%" y="959.50"></text></g><g><title>[libc.so.6] (114 samples, 0.02%)</title><rect x="98.9592%" y="933" width="0.0158%" height="15" fill="rgb(230,136,20)" fg:x="712180" fg:w="114"/><text x="99.2092%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (114 samples, 0.02%)</title><rect x="98.9592%" y="917" width="0.0158%" height="15" fill="rgb(215,210,22)" fg:x="712180" fg:w="114"/><text x="99.2092%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (114 samples, 0.02%)</title><rect x="98.9592%" y="901" width="0.0158%" height="15" fill="rgb(218,43,5)" fg:x="712180" fg:w="114"/><text x="99.2092%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (114 samples, 0.02%)</title><rect x="98.9592%" y="885" width="0.0158%" height="15" fill="rgb(216,11,5)" fg:x="712180" fg:w="114"/><text x="99.2092%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (114 samples, 0.02%)</title><rect x="98.9592%" y="869" width="0.0158%" height="15" fill="rgb(209,82,29)" fg:x="712180" fg:w="114"/><text x="99.2092%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (114 samples, 0.02%)</title><rect x="98.9592%" y="853" width="0.0158%" height="15" fill="rgb(244,115,12)" fg:x="712180" fg:w="114"/><text x="99.2092%" y="863.50"></text></g><g><title>sled-io-2 (101 samples, 0.01%)</title><rect x="98.9751%" y="965" width="0.0140%" height="15" fill="rgb(222,82,18)" fg:x="712294" fg:w="101"/><text x="99.2251%" y="975.50"></text></g><g><title>[libc.so.6] (101 samples, 0.01%)</title><rect x="98.9751%" y="949" width="0.0140%" height="15" fill="rgb(249,227,8)" fg:x="712294" fg:w="101"/><text x="99.2251%" y="959.50"></text></g><g><title>[libc.so.6] (101 samples, 0.01%)</title><rect x="98.9751%" y="933" width="0.0140%" height="15" fill="rgb(253,141,45)" fg:x="712294" fg:w="101"/><text x="99.2251%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (101 samples, 0.01%)</title><rect x="98.9751%" y="917" width="0.0140%" height="15" fill="rgb(234,184,4)" fg:x="712294" fg:w="101"/><text x="99.2251%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (101 samples, 0.01%)</title><rect x="98.9751%" y="901" width="0.0140%" height="15" fill="rgb(218,194,23)" fg:x="712294" fg:w="101"/><text x="99.2251%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (101 samples, 0.01%)</title><rect x="98.9751%" y="885" width="0.0140%" height="15" fill="rgb(235,66,41)" fg:x="712294" fg:w="101"/><text x="99.2251%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (101 samples, 0.01%)</title><rect x="98.9751%" y="869" width="0.0140%" height="15" fill="rgb(245,217,1)" fg:x="712294" fg:w="101"/><text x="99.2251%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (101 samples, 0.01%)</title><rect x="98.9751%" y="853" width="0.0140%" height="15" fill="rgb(229,91,1)" fg:x="712294" fg:w="101"/><text x="99.2251%" y="863.50"></text></g><g><title>sled-io-3 (114 samples, 0.02%)</title><rect x="98.9891%" y="965" width="0.0158%" height="15" fill="rgb(207,101,30)" fg:x="712395" fg:w="114"/><text x="99.2391%" y="975.50"></text></g><g><title>[libc.so.6] (114 samples, 0.02%)</title><rect x="98.9891%" y="949" width="0.0158%" height="15" fill="rgb(223,82,49)" fg:x="712395" fg:w="114"/><text x="99.2391%" y="959.50"></text></g><g><title>[libc.so.6] (114 samples, 0.02%)</title><rect x="98.9891%" y="933" width="0.0158%" height="15" fill="rgb(218,167,17)" fg:x="712395" fg:w="114"/><text x="99.2391%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (114 samples, 0.02%)</title><rect x="98.9891%" y="917" width="0.0158%" height="15" fill="rgb(208,103,14)" fg:x="712395" fg:w="114"/><text x="99.2391%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (114 samples, 0.02%)</title><rect x="98.9891%" y="901" width="0.0158%" height="15" fill="rgb(238,20,8)" fg:x="712395" fg:w="114"/><text x="99.2391%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (114 samples, 0.02%)</title><rect x="98.9891%" y="885" width="0.0158%" height="15" fill="rgb(218,80,54)" fg:x="712395" fg:w="114"/><text x="99.2391%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (114 samples, 0.02%)</title><rect x="98.9891%" y="869" width="0.0158%" height="15" fill="rgb(240,144,17)" fg:x="712395" fg:w="114"/><text x="99.2391%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (113 samples, 0.02%)</title><rect x="98.9893%" y="853" width="0.0157%" height="15" fill="rgb(245,27,50)" fg:x="712396" fg:w="113"/><text x="99.2393%" y="863.50"></text></g><g><title>sled-io-4 (108 samples, 0.02%)</title><rect x="99.0050%" y="965" width="0.0150%" height="15" fill="rgb(251,51,7)" fg:x="712509" fg:w="108"/><text x="99.2550%" y="975.50"></text></g><g><title>[libc.so.6] (108 samples, 0.02%)</title><rect x="99.0050%" y="949" width="0.0150%" height="15" fill="rgb(245,217,29)" fg:x="712509" fg:w="108"/><text x="99.2550%" y="959.50"></text></g><g><title>[libc.so.6] (108 samples, 0.02%)</title><rect x="99.0050%" y="933" width="0.0150%" height="15" fill="rgb(221,176,29)" fg:x="712509" fg:w="108"/><text x="99.2550%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (108 samples, 0.02%)</title><rect x="99.0050%" y="917" width="0.0150%" height="15" fill="rgb(212,180,24)" fg:x="712509" fg:w="108"/><text x="99.2550%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (108 samples, 0.02%)</title><rect x="99.0050%" y="901" width="0.0150%" height="15" fill="rgb(254,24,2)" fg:x="712509" fg:w="108"/><text x="99.2550%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (108 samples, 0.02%)</title><rect x="99.0050%" y="885" width="0.0150%" height="15" fill="rgb(230,100,2)" fg:x="712509" fg:w="108"/><text x="99.2550%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (108 samples, 0.02%)</title><rect x="99.0050%" y="869" width="0.0150%" height="15" fill="rgb(219,142,25)" fg:x="712509" fg:w="108"/><text x="99.2550%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (108 samples, 0.02%)</title><rect x="99.0050%" y="853" width="0.0150%" height="15" fill="rgb(240,73,43)" fg:x="712509" fg:w="108"/><text x="99.2550%" y="863.50"></text></g><g><title>[libc.so.6] (93 samples, 0.01%)</title><rect x="99.0200%" y="949" width="0.0129%" height="15" fill="rgb(214,114,15)" fg:x="712617" fg:w="93"/><text x="99.2700%" y="959.50"></text></g><g><title>[libc.so.6] (93 samples, 0.01%)</title><rect x="99.0200%" y="933" width="0.0129%" height="15" fill="rgb(207,130,4)" fg:x="712617" fg:w="93"/><text x="99.2700%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (93 samples, 0.01%)</title><rect x="99.0200%" y="917" width="0.0129%" height="15" fill="rgb(221,25,40)" fg:x="712617" fg:w="93"/><text x="99.2700%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (93 samples, 0.01%)</title><rect x="99.0200%" y="901" width="0.0129%" height="15" fill="rgb(241,184,7)" fg:x="712617" fg:w="93"/><text x="99.2700%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (93 samples, 0.01%)</title><rect x="99.0200%" y="885" width="0.0129%" height="15" fill="rgb(235,159,4)" fg:x="712617" fg:w="93"/><text x="99.2700%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (93 samples, 0.01%)</title><rect x="99.0200%" y="869" width="0.0129%" height="15" fill="rgb(214,87,48)" fg:x="712617" fg:w="93"/><text x="99.2700%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (92 samples, 0.01%)</title><rect x="99.0201%" y="853" width="0.0128%" height="15" fill="rgb(246,198,24)" fg:x="712618" fg:w="92"/><text x="99.2701%" y="863.50"></text></g><g><title>sled-io-5 (95 samples, 0.01%)</title><rect x="99.0200%" y="965" width="0.0132%" height="15" fill="rgb(209,66,40)" fg:x="712617" fg:w="95"/><text x="99.2700%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (79 samples, 0.01%)</title><rect x="99.0332%" y="837" width="0.0110%" height="15" fill="rgb(233,147,39)" fg:x="712712" fg:w="79"/><text x="99.2832%" y="847.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (79 samples, 0.01%)</title><rect x="99.0332%" y="821" width="0.0110%" height="15" fill="rgb(231,145,52)" fg:x="712712" fg:w="79"/><text x="99.2832%" y="831.50"></text></g><g><title>sled-io-6 (138 samples, 0.02%)</title><rect x="99.0332%" y="965" width="0.0192%" height="15" fill="rgb(206,20,26)" fg:x="712712" fg:w="138"/><text x="99.2832%" y="975.50"></text></g><g><title>[libc.so.6] (138 samples, 0.02%)</title><rect x="99.0332%" y="949" width="0.0192%" height="15" fill="rgb(238,220,4)" fg:x="712712" fg:w="138"/><text x="99.2832%" y="959.50"></text></g><g><title>[libc.so.6] (138 samples, 0.02%)</title><rect x="99.0332%" y="933" width="0.0192%" height="15" fill="rgb(252,195,42)" fg:x="712712" fg:w="138"/><text x="99.2832%" y="943.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (138 samples, 0.02%)</title><rect x="99.0332%" y="917" width="0.0192%" height="15" fill="rgb(209,10,6)" fg:x="712712" fg:w="138"/><text x="99.2832%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (138 samples, 0.02%)</title><rect x="99.0332%" y="901" width="0.0192%" height="15" fill="rgb(229,3,52)" fg:x="712712" fg:w="138"/><text x="99.2832%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (138 samples, 0.02%)</title><rect x="99.0332%" y="885" width="0.0192%" height="15" fill="rgb(253,49,37)" fg:x="712712" fg:w="138"/><text x="99.2832%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (138 samples, 0.02%)</title><rect x="99.0332%" y="869" width="0.0192%" height="15" fill="rgb(240,103,49)" fg:x="712712" fg:w="138"/><text x="99.2832%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (138 samples, 0.02%)</title><rect x="99.0332%" y="853" width="0.0192%" height="15" fill="rgb(250,182,30)" fg:x="712712" fg:w="138"/><text x="99.2832%" y="863.50"></text></g><g><title>[unknown] (89 samples, 0.01%)</title><rect x="99.0554%" y="933" width="0.0124%" height="15" fill="rgb(248,8,30)" fg:x="712872" fg:w="89"/><text x="99.3054%" y="943.50"></text></g><g><title>[unknown] (74 samples, 0.01%)</title><rect x="99.0575%" y="917" width="0.0103%" height="15" fill="rgb(237,120,30)" fg:x="712887" fg:w="74"/><text x="99.3075%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (104 samples, 0.01%)</title><rect x="99.0722%" y="869" width="0.0145%" height="15" fill="rgb(221,146,34)" fg:x="712993" fg:w="104"/><text x="99.3222%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (97 samples, 0.01%)</title><rect x="99.0732%" y="853" width="0.0135%" height="15" fill="rgb(242,55,13)" fg:x="713000" fg:w="97"/><text x="99.3232%" y="863.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (80 samples, 0.01%)</title><rect x="99.0755%" y="837" width="0.0111%" height="15" fill="rgb(242,112,31)" fg:x="713017" fg:w="80"/><text x="99.3255%" y="847.50"></text></g><g><title>core::fmt::Formatter::pad_integral (134 samples, 0.02%)</title><rect x="99.1407%" y="757" width="0.0186%" height="15" fill="rgb(249,192,27)" fg:x="713486" fg:w="134"/><text x="99.3907%" y="767.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (239 samples, 0.03%)</title><rect x="99.1300%" y="789" width="0.0332%" height="15" fill="rgb(208,204,44)" fg:x="713409" fg:w="239"/><text x="99.3800%" y="799.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (233 samples, 0.03%)</title><rect x="99.1309%" y="773" width="0.0324%" height="15" fill="rgb(208,93,54)" fg:x="713415" fg:w="233"/><text x="99.3809%" y="783.50"></text></g><g><title>core::fmt::run (298 samples, 0.04%)</title><rect x="99.1221%" y="805" width="0.0414%" height="15" fill="rgb(242,1,31)" fg:x="713352" fg:w="298"/><text x="99.3721%" y="815.50"></text></g><g><title>core::fmt::write (429 samples, 0.06%)</title><rect x="99.1090%" y="821" width="0.0596%" height="15" fill="rgb(241,83,25)" fg:x="713258" fg:w="429"/><text x="99.3590%" y="831.50"></text></g><g><title>&lt;[u8] as bitcoin_hashes::hex::ToHex&gt;::to_hex (454 samples, 0.06%)</title><rect x="99.1065%" y="837" width="0.0631%" height="15" fill="rgb(205,169,50)" fg:x="713240" fg:w="454"/><text x="99.3565%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.02%)</title><rect x="99.1696%" y="837" width="0.0170%" height="15" fill="rgb(239,186,37)" fg:x="713694" fg:w="122"/><text x="99.4196%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (78 samples, 0.01%)</title><rect x="99.2041%" y="789" width="0.0108%" height="15" fill="rgb(205,221,10)" fg:x="713942" fg:w="78"/><text x="99.4541%" y="799.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (250 samples, 0.03%)</title><rect x="99.1900%" y="837" width="0.0347%" height="15" fill="rgb(218,196,15)" fg:x="713841" fg:w="250"/><text x="99.4400%" y="847.50"></text></g><g><title>utreexo_wallet::electrum::electrum_protocol::ElectrumServer&lt;Blockchain&gt;::main_loop::{{closure}}::{{closure}}::{{closure}} (201 samples, 0.03%)</title><rect x="99.1969%" y="821" width="0.0279%" height="15" fill="rgb(218,196,35)" fg:x="713890" fg:w="201"/><text x="99.4469%" y="831.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (181 samples, 0.03%)</title><rect x="99.1996%" y="805" width="0.0252%" height="15" fill="rgb(233,63,24)" fg:x="713910" fg:w="181"/><text x="99.4496%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (98 samples, 0.01%)</title><rect x="99.2283%" y="837" width="0.0136%" height="15" fill="rgb(225,8,4)" fg:x="714116" fg:w="98"/><text x="99.4783%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (76 samples, 0.01%)</title><rect x="99.2313%" y="821" width="0.0106%" height="15" fill="rgb(234,105,35)" fg:x="714138" fg:w="76"/><text x="99.4813%" y="831.50"></text></g><g><title>bitcoin::consensus::encode::serialize (134 samples, 0.02%)</title><rect x="99.2419%" y="837" width="0.0186%" height="15" fill="rgb(236,21,32)" fg:x="714214" fg:w="134"/><text x="99.4919%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (123 samples, 0.02%)</title><rect x="99.2434%" y="821" width="0.0171%" height="15" fill="rgb(228,109,6)" fg:x="714225" fg:w="123"/><text x="99.4934%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 samples, 0.02%)</title><rect x="99.2445%" y="805" width="0.0160%" height="15" fill="rgb(229,215,31)" fg:x="714233" fg:w="115"/><text x="99.4945%" y="815.50"></text></g><g><title>realloc (88 samples, 0.01%)</title><rect x="99.2483%" y="789" width="0.0122%" height="15" fill="rgb(221,52,54)" fg:x="714260" fg:w="88"/><text x="99.4983%" y="799.50"></text></g><g><title>[libc.so.6] (207 samples, 0.03%)</title><rect x="99.2826%" y="805" width="0.0288%" height="15" fill="rgb(252,129,43)" fg:x="714507" fg:w="207"/><text x="99.5326%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (321 samples, 0.04%)</title><rect x="99.2670%" y="837" width="0.0446%" height="15" fill="rgb(248,183,27)" fg:x="714395" fg:w="321"/><text x="99.5170%" y="847.50"></text></g><g><title>cfree (293 samples, 0.04%)</title><rect x="99.2709%" y="821" width="0.0407%" height="15" fill="rgb(250,0,22)" fg:x="714423" fg:w="293"/><text x="99.5209%" y="831.50"></text></g><g><title>malloc (97 samples, 0.01%)</title><rect x="99.3155%" y="837" width="0.0135%" height="15" fill="rgb(213,166,10)" fg:x="714744" fg:w="97"/><text x="99.5655%" y="847.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (77 samples, 0.01%)</title><rect x="99.3792%" y="789" width="0.0107%" height="15" fill="rgb(207,163,36)" fg:x="715202" fg:w="77"/><text x="99.6292%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (227 samples, 0.03%)</title><rect x="99.3956%" y="757" width="0.0315%" height="15" fill="rgb(208,122,22)" fg:x="715320" fg:w="227"/><text x="99.6456%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (501 samples, 0.07%)</title><rect x="99.3578%" y="805" width="0.0696%" height="15" fill="rgb(207,104,49)" fg:x="715048" fg:w="501"/><text x="99.6078%" y="815.50"></text></g><g><title>std::io::Write::write_all (270 samples, 0.04%)</title><rect x="99.3899%" y="789" width="0.0375%" height="15" fill="rgb(248,211,50)" fg:x="715279" fg:w="270"/><text x="99.6399%" y="799.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (244 samples, 0.03%)</title><rect x="99.3935%" y="773" width="0.0339%" height="15" fill="rgb(217,13,45)" fg:x="715305" fg:w="244"/><text x="99.6435%" y="783.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,798 samples, 0.25%)</title><rect x="99.4406%" y="789" width="0.2498%" height="15" fill="rgb(211,216,49)" fg:x="715644" fg:w="1798"/><text x="99.6906%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,751 samples, 0.24%)</title><rect x="99.4471%" y="773" width="0.2433%" height="15" fill="rgb(221,58,53)" fg:x="715691" fg:w="1751"/><text x="99.6971%" y="783.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,846 samples, 0.26%)</title><rect x="99.4364%" y="805" width="0.2565%" height="15" fill="rgb(220,112,41)" fg:x="715614" fg:w="1846"/><text x="99.6864%" y="815.50"></text></g><g><title>[libc.so.6] (143 samples, 0.02%)</title><rect x="99.8245%" y="741" width="0.0199%" height="15" fill="rgb(236,38,28)" fg:x="718407" fg:w="143"/><text x="100.0745%" y="751.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,030 samples, 0.14%)</title><rect x="99.7021%" y="757" width="0.1431%" height="15" fill="rgb(227,195,22)" fg:x="717526" fg:w="1030"/><text x="99.9521%" y="767.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (1,097 samples, 0.15%)</title><rect x="99.6929%" y="805" width="0.1524%" height="15" fill="rgb(214,55,33)" fg:x="717460" fg:w="1097"/><text x="99.9429%" y="815.50"></text></g><g><title>std::io::Write::write_all (1,084 samples, 0.15%)</title><rect x="99.6947%" y="789" width="0.1506%" height="15" fill="rgb(248,80,13)" fg:x="717473" fg:w="1084"/><text x="99.9447%" y="799.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,055 samples, 0.15%)</title><rect x="99.6988%" y="773" width="0.1466%" height="15" fill="rgb(238,52,6)" fg:x="717502" fg:w="1055"/><text x="99.9488%" y="783.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (3,778 samples, 0.52%)</title><rect x="99.3416%" y="821" width="0.5250%" height="15" fill="rgb(224,198,47)" fg:x="714932" fg:w="3778"/><text x="99.5916%" y="831.50"></text></g><g><title>std::io::Write::write_all (153 samples, 0.02%)</title><rect x="99.8453%" y="805" width="0.0213%" height="15" fill="rgb(233,171,20)" fg:x="718557" fg:w="153"/><text x="100.0953%" y="815.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (126 samples, 0.02%)</title><rect x="99.8491%" y="789" width="0.0175%" height="15" fill="rgb(241,30,25)" fg:x="718584" fg:w="126"/><text x="100.0991%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (101 samples, 0.01%)</title><rect x="99.8526%" y="773" width="0.0140%" height="15" fill="rgb(207,171,38)" fg:x="718609" fg:w="101"/><text x="100.1026%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (79 samples, 0.01%)</title><rect x="99.8762%" y="805" width="0.0110%" height="15" fill="rgb(234,70,1)" fg:x="718779" fg:w="79"/><text x="100.1262%" y="815.50"></text></g><g><title>async_io::driver::block_on (5,890 samples, 0.82%)</title><rect x="99.0689%" y="901" width="0.8184%" height="15" fill="rgb(232,178,18)" fg:x="712969" fg:w="5890"/><text x="99.3189%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,890 samples, 0.82%)</title><rect x="99.0689%" y="885" width="0.8184%" height="15" fill="rgb(241,78,40)" fg:x="712969" fg:w="5890"/><text x="99.3189%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,754 samples, 0.80%)</title><rect x="99.0878%" y="869" width="0.7995%" height="15" fill="rgb(222,35,25)" fg:x="713105" fg:w="5754"/><text x="99.3378%" y="879.50"></text></g><g><title>utreexo_wallet::electrum::electrum_protocol::ElectrumServer&lt;Blockchain&gt;::main_loop::{{closure}} (5,718 samples, 0.79%)</title><rect x="99.0928%" y="853" width="0.7945%" height="15" fill="rgb(207,92,16)" fg:x="713141" fg:w="5718"/><text x="99.3428%" y="863.50"></text></g><g><title>utreexo_wallet::address_cache::AddressCache&lt;D&gt;::block_process (4,018 samples, 0.56%)</title><rect x="99.3290%" y="837" width="0.5583%" height="15" fill="rgb(216,59,51)" fg:x="714841" fg:w="4018"/><text x="99.5790%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (149 samples, 0.02%)</title><rect x="99.8666%" y="821" width="0.0207%" height="15" fill="rgb(213,80,28)" fg:x="718710" fg:w="149"/><text x="100.1166%" y="831.50"></text></g><g><title>std::sys::unix::futex::futex_wait (671 samples, 0.09%)</title><rect x="99.8979%" y="805" width="0.0932%" height="15" fill="rgb(220,93,7)" fg:x="718935" fg:w="671"/><text x="100.1479%" y="815.50"></text></g><g><title>syscall (609 samples, 0.08%)</title><rect x="99.9065%" y="789" width="0.0846%" height="15" fill="rgb(225,24,44)" fg:x="718997" fg:w="609"/><text x="100.1565%" y="799.50"></text></g><g><title>[unknown] (601 samples, 0.08%)</title><rect x="99.9076%" y="773" width="0.0835%" height="15" fill="rgb(243,74,40)" fg:x="719005" fg:w="601"/><text x="100.1576%" y="783.50"></text></g><g><title>[unknown] (560 samples, 0.08%)</title><rect x="99.9133%" y="757" width="0.0778%" height="15" fill="rgb(228,39,7)" fg:x="719046" fg:w="560"/><text x="100.1633%" y="767.50"></text></g><g><title>[unknown] (525 samples, 0.07%)</title><rect x="99.9182%" y="741" width="0.0730%" height="15" fill="rgb(227,79,8)" fg:x="719081" fg:w="525"/><text x="100.1682%" y="751.50"></text></g><g><title>[unknown] (513 samples, 0.07%)</title><rect x="99.9198%" y="725" width="0.0713%" height="15" fill="rgb(236,58,11)" fg:x="719093" fg:w="513"/><text x="100.1698%" y="735.50"></text></g><g><title>[unknown] (488 samples, 0.07%)</title><rect x="99.9233%" y="709" width="0.0678%" height="15" fill="rgb(249,63,35)" fg:x="719118" fg:w="488"/><text x="100.1733%" y="719.50"></text></g><g><title>[unknown] (438 samples, 0.06%)</title><rect x="99.9302%" y="693" width="0.0609%" height="15" fill="rgb(252,114,16)" fg:x="719168" fg:w="438"/><text x="100.1802%" y="703.50"></text></g><g><title>[unknown] (380 samples, 0.05%)</title><rect x="99.9383%" y="677" width="0.0528%" height="15" fill="rgb(254,151,24)" fg:x="719226" fg:w="380"/><text x="100.1883%" y="687.50"></text></g><g><title>[unknown] (365 samples, 0.05%)</title><rect x="99.9404%" y="661" width="0.0507%" height="15" fill="rgb(253,54,39)" fg:x="719241" fg:w="365"/><text x="100.1904%" y="671.50"></text></g><g><title>[unknown] (319 samples, 0.04%)</title><rect x="99.9468%" y="645" width="0.0443%" height="15" fill="rgb(243,25,45)" fg:x="719287" fg:w="319"/><text x="100.1968%" y="655.50"></text></g><g><title>[unknown] (270 samples, 0.04%)</title><rect x="99.9536%" y="629" width="0.0375%" height="15" fill="rgb(234,134,9)" fg:x="719336" fg:w="270"/><text x="100.2036%" y="639.50"></text></g><g><title>[unknown] (183 samples, 0.03%)</title><rect x="99.9657%" y="613" width="0.0254%" height="15" fill="rgb(227,166,31)" fg:x="719423" fg:w="183"/><text x="100.2157%" y="623.50"></text></g><g><title>[unknown] (112 samples, 0.02%)</title><rect x="99.9755%" y="597" width="0.0156%" height="15" fill="rgb(245,143,41)" fg:x="719494" fg:w="112"/><text x="100.2255%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (693 samples, 0.10%)</title><rect x="99.8969%" y="837" width="0.0963%" height="15" fill="rgb(238,181,32)" fg:x="718928" fg:w="693"/><text x="100.1469%" y="847.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (688 samples, 0.10%)</title><rect x="99.8976%" y="821" width="0.0956%" height="15" fill="rgb(224,113,18)" fg:x="718933" fg:w="688"/><text x="100.1476%" y="831.50"></text></g><g><title>parking::Parker::park (715 samples, 0.10%)</title><rect x="99.8944%" y="869" width="0.0994%" height="15" fill="rgb(240,229,28)" fg:x="718910" fg:w="715"/><text x="100.1444%" y="879.50"></text></g><g><title>parking::Inner::park (713 samples, 0.10%)</title><rect x="99.8947%" y="853" width="0.0991%" height="15" fill="rgb(250,185,3)" fg:x="718912" fg:w="713"/><text x="100.1447%" y="863.50"></text></g><g><title>[unknown] (6,773 samples, 0.94%)</title><rect x="99.0535%" y="949" width="0.9411%" height="15" fill="rgb(212,59,25)" fg:x="712858" fg:w="6773"/><text x="99.3035%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,665 samples, 0.93%)</title><rect x="99.0685%" y="933" width="0.9261%" height="15" fill="rgb(221,87,20)" fg:x="712966" fg:w="6665"/><text x="99.3185%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,662 samples, 0.93%)</title><rect x="99.0689%" y="917" width="0.9257%" height="15" fill="rgb(213,74,28)" fg:x="712969" fg:w="6662"/><text x="99.3189%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (772 samples, 0.11%)</title><rect x="99.8873%" y="901" width="0.1073%" height="15" fill="rgb(224,132,34)" fg:x="718859" fg:w="772"/><text x="100.1373%" y="911.50"></text></g><g><title>async_io::driver::block_on (772 samples, 0.11%)</title><rect x="99.8873%" y="885" width="0.1073%" height="15" fill="rgb(222,101,24)" fg:x="718859" fg:w="772"/><text x="100.1373%" y="895.50"></text></g><g><title>all (719,670 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(254,142,4)" fg:x="0" fg:w="719670"/><text x="0.2500%" y="991.50"></text></g><g><title>utreexo-wallet (6,820 samples, 0.95%)</title><rect x="99.0523%" y="965" width="0.9477%" height="15" fill="rgb(230,229,49)" fg:x="712850" fg:w="6820"/><text x="99.3023%" y="975.50"></text></g></svg></svg>