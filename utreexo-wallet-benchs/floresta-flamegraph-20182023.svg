<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="773.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="177635"><g><title>epoll_wait (44 samples, 0.02%)</title><rect x="0.0208%" y="533" width="0.0248%" height="15" fill="rgb(227,0,7)" fg:x="37" fg:w="44"/><text x="0.2708%" y="543.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="0.0214%" y="517" width="0.0242%" height="15" fill="rgb(217,0,24)" fg:x="38" fg:w="43"/><text x="0.2714%" y="527.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="0.0214%" y="501" width="0.0242%" height="15" fill="rgb(221,193,54)" fg:x="38" fg:w="43"/><text x="0.2714%" y="511.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="0.0220%" y="485" width="0.0236%" height="15" fill="rgb(248,212,6)" fg:x="39" fg:w="42"/><text x="0.2720%" y="495.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="0.0220%" y="469" width="0.0236%" height="15" fill="rgb(208,68,35)" fg:x="39" fg:w="42"/><text x="0.2720%" y="479.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="0.0236%" y="453" width="0.0220%" height="15" fill="rgb(232,128,0)" fg:x="42" fg:w="39"/><text x="0.2736%" y="463.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="0.0281%" y="437" width="0.0175%" height="15" fill="rgb(207,160,47)" fg:x="50" fg:w="31"/><text x="0.2781%" y="447.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="0.0298%" y="421" width="0.0158%" height="15" fill="rgb(228,23,34)" fg:x="53" fg:w="28"/><text x="0.2798%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="0.0315%" y="405" width="0.0141%" height="15" fill="rgb(218,30,26)" fg:x="56" fg:w="25"/><text x="0.2815%" y="415.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="0.0327%" y="389" width="0.0129%" height="15" fill="rgb(220,122,19)" fg:x="58" fg:w="23"/><text x="0.2827%" y="399.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.0355%" y="373" width="0.0101%" height="15" fill="rgb(250,228,42)" fg:x="63" fg:w="18"/><text x="0.2855%" y="383.50"></text></g><g><title>async_io::reactor::ReactorLock::react (118 samples, 0.07%)</title><rect x="0.0045%" y="581" width="0.0664%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="118"/><text x="0.2545%" y="591.50"></text></g><g><title>polling::Poller::wait (93 samples, 0.05%)</title><rect x="0.0186%" y="565" width="0.0524%" height="15" fill="rgb(216,20,37)" fg:x="33" fg:w="93"/><text x="0.2686%" y="575.50"></text></g><g><title>polling::epoll::Poller::wait (89 samples, 0.05%)</title><rect x="0.0208%" y="549" width="0.0501%" height="15" fill="rgb(206,188,39)" fg:x="37" fg:w="89"/><text x="0.2708%" y="559.50"></text></g><g><title>timerfd_settime (19 samples, 0.01%)</title><rect x="0.0602%" y="533" width="0.0107%" height="15" fill="rgb(217,207,13)" fg:x="107" fg:w="19"/><text x="0.3102%" y="543.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="0.0602%" y="517" width="0.0107%" height="15" fill="rgb(231,73,38)" fg:x="107" fg:w="19"/><text x="0.3102%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (428 samples, 0.24%)</title><rect x="0.0743%" y="533" width="0.2409%" height="15" fill="rgb(225,20,46)" fg:x="132" fg:w="428"/><text x="0.3243%" y="543.50"></text></g><g><title>syscall (413 samples, 0.23%)</title><rect x="0.0828%" y="517" width="0.2325%" height="15" fill="rgb(210,31,41)" fg:x="147" fg:w="413"/><text x="0.3328%" y="527.50"></text></g><g><title>[unknown] (406 samples, 0.23%)</title><rect x="0.0867%" y="501" width="0.2286%" height="15" fill="rgb(221,200,47)" fg:x="154" fg:w="406"/><text x="0.3367%" y="511.50"></text></g><g><title>[unknown] (392 samples, 0.22%)</title><rect x="0.0946%" y="485" width="0.2207%" height="15" fill="rgb(226,26,5)" fg:x="168" fg:w="392"/><text x="0.3446%" y="495.50"></text></g><g><title>[unknown] (379 samples, 0.21%)</title><rect x="0.1019%" y="469" width="0.2134%" height="15" fill="rgb(249,33,26)" fg:x="181" fg:w="379"/><text x="0.3519%" y="479.50"></text></g><g><title>[unknown] (370 samples, 0.21%)</title><rect x="0.1070%" y="453" width="0.2083%" height="15" fill="rgb(235,183,28)" fg:x="190" fg:w="370"/><text x="0.3570%" y="463.50"></text></g><g><title>[unknown] (366 samples, 0.21%)</title><rect x="0.1092%" y="437" width="0.2060%" height="15" fill="rgb(221,5,38)" fg:x="194" fg:w="366"/><text x="0.3592%" y="447.50"></text></g><g><title>[unknown] (348 samples, 0.20%)</title><rect x="0.1193%" y="421" width="0.1959%" height="15" fill="rgb(247,18,42)" fg:x="212" fg:w="348"/><text x="0.3693%" y="431.50"></text></g><g><title>[unknown] (329 samples, 0.19%)</title><rect x="0.1300%" y="405" width="0.1852%" height="15" fill="rgb(241,131,45)" fg:x="231" fg:w="329"/><text x="0.3800%" y="415.50"></text></g><g><title>[unknown] (311 samples, 0.18%)</title><rect x="0.1402%" y="389" width="0.1751%" height="15" fill="rgb(249,31,29)" fg:x="249" fg:w="311"/><text x="0.3902%" y="399.50"></text></g><g><title>[unknown] (271 samples, 0.15%)</title><rect x="0.1627%" y="373" width="0.1526%" height="15" fill="rgb(225,111,53)" fg:x="289" fg:w="271"/><text x="0.4127%" y="383.50"></text></g><g><title>[unknown] (212 samples, 0.12%)</title><rect x="0.1959%" y="357" width="0.1193%" height="15" fill="rgb(238,160,17)" fg:x="348" fg:w="212"/><text x="0.4459%" y="367.50"></text></g><g><title>[unknown] (139 samples, 0.08%)</title><rect x="0.2370%" y="341" width="0.0783%" height="15" fill="rgb(214,148,48)" fg:x="421" fg:w="139"/><text x="0.4870%" y="351.50"></text></g><g><title>[unknown] (96 samples, 0.05%)</title><rect x="0.2612%" y="325" width="0.0540%" height="15" fill="rgb(232,36,49)" fg:x="464" fg:w="96"/><text x="0.5112%" y="335.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="0.2939%" y="309" width="0.0214%" height="15" fill="rgb(209,103,24)" fg:x="522" fg:w="38"/><text x="0.5439%" y="319.50"></text></g><g><title>parking::Inner::park (435 samples, 0.24%)</title><rect x="0.0721%" y="581" width="0.2449%" height="15" fill="rgb(229,88,8)" fg:x="128" fg:w="435"/><text x="0.3221%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (433 samples, 0.24%)</title><rect x="0.0732%" y="565" width="0.2438%" height="15" fill="rgb(213,181,19)" fg:x="130" fg:w="433"/><text x="0.3232%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (433 samples, 0.24%)</title><rect x="0.0732%" y="549" width="0.2438%" height="15" fill="rgb(254,191,54)" fg:x="130" fg:w="433"/><text x="0.3232%" y="559.50"></text></g><g><title>std::sys::unix::futex::futex_wait (32 samples, 0.02%)</title><rect x="0.3169%" y="565" width="0.0180%" height="15" fill="rgb(241,83,37)" fg:x="563" fg:w="32"/><text x="0.5669%" y="575.50"></text></g><g><title>syscall (32 samples, 0.02%)</title><rect x="0.3169%" y="549" width="0.0180%" height="15" fill="rgb(233,36,39)" fg:x="563" fg:w="32"/><text x="0.5669%" y="559.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="0.3169%" y="533" width="0.0180%" height="15" fill="rgb(226,3,54)" fg:x="563" fg:w="32"/><text x="0.5669%" y="543.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="0.3169%" y="517" width="0.0180%" height="15" fill="rgb(245,192,40)" fg:x="563" fg:w="32"/><text x="0.5669%" y="527.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="0.3175%" y="501" width="0.0175%" height="15" fill="rgb(238,167,29)" fg:x="564" fg:w="31"/><text x="0.5675%" y="511.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="0.3175%" y="485" width="0.0175%" height="15" fill="rgb(232,182,51)" fg:x="564" fg:w="31"/><text x="0.5675%" y="495.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="0.3175%" y="469" width="0.0175%" height="15" fill="rgb(231,60,39)" fg:x="564" fg:w="31"/><text x="0.5675%" y="479.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="0.3175%" y="453" width="0.0175%" height="15" fill="rgb(208,69,12)" fg:x="564" fg:w="31"/><text x="0.5675%" y="463.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="0.3181%" y="437" width="0.0169%" height="15" fill="rgb(235,93,37)" fg:x="565" fg:w="30"/><text x="0.5681%" y="447.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="0.3186%" y="421" width="0.0163%" height="15" fill="rgb(213,116,39)" fg:x="566" fg:w="29"/><text x="0.5686%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="0.3209%" y="405" width="0.0141%" height="15" fill="rgb(222,207,29)" fg:x="570" fg:w="25"/><text x="0.5709%" y="415.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="0.3237%" y="389" width="0.0113%" height="15" fill="rgb(206,96,30)" fg:x="575" fg:w="20"/><text x="0.5737%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (33 samples, 0.02%)</title><rect x="0.3169%" y="581" width="0.0186%" height="15" fill="rgb(218,138,4)" fg:x="563" fg:w="33"/><text x="0.5669%" y="591.50"></text></g><g><title>[libc.so.6] (597 samples, 0.34%)</title><rect x="0.0000%" y="709" width="0.3361%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="597"/><text x="0.2500%" y="719.50"></text></g><g><title>[libc.so.6] (597 samples, 0.34%)</title><rect x="0.0000%" y="693" width="0.3361%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="597"/><text x="0.2500%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (597 samples, 0.34%)</title><rect x="0.0000%" y="677" width="0.3361%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="597"/><text x="0.2500%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (597 samples, 0.34%)</title><rect x="0.0000%" y="661" width="0.3361%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="597"/><text x="0.2500%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (597 samples, 0.34%)</title><rect x="0.0000%" y="645" width="0.3361%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="597"/><text x="0.2500%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (597 samples, 0.34%)</title><rect x="0.0000%" y="629" width="0.3361%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="597"/><text x="0.2500%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (597 samples, 0.34%)</title><rect x="0.0000%" y="613" width="0.3361%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="597"/><text x="0.2500%" y="623.50"></text></g><g><title>async_io::driver::main_loop (597 samples, 0.34%)</title><rect x="0.0000%" y="597" width="0.3361%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="597"/><text x="0.2500%" y="607.50"></text></g><g><title>async-io (610 samples, 0.34%)</title><rect x="0.0000%" y="725" width="0.3434%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="610"/><text x="0.2500%" y="735.50"></text></g><g><title>[anon] (33 samples, 0.02%)</title><rect x="0.3479%" y="709" width="0.0186%" height="15" fill="rgb(217,147,25)" fg:x="618" fg:w="33"/><text x="0.5979%" y="719.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (102 samples, 0.06%)</title><rect x="0.4346%" y="549" width="0.0574%" height="15" fill="rgb(247,81,37)" fg:x="772" fg:w="102"/><text x="0.6846%" y="559.50"></text></g><g><title>&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (68 samples, 0.04%)</title><rect x="0.4537%" y="533" width="0.0383%" height="15" fill="rgb(209,12,38)" fg:x="806" fg:w="68"/><text x="0.7037%" y="543.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (60 samples, 0.03%)</title><rect x="0.4582%" y="517" width="0.0338%" height="15" fill="rgb(227,1,9)" fg:x="814" fg:w="60"/><text x="0.7082%" y="527.50"></text></g><g><title>async_executor::State::notify (20 samples, 0.01%)</title><rect x="0.6243%" y="533" width="0.0113%" height="15" fill="rgb(248,47,43)" fg:x="1109" fg:w="20"/><text x="0.8743%" y="543.50"></text></g><g><title>async_executor::Ticker::sleep (129 samples, 0.07%)</title><rect x="0.6356%" y="533" width="0.0726%" height="15" fill="rgb(221,10,30)" fg:x="1129" fg:w="129"/><text x="0.8856%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (19 samples, 0.01%)</title><rect x="0.6975%" y="517" width="0.0107%" height="15" fill="rgb(210,229,1)" fg:x="1239" fg:w="19"/><text x="0.9475%" y="527.50"></text></g><g><title>async_executor::Ticker::wake (34 samples, 0.02%)</title><rect x="0.7082%" y="533" width="0.0191%" height="15" fill="rgb(222,148,37)" fg:x="1258" fg:w="34"/><text x="0.9582%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (172 samples, 0.10%)</title><rect x="0.7408%" y="517" width="0.0968%" height="15" fill="rgb(234,67,33)" fg:x="1316" fg:w="172"/><text x="0.9908%" y="527.50"></text></g><g><title>async_executor::steal (200 samples, 0.11%)</title><rect x="0.7273%" y="533" width="0.1126%" height="15" fill="rgb(247,98,35)" fg:x="1292" fg:w="200"/><text x="0.9773%" y="543.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (229 samples, 0.13%)</title><rect x="0.8399%" y="533" width="0.1289%" height="15" fill="rgb(247,138,52)" fg:x="1492" fg:w="229"/><text x="1.0899%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (76 samples, 0.04%)</title><rect x="0.9688%" y="533" width="0.0428%" height="15" fill="rgb(213,79,30)" fg:x="1721" fg:w="76"/><text x="1.2188%" y="543.50"></text></g><g><title>async_io::reactor::Reactor::notify (323 samples, 0.18%)</title><rect x="1.0358%" y="517" width="0.1818%" height="15" fill="rgb(246,177,23)" fg:x="1840" fg:w="323"/><text x="1.2858%" y="527.50"></text></g><g><title>polling::Poller::notify (319 samples, 0.18%)</title><rect x="1.0381%" y="501" width="0.1796%" height="15" fill="rgb(230,62,27)" fg:x="1844" fg:w="319"/><text x="1.2881%" y="511.50"></text></g><g><title>write (315 samples, 0.18%)</title><rect x="1.0403%" y="485" width="0.1773%" height="15" fill="rgb(216,154,8)" fg:x="1848" fg:w="315"/><text x="1.2903%" y="495.50"></text></g><g><title>[unknown] (302 samples, 0.17%)</title><rect x="1.0477%" y="469" width="0.1700%" height="15" fill="rgb(244,35,45)" fg:x="1861" fg:w="302"/><text x="1.2977%" y="479.50"></text></g><g><title>[unknown] (286 samples, 0.16%)</title><rect x="1.0567%" y="453" width="0.1610%" height="15" fill="rgb(251,115,12)" fg:x="1877" fg:w="286"/><text x="1.3067%" y="463.50"></text></g><g><title>[unknown] (259 samples, 0.15%)</title><rect x="1.0719%" y="437" width="0.1458%" height="15" fill="rgb(240,54,50)" fg:x="1904" fg:w="259"/><text x="1.3219%" y="447.50"></text></g><g><title>[unknown] (246 samples, 0.14%)</title><rect x="1.0792%" y="421" width="0.1385%" height="15" fill="rgb(233,84,52)" fg:x="1917" fg:w="246"/><text x="1.3292%" y="431.50"></text></g><g><title>[unknown] (226 samples, 0.13%)</title><rect x="1.0904%" y="405" width="0.1272%" height="15" fill="rgb(207,117,47)" fg:x="1937" fg:w="226"/><text x="1.3404%" y="415.50"></text></g><g><title>[unknown] (197 samples, 0.11%)</title><rect x="1.1068%" y="389" width="0.1109%" height="15" fill="rgb(249,43,39)" fg:x="1966" fg:w="197"/><text x="1.3568%" y="399.50"></text></g><g><title>[unknown] (169 samples, 0.10%)</title><rect x="1.1225%" y="373" width="0.0951%" height="15" fill="rgb(209,38,44)" fg:x="1994" fg:w="169"/><text x="1.3725%" y="383.50"></text></g><g><title>[unknown] (130 samples, 0.07%)</title><rect x="1.1445%" y="357" width="0.0732%" height="15" fill="rgb(236,212,23)" fg:x="2033" fg:w="130"/><text x="1.3945%" y="367.50"></text></g><g><title>[unknown] (120 samples, 0.07%)</title><rect x="1.1501%" y="341" width="0.0676%" height="15" fill="rgb(242,79,21)" fg:x="2043" fg:w="120"/><text x="1.4001%" y="351.50"></text></g><g><title>[unknown] (108 samples, 0.06%)</title><rect x="1.1569%" y="325" width="0.0608%" height="15" fill="rgb(211,96,35)" fg:x="2055" fg:w="108"/><text x="1.4069%" y="335.50"></text></g><g><title>[unknown] (102 samples, 0.06%)</title><rect x="1.1602%" y="309" width="0.0574%" height="15" fill="rgb(253,215,40)" fg:x="2061" fg:w="102"/><text x="1.4102%" y="319.50"></text></g><g><title>[unknown] (79 samples, 0.04%)</title><rect x="1.1732%" y="293" width="0.0445%" height="15" fill="rgb(211,81,21)" fg:x="2084" fg:w="79"/><text x="1.4232%" y="303.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="1.1974%" y="277" width="0.0203%" height="15" fill="rgb(208,190,38)" fg:x="2127" fg:w="36"/><text x="1.4474%" y="287.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="1.2075%" y="261" width="0.0101%" height="15" fill="rgb(235,213,38)" fg:x="2145" fg:w="18"/><text x="1.4575%" y="271.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1,749 samples, 0.98%)</title><rect x="0.4926%" y="549" width="0.9846%" height="15" fill="rgb(237,122,38)" fg:x="875" fg:w="1749"/><text x="0.7426%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (825 samples, 0.46%)</title><rect x="1.0128%" y="533" width="0.4644%" height="15" fill="rgb(244,218,35)" fg:x="1799" fg:w="825"/><text x="1.2628%" y="543.50"></text></g><g><title>parking::Unparker::unpark (454 samples, 0.26%)</title><rect x="1.2216%" y="517" width="0.2556%" height="15" fill="rgb(240,68,47)" fg:x="2170" fg:w="454"/><text x="1.4716%" y="527.50"></text></g><g><title>syscall (409 samples, 0.23%)</title><rect x="1.2469%" y="501" width="0.2302%" height="15" fill="rgb(210,16,53)" fg:x="2215" fg:w="409"/><text x="1.4969%" y="511.50"></text></g><g><title>[unknown] (400 samples, 0.23%)</title><rect x="1.2520%" y="485" width="0.2252%" height="15" fill="rgb(235,124,12)" fg:x="2224" fg:w="400"/><text x="1.5020%" y="495.50"></text></g><g><title>[unknown] (368 samples, 0.21%)</title><rect x="1.2700%" y="469" width="0.2072%" height="15" fill="rgb(224,169,11)" fg:x="2256" fg:w="368"/><text x="1.5200%" y="479.50"></text></g><g><title>[unknown] (331 samples, 0.19%)</title><rect x="1.2908%" y="453" width="0.1863%" height="15" fill="rgb(250,166,2)" fg:x="2293" fg:w="331"/><text x="1.5408%" y="463.50"></text></g><g><title>[unknown] (316 samples, 0.18%)</title><rect x="1.2993%" y="437" width="0.1779%" height="15" fill="rgb(242,216,29)" fg:x="2308" fg:w="316"/><text x="1.5493%" y="447.50"></text></g><g><title>[unknown] (308 samples, 0.17%)</title><rect x="1.3038%" y="421" width="0.1734%" height="15" fill="rgb(230,116,27)" fg:x="2316" fg:w="308"/><text x="1.5538%" y="431.50"></text></g><g><title>[unknown] (281 samples, 0.16%)</title><rect x="1.3190%" y="405" width="0.1582%" height="15" fill="rgb(228,99,48)" fg:x="2343" fg:w="281"/><text x="1.5690%" y="415.50"></text></g><g><title>[unknown] (223 samples, 0.13%)</title><rect x="1.3516%" y="389" width="0.1255%" height="15" fill="rgb(253,11,6)" fg:x="2401" fg:w="223"/><text x="1.6016%" y="399.50"></text></g><g><title>[unknown] (174 samples, 0.10%)</title><rect x="1.3792%" y="373" width="0.0980%" height="15" fill="rgb(247,143,39)" fg:x="2450" fg:w="174"/><text x="1.6292%" y="383.50"></text></g><g><title>[unknown] (80 samples, 0.05%)</title><rect x="1.4322%" y="357" width="0.0450%" height="15" fill="rgb(236,97,10)" fg:x="2544" fg:w="80"/><text x="1.6822%" y="367.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="1.4564%" y="341" width="0.0208%" height="15" fill="rgb(233,208,19)" fg:x="2587" fg:w="37"/><text x="1.7064%" y="351.50"></text></g><g><title>core::fmt::Formatter::new (119 samples, 0.07%)</title><rect x="1.7519%" y="453" width="0.0670%" height="15" fill="rgb(216,164,2)" fg:x="3112" fg:w="119"/><text x="2.0019%" y="463.50"></text></g><g><title>core::fmt::getcount (21 samples, 0.01%)</title><rect x="1.8414%" y="437" width="0.0118%" height="15" fill="rgb(220,129,5)" fg:x="3271" fg:w="21"/><text x="2.0914%" y="447.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (27 samples, 0.02%)</title><rect x="1.8690%" y="421" width="0.0152%" height="15" fill="rgb(242,17,10)" fg:x="3320" fg:w="27"/><text x="2.1190%" y="431.50"></text></g><g><title>[libc.so.6] (42 samples, 0.02%)</title><rect x="1.9197%" y="373" width="0.0236%" height="15" fill="rgb(242,107,0)" fg:x="3410" fg:w="42"/><text x="2.1697%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (83 samples, 0.05%)</title><rect x="1.8971%" y="389" width="0.0467%" height="15" fill="rgb(251,28,31)" fg:x="3370" fg:w="83"/><text x="2.1471%" y="399.50"></text></g><g><title>&lt;core::fmt::num::LowerHex as core::fmt::num::GenericRadix&gt;::digit (18 samples, 0.01%)</title><rect x="1.9439%" y="389" width="0.0101%" height="15" fill="rgb(233,223,10)" fg:x="3453" fg:w="18"/><text x="2.1939%" y="399.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (24 samples, 0.01%)</title><rect x="1.9653%" y="389" width="0.0135%" height="15" fill="rgb(215,21,27)" fg:x="3491" fg:w="24"/><text x="2.2153%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (24 samples, 0.01%)</title><rect x="1.9653%" y="373" width="0.0135%" height="15" fill="rgb(232,23,21)" fg:x="3491" fg:w="24"/><text x="2.2153%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (24 samples, 0.01%)</title><rect x="1.9653%" y="357" width="0.0135%" height="15" fill="rgb(244,5,23)" fg:x="3491" fg:w="24"/><text x="2.2153%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (46 samples, 0.03%)</title><rect x="2.0531%" y="373" width="0.0259%" height="15" fill="rgb(226,81,46)" fg:x="3647" fg:w="46"/><text x="2.3031%" y="383.50"></text></g><g><title>core::fmt::Formatter::padding (18 samples, 0.01%)</title><rect x="2.0790%" y="373" width="0.0101%" height="15" fill="rgb(247,70,30)" fg:x="3693" fg:w="18"/><text x="2.3290%" y="383.50"></text></g><g><title>core::fmt::Formatter::pad_integral (205 samples, 0.12%)</title><rect x="1.9805%" y="389" width="0.1154%" height="15" fill="rgb(212,68,19)" fg:x="3518" fg:w="205"/><text x="2.2305%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (469 samples, 0.26%)</title><rect x="1.8532%" y="437" width="0.2640%" height="15" fill="rgb(240,187,13)" fg:x="3292" fg:w="469"/><text x="2.1032%" y="447.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (413 samples, 0.23%)</title><rect x="1.8848%" y="421" width="0.2325%" height="15" fill="rgb(223,113,26)" fg:x="3348" fg:w="413"/><text x="2.1348%" y="431.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (398 samples, 0.22%)</title><rect x="1.8932%" y="405" width="0.2241%" height="15" fill="rgb(206,192,2)" fg:x="3363" fg:w="398"/><text x="2.1432%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (27 samples, 0.02%)</title><rect x="2.1021%" y="389" width="0.0152%" height="15" fill="rgb(241,108,4)" fg:x="3734" fg:w="27"/><text x="2.3521%" y="399.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (27 samples, 0.02%)</title><rect x="2.1021%" y="373" width="0.0152%" height="15" fill="rgb(247,173,49)" fg:x="3734" fg:w="27"/><text x="2.3521%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (27 samples, 0.02%)</title><rect x="2.1021%" y="357" width="0.0152%" height="15" fill="rgb(224,114,35)" fg:x="3734" fg:w="27"/><text x="2.3521%" y="367.50"></text></g><g><title>core::fmt::run (532 samples, 0.30%)</title><rect x="1.8189%" y="453" width="0.2995%" height="15" fill="rgb(245,159,27)" fg:x="3231" fg:w="532"/><text x="2.0689%" y="463.50"></text></g><g><title>core::fmt::write (765 samples, 0.43%)</title><rect x="1.7086%" y="469" width="0.4307%" height="15" fill="rgb(245,172,44)" fg:x="3035" fg:w="765"/><text x="1.9586%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (30 samples, 0.02%)</title><rect x="2.1223%" y="453" width="0.0169%" height="15" fill="rgb(236,23,11)" fg:x="3770" fg:w="30"/><text x="2.3723%" y="463.50"></text></g><g><title>&lt;[u8] as bitcoin_hashes::hex::ToHex&gt;::to_hex (853 samples, 0.48%)</title><rect x="1.6663%" y="485" width="0.4802%" height="15" fill="rgb(205,117,38)" fg:x="2960" fg:w="853"/><text x="1.9163%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (23 samples, 0.01%)</title><rect x="2.1595%" y="453" width="0.0129%" height="15" fill="rgb(237,72,25)" fg:x="3836" fg:w="23"/><text x="2.4095%" y="463.50"></text></g><g><title>cfree (43 samples, 0.02%)</title><rect x="2.1724%" y="453" width="0.0242%" height="15" fill="rgb(244,70,9)" fg:x="3859" fg:w="43"/><text x="2.4224%" y="463.50"></text></g><g><title>[libc.so.6] (27 samples, 0.02%)</title><rect x="2.1814%" y="437" width="0.0152%" height="15" fill="rgb(217,125,39)" fg:x="3875" fg:w="27"/><text x="2.4314%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.08%)</title><rect x="2.1465%" y="485" width="0.0811%" height="15" fill="rgb(235,36,10)" fg:x="3813" fg:w="144"/><text x="2.3965%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (139 samples, 0.08%)</title><rect x="2.1494%" y="469" width="0.0783%" height="15" fill="rgb(251,123,47)" fg:x="3818" fg:w="139"/><text x="2.3994%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (55 samples, 0.03%)</title><rect x="2.1966%" y="453" width="0.0310%" height="15" fill="rgb(221,13,13)" fg:x="3902" fg:w="55"/><text x="2.4466%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (38 samples, 0.02%)</title><rect x="2.2062%" y="437" width="0.0214%" height="15" fill="rgb(238,131,9)" fg:x="3919" fg:w="38"/><text x="2.4562%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (28 samples, 0.02%)</title><rect x="2.2118%" y="421" width="0.0158%" height="15" fill="rgb(211,50,8)" fg:x="3929" fg:w="28"/><text x="2.4618%" y="431.50"></text></g><g><title>&lt;async_lock::rwlock::Write&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.02%)</title><rect x="2.2276%" y="485" width="0.0203%" height="15" fill="rgb(245,182,24)" fg:x="3957" fg:w="36"/><text x="2.4776%" y="495.50"></text></g><g><title>event_listener::Event::listen (19 samples, 0.01%)</title><rect x="2.2372%" y="469" width="0.0107%" height="15" fill="rgb(242,14,37)" fg:x="3974" fg:w="19"/><text x="2.4872%" y="479.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (63 samples, 0.04%)</title><rect x="2.2946%" y="437" width="0.0355%" height="15" fill="rgb(246,228,12)" fg:x="4076" fg:w="63"/><text x="2.5446%" y="447.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (47 samples, 0.03%)</title><rect x="2.3317%" y="437" width="0.0265%" height="15" fill="rgb(213,55,15)" fg:x="4142" fg:w="47"/><text x="2.5817%" y="447.50"></text></g><g><title>event_listener::Event::listen (21 samples, 0.01%)</title><rect x="2.3582%" y="437" width="0.0118%" height="15" fill="rgb(209,9,3)" fg:x="4189" fg:w="21"/><text x="2.6082%" y="447.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (170 samples, 0.10%)</title><rect x="2.2749%" y="453" width="0.0957%" height="15" fill="rgb(230,59,30)" fg:x="4041" fg:w="170"/><text x="2.5249%" y="463.50"></text></g><g><title>floresta_electrum::electrum_protocol::ElectrumServer&lt;Blockchain&gt;::main_loop::{{closure}}::{{closure}}::{{closure}} (198 samples, 0.11%)</title><rect x="2.2597%" y="469" width="0.1115%" height="15" fill="rgb(209,121,21)" fg:x="4014" fg:w="198"/><text x="2.5097%" y="479.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (230 samples, 0.13%)</title><rect x="2.2524%" y="485" width="0.1295%" height="15" fill="rgb(220,109,13)" fg:x="4001" fg:w="230"/><text x="2.5024%" y="495.50"></text></g><g><title>futures_util::async_await::random::gen_index (19 samples, 0.01%)</title><rect x="2.3712%" y="469" width="0.0107%" height="15" fill="rgb(232,18,1)" fg:x="4212" fg:w="19"/><text x="2.6212%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (66 samples, 0.04%)</title><rect x="2.3925%" y="485" width="0.0372%" height="15" fill="rgb(215,41,42)" fg:x="4250" fg:w="66"/><text x="2.6425%" y="495.50"></text></g><g><title>malloc (18 samples, 0.01%)</title><rect x="2.4196%" y="469" width="0.0101%" height="15" fill="rgb(224,123,36)" fg:x="4298" fg:w="18"/><text x="2.6696%" y="479.50"></text></g><g><title>[libc.so.6] (141 samples, 0.08%)</title><rect x="2.4787%" y="405" width="0.0794%" height="15" fill="rgb(240,125,3)" fg:x="4403" fg:w="141"/><text x="2.7287%" y="415.50"></text></g><g><title>[libc.so.6] (124 samples, 0.07%)</title><rect x="2.4882%" y="389" width="0.0698%" height="15" fill="rgb(205,98,50)" fg:x="4420" fg:w="124"/><text x="2.7382%" y="399.50"></text></g><g><title>bitcoin::consensus::encode::serialize (250 samples, 0.14%)</title><rect x="2.4297%" y="485" width="0.1407%" height="15" fill="rgb(205,185,37)" fg:x="4316" fg:w="250"/><text x="2.6797%" y="495.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (246 samples, 0.14%)</title><rect x="2.4320%" y="469" width="0.1385%" height="15" fill="rgb(238,207,15)" fg:x="4320" fg:w="246"/><text x="2.6820%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (228 samples, 0.13%)</title><rect x="2.4421%" y="453" width="0.1284%" height="15" fill="rgb(213,199,42)" fg:x="4338" fg:w="228"/><text x="2.6921%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (213 samples, 0.12%)</title><rect x="2.4505%" y="437" width="0.1199%" height="15" fill="rgb(235,201,11)" fg:x="4353" fg:w="213"/><text x="2.7005%" y="447.50"></text></g><g><title>realloc (191 samples, 0.11%)</title><rect x="2.4629%" y="421" width="0.1075%" height="15" fill="rgb(207,46,11)" fg:x="4375" fg:w="191"/><text x="2.7129%" y="431.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="2.5941%" y="453" width="0.0146%" height="15" fill="rgb(241,35,35)" fg:x="4608" fg:w="26"/><text x="2.8441%" y="463.50"></text></g><g><title>[libc.so.6] (176 samples, 0.10%)</title><rect x="2.5789%" y="469" width="0.0991%" height="15" fill="rgb(243,32,47)" fg:x="4581" fg:w="176"/><text x="2.8289%" y="479.50"></text></g><g><title>__lll_lock_wait_private (123 samples, 0.07%)</title><rect x="2.6087%" y="453" width="0.0692%" height="15" fill="rgb(247,202,23)" fg:x="4634" fg:w="123"/><text x="2.8587%" y="463.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="2.6121%" y="437" width="0.0659%" height="15" fill="rgb(219,102,11)" fg:x="4640" fg:w="117"/><text x="2.8621%" y="447.50"></text></g><g><title>[unknown] (111 samples, 0.06%)</title><rect x="2.6155%" y="421" width="0.0625%" height="15" fill="rgb(243,110,44)" fg:x="4646" fg:w="111"/><text x="2.8655%" y="431.50"></text></g><g><title>[unknown] (103 samples, 0.06%)</title><rect x="2.6200%" y="405" width="0.0580%" height="15" fill="rgb(222,74,54)" fg:x="4654" fg:w="103"/><text x="2.8700%" y="415.50"></text></g><g><title>[unknown] (100 samples, 0.06%)</title><rect x="2.6217%" y="389" width="0.0563%" height="15" fill="rgb(216,99,12)" fg:x="4657" fg:w="100"/><text x="2.8717%" y="399.50"></text></g><g><title>[unknown] (100 samples, 0.06%)</title><rect x="2.6217%" y="373" width="0.0563%" height="15" fill="rgb(226,22,26)" fg:x="4657" fg:w="100"/><text x="2.8717%" y="383.50"></text></g><g><title>[unknown] (94 samples, 0.05%)</title><rect x="2.6250%" y="357" width="0.0529%" height="15" fill="rgb(217,163,10)" fg:x="4663" fg:w="94"/><text x="2.8750%" y="367.50"></text></g><g><title>[unknown] (90 samples, 0.05%)</title><rect x="2.6273%" y="341" width="0.0507%" height="15" fill="rgb(213,25,53)" fg:x="4667" fg:w="90"/><text x="2.8773%" y="351.50"></text></g><g><title>[unknown] (84 samples, 0.05%)</title><rect x="2.6307%" y="325" width="0.0473%" height="15" fill="rgb(252,105,26)" fg:x="4673" fg:w="84"/><text x="2.8807%" y="335.50"></text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="2.6357%" y="309" width="0.0422%" height="15" fill="rgb(220,39,43)" fg:x="4682" fg:w="75"/><text x="2.8857%" y="319.50"></text></g><g><title>[unknown] (64 samples, 0.04%)</title><rect x="2.6419%" y="293" width="0.0360%" height="15" fill="rgb(229,68,48)" fg:x="4693" fg:w="64"/><text x="2.8919%" y="303.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="2.6571%" y="277" width="0.0208%" height="15" fill="rgb(252,8,32)" fg:x="4720" fg:w="37"/><text x="2.9071%" y="287.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="2.6650%" y="261" width="0.0129%" height="15" fill="rgb(223,20,43)" fg:x="4734" fg:w="23"/><text x="2.9150%" y="271.50"></text></g><g><title>cfree (200 samples, 0.11%)</title><rect x="2.5704%" y="485" width="0.1126%" height="15" fill="rgb(229,81,49)" fg:x="4566" fg:w="200"/><text x="2.8204%" y="495.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="3.3422%" y="437" width="0.0141%" height="15" fill="rgb(236,28,36)" fg:x="5937" fg:w="25"/><text x="3.5922%" y="447.50"></text></g><g><title>[libc.so.6] (533 samples, 0.30%)</title><rect x="3.0675%" y="453" width="0.3001%" height="15" fill="rgb(249,185,26)" fg:x="5449" fg:w="533"/><text x="3.3175%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (1,229 samples, 0.69%)</title><rect x="2.6830%" y="485" width="0.6919%" height="15" fill="rgb(249,174,33)" fg:x="4766" fg:w="1229"/><text x="2.9330%" y="495.50"></text></g><g><title>cfree (1,039 samples, 0.58%)</title><rect x="2.7900%" y="469" width="0.5849%" height="15" fill="rgb(233,201,37)" fg:x="4956" fg:w="1039"/><text x="3.0400%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::rwlock::Write&lt;bool&gt;&gt; (19 samples, 0.01%)</title><rect x="3.3749%" y="485" width="0.0107%" height="15" fill="rgb(221,78,26)" fg:x="5995" fg:w="19"/><text x="3.6249%" y="495.50"></text></g><g><title>floresta_watch_only::AddressCache&lt;D&gt;::block_process (48 samples, 0.03%)</title><rect x="3.3997%" y="485" width="0.0270%" height="15" fill="rgb(250,127,30)" fg:x="6039" fg:w="48"/><text x="3.6497%" y="495.50"></text></g><g><title>floresta_electrum::electrum_protocol::ElectrumServer&lt;Blockchain&gt;::main_loop::{{closure}} (3,451 samples, 1.94%)</title><rect x="1.5397%" y="501" width="1.9427%" height="15" fill="rgb(230,49,44)" fg:x="2735" fg:w="3451"/><text x="1.7897%" y="511.50">f..</text></g><g><title>malloc (99 samples, 0.06%)</title><rect x="3.4267%" y="485" width="0.0557%" height="15" fill="rgb(229,67,23)" fg:x="6087" fg:w="99"/><text x="3.6767%" y="495.50"></text></g><g><title>&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (25 samples, 0.01%)</title><rect x="3.5567%" y="437" width="0.0141%" height="15" fill="rgb(249,83,47)" fg:x="6318" fg:w="25"/><text x="3.8067%" y="447.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="3.5567%" y="421" width="0.0141%" height="15" fill="rgb(215,43,3)" fg:x="6318" fg:w="25"/><text x="3.8067%" y="431.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (48 samples, 0.03%)</title><rect x="3.5815%" y="437" width="0.0270%" height="15" fill="rgb(238,154,13)" fg:x="6362" fg:w="48"/><text x="3.8315%" y="447.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (137 samples, 0.08%)</title><rect x="3.5415%" y="453" width="0.0771%" height="15" fill="rgb(219,56,2)" fg:x="6291" fg:w="137"/><text x="3.7915%" y="463.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (194 samples, 0.11%)</title><rect x="3.6237%" y="421" width="0.1092%" height="15" fill="rgb(233,0,4)" fg:x="6437" fg:w="194"/><text x="3.8737%" y="431.50"></text></g><g><title>polling::Poller::notify (178 samples, 0.10%)</title><rect x="3.6327%" y="405" width="0.1002%" height="15" fill="rgb(235,30,7)" fg:x="6453" fg:w="178"/><text x="3.8827%" y="415.50"></text></g><g><title>write (164 samples, 0.09%)</title><rect x="3.6406%" y="389" width="0.0923%" height="15" fill="rgb(250,79,13)" fg:x="6467" fg:w="164"/><text x="3.8906%" y="399.50"></text></g><g><title>[unknown] (151 samples, 0.09%)</title><rect x="3.6479%" y="373" width="0.0850%" height="15" fill="rgb(211,146,34)" fg:x="6480" fg:w="151"/><text x="3.8979%" y="383.50"></text></g><g><title>[unknown] (137 samples, 0.08%)</title><rect x="3.6558%" y="357" width="0.0771%" height="15" fill="rgb(228,22,38)" fg:x="6494" fg:w="137"/><text x="3.9058%" y="367.50"></text></g><g><title>[unknown] (119 samples, 0.07%)</title><rect x="3.6659%" y="341" width="0.0670%" height="15" fill="rgb(235,168,5)" fg:x="6512" fg:w="119"/><text x="3.9159%" y="351.50"></text></g><g><title>[unknown] (111 samples, 0.06%)</title><rect x="3.6704%" y="325" width="0.0625%" height="15" fill="rgb(221,155,16)" fg:x="6520" fg:w="111"/><text x="3.9204%" y="335.50"></text></g><g><title>[unknown] (96 samples, 0.05%)</title><rect x="3.6789%" y="309" width="0.0540%" height="15" fill="rgb(215,215,53)" fg:x="6535" fg:w="96"/><text x="3.9289%" y="319.50"></text></g><g><title>[unknown] (80 samples, 0.05%)</title><rect x="3.6879%" y="293" width="0.0450%" height="15" fill="rgb(223,4,10)" fg:x="6551" fg:w="80"/><text x="3.9379%" y="303.50"></text></g><g><title>[unknown] (63 samples, 0.04%)</title><rect x="3.6975%" y="277" width="0.0355%" height="15" fill="rgb(234,103,6)" fg:x="6568" fg:w="63"/><text x="3.9475%" y="287.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="3.7082%" y="261" width="0.0248%" height="15" fill="rgb(227,97,0)" fg:x="6587" fg:w="44"/><text x="3.9582%" y="271.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="3.7138%" y="245" width="0.0191%" height="15" fill="rgb(234,150,53)" fg:x="6597" fg:w="34"/><text x="3.9638%" y="255.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="3.7172%" y="229" width="0.0158%" height="15" fill="rgb(228,201,54)" fg:x="6603" fg:w="28"/><text x="3.9672%" y="239.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="3.7172%" y="213" width="0.0158%" height="15" fill="rgb(222,22,37)" fg:x="6603" fg:w="28"/><text x="3.9672%" y="223.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="3.7222%" y="197" width="0.0107%" height="15" fill="rgb(237,53,32)" fg:x="6612" fg:w="19"/><text x="3.9722%" y="207.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (218 samples, 0.12%)</title><rect x="3.6187%" y="453" width="0.1227%" height="15" fill="rgb(233,25,53)" fg:x="6428" fg:w="218"/><text x="3.8687%" y="463.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (218 samples, 0.12%)</title><rect x="3.6187%" y="437" width="0.1227%" height="15" fill="rgb(210,40,34)" fg:x="6428" fg:w="218"/><text x="3.8687%" y="447.50"></text></g><g><title>async_std::utils::timer_after (26 samples, 0.01%)</title><rect x="3.7509%" y="453" width="0.0146%" height="15" fill="rgb(241,220,44)" fg:x="6663" fg:w="26"/><text x="4.0009%" y="463.50"></text></g><g><title>async_io::Timer::after (24 samples, 0.01%)</title><rect x="3.7521%" y="437" width="0.0135%" height="15" fill="rgb(235,28,35)" fg:x="6665" fg:w="24"/><text x="4.0021%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (19 samples, 0.01%)</title><rect x="3.7718%" y="421" width="0.0107%" height="15" fill="rgb(210,56,17)" fg:x="6700" fg:w="19"/><text x="4.0218%" y="431.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (30 samples, 0.02%)</title><rect x="3.7667%" y="437" width="0.0169%" height="15" fill="rgb(224,130,29)" fg:x="6691" fg:w="30"/><text x="4.0167%" y="447.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="3.7836%" y="437" width="0.0124%" height="15" fill="rgb(235,212,8)" fg:x="6721" fg:w="22"/><text x="4.0336%" y="447.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer::peer_loop_inner::{{closure}}::{{closure}}::{{closure}} (485 samples, 0.27%)</title><rect x="3.5252%" y="469" width="0.2730%" height="15" fill="rgb(223,33,50)" fg:x="6262" fg:w="485"/><text x="3.7752%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;async_channel::Recv&lt;core::result::Result&lt;bitcoin::network::message::RawNetworkMessage,floresta_wire::p2p_wire::peer::PeerError&gt;&gt;&gt;&gt; (58 samples, 0.03%)</title><rect x="3.7656%" y="453" width="0.0327%" height="15" fill="rgb(219,149,13)" fg:x="6689" fg:w="58"/><text x="4.0156%" y="463.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (523 samples, 0.29%)</title><rect x="3.5089%" y="485" width="0.2944%" height="15" fill="rgb(250,156,29)" fg:x="6233" fg:w="523"/><text x="3.7589%" y="495.50"></text></g><g><title>[libc.so.6] (74 samples, 0.04%)</title><rect x="3.8033%" y="485" width="0.0417%" height="15" fill="rgb(216,193,19)" fg:x="6756" fg:w="74"/><text x="4.0533%" y="495.50"></text></g><g><title>[libc.so.6] (18 samples, 0.01%)</title><rect x="3.8951%" y="405" width="0.0101%" height="15" fill="rgb(216,135,14)" fg:x="6919" fg:w="18"/><text x="4.1451%" y="415.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="3.8855%" y="421" width="0.0203%" height="15" fill="rgb(241,47,5)" fg:x="6902" fg:w="36"/><text x="4.1355%" y="431.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (68 samples, 0.04%)</title><rect x="3.8692%" y="453" width="0.0383%" height="15" fill="rgb(233,42,35)" fg:x="6873" fg:w="68"/><text x="4.1192%" y="463.50"></text></g><g><title>malloc (41 samples, 0.02%)</title><rect x="3.8844%" y="437" width="0.0231%" height="15" fill="rgb(231,13,6)" fg:x="6900" fg:w="41"/><text x="4.1344%" y="447.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.05%)</title><rect x="3.8596%" y="469" width="0.0512%" height="15" fill="rgb(207,181,40)" fg:x="6856" fg:w="91"/><text x="4.1096%" y="479.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer::send_to_node::{{closure}} (106 samples, 0.06%)</title><rect x="3.8545%" y="485" width="0.0597%" height="15" fill="rgb(254,173,49)" fg:x="6847" fg:w="106"/><text x="4.1045%" y="495.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (98 samples, 0.06%)</title><rect x="3.9165%" y="469" width="0.0552%" height="15" fill="rgb(221,1,38)" fg:x="6957" fg:w="98"/><text x="4.1665%" y="479.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (98 samples, 0.06%)</title><rect x="3.9165%" y="453" width="0.0552%" height="15" fill="rgb(206,124,46)" fg:x="6957" fg:w="98"/><text x="4.1665%" y="463.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (97 samples, 0.05%)</title><rect x="3.9170%" y="437" width="0.0546%" height="15" fill="rgb(249,21,11)" fg:x="6958" fg:w="97"/><text x="4.1670%" y="447.50"></text></g><g><title>std::sys_common::net::TcpStream::write (97 samples, 0.05%)</title><rect x="3.9170%" y="421" width="0.0546%" height="15" fill="rgb(222,201,40)" fg:x="6958" fg:w="97"/><text x="4.1670%" y="431.50"></text></g><g><title>__send (97 samples, 0.05%)</title><rect x="3.9170%" y="405" width="0.0546%" height="15" fill="rgb(235,61,29)" fg:x="6958" fg:w="97"/><text x="4.1670%" y="415.50"></text></g><g><title>[unknown] (95 samples, 0.05%)</title><rect x="3.9181%" y="389" width="0.0535%" height="15" fill="rgb(219,207,3)" fg:x="6960" fg:w="95"/><text x="4.1681%" y="399.50"></text></g><g><title>[unknown] (93 samples, 0.05%)</title><rect x="3.9193%" y="373" width="0.0524%" height="15" fill="rgb(222,56,46)" fg:x="6962" fg:w="93"/><text x="4.1693%" y="383.50"></text></g><g><title>[unknown] (92 samples, 0.05%)</title><rect x="3.9198%" y="357" width="0.0518%" height="15" fill="rgb(239,76,54)" fg:x="6963" fg:w="92"/><text x="4.1698%" y="367.50"></text></g><g><title>[unknown] (92 samples, 0.05%)</title><rect x="3.9198%" y="341" width="0.0518%" height="15" fill="rgb(231,124,27)" fg:x="6963" fg:w="92"/><text x="4.1698%" y="351.50"></text></g><g><title>[unknown] (92 samples, 0.05%)</title><rect x="3.9198%" y="325" width="0.0518%" height="15" fill="rgb(249,195,6)" fg:x="6963" fg:w="92"/><text x="4.1698%" y="335.50"></text></g><g><title>[unknown] (92 samples, 0.05%)</title><rect x="3.9198%" y="309" width="0.0518%" height="15" fill="rgb(237,174,47)" fg:x="6963" fg:w="92"/><text x="4.1698%" y="319.50"></text></g><g><title>[unknown] (91 samples, 0.05%)</title><rect x="3.9204%" y="293" width="0.0512%" height="15" fill="rgb(206,201,31)" fg:x="6964" fg:w="91"/><text x="4.1704%" y="303.50"></text></g><g><title>[unknown] (86 samples, 0.05%)</title><rect x="3.9232%" y="277" width="0.0484%" height="15" fill="rgb(231,57,52)" fg:x="6969" fg:w="86"/><text x="4.1732%" y="287.50"></text></g><g><title>[unknown] (83 samples, 0.05%)</title><rect x="3.9249%" y="261" width="0.0467%" height="15" fill="rgb(248,177,22)" fg:x="6972" fg:w="83"/><text x="4.1749%" y="271.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="3.9277%" y="245" width="0.0439%" height="15" fill="rgb(215,211,37)" fg:x="6977" fg:w="78"/><text x="4.1777%" y="255.50"></text></g><g><title>[unknown] (73 samples, 0.04%)</title><rect x="3.9305%" y="229" width="0.0411%" height="15" fill="rgb(241,128,51)" fg:x="6982" fg:w="73"/><text x="4.1805%" y="239.50"></text></g><g><title>[unknown] (64 samples, 0.04%)</title><rect x="3.9356%" y="213" width="0.0360%" height="15" fill="rgb(227,165,31)" fg:x="6991" fg:w="64"/><text x="4.1856%" y="223.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="3.9373%" y="197" width="0.0343%" height="15" fill="rgb(228,167,24)" fg:x="6994" fg:w="61"/><text x="4.1873%" y="207.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="3.9384%" y="181" width="0.0332%" height="15" fill="rgb(228,143,12)" fg:x="6996" fg:w="59"/><text x="4.1884%" y="191.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="3.9395%" y="165" width="0.0321%" height="15" fill="rgb(249,149,8)" fg:x="6998" fg:w="57"/><text x="4.1895%" y="175.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="3.9418%" y="149" width="0.0298%" height="15" fill="rgb(243,35,44)" fg:x="7002" fg:w="53"/><text x="4.1918%" y="159.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="3.9469%" y="133" width="0.0248%" height="15" fill="rgb(246,89,9)" fg:x="7011" fg:w="44"/><text x="4.1969%" y="143.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="3.9474%" y="117" width="0.0242%" height="15" fill="rgb(233,213,13)" fg:x="7012" fg:w="43"/><text x="4.1974%" y="127.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="3.9485%" y="101" width="0.0231%" height="15" fill="rgb(233,141,41)" fg:x="7014" fg:w="41"/><text x="4.1985%" y="111.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="3.9497%" y="85" width="0.0220%" height="15" fill="rgb(239,167,4)" fg:x="7016" fg:w="39"/><text x="4.1997%" y="95.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="3.9508%" y="69" width="0.0208%" height="15" fill="rgb(209,217,16)" fg:x="7018" fg:w="37"/><text x="4.2008%" y="79.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="3.9536%" y="53" width="0.0180%" height="15" fill="rgb(219,88,35)" fg:x="7023" fg:w="32"/><text x="4.2036%" y="63.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="3.9587%" y="37" width="0.0129%" height="15" fill="rgb(220,193,23)" fg:x="7032" fg:w="23"/><text x="4.2087%" y="47.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (35 samples, 0.02%)</title><rect x="3.9857%" y="421" width="0.0197%" height="15" fill="rgb(230,90,52)" fg:x="7080" fg:w="35"/><text x="4.2357%" y="431.50"></text></g><g><title>bitcoin::consensus::encode::sha2_checksum (45 samples, 0.03%)</title><rect x="3.9857%" y="437" width="0.0253%" height="15" fill="rgb(252,106,19)" fg:x="7080" fg:w="45"/><text x="4.2357%" y="447.50"></text></g><g><title>bitcoin::consensus::encode::serialize (71 samples, 0.04%)</title><rect x="3.9722%" y="469" width="0.0400%" height="15" fill="rgb(206,74,20)" fg:x="7056" fg:w="71"/><text x="4.2222%" y="479.50"></text></g><g><title>&lt;&amp;mut T as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (71 samples, 0.04%)</title><rect x="3.9722%" y="453" width="0.0400%" height="15" fill="rgb(230,138,44)" fg:x="7056" fg:w="71"/><text x="4.2222%" y="463.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer::write::{{closure}} (173 samples, 0.10%)</title><rect x="3.9159%" y="485" width="0.0974%" height="15" fill="rgb(235,182,43)" fg:x="6956" fg:w="173"/><text x="4.1659%" y="495.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,465 samples, 2.51%)</title><rect x="1.5087%" y="533" width="2.5136%" height="15" fill="rgb(242,16,51)" fg:x="2680" fg:w="4465"/><text x="1.7587%" y="543.50">as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,432 samples, 2.50%)</title><rect x="1.5273%" y="517" width="2.4950%" height="15" fill="rgb(248,9,4)" fg:x="2713" fg:w="4432"/><text x="1.7773%" y="527.50">as..</text></g><g><title>floresta_wire::p2p_wire::peer::Peer::peer_loop_inner::{{closure}} (959 samples, 0.54%)</title><rect x="3.4824%" y="501" width="0.5399%" height="15" fill="rgb(210,31,22)" fg:x="6186" fg:w="959"/><text x="3.7324%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (43 samples, 0.02%)</title><rect x="4.0347%" y="501" width="0.0242%" height="15" fill="rgb(239,54,39)" fg:x="7167" fg:w="43"/><text x="4.2847%" y="511.50"></text></g><g><title>&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (19 samples, 0.01%)</title><rect x="4.0780%" y="437" width="0.0107%" height="15" fill="rgb(230,99,41)" fg:x="7244" fg:w="19"/><text x="4.3280%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::notify (87 samples, 0.05%)</title><rect x="4.0944%" y="421" width="0.0490%" height="15" fill="rgb(253,106,12)" fg:x="7273" fg:w="87"/><text x="4.3444%" y="431.50"></text></g><g><title>polling::Poller::notify (84 samples, 0.05%)</title><rect x="4.0960%" y="405" width="0.0473%" height="15" fill="rgb(213,46,41)" fg:x="7276" fg:w="84"/><text x="4.3460%" y="415.50"></text></g><g><title>write (80 samples, 0.05%)</title><rect x="4.0983%" y="389" width="0.0450%" height="15" fill="rgb(215,133,35)" fg:x="7280" fg:w="80"/><text x="4.3483%" y="399.50"></text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="4.1011%" y="373" width="0.0422%" height="15" fill="rgb(213,28,5)" fg:x="7285" fg:w="75"/><text x="4.3511%" y="383.50"></text></g><g><title>[unknown] (73 samples, 0.04%)</title><rect x="4.1022%" y="357" width="0.0411%" height="15" fill="rgb(215,77,49)" fg:x="7287" fg:w="73"/><text x="4.3522%" y="367.50"></text></g><g><title>[unknown] (68 samples, 0.04%)</title><rect x="4.1050%" y="341" width="0.0383%" height="15" fill="rgb(248,100,22)" fg:x="7292" fg:w="68"/><text x="4.3550%" y="351.50"></text></g><g><title>[unknown] (68 samples, 0.04%)</title><rect x="4.1050%" y="325" width="0.0383%" height="15" fill="rgb(208,67,9)" fg:x="7292" fg:w="68"/><text x="4.3550%" y="335.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="4.1090%" y="309" width="0.0343%" height="15" fill="rgb(219,133,21)" fg:x="7299" fg:w="61"/><text x="4.3590%" y="319.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="4.1169%" y="293" width="0.0265%" height="15" fill="rgb(246,46,29)" fg:x="7313" fg:w="47"/><text x="4.3669%" y="303.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="4.1197%" y="277" width="0.0236%" height="15" fill="rgb(246,185,52)" fg:x="7318" fg:w="42"/><text x="4.3697%" y="287.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="4.1219%" y="261" width="0.0214%" height="15" fill="rgb(252,136,11)" fg:x="7322" fg:w="38"/><text x="4.3719%" y="271.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="4.1242%" y="245" width="0.0191%" height="15" fill="rgb(219,138,53)" fg:x="7326" fg:w="34"/><text x="4.3742%" y="255.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="4.1259%" y="229" width="0.0175%" height="15" fill="rgb(211,51,23)" fg:x="7329" fg:w="31"/><text x="4.3759%" y="239.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="4.1264%" y="213" width="0.0169%" height="15" fill="rgb(247,221,28)" fg:x="7330" fg:w="30"/><text x="4.3764%" y="223.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="4.1309%" y="197" width="0.0124%" height="15" fill="rgb(251,222,45)" fg:x="7338" fg:w="22"/><text x="4.3809%" y="207.50"></text></g><g><title>event_listener::List::notify_additional (237 samples, 0.13%)</title><rect x="4.0701%" y="485" width="0.1334%" height="15" fill="rgb(217,162,53)" fg:x="7230" fg:w="237"/><text x="4.3201%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (229 samples, 0.13%)</title><rect x="4.0746%" y="469" width="0.1289%" height="15" fill="rgb(229,93,14)" fg:x="7238" fg:w="229"/><text x="4.3246%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (228 samples, 0.13%)</title><rect x="4.0752%" y="453" width="0.1284%" height="15" fill="rgb(209,67,49)" fg:x="7239" fg:w="228"/><text x="4.3252%" y="463.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (204 samples, 0.11%)</title><rect x="4.0887%" y="437" width="0.1148%" height="15" fill="rgb(213,87,29)" fg:x="7263" fg:w="204"/><text x="4.3387%" y="447.50"></text></g><g><title>parking::Unparker::unpark (105 samples, 0.06%)</title><rect x="4.1445%" y="421" width="0.0591%" height="15" fill="rgb(205,151,52)" fg:x="7362" fg:w="105"/><text x="4.3945%" y="431.50"></text></g><g><title>syscall (99 samples, 0.06%)</title><rect x="4.1478%" y="405" width="0.0557%" height="15" fill="rgb(253,215,39)" fg:x="7368" fg:w="99"/><text x="4.3978%" y="415.50"></text></g><g><title>[unknown] (95 samples, 0.05%)</title><rect x="4.1501%" y="389" width="0.0535%" height="15" fill="rgb(221,220,41)" fg:x="7372" fg:w="95"/><text x="4.4001%" y="399.50"></text></g><g><title>[unknown] (92 samples, 0.05%)</title><rect x="4.1518%" y="373" width="0.0518%" height="15" fill="rgb(218,133,21)" fg:x="7375" fg:w="92"/><text x="4.4018%" y="383.50"></text></g><g><title>[unknown] (85 samples, 0.05%)</title><rect x="4.1557%" y="357" width="0.0479%" height="15" fill="rgb(221,193,43)" fg:x="7382" fg:w="85"/><text x="4.4057%" y="367.50"></text></g><g><title>[unknown] (79 samples, 0.04%)</title><rect x="4.1591%" y="341" width="0.0445%" height="15" fill="rgb(240,128,52)" fg:x="7388" fg:w="79"/><text x="4.4091%" y="351.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="4.1602%" y="325" width="0.0433%" height="15" fill="rgb(253,114,12)" fg:x="7390" fg:w="77"/><text x="4.4102%" y="335.50"></text></g><g><title>[unknown] (68 samples, 0.04%)</title><rect x="4.1653%" y="309" width="0.0383%" height="15" fill="rgb(215,223,47)" fg:x="7399" fg:w="68"/><text x="4.4153%" y="319.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="4.1743%" y="293" width="0.0293%" height="15" fill="rgb(248,225,23)" fg:x="7415" fg:w="52"/><text x="4.4243%" y="303.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="4.1855%" y="277" width="0.0180%" height="15" fill="rgb(250,108,0)" fg:x="7435" fg:w="32"/><text x="4.4355%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="4.1929%" y="261" width="0.0107%" height="15" fill="rgb(228,208,7)" fg:x="7448" fg:w="19"/><text x="4.4429%" y="271.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (316 samples, 0.18%)</title><rect x="4.0279%" y="517" width="0.1779%" height="15" fill="rgb(244,45,10)" fg:x="7155" fg:w="316"/><text x="4.2779%" y="527.50"></text></g><g><title>event_listener::Event::notify_additional (257 samples, 0.14%)</title><rect x="4.0611%" y="501" width="0.1447%" height="15" fill="rgb(207,125,25)" fg:x="7214" fg:w="257"/><text x="4.3111%" y="511.50"></text></g><g><title>recv (386 samples, 0.22%)</title><rect x="4.2261%" y="405" width="0.2173%" height="15" fill="rgb(210,195,18)" fg:x="7507" fg:w="386"/><text x="4.4761%" y="415.50"></text></g><g><title>[unknown] (370 samples, 0.21%)</title><rect x="4.2351%" y="389" width="0.2083%" height="15" fill="rgb(249,80,12)" fg:x="7523" fg:w="370"/><text x="4.4851%" y="399.50"></text></g><g><title>[unknown] (356 samples, 0.20%)</title><rect x="4.2430%" y="373" width="0.2004%" height="15" fill="rgb(221,65,9)" fg:x="7537" fg:w="356"/><text x="4.4930%" y="383.50"></text></g><g><title>[unknown] (334 samples, 0.19%)</title><rect x="4.2554%" y="357" width="0.1880%" height="15" fill="rgb(235,49,36)" fg:x="7559" fg:w="334"/><text x="4.5054%" y="367.50"></text></g><g><title>[unknown] (332 samples, 0.19%)</title><rect x="4.2565%" y="341" width="0.1869%" height="15" fill="rgb(225,32,20)" fg:x="7561" fg:w="332"/><text x="4.5065%" y="351.50"></text></g><g><title>[unknown] (318 samples, 0.18%)</title><rect x="4.2644%" y="325" width="0.1790%" height="15" fill="rgb(215,141,46)" fg:x="7575" fg:w="318"/><text x="4.5144%" y="335.50"></text></g><g><title>[unknown] (313 samples, 0.18%)</title><rect x="4.2672%" y="309" width="0.1762%" height="15" fill="rgb(250,160,47)" fg:x="7580" fg:w="313"/><text x="4.5172%" y="319.50"></text></g><g><title>[unknown] (291 samples, 0.16%)</title><rect x="4.2796%" y="293" width="0.1638%" height="15" fill="rgb(216,222,40)" fg:x="7602" fg:w="291"/><text x="4.5296%" y="303.50"></text></g><g><title>[unknown] (286 samples, 0.16%)</title><rect x="4.2824%" y="277" width="0.1610%" height="15" fill="rgb(234,217,39)" fg:x="7607" fg:w="286"/><text x="4.5324%" y="287.50"></text></g><g><title>[unknown] (262 samples, 0.15%)</title><rect x="4.2959%" y="261" width="0.1475%" height="15" fill="rgb(207,178,40)" fg:x="7631" fg:w="262"/><text x="4.5459%" y="271.50"></text></g><g><title>[unknown] (238 samples, 0.13%)</title><rect x="4.3094%" y="245" width="0.1340%" height="15" fill="rgb(221,136,13)" fg:x="7655" fg:w="238"/><text x="4.5594%" y="255.50"></text></g><g><title>[unknown] (221 samples, 0.12%)</title><rect x="4.3190%" y="229" width="0.1244%" height="15" fill="rgb(249,199,10)" fg:x="7672" fg:w="221"/><text x="4.5690%" y="239.50"></text></g><g><title>[unknown] (203 samples, 0.11%)</title><rect x="4.3291%" y="213" width="0.1143%" height="15" fill="rgb(249,222,13)" fg:x="7690" fg:w="203"/><text x="4.5791%" y="223.50"></text></g><g><title>[unknown] (175 samples, 0.10%)</title><rect x="4.3449%" y="197" width="0.0985%" height="15" fill="rgb(244,185,38)" fg:x="7718" fg:w="175"/><text x="4.5949%" y="207.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="4.4141%" y="181" width="0.0293%" height="15" fill="rgb(236,202,9)" fg:x="7841" fg:w="52"/><text x="4.6641%" y="191.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="4.4169%" y="165" width="0.0265%" height="15" fill="rgb(250,229,37)" fg:x="7846" fg:w="47"/><text x="4.6669%" y="175.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="4.4209%" y="149" width="0.0225%" height="15" fill="rgb(206,174,23)" fg:x="7853" fg:w="40"/><text x="4.6709%" y="159.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="4.4226%" y="133" width="0.0208%" height="15" fill="rgb(211,33,43)" fg:x="7856" fg:w="37"/><text x="4.6726%" y="143.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="4.4231%" y="117" width="0.0203%" height="15" fill="rgb(245,58,50)" fg:x="7857" fg:w="36"/><text x="4.6731%" y="127.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="4.4242%" y="101" width="0.0191%" height="15" fill="rgb(244,68,36)" fg:x="7859" fg:w="34"/><text x="4.6742%" y="111.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="4.4254%" y="85" width="0.0180%" height="15" fill="rgb(232,229,15)" fg:x="7861" fg:w="32"/><text x="4.6754%" y="95.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="4.4265%" y="69" width="0.0169%" height="15" fill="rgb(254,30,23)" fg:x="7863" fg:w="30"/><text x="4.6765%" y="79.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="4.4310%" y="53" width="0.0124%" height="15" fill="rgb(235,160,14)" fg:x="7871" fg:w="22"/><text x="4.6810%" y="63.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (396 samples, 0.22%)</title><rect x="4.2233%" y="469" width="0.2229%" height="15" fill="rgb(212,155,44)" fg:x="7502" fg:w="396"/><text x="4.4733%" y="479.50"></text></g><g><title>std::sys_common::net::TcpStream::read (392 samples, 0.22%)</title><rect x="4.2255%" y="453" width="0.2207%" height="15" fill="rgb(226,2,50)" fg:x="7506" fg:w="392"/><text x="4.4755%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::read (392 samples, 0.22%)</title><rect x="4.2255%" y="437" width="0.2207%" height="15" fill="rgb(234,177,6)" fg:x="7506" fg:w="392"/><text x="4.4755%" y="447.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (391 samples, 0.22%)</title><rect x="4.2261%" y="421" width="0.2201%" height="15" fill="rgb(217,24,9)" fg:x="7507" fg:w="391"/><text x="4.4761%" y="431.50"></text></g><g><title>&lt;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (421 samples, 0.24%)</title><rect x="4.2137%" y="501" width="0.2370%" height="15" fill="rgb(220,13,46)" fg:x="7485" fg:w="421"/><text x="4.4637%" y="511.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (414 samples, 0.23%)</title><rect x="4.2176%" y="485" width="0.2331%" height="15" fill="rgb(239,221,27)" fg:x="7492" fg:w="414"/><text x="4.4676%" y="495.50"></text></g><g><title>&lt;async_std::io::buf_reader::BufReader&lt;R&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (470 samples, 0.26%)</title><rect x="4.2058%" y="517" width="0.2646%" height="15" fill="rgb(222,198,25)" fg:x="7471" fg:w="470"/><text x="4.4558%" y="527.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="4.4507%" y="501" width="0.0197%" height="15" fill="rgb(211,99,13)" fg:x="7906" fg:w="35"/><text x="4.7007%" y="511.50"></text></g><g><title>[libc.so.6] (119 samples, 0.07%)</title><rect x="4.4721%" y="517" width="0.0670%" height="15" fill="rgb(232,111,31)" fg:x="7944" fg:w="119"/><text x="4.7221%" y="527.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="4.5194%" y="501" width="0.0197%" height="15" fill="rgb(245,82,37)" fg:x="8028" fg:w="35"/><text x="4.7694%" y="511.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="4.5222%" y="485" width="0.0169%" height="15" fill="rgb(227,149,46)" fg:x="8033" fg:w="30"/><text x="4.7722%" y="495.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="4.5244%" y="469" width="0.0146%" height="15" fill="rgb(218,36,50)" fg:x="8037" fg:w="26"/><text x="4.7744%" y="479.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="4.5244%" y="453" width="0.0146%" height="15" fill="rgb(226,80,48)" fg:x="8037" fg:w="26"/><text x="4.7744%" y="463.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="4.5244%" y="437" width="0.0146%" height="15" fill="rgb(238,224,15)" fg:x="8037" fg:w="26"/><text x="4.7744%" y="447.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="4.5273%" y="421" width="0.0118%" height="15" fill="rgb(241,136,10)" fg:x="8042" fg:w="21"/><text x="4.7773%" y="431.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="4.5937%" y="437" width="0.0135%" height="15" fill="rgb(208,32,45)" fg:x="8160" fg:w="24"/><text x="4.8437%" y="447.50"></text></g><g><title>[libc.so.6] (90 samples, 0.05%)</title><rect x="4.5577%" y="469" width="0.0507%" height="15" fill="rgb(207,135,9)" fg:x="8096" fg:w="90"/><text x="4.8077%" y="479.50"></text></g><g><title>[libc.so.6] (88 samples, 0.05%)</title><rect x="4.5588%" y="453" width="0.0495%" height="15" fill="rgb(206,86,44)" fg:x="8098" fg:w="88"/><text x="4.8088%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (156 samples, 0.09%)</title><rect x="4.5419%" y="517" width="0.0878%" height="15" fill="rgb(245,177,15)" fg:x="8068" fg:w="156"/><text x="4.7919%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (153 samples, 0.09%)</title><rect x="4.5436%" y="501" width="0.0861%" height="15" fill="rgb(206,64,50)" fg:x="8071" fg:w="153"/><text x="4.7936%" y="511.50"></text></g><g><title>realloc (140 samples, 0.08%)</title><rect x="4.5509%" y="485" width="0.0788%" height="15" fill="rgb(234,36,40)" fg:x="8084" fg:w="140"/><text x="4.8009%" y="495.50"></text></g><g><title>__lll_lock_wake_private (30 samples, 0.02%)</title><rect x="4.6128%" y="469" width="0.0169%" height="15" fill="rgb(213,64,8)" fg:x="8194" fg:w="30"/><text x="4.8628%" y="479.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="4.6140%" y="453" width="0.0158%" height="15" fill="rgb(210,75,36)" fg:x="8196" fg:w="28"/><text x="4.8640%" y="463.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="4.6156%" y="437" width="0.0141%" height="15" fill="rgb(229,88,21)" fg:x="8199" fg:w="25"/><text x="4.8656%" y="447.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="4.6156%" y="421" width="0.0141%" height="15" fill="rgb(252,204,47)" fg:x="8199" fg:w="25"/><text x="4.8656%" y="431.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="4.6168%" y="405" width="0.0129%" height="15" fill="rgb(208,77,27)" fg:x="8201" fg:w="23"/><text x="4.8668%" y="415.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="4.6179%" y="389" width="0.0118%" height="15" fill="rgb(221,76,26)" fg:x="8203" fg:w="21"/><text x="4.8679%" y="399.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="4.6190%" y="373" width="0.0107%" height="15" fill="rgb(225,139,18)" fg:x="8205" fg:w="19"/><text x="4.8690%" y="383.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="4.6190%" y="357" width="0.0107%" height="15" fill="rgb(230,137,11)" fg:x="8205" fg:w="19"/><text x="4.8690%" y="367.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (50 samples, 0.03%)</title><rect x="5.0153%" y="421" width="0.0281%" height="15" fill="rgb(212,28,1)" fg:x="8909" fg:w="50"/><text x="5.2653%" y="431.50"></text></g><g><title>std::io::Read::read_exact (36 samples, 0.02%)</title><rect x="5.0232%" y="405" width="0.0203%" height="15" fill="rgb(248,164,17)" fg:x="8923" fg:w="36"/><text x="5.2732%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.02%)</title><rect x="5.0457%" y="421" width="0.0152%" height="15" fill="rgb(222,171,42)" fg:x="8963" fg:w="27"/><text x="5.2957%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.01%)</title><rect x="5.0463%" y="405" width="0.0146%" height="15" fill="rgb(243,84,45)" fg:x="8964" fg:w="26"/><text x="5.2963%" y="415.50"></text></g><g><title>malloc (24 samples, 0.01%)</title><rect x="5.0474%" y="389" width="0.0135%" height="15" fill="rgb(252,49,23)" fg:x="8966" fg:w="24"/><text x="5.2974%" y="399.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (113 samples, 0.06%)</title><rect x="5.0035%" y="437" width="0.0636%" height="15" fill="rgb(215,19,7)" fg:x="8888" fg:w="113"/><text x="5.2535%" y="447.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (71 samples, 0.04%)</title><rect x="5.0671%" y="437" width="0.0400%" height="15" fill="rgb(238,81,41)" fg:x="9001" fg:w="71"/><text x="5.3171%" y="447.50"></text></g><g><title>std::io::Read::read_exact (53 samples, 0.03%)</title><rect x="5.0773%" y="421" width="0.0298%" height="15" fill="rgb(210,199,37)" fg:x="9019" fg:w="53"/><text x="5.3273%" y="431.50"></text></g><g><title>[libc.so.6] (68 samples, 0.04%)</title><rect x="5.2180%" y="405" width="0.0383%" height="15" fill="rgb(244,192,49)" fg:x="9269" fg:w="68"/><text x="5.4680%" y="415.50"></text></g><g><title>__mprotect (23 samples, 0.01%)</title><rect x="5.2433%" y="389" width="0.0129%" height="15" fill="rgb(226,211,11)" fg:x="9314" fg:w="23"/><text x="5.4933%" y="399.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="5.2433%" y="373" width="0.0129%" height="15" fill="rgb(236,162,54)" fg:x="9314" fg:w="23"/><text x="5.4933%" y="383.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="5.2439%" y="357" width="0.0124%" height="15" fill="rgb(220,229,9)" fg:x="9315" fg:w="22"/><text x="5.4939%" y="367.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="5.2450%" y="341" width="0.0113%" height="15" fill="rgb(250,87,22)" fg:x="9317" fg:w="20"/><text x="5.4950%" y="351.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="5.2450%" y="325" width="0.0113%" height="15" fill="rgb(239,43,17)" fg:x="9317" fg:w="20"/><text x="5.4950%" y="335.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="5.2450%" y="309" width="0.0113%" height="15" fill="rgb(231,177,25)" fg:x="9317" fg:w="20"/><text x="5.4950%" y="319.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="5.2450%" y="293" width="0.0113%" height="15" fill="rgb(219,179,1)" fg:x="9317" fg:w="20"/><text x="5.4950%" y="303.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="5.2456%" y="277" width="0.0107%" height="15" fill="rgb(238,219,53)" fg:x="9318" fg:w="19"/><text x="5.4956%" y="287.50"></text></g><g><title>[libc.so.6] (152 samples, 0.09%)</title><rect x="5.1724%" y="421" width="0.0856%" height="15" fill="rgb(232,167,36)" fg:x="9188" fg:w="152"/><text x="5.4224%" y="431.50"></text></g><g><title>malloc (250 samples, 0.14%)</title><rect x="5.1246%" y="437" width="0.1407%" height="15" fill="rgb(244,19,51)" fg:x="9103" fg:w="250"/><text x="5.3746%" y="447.50"></text></g><g><title>[libc.so.6] (52 samples, 0.03%)</title><rect x="5.3244%" y="421" width="0.0293%" height="15" fill="rgb(224,6,22)" fg:x="9458" fg:w="52"/><text x="5.5744%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (811 samples, 0.46%)</title><rect x="4.8988%" y="453" width="0.4566%" height="15" fill="rgb(224,145,5)" fg:x="8702" fg:w="811"/><text x="5.1488%" y="463.50"></text></g><g><title>std::io::Read::read_exact (160 samples, 0.09%)</title><rect x="5.2653%" y="437" width="0.0901%" height="15" fill="rgb(234,130,49)" fg:x="9353" fg:w="160"/><text x="5.5153%" y="447.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (75 samples, 0.04%)</title><rect x="5.4449%" y="421" width="0.0422%" height="15" fill="rgb(254,6,2)" fg:x="9672" fg:w="75"/><text x="5.6949%" y="431.50"></text></g><g><title>std::io::Read::read_exact (52 samples, 0.03%)</title><rect x="5.4578%" y="405" width="0.0293%" height="15" fill="rgb(208,96,46)" fg:x="9695" fg:w="52"/><text x="5.7078%" y="415.50"></text></g><g><title>[libc.so.6] (21 samples, 0.01%)</title><rect x="5.4871%" y="421" width="0.0118%" height="15" fill="rgb(239,3,39)" fg:x="9747" fg:w="21"/><text x="5.7371%" y="431.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="5.6813%" y="357" width="0.0225%" height="15" fill="rgb(233,210,1)" fg:x="10092" fg:w="40"/><text x="5.9313%" y="367.50"></text></g><g><title>[libc.so.6] (164 samples, 0.09%)</title><rect x="5.6132%" y="373" width="0.0923%" height="15" fill="rgb(244,137,37)" fg:x="9971" fg:w="164"/><text x="5.8632%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (380 samples, 0.21%)</title><rect x="5.4995%" y="421" width="0.2139%" height="15" fill="rgb(240,136,2)" fg:x="9769" fg:w="380"/><text x="5.7495%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (364 samples, 0.20%)</title><rect x="5.5085%" y="405" width="0.2049%" height="15" fill="rgb(239,18,37)" fg:x="9785" fg:w="364"/><text x="5.7585%" y="415.50"></text></g><g><title>malloc (345 samples, 0.19%)</title><rect x="5.5192%" y="389" width="0.1942%" height="15" fill="rgb(218,185,22)" fg:x="9804" fg:w="345"/><text x="5.7692%" y="399.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (636 samples, 0.36%)</title><rect x="5.3965%" y="437" width="0.3580%" height="15" fill="rgb(225,218,4)" fg:x="9586" fg:w="636"/><text x="5.6465%" y="447.50"></text></g><g><title>std::io::Read::read_exact (73 samples, 0.04%)</title><rect x="5.7134%" y="421" width="0.0411%" height="15" fill="rgb(230,182,32)" fg:x="10149" fg:w="73"/><text x="5.9634%" y="431.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (34 samples, 0.02%)</title><rect x="5.7545%" y="437" width="0.0191%" height="15" fill="rgb(242,56,43)" fg:x="10222" fg:w="34"/><text x="6.0045%" y="447.50"></text></g><g><title>std::io::Read::read_exact (29 samples, 0.02%)</title><rect x="5.7573%" y="421" width="0.0163%" height="15" fill="rgb(233,99,24)" fg:x="10227" fg:w="29"/><text x="6.0073%" y="431.50"></text></g><g><title>[libc.so.6] (27 samples, 0.02%)</title><rect x="5.8479%" y="405" width="0.0152%" height="15" fill="rgb(234,209,42)" fg:x="10388" fg:w="27"/><text x="6.0979%" y="415.50"></text></g><g><title>[libc.so.6] (85 samples, 0.05%)</title><rect x="5.8164%" y="421" width="0.0479%" height="15" fill="rgb(227,7,12)" fg:x="10332" fg:w="85"/><text x="6.0664%" y="431.50"></text></g><g><title>malloc (162 samples, 0.09%)</title><rect x="5.7776%" y="437" width="0.0912%" height="15" fill="rgb(245,203,43)" fg:x="10263" fg:w="162"/><text x="6.0276%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (978 samples, 0.55%)</title><rect x="5.3554%" y="453" width="0.5506%" height="15" fill="rgb(238,205,33)" fg:x="9513" fg:w="978"/><text x="5.6054%" y="463.50"></text></g><g><title>std::io::Read::read_exact (66 samples, 0.04%)</title><rect x="5.8688%" y="437" width="0.0372%" height="15" fill="rgb(231,56,7)" fg:x="10425" fg:w="66"/><text x="6.1188%" y="447.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (167 samples, 0.09%)</title><rect x="5.9583%" y="437" width="0.0940%" height="15" fill="rgb(244,186,29)" fg:x="10584" fg:w="167"/><text x="6.2083%" y="447.50"></text></g><g><title>std::io::Read::read_exact (125 samples, 0.07%)</title><rect x="5.9819%" y="421" width="0.0704%" height="15" fill="rgb(234,111,31)" fg:x="10626" fg:w="125"/><text x="6.2319%" y="431.50"></text></g><g><title>[libc.so.6] (91 samples, 0.05%)</title><rect x="6.2020%" y="405" width="0.0512%" height="15" fill="rgb(241,149,10)" fg:x="11017" fg:w="91"/><text x="6.4520%" y="415.50"></text></g><g><title>__mprotect (25 samples, 0.01%)</title><rect x="6.2392%" y="389" width="0.0141%" height="15" fill="rgb(249,206,44)" fg:x="11083" fg:w="25"/><text x="6.4892%" y="399.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="6.2398%" y="373" width="0.0135%" height="15" fill="rgb(251,153,30)" fg:x="11084" fg:w="24"/><text x="6.4898%" y="383.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="6.2398%" y="357" width="0.0135%" height="15" fill="rgb(239,152,38)" fg:x="11084" fg:w="24"/><text x="6.4898%" y="367.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="6.2398%" y="341" width="0.0135%" height="15" fill="rgb(249,139,47)" fg:x="11084" fg:w="24"/><text x="6.4898%" y="351.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="6.2398%" y="325" width="0.0135%" height="15" fill="rgb(244,64,35)" fg:x="11084" fg:w="24"/><text x="6.4898%" y="335.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="6.2403%" y="309" width="0.0129%" height="15" fill="rgb(216,46,15)" fg:x="11085" fg:w="23"/><text x="6.4903%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="6.2415%" y="293" width="0.0118%" height="15" fill="rgb(250,74,19)" fg:x="11087" fg:w="21"/><text x="6.4915%" y="303.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="6.2420%" y="277" width="0.0113%" height="15" fill="rgb(249,42,33)" fg:x="11088" fg:w="20"/><text x="6.4920%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="6.2426%" y="261" width="0.0107%" height="15" fill="rgb(242,149,17)" fg:x="11089" fg:w="19"/><text x="6.4926%" y="271.50"></text></g><g><title>[libc.so.6] (219 samples, 0.12%)</title><rect x="6.1334%" y="421" width="0.1233%" height="15" fill="rgb(244,29,21)" fg:x="10895" fg:w="219"/><text x="6.3834%" y="431.50"></text></g><g><title>__libc_calloc (357 samples, 0.20%)</title><rect x="6.0602%" y="437" width="0.2010%" height="15" fill="rgb(220,130,37)" fg:x="10765" fg:w="357"/><text x="6.3102%" y="447.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (46 samples, 0.03%)</title><rect x="6.2707%" y="437" width="0.0259%" height="15" fill="rgb(211,67,2)" fg:x="11139" fg:w="46"/><text x="6.5207%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::consensus::encode::Error&gt; (63 samples, 0.04%)</title><rect x="6.2966%" y="437" width="0.0355%" height="15" fill="rgb(235,68,52)" fg:x="11185" fg:w="63"/><text x="6.5466%" y="447.50"></text></g><g><title>[libc.so.6] (32 samples, 0.02%)</title><rect x="6.3647%" y="421" width="0.0180%" height="15" fill="rgb(246,142,3)" fg:x="11306" fg:w="32"/><text x="6.6147%" y="431.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (848 samples, 0.48%)</title><rect x="5.9059%" y="453" width="0.4774%" height="15" fill="rgb(241,25,7)" fg:x="10491" fg:w="848"/><text x="6.1559%" y="463.50"></text></g><g><title>std::io::Read::read_exact (91 samples, 0.05%)</title><rect x="6.3321%" y="437" width="0.0512%" height="15" fill="rgb(242,119,39)" fg:x="11248" fg:w="91"/><text x="6.5821%" y="447.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (2,886 samples, 1.62%)</title><rect x="4.8054%" y="469" width="1.6247%" height="15" fill="rgb(241,98,45)" fg:x="8536" fg:w="2886"/><text x="5.0554%" y="479.50"></text></g><g><title>std::io::Read::read_exact (78 samples, 0.04%)</title><rect x="6.3861%" y="453" width="0.0439%" height="15" fill="rgb(254,28,30)" fg:x="11344" fg:w="78"/><text x="6.6361%" y="463.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (101 samples, 0.06%)</title><rect x="6.4300%" y="469" width="0.0569%" height="15" fill="rgb(241,142,54)" fg:x="11422" fg:w="101"/><text x="6.6800%" y="479.50"></text></g><g><title>std::io::Read::read_exact (78 samples, 0.04%)</title><rect x="6.4430%" y="453" width="0.0439%" height="15" fill="rgb(222,85,15)" fg:x="11445" fg:w="78"/><text x="6.6930%" y="463.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_inner (24 samples, 0.01%)</title><rect x="6.5111%" y="453" width="0.0135%" height="15" fill="rgb(210,85,47)" fg:x="11566" fg:w="24"/><text x="6.7611%" y="463.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (147 samples, 0.08%)</title><rect x="6.4869%" y="469" width="0.0828%" height="15" fill="rgb(224,206,25)" fg:x="11523" fg:w="147"/><text x="6.7369%" y="479.50"></text></g><g><title>std::io::Read::read_exact (80 samples, 0.05%)</title><rect x="6.5246%" y="453" width="0.0450%" height="15" fill="rgb(243,201,19)" fg:x="11590" fg:w="80"/><text x="6.7746%" y="463.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="6.5556%" y="437" width="0.0141%" height="15" fill="rgb(236,59,4)" fg:x="11645" fg:w="25"/><text x="6.8056%" y="447.50"></text></g><g><title>[libc.so.6] (98 samples, 0.06%)</title><rect x="6.6017%" y="437" width="0.0552%" height="15" fill="rgb(254,179,45)" fg:x="11727" fg:w="98"/><text x="6.8517%" y="447.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="6.6355%" y="421" width="0.0214%" height="15" fill="rgb(226,14,10)" fg:x="11787" fg:w="38"/><text x="6.8855%" y="431.50"></text></g><g><title>__mprotect (19 samples, 0.01%)</title><rect x="6.6462%" y="405" width="0.0107%" height="15" fill="rgb(244,27,41)" fg:x="11806" fg:w="19"/><text x="6.8962%" y="415.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="6.6462%" y="389" width="0.0107%" height="15" fill="rgb(235,35,32)" fg:x="11806" fg:w="19"/><text x="6.8962%" y="399.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="6.6468%" y="373" width="0.0101%" height="15" fill="rgb(218,68,31)" fg:x="11807" fg:w="18"/><text x="6.8968%" y="383.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="6.6468%" y="357" width="0.0101%" height="15" fill="rgb(207,120,37)" fg:x="11807" fg:w="18"/><text x="6.8968%" y="367.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="6.6468%" y="341" width="0.0101%" height="15" fill="rgb(227,98,0)" fg:x="11807" fg:w="18"/><text x="6.8968%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (146 samples, 0.08%)</title><rect x="6.5781%" y="469" width="0.0822%" height="15" fill="rgb(207,7,3)" fg:x="11685" fg:w="146"/><text x="6.8281%" y="479.50"></text></g><g><title>malloc (137 samples, 0.08%)</title><rect x="6.5832%" y="453" width="0.0771%" height="15" fill="rgb(206,98,19)" fg:x="11694" fg:w="137"/><text x="6.8332%" y="463.50"></text></g><g><title>&lt;bitcoin::network::utreexo::UtreexoBlock as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (3,663 samples, 2.06%)</title><rect x="4.6674%" y="485" width="2.0621%" height="15" fill="rgb(217,5,26)" fg:x="8291" fg:w="3663"/><text x="4.9174%" y="495.50">&lt;..</text></g><g><title>std::io::Read::read_exact (105 samples, 0.06%)</title><rect x="6.6704%" y="469" width="0.0591%" height="15" fill="rgb(235,190,38)" fg:x="11849" fg:w="105"/><text x="6.9204%" y="479.50"></text></g><g><title>[libc.so.6] (176 samples, 0.10%)</title><rect x="6.7295%" y="485" width="0.0991%" height="15" fill="rgb(247,86,24)" fg:x="11954" fg:w="176"/><text x="6.9795%" y="495.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="6.7853%" y="469" width="0.0433%" height="15" fill="rgb(205,101,16)" fg:x="12053" fg:w="77"/><text x="7.0353%" y="479.50"></text></g><g><title>[unknown] (64 samples, 0.04%)</title><rect x="6.7926%" y="453" width="0.0360%" height="15" fill="rgb(246,168,33)" fg:x="12066" fg:w="64"/><text x="7.0426%" y="463.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="6.7948%" y="437" width="0.0338%" height="15" fill="rgb(231,114,1)" fg:x="12070" fg:w="60"/><text x="7.0448%" y="447.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="6.7965%" y="421" width="0.0321%" height="15" fill="rgb(207,184,53)" fg:x="12073" fg:w="57"/><text x="7.0465%" y="431.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="6.7988%" y="405" width="0.0298%" height="15" fill="rgb(224,95,51)" fg:x="12077" fg:w="53"/><text x="7.0488%" y="415.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="6.8033%" y="389" width="0.0253%" height="15" fill="rgb(212,188,45)" fg:x="12085" fg:w="45"/><text x="7.0533%" y="399.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="6.8050%" y="373" width="0.0236%" height="15" fill="rgb(223,154,38)" fg:x="12088" fg:w="42"/><text x="7.0550%" y="383.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="6.8100%" y="357" width="0.0186%" height="15" fill="rgb(251,22,52)" fg:x="12097" fg:w="33"/><text x="7.0600%" y="367.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="6.8140%" y="341" width="0.0146%" height="15" fill="rgb(229,209,22)" fg:x="12104" fg:w="26"/><text x="7.0640%" y="351.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="6.8179%" y="325" width="0.0107%" height="15" fill="rgb(234,138,34)" fg:x="12111" fg:w="19"/><text x="7.0679%" y="335.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="6.8545%" y="421" width="0.0135%" height="15" fill="rgb(212,95,11)" fg:x="12176" fg:w="24"/><text x="7.1045%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (70 samples, 0.04%)</title><rect x="6.8292%" y="485" width="0.0394%" height="15" fill="rgb(240,179,47)" fg:x="12131" fg:w="70"/><text x="7.0792%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (65 samples, 0.04%)</title><rect x="6.8320%" y="469" width="0.0366%" height="15" fill="rgb(240,163,11)" fg:x="12136" fg:w="65"/><text x="7.0820%" y="479.50"></text></g><g><title>malloc (62 samples, 0.03%)</title><rect x="6.8337%" y="453" width="0.0349%" height="15" fill="rgb(236,37,12)" fg:x="12139" fg:w="62"/><text x="7.0837%" y="463.50"></text></g><g><title>[libc.so.6] (53 samples, 0.03%)</title><rect x="6.8387%" y="437" width="0.0298%" height="15" fill="rgb(232,164,16)" fg:x="12148" fg:w="53"/><text x="7.0887%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.01%)</title><rect x="6.8686%" y="485" width="0.0101%" height="15" fill="rgb(244,205,15)" fg:x="12201" fg:w="18"/><text x="7.1186%" y="495.50"></text></g><g><title>[libc.so.6] (77 samples, 0.04%)</title><rect x="10.3048%" y="453" width="0.0433%" height="15" fill="rgb(223,117,47)" fg:x="18305" fg:w="77"/><text x="10.5548%" y="463.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (6,223 samples, 3.50%)</title><rect x="6.8821%" y="469" width="3.5033%" height="15" fill="rgb(244,107,35)" fg:x="12225" fg:w="6223"/><text x="7.1321%" y="479.50">&lt;bi..</text></g><g><title>[unknown] (66 samples, 0.04%)</title><rect x="10.3482%" y="453" width="0.0372%" height="15" fill="rgb(205,140,8)" fg:x="18382" fg:w="66"/><text x="10.5982%" y="463.50"></text></g><g><title>[unknown] (66 samples, 0.04%)</title><rect x="10.3482%" y="437" width="0.0372%" height="15" fill="rgb(228,84,46)" fg:x="18382" fg:w="66"/><text x="10.5982%" y="447.50"></text></g><g><title>[unknown] (65 samples, 0.04%)</title><rect x="10.3487%" y="421" width="0.0366%" height="15" fill="rgb(254,188,9)" fg:x="18383" fg:w="65"/><text x="10.5987%" y="431.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="10.3504%" y="405" width="0.0349%" height="15" fill="rgb(206,112,54)" fg:x="18386" fg:w="62"/><text x="10.6004%" y="415.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="10.3516%" y="389" width="0.0338%" height="15" fill="rgb(216,84,49)" fg:x="18388" fg:w="60"/><text x="10.6016%" y="399.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="10.3555%" y="373" width="0.0298%" height="15" fill="rgb(214,194,35)" fg:x="18395" fg:w="53"/><text x="10.6055%" y="383.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="10.3578%" y="357" width="0.0276%" height="15" fill="rgb(249,28,3)" fg:x="18399" fg:w="49"/><text x="10.6078%" y="367.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="10.3611%" y="341" width="0.0242%" height="15" fill="rgb(222,56,52)" fg:x="18405" fg:w="43"/><text x="10.6111%" y="351.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="10.3656%" y="325" width="0.0197%" height="15" fill="rgb(245,217,50)" fg:x="18413" fg:w="35"/><text x="10.6156%" y="335.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="10.3679%" y="309" width="0.0175%" height="15" fill="rgb(213,201,24)" fg:x="18417" fg:w="31"/><text x="10.6179%" y="319.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="10.3701%" y="293" width="0.0152%" height="15" fill="rgb(248,116,28)" fg:x="18421" fg:w="27"/><text x="10.6201%" y="303.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (94 samples, 0.05%)</title><rect x="10.3927%" y="453" width="0.0529%" height="15" fill="rgb(219,72,43)" fg:x="18461" fg:w="94"/><text x="10.6427%" y="463.50"></text></g><g><title>bitcoin::consensus::encode::sha2_checksum (6,431 samples, 3.62%)</title><rect x="6.8787%" y="485" width="3.6203%" height="15" fill="rgb(209,138,14)" fg:x="12219" fg:w="6431"/><text x="7.1287%" y="495.50">bitc..</text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (196 samples, 0.11%)</title><rect x="10.3887%" y="469" width="0.1103%" height="15" fill="rgb(222,18,33)" fg:x="18454" fg:w="196"/><text x="10.6387%" y="479.50"></text></g><g><title>bitcoin_hashes::Hash::hash (95 samples, 0.05%)</title><rect x="10.4456%" y="453" width="0.0535%" height="15" fill="rgb(213,199,7)" fg:x="18555" fg:w="95"/><text x="10.6956%" y="463.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (92 samples, 0.05%)</title><rect x="10.4473%" y="437" width="0.0518%" height="15" fill="rgb(250,110,10)" fg:x="18558" fg:w="92"/><text x="10.6973%" y="447.50"></text></g><g><title>&lt;bitcoin::network::message::RawNetworkMessage as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (10,416 samples, 5.86%)</title><rect x="4.6393%" y="501" width="5.8637%" height="15" fill="rgb(248,123,6)" fg:x="8241" fg:w="10416"/><text x="4.8893%" y="511.50">&lt;bitcoi..</text></g><g><title>bitcoin::consensus::encode::deserialize (10,435 samples, 5.87%)</title><rect x="4.6297%" y="517" width="5.8744%" height="15" fill="rgb(206,91,31)" fg:x="8224" fg:w="10435"/><text x="4.8797%" y="527.50">bitcoin..</text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="10.5075%" y="501" width="0.0124%" height="15" fill="rgb(211,154,13)" fg:x="18665" fg:w="22"/><text x="10.7575%" y="511.50"></text></g><g><title>cfree (30 samples, 0.02%)</title><rect x="10.5041%" y="517" width="0.0169%" height="15" fill="rgb(225,148,7)" fg:x="18659" fg:w="30"/><text x="10.7541%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,548 samples, 6.50%)</title><rect x="4.0223%" y="533" width="6.5010%" height="15" fill="rgb(220,160,43)" fg:x="7145" fg:w="11548"/><text x="4.2723%" y="543.50">async_std..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18,020 samples, 10.14%)</title><rect x="0.3862%" y="565" width="10.1444%" height="15" fill="rgb(213,52,39)" fg:x="686" fg:w="18020"/><text x="0.6362%" y="575.50">&lt;futures_lite::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (16,082 samples, 9.05%)</title><rect x="1.4772%" y="549" width="9.0534%" height="15" fill="rgb(243,137,7)" fg:x="2624" fg:w="16082"/><text x="1.7272%" y="559.50">async_task::r..</text></g><g><title>async_io::reactor::Reactor::try_lock (18 samples, 0.01%)</title><rect x="10.5356%" y="565" width="0.0101%" height="15" fill="rgb(230,79,13)" fg:x="18715" fg:w="18"/><text x="10.7856%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (31 samples, 0.02%)</title><rect x="10.5767%" y="533" width="0.0175%" height="15" fill="rgb(247,105,23)" fg:x="18788" fg:w="31"/><text x="10.8267%" y="543.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (66 samples, 0.04%)</title><rect x="10.5976%" y="533" width="0.0372%" height="15" fill="rgb(223,179,41)" fg:x="18825" fg:w="66"/><text x="10.8476%" y="543.50"></text></g><g><title>malloc (40 samples, 0.02%)</title><rect x="10.6122%" y="517" width="0.0225%" height="15" fill="rgb(218,9,34)" fg:x="18851" fg:w="40"/><text x="10.8622%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (57 samples, 0.03%)</title><rect x="10.6347%" y="533" width="0.0321%" height="15" fill="rgb(222,106,8)" fg:x="18891" fg:w="57"/><text x="10.8847%" y="543.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (20 samples, 0.01%)</title><rect x="10.6556%" y="517" width="0.0113%" height="15" fill="rgb(211,220,0)" fg:x="18928" fg:w="20"/><text x="10.9056%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (30 samples, 0.02%)</title><rect x="10.6668%" y="533" width="0.0169%" height="15" fill="rgb(229,52,16)" fg:x="18948" fg:w="30"/><text x="10.9168%" y="543.50"></text></g><g><title>clock_gettime (27 samples, 0.02%)</title><rect x="10.6685%" y="517" width="0.0152%" height="15" fill="rgb(212,155,18)" fg:x="18951" fg:w="27"/><text x="10.9185%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (237 samples, 0.13%)</title><rect x="10.5610%" y="549" width="0.1334%" height="15" fill="rgb(242,21,14)" fg:x="18760" fg:w="237"/><text x="10.8110%" y="559.50"></text></g><g><title>epoll_wait (1,252 samples, 0.70%)</title><rect x="10.7468%" y="517" width="0.7048%" height="15" fill="rgb(222,19,48)" fg:x="19090" fg:w="1252"/><text x="10.9968%" y="527.50"></text></g><g><title>[unknown] (1,217 samples, 0.69%)</title><rect x="10.7665%" y="501" width="0.6851%" height="15" fill="rgb(232,45,27)" fg:x="19125" fg:w="1217"/><text x="11.0165%" y="511.50"></text></g><g><title>[unknown] (1,158 samples, 0.65%)</title><rect x="10.7997%" y="485" width="0.6519%" height="15" fill="rgb(249,103,42)" fg:x="19184" fg:w="1158"/><text x="11.0497%" y="495.50"></text></g><g><title>[unknown] (1,103 samples, 0.62%)</title><rect x="10.8306%" y="469" width="0.6209%" height="15" fill="rgb(246,81,33)" fg:x="19239" fg:w="1103"/><text x="11.0806%" y="479.50"></text></g><g><title>[unknown] (1,088 samples, 0.61%)</title><rect x="10.8391%" y="453" width="0.6125%" height="15" fill="rgb(252,33,42)" fg:x="19254" fg:w="1088"/><text x="11.0891%" y="463.50"></text></g><g><title>[unknown] (1,005 samples, 0.57%)</title><rect x="10.8858%" y="437" width="0.5658%" height="15" fill="rgb(209,212,41)" fg:x="19337" fg:w="1005"/><text x="11.1358%" y="447.50"></text></g><g><title>[unknown] (856 samples, 0.48%)</title><rect x="10.9697%" y="421" width="0.4819%" height="15" fill="rgb(207,154,6)" fg:x="19486" fg:w="856"/><text x="11.2197%" y="431.50"></text></g><g><title>[unknown] (779 samples, 0.44%)</title><rect x="11.0130%" y="405" width="0.4385%" height="15" fill="rgb(223,64,47)" fg:x="19563" fg:w="779"/><text x="11.2630%" y="415.50"></text></g><g><title>[unknown] (713 samples, 0.40%)</title><rect x="11.0502%" y="389" width="0.4014%" height="15" fill="rgb(211,161,38)" fg:x="19629" fg:w="713"/><text x="11.3002%" y="399.50"></text></g><g><title>[unknown] (625 samples, 0.35%)</title><rect x="11.0997%" y="373" width="0.3518%" height="15" fill="rgb(219,138,40)" fg:x="19717" fg:w="625"/><text x="11.3497%" y="383.50"></text></g><g><title>[unknown] (399 samples, 0.22%)</title><rect x="11.2270%" y="357" width="0.2246%" height="15" fill="rgb(241,228,46)" fg:x="19943" fg:w="399"/><text x="11.4770%" y="367.50"></text></g><g><title>[unknown] (246 samples, 0.14%)</title><rect x="11.3131%" y="341" width="0.1385%" height="15" fill="rgb(223,209,38)" fg:x="20096" fg:w="246"/><text x="11.5631%" y="351.50"></text></g><g><title>[unknown] (150 samples, 0.08%)</title><rect x="11.3671%" y="325" width="0.0844%" height="15" fill="rgb(236,164,45)" fg:x="20192" fg:w="150"/><text x="11.6171%" y="335.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="11.4386%" y="309" width="0.0129%" height="15" fill="rgb(231,15,5)" fg:x="20319" fg:w="23"/><text x="11.6886%" y="319.50"></text></g><g><title>polling::epoll::Poller::modify (528 samples, 0.30%)</title><rect x="11.4516%" y="517" width="0.2972%" height="15" fill="rgb(252,35,15)" fg:x="20342" fg:w="528"/><text x="11.7016%" y="527.50"></text></g><g><title>epoll_ctl (475 samples, 0.27%)</title><rect x="11.4814%" y="501" width="0.2674%" height="15" fill="rgb(248,181,18)" fg:x="20395" fg:w="475"/><text x="11.7314%" y="511.50"></text></g><g><title>[unknown] (452 samples, 0.25%)</title><rect x="11.4944%" y="485" width="0.2545%" height="15" fill="rgb(233,39,42)" fg:x="20418" fg:w="452"/><text x="11.7444%" y="495.50"></text></g><g><title>[unknown] (354 samples, 0.20%)</title><rect x="11.5495%" y="469" width="0.1993%" height="15" fill="rgb(238,110,33)" fg:x="20516" fg:w="354"/><text x="11.7995%" y="479.50"></text></g><g><title>[unknown] (271 samples, 0.15%)</title><rect x="11.5963%" y="453" width="0.1526%" height="15" fill="rgb(233,195,10)" fg:x="20599" fg:w="271"/><text x="11.8463%" y="463.50"></text></g><g><title>[unknown] (233 samples, 0.13%)</title><rect x="11.6176%" y="437" width="0.1312%" height="15" fill="rgb(254,105,3)" fg:x="20637" fg:w="233"/><text x="11.8676%" y="447.50"></text></g><g><title>[unknown] (142 samples, 0.08%)</title><rect x="11.6689%" y="421" width="0.0799%" height="15" fill="rgb(221,225,9)" fg:x="20728" fg:w="142"/><text x="11.9189%" y="431.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="11.7235%" y="405" width="0.0253%" height="15" fill="rgb(224,227,45)" fg:x="20825" fg:w="45"/><text x="11.9735%" y="415.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="11.7330%" y="389" width="0.0158%" height="15" fill="rgb(229,198,43)" fg:x="20842" fg:w="28"/><text x="11.9830%" y="399.50"></text></g><g><title>read (356 samples, 0.20%)</title><rect x="11.7488%" y="517" width="0.2004%" height="15" fill="rgb(206,209,35)" fg:x="20870" fg:w="356"/><text x="11.9988%" y="527.50"></text></g><g><title>[unknown] (324 samples, 0.18%)</title><rect x="11.7668%" y="501" width="0.1824%" height="15" fill="rgb(245,195,53)" fg:x="20902" fg:w="324"/><text x="12.0168%" y="511.50"></text></g><g><title>[unknown] (276 samples, 0.16%)</title><rect x="11.7938%" y="485" width="0.1554%" height="15" fill="rgb(240,92,26)" fg:x="20950" fg:w="276"/><text x="12.0438%" y="495.50"></text></g><g><title>[unknown] (228 samples, 0.13%)</title><rect x="11.8209%" y="469" width="0.1284%" height="15" fill="rgb(207,40,23)" fg:x="20998" fg:w="228"/><text x="12.0709%" y="479.50"></text></g><g><title>[unknown] (208 samples, 0.12%)</title><rect x="11.8321%" y="453" width="0.1171%" height="15" fill="rgb(223,111,35)" fg:x="21018" fg:w="208"/><text x="12.0821%" y="463.50"></text></g><g><title>[unknown] (164 samples, 0.09%)</title><rect x="11.8569%" y="437" width="0.0923%" height="15" fill="rgb(229,147,28)" fg:x="21062" fg:w="164"/><text x="12.1069%" y="447.50"></text></g><g><title>[unknown] (83 samples, 0.05%)</title><rect x="11.9025%" y="421" width="0.0467%" height="15" fill="rgb(211,29,28)" fg:x="21143" fg:w="83"/><text x="12.1525%" y="431.50"></text></g><g><title>[unknown] (50 samples, 0.03%)</title><rect x="11.9211%" y="405" width="0.0281%" height="15" fill="rgb(228,72,33)" fg:x="21176" fg:w="50"/><text x="12.1711%" y="415.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="11.9357%" y="389" width="0.0135%" height="15" fill="rgb(205,214,31)" fg:x="21202" fg:w="24"/><text x="12.1857%" y="399.50"></text></g><g><title>polling::Poller::wait (2,702 samples, 1.52%)</title><rect x="10.6967%" y="549" width="1.5211%" height="15" fill="rgb(224,111,15)" fg:x="19001" fg:w="2702"/><text x="10.9467%" y="559.50"></text></g><g><title>polling::epoll::Poller::wait (2,678 samples, 1.51%)</title><rect x="10.7102%" y="533" width="1.5076%" height="15" fill="rgb(253,21,26)" fg:x="19025" fg:w="2678"/><text x="10.9602%" y="543.50"></text></g><g><title>timerfd_settime (476 samples, 0.27%)</title><rect x="11.9498%" y="517" width="0.2680%" height="15" fill="rgb(245,139,43)" fg:x="21227" fg:w="476"/><text x="12.1998%" y="527.50"></text></g><g><title>[unknown] (470 samples, 0.26%)</title><rect x="11.9532%" y="501" width="0.2646%" height="15" fill="rgb(252,170,7)" fg:x="21233" fg:w="470"/><text x="12.2032%" y="511.50"></text></g><g><title>[unknown] (402 samples, 0.23%)</title><rect x="11.9914%" y="485" width="0.2263%" height="15" fill="rgb(231,118,14)" fg:x="21301" fg:w="402"/><text x="12.2414%" y="495.50"></text></g><g><title>[unknown] (363 samples, 0.20%)</title><rect x="12.0134%" y="469" width="0.2044%" height="15" fill="rgb(238,83,0)" fg:x="21340" fg:w="363"/><text x="12.2634%" y="479.50"></text></g><g><title>[unknown] (337 samples, 0.19%)</title><rect x="12.0280%" y="453" width="0.1897%" height="15" fill="rgb(221,39,39)" fg:x="21366" fg:w="337"/><text x="12.2780%" y="463.50"></text></g><g><title>[unknown] (286 samples, 0.16%)</title><rect x="12.0567%" y="437" width="0.1610%" height="15" fill="rgb(222,119,46)" fg:x="21417" fg:w="286"/><text x="12.3067%" y="447.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="12.1519%" y="421" width="0.0659%" height="15" fill="rgb(222,165,49)" fg:x="21586" fg:w="117"/><text x="12.4019%" y="431.50"></text></g><g><title>[unknown] (51 samples, 0.03%)</title><rect x="12.1890%" y="405" width="0.0287%" height="15" fill="rgb(219,113,52)" fg:x="21652" fg:w="51"/><text x="12.4390%" y="415.50"></text></g><g><title>async_io::reactor::ReactorLock::react (2,975 samples, 1.67%)</title><rect x="10.5458%" y="565" width="1.6748%" height="15" fill="rgb(214,7,15)" fg:x="18733" fg:w="2975"/><text x="10.7958%" y="575.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (31 samples, 0.02%)</title><rect x="12.2206%" y="565" width="0.0175%" height="15" fill="rgb(235,32,4)" fg:x="21708" fg:w="31"/><text x="12.4706%" y="575.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (22 samples, 0.01%)</title><rect x="12.2926%" y="501" width="0.0124%" height="15" fill="rgb(238,90,54)" fg:x="21836" fg:w="22"/><text x="12.5426%" y="511.50"></text></g><g><title>std::sys::unix::futex::futex_wait (2,838 samples, 1.60%)</title><rect x="12.2853%" y="517" width="1.5977%" height="15" fill="rgb(213,208,19)" fg:x="21823" fg:w="2838"/><text x="12.5353%" y="527.50"></text></g><g><title>syscall (2,797 samples, 1.57%)</title><rect x="12.3084%" y="501" width="1.5746%" height="15" fill="rgb(233,156,4)" fg:x="21864" fg:w="2797"/><text x="12.5584%" y="511.50"></text></g><g><title>[unknown] (2,770 samples, 1.56%)</title><rect x="12.3236%" y="485" width="1.5594%" height="15" fill="rgb(207,194,5)" fg:x="21891" fg:w="2770"/><text x="12.5736%" y="495.50"></text></g><g><title>[unknown] (2,648 samples, 1.49%)</title><rect x="12.3923%" y="469" width="1.4907%" height="15" fill="rgb(206,111,30)" fg:x="22013" fg:w="2648"/><text x="12.6423%" y="479.50"></text></g><g><title>[unknown] (2,538 samples, 1.43%)</title><rect x="12.4542%" y="453" width="1.4288%" height="15" fill="rgb(243,70,54)" fg:x="22123" fg:w="2538"/><text x="12.7042%" y="463.50"></text></g><g><title>[unknown] (2,503 samples, 1.41%)</title><rect x="12.4739%" y="437" width="1.4091%" height="15" fill="rgb(242,28,8)" fg:x="22158" fg:w="2503"/><text x="12.7239%" y="447.50"></text></g><g><title>[unknown] (2,446 samples, 1.38%)</title><rect x="12.5060%" y="421" width="1.3770%" height="15" fill="rgb(219,106,18)" fg:x="22215" fg:w="2446"/><text x="12.7560%" y="431.50"></text></g><g><title>[unknown] (2,316 samples, 1.30%)</title><rect x="12.5792%" y="405" width="1.3038%" height="15" fill="rgb(244,222,10)" fg:x="22345" fg:w="2316"/><text x="12.8292%" y="415.50"></text></g><g><title>[unknown] (2,143 samples, 1.21%)</title><rect x="12.6766%" y="389" width="1.2064%" height="15" fill="rgb(236,179,52)" fg:x="22518" fg:w="2143"/><text x="12.9266%" y="399.50"></text></g><g><title>[unknown] (2,053 samples, 1.16%)</title><rect x="12.7272%" y="373" width="1.1557%" height="15" fill="rgb(213,23,39)" fg:x="22608" fg:w="2053"/><text x="12.9772%" y="383.50"></text></g><g><title>[unknown] (1,857 samples, 1.05%)</title><rect x="12.8376%" y="357" width="1.0454%" height="15" fill="rgb(238,48,10)" fg:x="22804" fg:w="1857"/><text x="13.0876%" y="367.50"></text></g><g><title>[unknown] (1,561 samples, 0.88%)</title><rect x="13.0042%" y="341" width="0.8788%" height="15" fill="rgb(251,196,23)" fg:x="23100" fg:w="1561"/><text x="13.2542%" y="351.50"></text></g><g><title>[unknown] (988 samples, 0.56%)</title><rect x="13.3268%" y="325" width="0.5562%" height="15" fill="rgb(250,152,24)" fg:x="23673" fg:w="988"/><text x="13.5768%" y="335.50"></text></g><g><title>[unknown] (623 samples, 0.35%)</title><rect x="13.5322%" y="309" width="0.3507%" height="15" fill="rgb(209,150,17)" fg:x="24038" fg:w="623"/><text x="13.7822%" y="319.50"></text></g><g><title>[unknown] (338 samples, 0.19%)</title><rect x="13.6927%" y="293" width="0.1903%" height="15" fill="rgb(234,202,34)" fg:x="24323" fg:w="338"/><text x="13.9427%" y="303.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="13.8486%" y="277" width="0.0343%" height="15" fill="rgb(253,148,53)" fg:x="24600" fg:w="61"/><text x="14.0986%" y="287.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="13.8610%" y="261" width="0.0220%" height="15" fill="rgb(218,129,16)" fg:x="24622" fg:w="39"/><text x="14.1110%" y="271.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="13.8633%" y="245" width="0.0197%" height="15" fill="rgb(216,85,19)" fg:x="24626" fg:w="35"/><text x="14.1133%" y="255.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="13.8666%" y="229" width="0.0163%" height="15" fill="rgb(235,228,7)" fg:x="24632" fg:w="29"/><text x="14.1166%" y="239.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="13.8672%" y="213" width="0.0158%" height="15" fill="rgb(245,175,0)" fg:x="24633" fg:w="28"/><text x="14.1172%" y="223.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="13.8717%" y="197" width="0.0113%" height="15" fill="rgb(208,168,36)" fg:x="24641" fg:w="20"/><text x="14.1217%" y="207.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (31 samples, 0.02%)</title><rect x="13.8830%" y="517" width="0.0175%" height="15" fill="rgb(246,171,24)" fg:x="24661" fg:w="31"/><text x="14.1330%" y="527.50"></text></g><g><title>parking::Inner::park (2,956 samples, 1.66%)</title><rect x="12.2380%" y="565" width="1.6641%" height="15" fill="rgb(215,142,24)" fg:x="21739" fg:w="2956"/><text x="12.4880%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (2,880 samples, 1.62%)</title><rect x="12.2808%" y="549" width="1.6213%" height="15" fill="rgb(250,187,7)" fg:x="21815" fg:w="2880"/><text x="12.5308%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (2,872 samples, 1.62%)</title><rect x="12.2853%" y="533" width="1.6168%" height="15" fill="rgb(228,66,33)" fg:x="21823" fg:w="2872"/><text x="12.5353%" y="543.50"></text></g><g><title>[libc.so.6] (24,094 samples, 13.56%)</title><rect x="0.3670%" y="709" width="13.5638%" height="15" fill="rgb(234,215,21)" fg:x="652" fg:w="24094"/><text x="0.6170%" y="719.50">[libc.so.6]</text></g><g><title>[libc.so.6] (24,094 samples, 13.56%)</title><rect x="0.3670%" y="693" width="13.5638%" height="15" fill="rgb(222,191,20)" fg:x="652" fg:w="24094"/><text x="0.6170%" y="703.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (24,094 samples, 13.56%)</title><rect x="0.3670%" y="677" width="13.5638%" height="15" fill="rgb(245,79,54)" fg:x="652" fg:w="24094"/><text x="0.6170%" y="687.50">std::sys::unix::thre..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,094 samples, 13.56%)</title><rect x="0.3670%" y="661" width="13.5638%" height="15" fill="rgb(240,10,37)" fg:x="652" fg:w="24094"/><text x="0.6170%" y="671.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24,094 samples, 13.56%)</title><rect x="0.3670%" y="645" width="13.5638%" height="15" fill="rgb(214,192,32)" fg:x="652" fg:w="24094"/><text x="0.6170%" y="655.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24,094 samples, 13.56%)</title><rect x="0.3670%" y="629" width="13.5638%" height="15" fill="rgb(209,36,54)" fg:x="652" fg:w="24094"/><text x="0.6170%" y="639.50">core::ops::function:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24,093 samples, 13.56%)</title><rect x="0.3676%" y="613" width="13.5632%" height="15" fill="rgb(220,10,11)" fg:x="653" fg:w="24093"/><text x="0.6176%" y="623.50">std::sys_common::bac..</text></g><g><title>async_global_executor::threading::thread_main_loop (24,093 samples, 13.56%)</title><rect x="0.3676%" y="597" width="13.5632%" height="15" fill="rgb(221,106,17)" fg:x="653" fg:w="24093"/><text x="0.6176%" y="607.50">async_global_executo..</text></g><g><title>async_io::driver::block_on (24,093 samples, 13.56%)</title><rect x="0.3676%" y="581" width="13.5632%" height="15" fill="rgb(251,142,44)" fg:x="653" fg:w="24093"/><text x="0.6176%" y="591.50">async_io::driver::bl..</text></g><g><title>epoll_ctl (21 samples, 0.01%)</title><rect x="14.0366%" y="693" width="0.0118%" height="15" fill="rgb(238,13,15)" fg:x="24934" fg:w="21"/><text x="14.2866%" y="703.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="14.0366%" y="677" width="0.0118%" height="15" fill="rgb(208,107,27)" fg:x="24934" fg:w="21"/><text x="14.2866%" y="687.50"></text></g><g><title>async-std/runti (24,369 samples, 13.72%)</title><rect x="0.3434%" y="725" width="13.7186%" height="15" fill="rgb(205,136,37)" fg:x="610" fg:w="24369"/><text x="0.5934%" y="735.50">async-std/runti</text></g><g><title>[unknown] (233 samples, 0.13%)</title><rect x="13.9308%" y="709" width="0.1312%" height="15" fill="rgb(250,205,27)" fg:x="24746" fg:w="233"/><text x="14.1808%" y="719.50"></text></g><g><title>__mmap (18 samples, 0.01%)</title><rect x="14.0772%" y="597" width="0.0101%" height="15" fill="rgb(210,80,43)" fg:x="25006" fg:w="18"/><text x="14.3272%" y="607.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="14.0772%" y="581" width="0.0101%" height="15" fill="rgb(247,160,36)" fg:x="25006" fg:w="18"/><text x="14.3272%" y="591.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="14.0772%" y="565" width="0.0101%" height="15" fill="rgb(234,13,49)" fg:x="25006" fg:w="18"/><text x="14.3272%" y="575.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="14.0772%" y="549" width="0.0101%" height="15" fill="rgb(234,122,0)" fg:x="25006" fg:w="18"/><text x="14.3272%" y="559.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="14.0772%" y="533" width="0.0101%" height="15" fill="rgb(207,146,38)" fg:x="25006" fg:w="18"/><text x="14.3272%" y="543.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="14.0772%" y="517" width="0.0101%" height="15" fill="rgb(207,177,25)" fg:x="25006" fg:w="18"/><text x="14.3272%" y="527.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="14.0772%" y="501" width="0.0101%" height="15" fill="rgb(211,178,42)" fg:x="25006" fg:w="18"/><text x="14.3272%" y="511.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="14.0761%" y="693" width="0.0124%" height="15" fill="rgb(230,69,54)" fg:x="25004" fg:w="22"/><text x="14.3261%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (20 samples, 0.01%)</title><rect x="14.0772%" y="677" width="0.0113%" height="15" fill="rgb(214,135,41)" fg:x="25006" fg:w="20"/><text x="14.3272%" y="687.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (20 samples, 0.01%)</title><rect x="14.0772%" y="661" width="0.0113%" height="15" fill="rgb(237,67,25)" fg:x="25006" fg:w="20"/><text x="14.3272%" y="671.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (20 samples, 0.01%)</title><rect x="14.0772%" y="645" width="0.0113%" height="15" fill="rgb(222,189,50)" fg:x="25006" fg:w="20"/><text x="14.3272%" y="655.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (20 samples, 0.01%)</title><rect x="14.0772%" y="629" width="0.0113%" height="15" fill="rgb(245,148,34)" fg:x="25006" fg:w="20"/><text x="14.3272%" y="639.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (20 samples, 0.01%)</title><rect x="14.0772%" y="613" width="0.0113%" height="15" fill="rgb(222,29,6)" fg:x="25006" fg:w="20"/><text x="14.3272%" y="623.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="14.0761%" y="709" width="0.0146%" height="15" fill="rgb(221,189,43)" fg:x="25004" fg:w="26"/><text x="14.3261%" y="719.50"></text></g><g><title>[unknown] (85 samples, 0.05%)</title><rect x="14.1183%" y="693" width="0.0479%" height="15" fill="rgb(207,36,27)" fg:x="25079" fg:w="85"/><text x="14.3683%" y="703.50"></text></g><g><title>[unknown] (85 samples, 0.05%)</title><rect x="14.1183%" y="677" width="0.0479%" height="15" fill="rgb(217,90,24)" fg:x="25079" fg:w="85"/><text x="14.3683%" y="687.50"></text></g><g><title>[unknown] (67 samples, 0.04%)</title><rect x="14.1284%" y="661" width="0.0377%" height="15" fill="rgb(224,66,35)" fg:x="25097" fg:w="67"/><text x="14.3784%" y="671.50"></text></g><g><title>[unknown] (64 samples, 0.04%)</title><rect x="14.1301%" y="645" width="0.0360%" height="15" fill="rgb(221,13,50)" fg:x="25100" fg:w="64"/><text x="14.3801%" y="655.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="14.1447%" y="629" width="0.0214%" height="15" fill="rgb(236,68,49)" fg:x="25126" fg:w="38"/><text x="14.3947%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (32 samples, 0.02%)</title><rect x="14.2269%" y="533" width="0.0180%" height="15" fill="rgb(229,146,28)" fg:x="25272" fg:w="32"/><text x="14.4769%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (26 samples, 0.01%)</title><rect x="14.2303%" y="517" width="0.0146%" height="15" fill="rgb(225,31,38)" fg:x="25278" fg:w="26"/><text x="14.4803%" y="527.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (36 samples, 0.02%)</title><rect x="14.2258%" y="549" width="0.0203%" height="15" fill="rgb(250,208,3)" fg:x="25270" fg:w="36"/><text x="14.4758%" y="559.50"></text></g><g><title>sled::pin (45 samples, 0.03%)</title><rect x="14.2230%" y="581" width="0.0253%" height="15" fill="rgb(246,54,23)" fg:x="25265" fg:w="45"/><text x="14.4730%" y="591.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (42 samples, 0.02%)</title><rect x="14.2247%" y="565" width="0.0236%" height="15" fill="rgb(243,76,11)" fg:x="25268" fg:w="42"/><text x="14.4747%" y="575.50"></text></g><g><title>sled::node::Node::index_next_node (35 samples, 0.02%)</title><rect x="14.2770%" y="549" width="0.0197%" height="15" fill="rgb(245,21,50)" fg:x="25361" fg:w="35"/><text x="14.5270%" y="559.50"></text></g><g><title>sled::binary_search::binary_search_lub (24 samples, 0.01%)</title><rect x="14.2832%" y="533" width="0.0135%" height="15" fill="rgb(228,9,43)" fg:x="25372" fg:w="24"/><text x="14.5332%" y="543.50"></text></g><g><title>sled::lru::Lru::accessed (27 samples, 0.02%)</title><rect x="14.3221%" y="517" width="0.0152%" height="15" fill="rgb(208,100,47)" fg:x="25441" fg:w="27"/><text x="14.5721%" y="527.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (228 samples, 0.13%)</title><rect x="14.2100%" y="613" width="0.1284%" height="15" fill="rgb(232,26,8)" fg:x="25242" fg:w="228"/><text x="14.4600%" y="623.50"></text></g><g><title>sled::tree::Tree::get (216 samples, 0.12%)</title><rect x="14.2168%" y="597" width="0.1216%" height="15" fill="rgb(216,166,38)" fg:x="25254" fg:w="216"/><text x="14.4668%" y="607.50"></text></g><g><title>sled::tree::Tree::get_inner (160 samples, 0.09%)</title><rect x="14.2483%" y="581" width="0.0901%" height="15" fill="rgb(251,202,51)" fg:x="25310" fg:w="160"/><text x="14.4983%" y="591.50"></text></g><g><title>sled::tree::Tree::view_for_key (133 samples, 0.07%)</title><rect x="14.2635%" y="565" width="0.0749%" height="15" fill="rgb(254,216,34)" fg:x="25337" fg:w="133"/><text x="14.5135%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_pid (74 samples, 0.04%)</title><rect x="14.2967%" y="549" width="0.0417%" height="15" fill="rgb(251,32,27)" fg:x="25396" fg:w="74"/><text x="14.5467%" y="559.50"></text></g><g><title>sled::pagecache::PageCache::get (63 samples, 0.04%)</title><rect x="14.3029%" y="533" width="0.0355%" height="15" fill="rgb(208,127,28)" fg:x="25407" fg:w="63"/><text x="14.5529%" y="543.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_block_hash (242 samples, 0.14%)</title><rect x="14.2033%" y="645" width="0.1362%" height="15" fill="rgb(224,137,22)" fg:x="25230" fg:w="242"/><text x="14.4533%" y="655.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::get_block_hash (239 samples, 0.13%)</title><rect x="14.2050%" y="629" width="0.1345%" height="15" fill="rgb(254,70,32)" fg:x="25233" fg:w="239"/><text x="14.4550%" y="639.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (32 samples, 0.02%)</title><rect x="14.3620%" y="597" width="0.0180%" height="15" fill="rgb(229,75,37)" fg:x="25512" fg:w="32"/><text x="14.6120%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (34 samples, 0.02%)</title><rect x="14.4110%" y="517" width="0.0191%" height="15" fill="rgb(252,64,23)" fg:x="25599" fg:w="34"/><text x="14.6610%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (30 samples, 0.02%)</title><rect x="14.4133%" y="501" width="0.0169%" height="15" fill="rgb(232,162,48)" fg:x="25603" fg:w="30"/><text x="14.6633%" y="511.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (37 samples, 0.02%)</title><rect x="14.4099%" y="533" width="0.0208%" height="15" fill="rgb(246,160,12)" fg:x="25597" fg:w="37"/><text x="14.6599%" y="543.50"></text></g><g><title>sled::pin (52 samples, 0.03%)</title><rect x="14.4020%" y="565" width="0.0293%" height="15" fill="rgb(247,166,0)" fg:x="25583" fg:w="52"/><text x="14.6520%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (41 samples, 0.02%)</title><rect x="14.4082%" y="549" width="0.0231%" height="15" fill="rgb(249,219,21)" fg:x="25594" fg:w="41"/><text x="14.6582%" y="559.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (24 samples, 0.01%)</title><rect x="14.4414%" y="549" width="0.0135%" height="15" fill="rgb(205,209,3)" fg:x="25653" fg:w="24"/><text x="14.6914%" y="559.50"></text></g><g><title>sled::node::Node::index_next_node (49 samples, 0.03%)</title><rect x="14.4679%" y="533" width="0.0276%" height="15" fill="rgb(243,44,1)" fg:x="25700" fg:w="49"/><text x="14.7179%" y="543.50"></text></g><g><title>sled::binary_search::binary_search_lub (42 samples, 0.02%)</title><rect x="14.4718%" y="517" width="0.0236%" height="15" fill="rgb(206,159,16)" fg:x="25707" fg:w="42"/><text x="14.7218%" y="527.50"></text></g><g><title>sled::lru::Lru::accessed (28 samples, 0.02%)</title><rect x="14.5242%" y="501" width="0.0158%" height="15" fill="rgb(244,77,30)" fg:x="25800" fg:w="28"/><text x="14.7742%" y="511.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (286 samples, 0.16%)</title><rect x="14.3834%" y="597" width="0.1610%" height="15" fill="rgb(218,69,12)" fg:x="25550" fg:w="286"/><text x="14.6334%" y="607.50"></text></g><g><title>sled::tree::Tree::get (260 samples, 0.15%)</title><rect x="14.3981%" y="581" width="0.1464%" height="15" fill="rgb(212,87,7)" fg:x="25576" fg:w="260"/><text x="14.6481%" y="591.50"></text></g><g><title>sled::tree::Tree::get_inner (201 samples, 0.11%)</title><rect x="14.4313%" y="565" width="0.1132%" height="15" fill="rgb(245,114,25)" fg:x="25635" fg:w="201"/><text x="14.6813%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_key (159 samples, 0.09%)</title><rect x="14.4549%" y="549" width="0.0895%" height="15" fill="rgb(210,61,42)" fg:x="25677" fg:w="159"/><text x="14.7049%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_pid (87 samples, 0.05%)</title><rect x="14.4955%" y="533" width="0.0490%" height="15" fill="rgb(211,52,33)" fg:x="25749" fg:w="87"/><text x="14.7455%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::get (78 samples, 0.04%)</title><rect x="14.5005%" y="517" width="0.0439%" height="15" fill="rgb(234,58,33)" fg:x="25758" fg:w="78"/><text x="14.7505%" y="527.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_validation_index (376 samples, 0.21%)</title><rect x="14.3435%" y="645" width="0.2117%" height="15" fill="rgb(220,115,36)" fg:x="25479" fg:w="376"/><text x="14.5935%" y="655.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (367 samples, 0.21%)</title><rect x="14.3485%" y="629" width="0.2066%" height="15" fill="rgb(243,153,54)" fg:x="25488" fg:w="367"/><text x="14.5985%" y="639.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::get_header (359 samples, 0.20%)</title><rect x="14.3530%" y="613" width="0.2021%" height="15" fill="rgb(251,47,18)" fg:x="25496" fg:w="359"/><text x="14.6030%" y="623.50"></text></g><g><title>sled::db::Db::open_tree (19 samples, 0.01%)</title><rect x="14.5444%" y="597" width="0.0107%" height="15" fill="rgb(242,102,42)" fg:x="25836" fg:w="19"/><text x="14.7944%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (49 samples, 0.03%)</title><rect x="14.5703%" y="581" width="0.0276%" height="15" fill="rgb(234,31,38)" fg:x="25882" fg:w="49"/><text x="14.8203%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (118 samples, 0.07%)</title><rect x="14.5686%" y="597" width="0.0664%" height="15" fill="rgb(221,117,51)" fg:x="25879" fg:w="118"/><text x="14.8186%" y="607.50"></text></g><g><title>bitcoin_hashes::Hash::hash (66 samples, 0.04%)</title><rect x="14.5979%" y="581" width="0.0372%" height="15" fill="rgb(212,20,18)" fg:x="25931" fg:w="66"/><text x="14.8479%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (65 samples, 0.04%)</title><rect x="14.5985%" y="565" width="0.0366%" height="15" fill="rgb(245,133,36)" fg:x="25932" fg:w="65"/><text x="14.8485%" y="575.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (186 samples, 0.10%)</title><rect x="14.5681%" y="613" width="0.1047%" height="15" fill="rgb(212,6,19)" fg:x="25878" fg:w="186"/><text x="14.8181%" y="623.50"></text></g><g><title>std::io::Write::write_all (67 samples, 0.04%)</title><rect x="14.6351%" y="597" width="0.0377%" height="15" fill="rgb(218,1,36)" fg:x="25997" fg:w="67"/><text x="14.8851%" y="607.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (58 samples, 0.03%)</title><rect x="14.6401%" y="581" width="0.0327%" height="15" fill="rgb(246,84,54)" fg:x="26006" fg:w="58"/><text x="14.8901%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (54 samples, 0.03%)</title><rect x="14.6424%" y="565" width="0.0304%" height="15" fill="rgb(242,110,6)" fg:x="26010" fg:w="54"/><text x="14.8924%" y="575.50"></text></g><g><title>[libc.so.6] (62 samples, 0.03%)</title><rect x="14.6863%" y="517" width="0.0349%" height="15" fill="rgb(214,47,5)" fg:x="26088" fg:w="62"/><text x="14.9363%" y="527.50"></text></g><g><title>[libc.so.6] (54 samples, 0.03%)</title><rect x="14.6908%" y="501" width="0.0304%" height="15" fill="rgb(218,159,25)" fg:x="26096" fg:w="54"/><text x="14.9408%" y="511.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (86 samples, 0.05%)</title><rect x="14.6750%" y="581" width="0.0484%" height="15" fill="rgb(215,211,28)" fg:x="26068" fg:w="86"/><text x="14.9250%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (83 samples, 0.05%)</title><rect x="14.6767%" y="565" width="0.0467%" height="15" fill="rgb(238,59,32)" fg:x="26071" fg:w="83"/><text x="14.9267%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (82 samples, 0.05%)</title><rect x="14.6773%" y="549" width="0.0462%" height="15" fill="rgb(226,82,3)" fg:x="26072" fg:w="82"/><text x="14.9273%" y="559.50"></text></g><g><title>realloc (75 samples, 0.04%)</title><rect x="14.6812%" y="533" width="0.0422%" height="15" fill="rgb(240,164,32)" fg:x="26079" fg:w="75"/><text x="14.9312%" y="543.50"></text></g><g><title>bitcoin::consensus::encode::serialize (95 samples, 0.05%)</title><rect x="14.6728%" y="613" width="0.0535%" height="15" fill="rgb(232,46,7)" fg:x="26064" fg:w="95"/><text x="14.9228%" y="623.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (94 samples, 0.05%)</title><rect x="14.6733%" y="597" width="0.0529%" height="15" fill="rgb(229,129,53)" fg:x="26065" fg:w="94"/><text x="14.9233%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (140 samples, 0.08%)</title><rect x="14.7820%" y="517" width="0.0788%" height="15" fill="rgb(234,188,29)" fg:x="26258" fg:w="140"/><text x="15.0320%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (172 samples, 0.10%)</title><rect x="14.7662%" y="533" width="0.0968%" height="15" fill="rgb(246,141,4)" fg:x="26230" fg:w="172"/><text x="15.0162%" y="543.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (186 samples, 0.10%)</title><rect x="14.7623%" y="549" width="0.1047%" height="15" fill="rgb(229,23,39)" fg:x="26223" fg:w="186"/><text x="15.0123%" y="559.50"></text></g><g><title>sled::pin (202 samples, 0.11%)</title><rect x="14.7544%" y="581" width="0.1137%" height="15" fill="rgb(206,12,3)" fg:x="26209" fg:w="202"/><text x="15.0044%" y="591.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (194 samples, 0.11%)</title><rect x="14.7589%" y="565" width="0.1092%" height="15" fill="rgb(252,226,20)" fg:x="26217" fg:w="194"/><text x="15.0089%" y="575.50"></text></g><g><title>sled::node::Node::node_kv_pair (23 samples, 0.01%)</title><rect x="14.8800%" y="565" width="0.0129%" height="15" fill="rgb(216,123,35)" fg:x="26432" fg:w="23"/><text x="15.1300%" y="575.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (409 samples, 0.23%)</title><rect x="14.8997%" y="549" width="0.2302%" height="15" fill="rgb(212,68,40)" fg:x="26467" fg:w="409"/><text x="15.1497%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (403 samples, 0.23%)</title><rect x="14.9030%" y="533" width="0.2269%" height="15" fill="rgb(254,125,32)" fg:x="26473" fg:w="403"/><text x="15.1530%" y="543.50"></text></g><g><title>malloc (25 samples, 0.01%)</title><rect x="15.1428%" y="549" width="0.0141%" height="15" fill="rgb(253,97,22)" fg:x="26899" fg:w="25"/><text x="15.3928%" y="559.50"></text></g><g><title>[libc.so.6] (67 samples, 0.04%)</title><rect x="15.1873%" y="485" width="0.0377%" height="15" fill="rgb(241,101,14)" fg:x="26978" fg:w="67"/><text x="15.4373%" y="495.50"></text></g><g><title>[libc.so.6] (65 samples, 0.04%)</title><rect x="15.1884%" y="469" width="0.0366%" height="15" fill="rgb(238,103,29)" fg:x="26980" fg:w="65"/><text x="15.4384%" y="479.50"></text></g><g><title>[libc.so.6] (28 samples, 0.02%)</title><rect x="15.2093%" y="453" width="0.0158%" height="15" fill="rgb(233,195,47)" fg:x="27017" fg:w="28"/><text x="15.4593%" y="463.50"></text></g><g><title>sled::node::Node::apply (113 samples, 0.06%)</title><rect x="15.1626%" y="549" width="0.0636%" height="15" fill="rgb(246,218,30)" fg:x="26934" fg:w="113"/><text x="15.4126%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (90 samples, 0.05%)</title><rect x="15.1755%" y="533" width="0.0507%" height="15" fill="rgb(219,145,47)" fg:x="26957" fg:w="90"/><text x="15.4255%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (90 samples, 0.05%)</title><rect x="15.1755%" y="517" width="0.0507%" height="15" fill="rgb(243,12,26)" fg:x="26957" fg:w="90"/><text x="15.4255%" y="527.50"></text></g><g><title>realloc (85 samples, 0.05%)</title><rect x="15.1783%" y="501" width="0.0479%" height="15" fill="rgb(214,87,16)" fg:x="26962" fg:w="85"/><text x="15.4283%" y="511.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (20 samples, 0.01%)</title><rect x="15.2386%" y="533" width="0.0113%" height="15" fill="rgb(208,99,42)" fg:x="27069" fg:w="20"/><text x="15.4886%" y="543.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (47 samples, 0.03%)</title><rect x="15.2262%" y="549" width="0.0265%" height="15" fill="rgb(253,99,2)" fg:x="27047" fg:w="47"/><text x="15.4762%" y="559.50"></text></g><g><title>crc32fast::Hasher::update (40 samples, 0.02%)</title><rect x="15.2549%" y="533" width="0.0225%" height="15" fill="rgb(220,168,23)" fg:x="27098" fg:w="40"/><text x="15.5049%" y="543.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (40 samples, 0.02%)</title><rect x="15.2549%" y="517" width="0.0225%" height="15" fill="rgb(242,38,24)" fg:x="27098" fg:w="40"/><text x="15.5049%" y="527.50"></text></g><g><title>sled::pagecache::PageCache::link (685 samples, 0.39%)</title><rect x="14.8929%" y="565" width="0.3856%" height="15" fill="rgb(225,182,9)" fg:x="26455" fg:w="685"/><text x="15.1429%" y="575.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (46 samples, 0.03%)</title><rect x="15.2526%" y="549" width="0.0259%" height="15" fill="rgb(243,178,37)" fg:x="27094" fg:w="46"/><text x="15.5026%" y="559.50"></text></g><g><title>sled::node::Node::index_next_node (31 samples, 0.02%)</title><rect x="15.2982%" y="549" width="0.0175%" height="15" fill="rgb(232,139,19)" fg:x="27175" fg:w="31"/><text x="15.5482%" y="559.50"></text></g><g><title>sled::binary_search::binary_search_lub (30 samples, 0.02%)</title><rect x="15.2988%" y="533" width="0.0169%" height="15" fill="rgb(225,201,24)" fg:x="27176" fg:w="30"/><text x="15.5488%" y="543.50"></text></g><g><title>sled::lru::Lru::accessed (20 samples, 0.01%)</title><rect x="15.3258%" y="517" width="0.0113%" height="15" fill="rgb(221,47,46)" fg:x="27224" fg:w="20"/><text x="15.5758%" y="527.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (1,076 samples, 0.61%)</title><rect x="14.7319%" y="613" width="0.6057%" height="15" fill="rgb(249,23,13)" fg:x="26169" fg:w="1076"/><text x="14.9819%" y="623.50"></text></g><g><title>sled::tree::Tree::insert (1,057 samples, 0.60%)</title><rect x="14.7426%" y="597" width="0.5950%" height="15" fill="rgb(219,9,5)" fg:x="26188" fg:w="1057"/><text x="14.9926%" y="607.50"></text></g><g><title>sled::tree::Tree::insert_inner (834 samples, 0.47%)</title><rect x="14.8681%" y="581" width="0.4695%" height="15" fill="rgb(254,171,16)" fg:x="26411" fg:w="834"/><text x="15.1181%" y="591.50"></text></g><g><title>sled::tree::Tree::view_for_key (102 samples, 0.06%)</title><rect x="15.2802%" y="565" width="0.0574%" height="15" fill="rgb(230,171,20)" fg:x="27143" fg:w="102"/><text x="15.5302%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_pid (39 samples, 0.02%)</title><rect x="15.3157%" y="549" width="0.0220%" height="15" fill="rgb(210,71,41)" fg:x="27206" fg:w="39"/><text x="15.5657%" y="559.50"></text></g><g><title>sled::pagecache::PageCache::get (33 samples, 0.02%)</title><rect x="15.3191%" y="533" width="0.0186%" height="15" fill="rgb(206,173,20)" fg:x="27212" fg:w="33"/><text x="15.5691%" y="543.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::save_header (1,383 samples, 0.78%)</title><rect x="14.5647%" y="629" width="0.7786%" height="15" fill="rgb(233,88,34)" fg:x="25872" fg:w="1383"/><text x="14.8147%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (210 samples, 0.12%)</title><rect x="15.3821%" y="533" width="0.1182%" height="15" fill="rgb(223,209,46)" fg:x="27324" fg:w="210"/><text x="15.6321%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (177 samples, 0.10%)</title><rect x="15.4007%" y="517" width="0.0996%" height="15" fill="rgb(250,43,18)" fg:x="27357" fg:w="177"/><text x="15.6507%" y="527.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (234 samples, 0.13%)</title><rect x="15.3759%" y="549" width="0.1317%" height="15" fill="rgb(208,13,10)" fg:x="27313" fg:w="234"/><text x="15.6259%" y="559.50"></text></g><g><title>sled::pin (252 samples, 0.14%)</title><rect x="15.3669%" y="581" width="0.1419%" height="15" fill="rgb(212,200,36)" fg:x="27297" fg:w="252"/><text x="15.6169%" y="591.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (245 samples, 0.14%)</title><rect x="15.3708%" y="565" width="0.1379%" height="15" fill="rgb(225,90,30)" fg:x="27304" fg:w="245"/><text x="15.6208%" y="575.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (119 samples, 0.07%)</title><rect x="15.5313%" y="549" width="0.0670%" height="15" fill="rgb(236,182,39)" fg:x="27589" fg:w="119"/><text x="15.7813%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (110 samples, 0.06%)</title><rect x="15.5364%" y="533" width="0.0619%" height="15" fill="rgb(212,144,35)" fg:x="27598" fg:w="110"/><text x="15.7864%" y="543.50"></text></g><g><title>malloc (26 samples, 0.01%)</title><rect x="15.6107%" y="549" width="0.0146%" height="15" fill="rgb(228,63,44)" fg:x="27730" fg:w="26"/><text x="15.8607%" y="559.50"></text></g><g><title>[libc.so.6] (63 samples, 0.04%)</title><rect x="15.6478%" y="485" width="0.0355%" height="15" fill="rgb(228,109,6)" fg:x="27796" fg:w="63"/><text x="15.8978%" y="495.50"></text></g><g><title>[libc.so.6] (59 samples, 0.03%)</title><rect x="15.6501%" y="469" width="0.0332%" height="15" fill="rgb(238,117,24)" fg:x="27800" fg:w="59"/><text x="15.9001%" y="479.50"></text></g><g><title>[libc.so.6] (30 samples, 0.02%)</title><rect x="15.6664%" y="453" width="0.0169%" height="15" fill="rgb(242,26,26)" fg:x="27829" fg:w="30"/><text x="15.9164%" y="463.50"></text></g><g><title>sled::node::Node::apply (95 samples, 0.05%)</title><rect x="15.6315%" y="549" width="0.0535%" height="15" fill="rgb(221,92,48)" fg:x="27767" fg:w="95"/><text x="15.8815%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (81 samples, 0.05%)</title><rect x="15.6394%" y="533" width="0.0456%" height="15" fill="rgb(209,209,32)" fg:x="27781" fg:w="81"/><text x="15.8894%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (81 samples, 0.05%)</title><rect x="15.6394%" y="517" width="0.0456%" height="15" fill="rgb(221,70,22)" fg:x="27781" fg:w="81"/><text x="15.8894%" y="527.50"></text></g><g><title>realloc (79 samples, 0.04%)</title><rect x="15.6405%" y="501" width="0.0445%" height="15" fill="rgb(248,145,5)" fg:x="27783" fg:w="79"/><text x="15.8905%" y="511.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (18 samples, 0.01%)</title><rect x="15.6912%" y="533" width="0.0101%" height="15" fill="rgb(226,116,26)" fg:x="27873" fg:w="18"/><text x="15.9412%" y="543.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (31 samples, 0.02%)</title><rect x="15.6850%" y="549" width="0.0175%" height="15" fill="rgb(244,5,17)" fg:x="27862" fg:w="31"/><text x="15.9350%" y="559.50"></text></g><g><title>crc32fast::Hasher::update (26 samples, 0.01%)</title><rect x="15.7058%" y="533" width="0.0146%" height="15" fill="rgb(252,159,33)" fg:x="27899" fg:w="26"/><text x="15.9558%" y="543.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (23 samples, 0.01%)</title><rect x="15.7075%" y="517" width="0.0129%" height="15" fill="rgb(206,71,0)" fg:x="27902" fg:w="23"/><text x="15.9575%" y="527.50"></text></g><g><title>sled::pagecache::PageCache::link (348 samples, 0.20%)</title><rect x="15.5251%" y="565" width="0.1959%" height="15" fill="rgb(233,118,54)" fg:x="27578" fg:w="348"/><text x="15.7751%" y="575.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (33 samples, 0.02%)</title><rect x="15.7024%" y="549" width="0.0186%" height="15" fill="rgb(234,83,48)" fg:x="27893" fg:w="33"/><text x="15.9524%" y="559.50"></text></g><g><title>sled::node::Node::index_next_node (35 samples, 0.02%)</title><rect x="15.7379%" y="549" width="0.0197%" height="15" fill="rgb(228,3,54)" fg:x="27956" fg:w="35"/><text x="15.9879%" y="559.50"></text></g><g><title>sled::binary_search::binary_search_lub (33 samples, 0.02%)</title><rect x="15.7390%" y="533" width="0.0186%" height="15" fill="rgb(226,155,13)" fg:x="27958" fg:w="33"/><text x="15.9890%" y="543.50"></text></g><g><title>[libc.so.6] (19 samples, 0.01%)</title><rect x="15.7469%" y="517" width="0.0107%" height="15" fill="rgb(241,28,37)" fg:x="27972" fg:w="19"/><text x="15.9969%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.04%)</title><rect x="15.7632%" y="517" width="0.0411%" height="15" fill="rgb(233,93,10)" fg:x="28001" fg:w="73"/><text x="16.0132%" y="527.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (81 samples, 0.05%)</title><rect x="15.7615%" y="533" width="0.0456%" height="15" fill="rgb(225,113,19)" fg:x="27998" fg:w="81"/><text x="16.0115%" y="543.50"></text></g><g><title>sled::node::Node::parent_split (20 samples, 0.01%)</title><rect x="15.8071%" y="533" width="0.0113%" height="15" fill="rgb(241,2,18)" fg:x="28079" fg:w="20"/><text x="16.0571%" y="543.50"></text></g><g><title>sled::node::Node::split (31 samples, 0.02%)</title><rect x="15.8184%" y="533" width="0.0175%" height="15" fill="rgb(228,207,21)" fg:x="28099" fg:w="31"/><text x="16.0684%" y="543.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_link (24 samples, 0.01%)</title><rect x="15.8449%" y="485" width="0.0135%" height="15" fill="rgb(213,211,35)" fg:x="28146" fg:w="24"/><text x="16.0949%" y="495.50"></text></g><g><title>sled::pagecache::segment::Segment::insert_pid (23 samples, 0.01%)</title><rect x="15.8454%" y="469" width="0.0129%" height="15" fill="rgb(209,83,10)" fg:x="28147" fg:w="23"/><text x="16.0954%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (22 samples, 0.01%)</title><rect x="15.8460%" y="453" width="0.0124%" height="15" fill="rgb(209,164,1)" fg:x="28148" fg:w="22"/><text x="16.0960%" y="463.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (31 samples, 0.02%)</title><rect x="15.8437%" y="501" width="0.0175%" height="15" fill="rgb(213,184,43)" fg:x="28144" fg:w="31"/><text x="16.0937%" y="511.50"></text></g><g><title>sled::pagecache::PageCache::allocate_inner (62 samples, 0.03%)</title><rect x="15.8358%" y="533" width="0.0349%" height="15" fill="rgb(231,61,34)" fg:x="28130" fg:w="62"/><text x="16.0858%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (57 samples, 0.03%)</title><rect x="15.8387%" y="517" width="0.0321%" height="15" fill="rgb(235,75,3)" fg:x="28135" fg:w="57"/><text x="16.0887%" y="527.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (77 samples, 0.04%)</title><rect x="15.9006%" y="453" width="0.0433%" height="15" fill="rgb(220,106,47)" fg:x="28245" fg:w="77"/><text x="16.1506%" y="463.50"></text></g><g><title>[libc.so.6] (47 samples, 0.03%)</title><rect x="15.9175%" y="437" width="0.0265%" height="15" fill="rgb(210,196,33)" fg:x="28275" fg:w="47"/><text x="16.1675%" y="447.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="15.9237%" y="421" width="0.0203%" height="15" fill="rgb(229,154,42)" fg:x="28286" fg:w="36"/><text x="16.1737%" y="431.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="15.9254%" y="405" width="0.0186%" height="15" fill="rgb(228,114,26)" fg:x="28289" fg:w="33"/><text x="16.1754%" y="415.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="15.9254%" y="389" width="0.0186%" height="15" fill="rgb(208,144,1)" fg:x="28289" fg:w="33"/><text x="16.1754%" y="399.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="15.9259%" y="373" width="0.0180%" height="15" fill="rgb(239,112,37)" fg:x="28290" fg:w="32"/><text x="16.1759%" y="383.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="15.9265%" y="357" width="0.0175%" height="15" fill="rgb(210,96,50)" fg:x="28291" fg:w="31"/><text x="16.1765%" y="367.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="15.9293%" y="341" width="0.0146%" height="15" fill="rgb(222,178,2)" fg:x="28296" fg:w="26"/><text x="16.1793%" y="351.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="15.9315%" y="325" width="0.0124%" height="15" fill="rgb(226,74,18)" fg:x="28300" fg:w="22"/><text x="16.1815%" y="335.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="15.9332%" y="309" width="0.0107%" height="15" fill="rgb(225,67,54)" fg:x="28303" fg:w="19"/><text x="16.1832%" y="319.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (100 samples, 0.06%)</title><rect x="15.8983%" y="469" width="0.0563%" height="15" fill="rgb(251,92,32)" fg:x="28241" fg:w="100"/><text x="16.1483%" y="479.50"></text></g><g><title>&lt;u64 as sled::serialization::Serialize&gt;::serialize_into (19 samples, 0.01%)</title><rect x="15.9439%" y="453" width="0.0107%" height="15" fill="rgb(228,149,22)" fg:x="28322" fg:w="19"/><text x="16.1939%" y="463.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (102 samples, 0.06%)</title><rect x="15.8983%" y="485" width="0.0574%" height="15" fill="rgb(243,54,13)" fg:x="28241" fg:w="102"/><text x="16.1483%" y="495.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (129 samples, 0.07%)</title><rect x="15.8859%" y="501" width="0.0726%" height="15" fill="rgb(243,180,28)" fg:x="28219" fg:w="129"/><text x="16.1359%" y="511.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (163 samples, 0.09%)</title><rect x="15.8719%" y="517" width="0.0918%" height="15" fill="rgb(208,167,24)" fg:x="28194" fg:w="163"/><text x="16.1219%" y="527.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (101 samples, 0.06%)</title><rect x="15.9715%" y="501" width="0.0569%" height="15" fill="rgb(245,73,45)" fg:x="28371" fg:w="101"/><text x="16.2215%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96 samples, 0.05%)</title><rect x="15.9743%" y="485" width="0.0540%" height="15" fill="rgb(237,203,48)" fg:x="28376" fg:w="96"/><text x="16.2243%" y="495.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (56 samples, 0.03%)</title><rect x="16.0464%" y="453" width="0.0315%" height="15" fill="rgb(211,197,16)" fg:x="28504" fg:w="56"/><text x="16.2964%" y="463.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (55 samples, 0.03%)</title><rect x="16.0470%" y="437" width="0.0310%" height="15" fill="rgb(243,99,51)" fg:x="28505" fg:w="55"/><text x="16.2970%" y="447.50"></text></g><g><title>[libc.so.6] (46 samples, 0.03%)</title><rect x="16.0520%" y="421" width="0.0259%" height="15" fill="rgb(215,123,29)" fg:x="28514" fg:w="46"/><text x="16.3020%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="16.0638%" y="405" width="0.0141%" height="15" fill="rgb(239,186,37)" fg:x="28535" fg:w="25"/><text x="16.3138%" y="415.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="16.0655%" y="389" width="0.0124%" height="15" fill="rgb(252,136,39)" fg:x="28538" fg:w="22"/><text x="16.3155%" y="399.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="16.0661%" y="373" width="0.0118%" height="15" fill="rgb(223,213,32)" fg:x="28539" fg:w="21"/><text x="16.3161%" y="383.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="16.0661%" y="357" width="0.0118%" height="15" fill="rgb(233,115,5)" fg:x="28539" fg:w="21"/><text x="16.3161%" y="367.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="16.0672%" y="341" width="0.0107%" height="15" fill="rgb(207,226,44)" fg:x="28541" fg:w="19"/><text x="16.3172%" y="351.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="16.0678%" y="325" width="0.0101%" height="15" fill="rgb(208,126,0)" fg:x="28542" fg:w="18"/><text x="16.3178%" y="335.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (58 samples, 0.03%)</title><rect x="16.0464%" y="469" width="0.0327%" height="15" fill="rgb(244,66,21)" fg:x="28504" fg:w="58"/><text x="16.2964%" y="479.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (67 samples, 0.04%)</title><rect x="16.0430%" y="485" width="0.0377%" height="15" fill="rgb(222,97,12)" fg:x="28498" fg:w="67"/><text x="16.2930%" y="495.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (93 samples, 0.05%)</title><rect x="16.0301%" y="501" width="0.0524%" height="15" fill="rgb(219,213,19)" fg:x="28475" fg:w="93"/><text x="16.2801%" y="511.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (217 samples, 0.12%)</title><rect x="15.9636%" y="517" width="0.1222%" height="15" fill="rgb(252,169,30)" fg:x="28357" fg:w="217"/><text x="16.2136%" y="527.50"></text></g><g><title>sled::tree::Tree::split_node (588 samples, 0.33%)</title><rect x="15.7576%" y="549" width="0.3310%" height="15" fill="rgb(206,32,51)" fg:x="27991" fg:w="588"/><text x="16.0076%" y="559.50"></text></g><g><title>sled::pagecache::PageCache::replace (387 samples, 0.22%)</title><rect x="15.8707%" y="533" width="0.2179%" height="15" fill="rgb(250,172,42)" fg:x="28192" fg:w="387"/><text x="16.1207%" y="543.50"></text></g><g><title>sled::lru::Lru::accessed (23 samples, 0.01%)</title><rect x="16.1061%" y="517" width="0.0129%" height="15" fill="rgb(209,34,43)" fg:x="28610" fg:w="23"/><text x="16.3561%" y="527.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (1,371 samples, 0.77%)</title><rect x="15.3483%" y="613" width="0.7718%" height="15" fill="rgb(223,11,35)" fg:x="27264" fg:w="1371"/><text x="15.5983%" y="623.50"></text></g><g><title>sled::tree::Tree::insert (1,359 samples, 0.77%)</title><rect x="15.3551%" y="597" width="0.7651%" height="15" fill="rgb(251,219,26)" fg:x="27276" fg:w="1359"/><text x="15.6051%" y="607.50"></text></g><g><title>sled::tree::Tree::insert_inner (1,086 samples, 0.61%)</title><rect x="15.5088%" y="581" width="0.6114%" height="15" fill="rgb(231,119,3)" fg:x="27549" fg:w="1086"/><text x="15.7588%" y="591.50"></text></g><g><title>sled::tree::Tree::view_for_key (708 samples, 0.40%)</title><rect x="15.7216%" y="565" width="0.3986%" height="15" fill="rgb(216,97,11)" fg:x="27927" fg:w="708"/><text x="15.9716%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_pid (56 samples, 0.03%)</title><rect x="16.0886%" y="549" width="0.0315%" height="15" fill="rgb(223,59,9)" fg:x="28579" fg:w="56"/><text x="16.3386%" y="559.50"></text></g><g><title>sled::pagecache::PageCache::get (46 samples, 0.03%)</title><rect x="16.0942%" y="533" width="0.0259%" height="15" fill="rgb(233,93,31)" fg:x="28589" fg:w="46"/><text x="16.3442%" y="543.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::update_block_index (1,386 samples, 0.78%)</title><rect x="15.3433%" y="629" width="0.7803%" height="15" fill="rgb(239,81,33)" fg:x="27255" fg:w="1386"/><text x="15.5933%" y="639.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (97 samples, 0.05%)</title><rect x="16.1280%" y="597" width="0.0546%" height="15" fill="rgb(213,120,34)" fg:x="28649" fg:w="97"/><text x="16.3780%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (204 samples, 0.11%)</title><rect x="16.1275%" y="613" width="0.1148%" height="15" fill="rgb(243,49,53)" fg:x="28648" fg:w="204"/><text x="16.3775%" y="623.50"></text></g><g><title>bitcoin_hashes::Hash::hash (106 samples, 0.06%)</title><rect x="16.1826%" y="597" width="0.0597%" height="15" fill="rgb(247,216,33)" fg:x="28746" fg:w="106"/><text x="16.4326%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (101 samples, 0.06%)</title><rect x="16.1854%" y="581" width="0.0569%" height="15" fill="rgb(226,26,14)" fg:x="28751" fg:w="101"/><text x="16.4354%" y="591.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (346 samples, 0.19%)</title><rect x="16.1235%" y="629" width="0.1948%" height="15" fill="rgb(215,49,53)" fg:x="28641" fg:w="346"/><text x="16.3735%" y="639.50"></text></g><g><title>std::io::Write::write_all (134 samples, 0.08%)</title><rect x="16.2429%" y="613" width="0.0754%" height="15" fill="rgb(245,162,40)" fg:x="28853" fg:w="134"/><text x="16.4929%" y="623.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (125 samples, 0.07%)</title><rect x="16.2479%" y="597" width="0.0704%" height="15" fill="rgb(229,68,17)" fg:x="28862" fg:w="125"/><text x="16.4979%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (122 samples, 0.07%)</title><rect x="16.2496%" y="581" width="0.0687%" height="15" fill="rgb(213,182,10)" fg:x="28865" fg:w="122"/><text x="16.4996%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (44 samples, 0.02%)</title><rect x="16.3284%" y="581" width="0.0248%" height="15" fill="rgb(245,125,30)" fg:x="29005" fg:w="44"/><text x="16.5784%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (99 samples, 0.06%)</title><rect x="16.3262%" y="597" width="0.0557%" height="15" fill="rgb(232,202,2)" fg:x="29001" fg:w="99"/><text x="16.5762%" y="607.50"></text></g><g><title>bitcoin_hashes::Hash::hash (51 samples, 0.03%)</title><rect x="16.3532%" y="581" width="0.0287%" height="15" fill="rgb(237,140,51)" fg:x="29049" fg:w="51"/><text x="16.6032%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (50 samples, 0.03%)</title><rect x="16.3538%" y="565" width="0.0281%" height="15" fill="rgb(236,157,25)" fg:x="29050" fg:w="50"/><text x="16.6038%" y="575.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::validate_pow (187 samples, 0.11%)</title><rect x="16.3200%" y="629" width="0.1053%" height="15" fill="rgb(219,209,0)" fg:x="28990" fg:w="187"/><text x="16.5700%" y="639.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (179 samples, 0.10%)</title><rect x="16.3245%" y="613" width="0.1008%" height="15" fill="rgb(240,116,54)" fg:x="28998" fg:w="179"/><text x="16.5745%" y="623.50"></text></g><g><title>std::io::Write::write_all (77 samples, 0.04%)</title><rect x="16.3819%" y="597" width="0.0433%" height="15" fill="rgb(216,10,36)" fg:x="29100" fg:w="77"/><text x="16.6319%" y="607.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (70 samples, 0.04%)</title><rect x="16.3858%" y="581" width="0.0394%" height="15" fill="rgb(222,72,44)" fg:x="29107" fg:w="70"/><text x="16.6358%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (65 samples, 0.04%)</title><rect x="16.3887%" y="565" width="0.0366%" height="15" fill="rgb(232,159,9)" fg:x="29112" fg:w="65"/><text x="16.6387%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.02%)</title><rect x="16.4466%" y="597" width="0.0163%" height="15" fill="rgb(210,39,32)" fg:x="29215" fg:w="29"/><text x="16.6966%" y="607.50"></text></g><g><title>malloc (19 samples, 0.01%)</title><rect x="16.4523%" y="581" width="0.0107%" height="15" fill="rgb(216,194,45)" fg:x="29225" fg:w="19"/><text x="16.7023%" y="591.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::chain_params (47 samples, 0.03%)</title><rect x="16.4376%" y="629" width="0.0265%" height="15" fill="rgb(218,18,35)" fg:x="29199" fg:w="47"/><text x="16.6876%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.02%)</title><rect x="16.4421%" y="613" width="0.0220%" height="15" fill="rgb(207,83,51)" fg:x="29207" fg:w="39"/><text x="16.6921%" y="623.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (18 samples, 0.01%)</title><rect x="16.4770%" y="597" width="0.0101%" height="15" fill="rgb(225,63,43)" fg:x="29269" fg:w="18"/><text x="16.7270%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (164 samples, 0.09%)</title><rect x="16.5688%" y="501" width="0.0923%" height="15" fill="rgb(207,57,36)" fg:x="29432" fg:w="164"/><text x="16.8188%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (205 samples, 0.12%)</title><rect x="16.5463%" y="517" width="0.1154%" height="15" fill="rgb(216,99,33)" fg:x="29392" fg:w="205"/><text x="16.7963%" y="527.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (227 samples, 0.13%)</title><rect x="16.5362%" y="533" width="0.1278%" height="15" fill="rgb(225,42,16)" fg:x="29374" fg:w="227"/><text x="16.7862%" y="543.50"></text></g><g><title>sled::pin (244 samples, 0.14%)</title><rect x="16.5288%" y="565" width="0.1374%" height="15" fill="rgb(220,201,45)" fg:x="29361" fg:w="244"/><text x="16.7788%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (241 samples, 0.14%)</title><rect x="16.5305%" y="549" width="0.1357%" height="15" fill="rgb(225,33,4)" fg:x="29364" fg:w="241"/><text x="16.7805%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.01%)</title><rect x="16.6730%" y="549" width="0.0101%" height="15" fill="rgb(224,33,50)" fg:x="29617" fg:w="18"/><text x="16.9230%" y="559.50"></text></g><g><title>[libc.so.6] (66 samples, 0.04%)</title><rect x="16.7028%" y="533" width="0.0372%" height="15" fill="rgb(246,198,51)" fg:x="29670" fg:w="66"/><text x="16.9528%" y="543.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (102 samples, 0.06%)</title><rect x="16.6831%" y="549" width="0.0574%" height="15" fill="rgb(205,22,4)" fg:x="29635" fg:w="102"/><text x="16.9331%" y="559.50"></text></g><g><title>sled::node::Node::index_next_node (140 samples, 0.08%)</title><rect x="16.7703%" y="533" width="0.0788%" height="15" fill="rgb(206,3,8)" fg:x="29790" fg:w="140"/><text x="17.0203%" y="543.50"></text></g><g><title>sled::binary_search::binary_search_lub (124 samples, 0.07%)</title><rect x="16.7794%" y="517" width="0.0698%" height="15" fill="rgb(251,23,15)" fg:x="29806" fg:w="124"/><text x="17.0294%" y="527.50"></text></g><g><title>[libc.so.6] (55 samples, 0.03%)</title><rect x="16.8182%" y="501" width="0.0310%" height="15" fill="rgb(252,88,28)" fg:x="29875" fg:w="55"/><text x="17.0682%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (70 samples, 0.04%)</title><rect x="16.8503%" y="501" width="0.0394%" height="15" fill="rgb(212,127,14)" fg:x="29932" fg:w="70"/><text x="17.1003%" y="511.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (76 samples, 0.04%)</title><rect x="16.8492%" y="517" width="0.0428%" height="15" fill="rgb(247,145,37)" fg:x="29930" fg:w="76"/><text x="17.0992%" y="527.50"></text></g><g><title>sled::node::Node::parent_split (21 samples, 0.01%)</title><rect x="16.8931%" y="517" width="0.0118%" height="15" fill="rgb(209,117,53)" fg:x="30008" fg:w="21"/><text x="17.1431%" y="527.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (26 samples, 0.01%)</title><rect x="16.9274%" y="485" width="0.0146%" height="15" fill="rgb(212,90,42)" fg:x="30069" fg:w="26"/><text x="17.1774%" y="495.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (20 samples, 0.01%)</title><rect x="16.9308%" y="469" width="0.0113%" height="15" fill="rgb(218,164,37)" fg:x="30075" fg:w="20"/><text x="17.1808%" y="479.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (20 samples, 0.01%)</title><rect x="16.9308%" y="453" width="0.0113%" height="15" fill="rgb(246,65,34)" fg:x="30075" fg:w="20"/><text x="17.1808%" y="463.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (20 samples, 0.01%)</title><rect x="16.9308%" y="437" width="0.0113%" height="15" fill="rgb(231,100,33)" fg:x="30075" fg:w="20"/><text x="17.1808%" y="447.50"></text></g><g><title>[libc.so.6] (19 samples, 0.01%)</title><rect x="16.9313%" y="421" width="0.0107%" height="15" fill="rgb(228,126,14)" fg:x="30076" fg:w="19"/><text x="17.1813%" y="431.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (49 samples, 0.03%)</title><rect x="16.9167%" y="501" width="0.0276%" height="15" fill="rgb(215,173,21)" fg:x="30050" fg:w="49"/><text x="17.1667%" y="511.50"></text></g><g><title>sled::pagecache::PageCache::allocate_inner (54 samples, 0.03%)</title><rect x="16.9145%" y="517" width="0.0304%" height="15" fill="rgb(210,6,40)" fg:x="30046" fg:w="54"/><text x="17.1645%" y="527.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (53 samples, 0.03%)</title><rect x="16.9747%" y="437" width="0.0298%" height="15" fill="rgb(212,48,18)" fg:x="30153" fg:w="53"/><text x="17.2247%" y="447.50"></text></g><g><title>[libc.so.6] (28 samples, 0.02%)</title><rect x="16.9888%" y="421" width="0.0158%" height="15" fill="rgb(230,214,11)" fg:x="30178" fg:w="28"/><text x="17.2388%" y="431.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (80 samples, 0.05%)</title><rect x="16.9730%" y="453" width="0.0450%" height="15" fill="rgb(254,105,39)" fg:x="30150" fg:w="80"/><text x="17.2230%" y="463.50"></text></g><g><title>&lt;u64 as sled::serialization::Serialize&gt;::serialize_into (24 samples, 0.01%)</title><rect x="17.0045%" y="437" width="0.0135%" height="15" fill="rgb(245,158,5)" fg:x="30206" fg:w="24"/><text x="17.2545%" y="447.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (83 samples, 0.05%)</title><rect x="16.9719%" y="469" width="0.0467%" height="15" fill="rgb(249,208,11)" fg:x="30148" fg:w="83"/><text x="17.2219%" y="479.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (108 samples, 0.06%)</title><rect x="16.9601%" y="485" width="0.0608%" height="15" fill="rgb(210,39,28)" fg:x="30127" fg:w="108"/><text x="17.2101%" y="495.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (137 samples, 0.08%)</title><rect x="16.9477%" y="501" width="0.0771%" height="15" fill="rgb(211,56,53)" fg:x="30105" fg:w="137"/><text x="17.1977%" y="511.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (83 samples, 0.05%)</title><rect x="17.0316%" y="485" width="0.0467%" height="15" fill="rgb(226,201,30)" fg:x="30254" fg:w="83"/><text x="17.2816%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81 samples, 0.05%)</title><rect x="17.0327%" y="469" width="0.0456%" height="15" fill="rgb(239,101,34)" fg:x="30256" fg:w="81"/><text x="17.2827%" y="479.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (20 samples, 0.01%)</title><rect x="17.0839%" y="469" width="0.0113%" height="15" fill="rgb(226,209,5)" fg:x="30347" fg:w="20"/><text x="17.3339%" y="479.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_replace (19 samples, 0.01%)</title><rect x="17.0845%" y="453" width="0.0107%" height="15" fill="rgb(250,105,47)" fg:x="30348" fg:w="19"/><text x="17.3345%" y="463.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="17.1014%" y="405" width="0.0146%" height="15" fill="rgb(230,72,3)" fg:x="30378" fg:w="26"/><text x="17.3514%" y="415.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (34 samples, 0.02%)</title><rect x="17.0974%" y="437" width="0.0191%" height="15" fill="rgb(232,218,39)" fg:x="30371" fg:w="34"/><text x="17.3474%" y="447.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (33 samples, 0.02%)</title><rect x="17.0980%" y="421" width="0.0186%" height="15" fill="rgb(248,166,6)" fg:x="30372" fg:w="33"/><text x="17.3480%" y="431.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (36 samples, 0.02%)</title><rect x="17.0974%" y="453" width="0.0203%" height="15" fill="rgb(247,89,20)" fg:x="30371" fg:w="36"/><text x="17.3474%" y="463.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (43 samples, 0.02%)</title><rect x="17.0952%" y="469" width="0.0242%" height="15" fill="rgb(248,130,54)" fg:x="30367" fg:w="43"/><text x="17.3452%" y="479.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (79 samples, 0.04%)</title><rect x="17.0794%" y="485" width="0.0445%" height="15" fill="rgb(234,196,4)" fg:x="30339" fg:w="79"/><text x="17.3294%" y="495.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (185 samples, 0.10%)</title><rect x="17.0248%" y="501" width="0.1041%" height="15" fill="rgb(250,143,31)" fg:x="30242" fg:w="185"/><text x="17.2748%" y="511.50"></text></g><g><title>sled::tree::Tree::split_node (508 samples, 0.29%)</title><rect x="16.8492%" y="533" width="0.2860%" height="15" fill="rgb(211,110,34)" fg:x="29930" fg:w="508"/><text x="17.0992%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::replace (338 samples, 0.19%)</title><rect x="16.9449%" y="517" width="0.1903%" height="15" fill="rgb(215,124,48)" fg:x="30100" fg:w="338"/><text x="17.1949%" y="527.50"></text></g><g><title>sled::lru::Lru::accessed (52 samples, 0.03%)</title><rect x="17.2072%" y="501" width="0.0293%" height="15" fill="rgb(216,46,13)" fg:x="30566" fg:w="52"/><text x="17.4572%" y="511.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (1,324 samples, 0.75%)</title><rect x="16.4922%" y="597" width="0.7453%" height="15" fill="rgb(205,184,25)" fg:x="29296" fg:w="1324"/><text x="16.7422%" y="607.50"></text></g><g><title>sled::tree::Tree::get (1,290 samples, 0.73%)</title><rect x="16.5114%" y="581" width="0.7262%" height="15" fill="rgb(228,1,10)" fg:x="29330" fg:w="1290"/><text x="16.7614%" y="591.50"></text></g><g><title>sled::tree::Tree::get_inner (1,015 samples, 0.57%)</title><rect x="16.6662%" y="565" width="0.5714%" height="15" fill="rgb(213,116,27)" fg:x="29605" fg:w="1015"/><text x="16.9162%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_key (883 samples, 0.50%)</title><rect x="16.7405%" y="549" width="0.4971%" height="15" fill="rgb(241,95,50)" fg:x="29737" fg:w="883"/><text x="16.9905%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_pid (182 samples, 0.10%)</title><rect x="17.1351%" y="533" width="0.1025%" height="15" fill="rgb(238,48,32)" fg:x="30438" fg:w="182"/><text x="17.3851%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::get (157 samples, 0.09%)</title><rect x="17.1492%" y="517" width="0.0884%" height="15" fill="rgb(235,113,49)" fg:x="30463" fg:w="157"/><text x="17.3992%" y="527.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (1,379 samples, 0.78%)</title><rect x="16.4652%" y="629" width="0.7763%" height="15" fill="rgb(205,127,43)" fg:x="29248" fg:w="1379"/><text x="16.7152%" y="639.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::get_header (1,370 samples, 0.77%)</title><rect x="16.4703%" y="613" width="0.7712%" height="15" fill="rgb(250,162,2)" fg:x="29257" fg:w="1370"/><text x="16.7203%" y="623.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::UpdatableChainstate&gt;::accept_header (4,773 samples, 2.69%)</title><rect x="14.5551%" y="645" width="2.6870%" height="15" fill="rgb(220,13,41)" fg:x="25855" fg:w="4773"/><text x="14.8051%" y="655.50">&lt;f..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (29 samples, 0.02%)</title><rect x="17.2607%" y="613" width="0.0163%" height="15" fill="rgb(249,221,25)" fg:x="30661" fg:w="29"/><text x="17.5107%" y="623.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.02%)</title><rect x="17.2562%" y="629" width="0.0225%" height="15" fill="rgb(215,208,19)" fg:x="30653" fg:w="40"/><text x="17.5062%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (27 samples, 0.02%)</title><rect x="17.2854%" y="597" width="0.0152%" height="15" fill="rgb(236,175,2)" fg:x="30705" fg:w="27"/><text x="17.5354%" y="607.50"></text></g><g><title>clock_gettime (23 samples, 0.01%)</title><rect x="17.2877%" y="581" width="0.0129%" height="15" fill="rgb(241,52,2)" fg:x="30709" fg:w="23"/><text x="17.5377%" y="591.50"></text></g><g><title>async_std::utils::timer_after (39 samples, 0.02%)</title><rect x="17.2826%" y="629" width="0.0220%" height="15" fill="rgb(248,140,14)" fg:x="30700" fg:w="39"/><text x="17.5326%" y="639.50"></text></g><g><title>async_io::Timer::after (37 samples, 0.02%)</title><rect x="17.2838%" y="613" width="0.0208%" height="15" fill="rgb(253,22,42)" fg:x="30702" fg:w="37"/><text x="17.5338%" y="623.50"></text></g><g><title>async_std::future::timeout::timeout::{{closure}} (99 samples, 0.06%)</title><rect x="17.2505%" y="645" width="0.0557%" height="15" fill="rgb(234,61,47)" fg:x="30643" fg:w="99"/><text x="17.5005%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (106 samples, 0.06%)</title><rect x="17.3158%" y="597" width="0.0597%" height="15" fill="rgb(208,226,15)" fg:x="30759" fg:w="106"/><text x="17.5658%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (201 samples, 0.11%)</title><rect x="17.3153%" y="613" width="0.1132%" height="15" fill="rgb(217,221,4)" fg:x="30758" fg:w="201"/><text x="17.5653%" y="623.50"></text></g><g><title>bitcoin_hashes::Hash::hash (94 samples, 0.05%)</title><rect x="17.3755%" y="597" width="0.0529%" height="15" fill="rgb(212,174,34)" fg:x="30865" fg:w="94"/><text x="17.6255%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (92 samples, 0.05%)</title><rect x="17.3766%" y="581" width="0.0518%" height="15" fill="rgb(253,83,4)" fg:x="30867" fg:w="92"/><text x="17.6266%" y="591.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (343 samples, 0.19%)</title><rect x="17.3063%" y="645" width="0.1931%" height="15" fill="rgb(250,195,49)" fg:x="30742" fg:w="343"/><text x="17.5563%" y="655.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (336 samples, 0.19%)</title><rect x="17.3102%" y="629" width="0.1892%" height="15" fill="rgb(241,192,25)" fg:x="30749" fg:w="336"/><text x="17.5602%" y="639.50"></text></g><g><title>std::io::Write::write_all (122 samples, 0.07%)</title><rect x="17.4307%" y="613" width="0.0687%" height="15" fill="rgb(208,124,10)" fg:x="30963" fg:w="122"/><text x="17.6807%" y="623.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (112 samples, 0.06%)</title><rect x="17.4363%" y="597" width="0.0631%" height="15" fill="rgb(222,33,0)" fg:x="30973" fg:w="112"/><text x="17.6863%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (104 samples, 0.06%)</title><rect x="17.4408%" y="581" width="0.0585%" height="15" fill="rgb(234,209,28)" fg:x="30981" fg:w="104"/><text x="17.6908%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22 samples, 0.01%)</title><rect x="17.4994%" y="645" width="0.0124%" height="15" fill="rgb(224,11,23)" fg:x="31085" fg:w="22"/><text x="17.7494%" y="655.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (38 samples, 0.02%)</title><rect x="17.5354%" y="533" width="0.0214%" height="15" fill="rgb(232,99,1)" fg:x="31149" fg:w="38"/><text x="17.7854%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (33 samples, 0.02%)</title><rect x="17.5382%" y="517" width="0.0186%" height="15" fill="rgb(237,95,45)" fg:x="31154" fg:w="33"/><text x="17.7882%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (23 samples, 0.01%)</title><rect x="17.5438%" y="501" width="0.0129%" height="15" fill="rgb(208,109,11)" fg:x="31164" fg:w="23"/><text x="17.7938%" y="511.50"></text></g><g><title>sled::pin (47 samples, 0.03%)</title><rect x="17.5315%" y="565" width="0.0265%" height="15" fill="rgb(216,190,48)" fg:x="31142" fg:w="47"/><text x="17.7815%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (42 samples, 0.02%)</title><rect x="17.5343%" y="549" width="0.0236%" height="15" fill="rgb(251,171,36)" fg:x="31147" fg:w="42"/><text x="17.7843%" y="559.50"></text></g><g><title>sled::node::Node::index_next_node (25 samples, 0.01%)</title><rect x="17.5759%" y="533" width="0.0141%" height="15" fill="rgb(230,62,22)" fg:x="31221" fg:w="25"/><text x="17.8259%" y="543.50"></text></g><g><title>sled::binary_search::binary_search_lub (24 samples, 0.01%)</title><rect x="17.5765%" y="517" width="0.0135%" height="15" fill="rgb(225,114,35)" fg:x="31222" fg:w="24"/><text x="17.8265%" y="527.50"></text></g><g><title>sled::lru::Lru::accessed (20 samples, 0.01%)</title><rect x="17.6041%" y="501" width="0.0113%" height="15" fill="rgb(215,118,42)" fg:x="31271" fg:w="20"/><text x="17.8541%" y="511.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (172 samples, 0.10%)</title><rect x="17.5202%" y="597" width="0.0968%" height="15" fill="rgb(243,119,21)" fg:x="31122" fg:w="172"/><text x="17.7702%" y="607.50"></text></g><g><title>sled::tree::Tree::get (161 samples, 0.09%)</title><rect x="17.5264%" y="581" width="0.0906%" height="15" fill="rgb(252,177,53)" fg:x="31133" fg:w="161"/><text x="17.7764%" y="591.50"></text></g><g><title>sled::tree::Tree::get_inner (105 samples, 0.06%)</title><rect x="17.5579%" y="565" width="0.0591%" height="15" fill="rgb(237,209,29)" fg:x="31189" fg:w="105"/><text x="17.8079%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_key (86 samples, 0.05%)</title><rect x="17.5686%" y="549" width="0.0484%" height="15" fill="rgb(212,65,23)" fg:x="31208" fg:w="86"/><text x="17.8186%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_pid (48 samples, 0.03%)</title><rect x="17.5900%" y="533" width="0.0270%" height="15" fill="rgb(230,222,46)" fg:x="31246" fg:w="48"/><text x="17.8400%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::get (41 samples, 0.02%)</title><rect x="17.5939%" y="517" width="0.0231%" height="15" fill="rgb(215,135,32)" fg:x="31253" fg:w="41"/><text x="17.8439%" y="527.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_block_hash (188 samples, 0.11%)</title><rect x="17.5146%" y="629" width="0.1058%" height="15" fill="rgb(246,101,22)" fg:x="31112" fg:w="188"/><text x="17.7646%" y="639.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::get_block_hash (184 samples, 0.10%)</title><rect x="17.5168%" y="613" width="0.1036%" height="15" fill="rgb(206,107,13)" fg:x="31116" fg:w="184"/><text x="17.7668%" y="623.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::get_blocks_to_download (202 samples, 0.11%)</title><rect x="17.5140%" y="645" width="0.1137%" height="15" fill="rgb(250,100,44)" fg:x="31111" fg:w="202"/><text x="17.7640%" y="655.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::request_blocks::{{closure}} (56 samples, 0.03%)</title><rect x="17.6277%" y="645" width="0.0315%" height="15" fill="rgb(231,147,38)" fg:x="31313" fg:w="56"/><text x="17.8777%" y="655.50"></text></g><g><title>[libc.so.6] (63 samples, 0.04%)</title><rect x="17.7837%" y="581" width="0.0355%" height="15" fill="rgb(229,8,40)" fg:x="31590" fg:w="63"/><text x="18.0337%" y="591.50"></text></g><g><title>[libc.so.6] (50 samples, 0.03%)</title><rect x="18.6286%" y="549" width="0.0281%" height="15" fill="rgb(221,135,30)" fg:x="33091" fg:w="50"/><text x="18.8786%" y="559.50"></text></g><g><title>[libc.so.6] (1,237 samples, 0.70%)</title><rect x="17.9655%" y="565" width="0.6964%" height="15" fill="rgb(249,193,18)" fg:x="31913" fg:w="1237"/><text x="18.2155%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,668 samples, 0.94%)</title><rect x="17.7262%" y="597" width="0.9390%" height="15" fill="rgb(209,133,39)" fg:x="31488" fg:w="1668"/><text x="17.9762%" y="607.50"></text></g><g><title>malloc (1,488 samples, 0.84%)</title><rect x="17.8276%" y="581" width="0.8377%" height="15" fill="rgb(232,100,14)" fg:x="31668" fg:w="1488"/><text x="18.0776%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,734 samples, 0.98%)</title><rect x="17.6981%" y="613" width="0.9762%" height="15" fill="rgb(224,185,1)" fg:x="31438" fg:w="1734"/><text x="17.9481%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (45 samples, 0.03%)</title><rect x="18.6844%" y="565" width="0.0253%" height="15" fill="rgb(223,139,8)" fg:x="33190" fg:w="45"/><text x="18.9344%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (94 samples, 0.05%)</title><rect x="18.6844%" y="581" width="0.0529%" height="15" fill="rgb(232,213,38)" fg:x="33190" fg:w="94"/><text x="18.9344%" y="591.50"></text></g><g><title>bitcoin_hashes::Hash::hash (49 samples, 0.03%)</title><rect x="18.7097%" y="565" width="0.0276%" height="15" fill="rgb(207,94,22)" fg:x="33235" fg:w="49"/><text x="18.9597%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (47 samples, 0.03%)</title><rect x="18.7108%" y="549" width="0.0265%" height="15" fill="rgb(219,183,54)" fg:x="33237" fg:w="47"/><text x="18.9608%" y="559.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (162 samples, 0.09%)</title><rect x="18.6833%" y="597" width="0.0912%" height="15" fill="rgb(216,185,54)" fg:x="33188" fg:w="162"/><text x="18.9333%" y="607.50"></text></g><g><title>std::io::Write::write_all (62 samples, 0.03%)</title><rect x="18.7396%" y="581" width="0.0349%" height="15" fill="rgb(254,217,39)" fg:x="33288" fg:w="62"/><text x="18.9896%" y="591.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (59 samples, 0.03%)</title><rect x="18.7412%" y="565" width="0.0332%" height="15" fill="rgb(240,178,23)" fg:x="33291" fg:w="59"/><text x="18.9912%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (55 samples, 0.03%)</title><rect x="18.7435%" y="549" width="0.0310%" height="15" fill="rgb(218,11,47)" fg:x="33295" fg:w="55"/><text x="18.9935%" y="559.50"></text></g><g><title>[libc.so.6] (92 samples, 0.05%)</title><rect x="18.7908%" y="501" width="0.0518%" height="15" fill="rgb(218,51,51)" fg:x="33379" fg:w="92"/><text x="19.0408%" y="511.50"></text></g><g><title>[libc.so.6] (88 samples, 0.05%)</title><rect x="18.7930%" y="485" width="0.0495%" height="15" fill="rgb(238,126,27)" fg:x="33383" fg:w="88"/><text x="19.0430%" y="495.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (119 samples, 0.07%)</title><rect x="18.7778%" y="565" width="0.0670%" height="15" fill="rgb(249,202,22)" fg:x="33356" fg:w="119"/><text x="19.0278%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (114 samples, 0.06%)</title><rect x="18.7806%" y="549" width="0.0642%" height="15" fill="rgb(254,195,49)" fg:x="33361" fg:w="114"/><text x="19.0306%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (113 samples, 0.06%)</title><rect x="18.7812%" y="533" width="0.0636%" height="15" fill="rgb(208,123,14)" fg:x="33362" fg:w="113"/><text x="19.0312%" y="543.50"></text></g><g><title>realloc (108 samples, 0.06%)</title><rect x="18.7840%" y="517" width="0.0608%" height="15" fill="rgb(224,200,8)" fg:x="33367" fg:w="108"/><text x="19.0340%" y="527.50"></text></g><g><title>bitcoin::consensus::encode::serialize (127 samples, 0.07%)</title><rect x="18.7745%" y="597" width="0.0715%" height="15" fill="rgb(217,61,36)" fg:x="33350" fg:w="127"/><text x="19.0245%" y="607.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (125 samples, 0.07%)</title><rect x="18.7756%" y="581" width="0.0704%" height="15" fill="rgb(206,35,45)" fg:x="33352" fg:w="125"/><text x="19.0256%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (40 samples, 0.02%)</title><rect x="18.9017%" y="517" width="0.0225%" height="15" fill="rgb(217,65,33)" fg:x="33576" fg:w="40"/><text x="19.1517%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (28 samples, 0.02%)</title><rect x="18.9084%" y="501" width="0.0158%" height="15" fill="rgb(222,158,48)" fg:x="33588" fg:w="28"/><text x="19.1584%" y="511.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (48 samples, 0.03%)</title><rect x="18.8989%" y="533" width="0.0270%" height="15" fill="rgb(254,2,54)" fg:x="33571" fg:w="48"/><text x="19.1489%" y="543.50"></text></g><g><title>sled::pin (66 samples, 0.04%)</title><rect x="18.8904%" y="565" width="0.0372%" height="15" fill="rgb(250,143,38)" fg:x="33556" fg:w="66"/><text x="19.1404%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (55 samples, 0.03%)</title><rect x="18.8966%" y="549" width="0.0310%" height="15" fill="rgb(248,25,0)" fg:x="33567" fg:w="55"/><text x="19.1466%" y="559.50"></text></g><g><title>sled::node::Node::node_kv_pair (46 samples, 0.03%)</title><rect x="18.9456%" y="549" width="0.0259%" height="15" fill="rgb(206,152,27)" fg:x="33654" fg:w="46"/><text x="19.1956%" y="559.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (22 samples, 0.01%)</title><rect x="18.9591%" y="533" width="0.0124%" height="15" fill="rgb(240,77,30)" fg:x="33678" fg:w="22"/><text x="19.2091%" y="543.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (384 samples, 0.22%)</title><rect x="18.9839%" y="533" width="0.2162%" height="15" fill="rgb(231,5,3)" fg:x="33722" fg:w="384"/><text x="19.2339%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (372 samples, 0.21%)</title><rect x="18.9906%" y="517" width="0.2094%" height="15" fill="rgb(207,226,32)" fg:x="33734" fg:w="372"/><text x="19.2406%" y="527.50"></text></g><g><title>malloc (23 samples, 0.01%)</title><rect x="19.1871%" y="501" width="0.0129%" height="15" fill="rgb(222,207,47)" fg:x="34083" fg:w="23"/><text x="19.4371%" y="511.50"></text></g><g><title>malloc (18 samples, 0.01%)</title><rect x="19.2164%" y="533" width="0.0101%" height="15" fill="rgb(229,115,45)" fg:x="34135" fg:w="18"/><text x="19.4664%" y="543.50"></text></g><g><title>sled::node::Node::apply (36 samples, 0.02%)</title><rect x="19.2293%" y="533" width="0.0203%" height="15" fill="rgb(224,191,6)" fg:x="34158" fg:w="36"/><text x="19.4793%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::replace (30 samples, 0.02%)</title><rect x="19.2496%" y="533" width="0.0169%" height="15" fill="rgb(230,227,24)" fg:x="34194" fg:w="30"/><text x="19.4996%" y="543.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (38 samples, 0.02%)</title><rect x="19.2924%" y="517" width="0.0214%" height="15" fill="rgb(228,80,19)" fg:x="34270" fg:w="38"/><text x="19.5424%" y="527.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (89 samples, 0.05%)</title><rect x="19.2665%" y="533" width="0.0501%" height="15" fill="rgb(247,229,0)" fg:x="34224" fg:w="89"/><text x="19.5165%" y="543.50"></text></g><g><title>crc32fast::Hasher::update (57 samples, 0.03%)</title><rect x="19.3245%" y="517" width="0.0321%" height="15" fill="rgb(237,194,15)" fg:x="34327" fg:w="57"/><text x="19.5745%" y="527.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (57 samples, 0.03%)</title><rect x="19.3245%" y="501" width="0.0321%" height="15" fill="rgb(219,203,20)" fg:x="34327" fg:w="57"/><text x="19.5745%" y="511.50"></text></g><g><title>sled::pagecache::PageCache::link (686 samples, 0.39%)</title><rect x="18.9715%" y="549" width="0.3862%" height="15" fill="rgb(234,128,8)" fg:x="33700" fg:w="686"/><text x="19.2215%" y="559.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (73 samples, 0.04%)</title><rect x="19.3166%" y="533" width="0.0411%" height="15" fill="rgb(248,202,8)" fg:x="34313" fg:w="73"/><text x="19.5666%" y="543.50"></text></g><g><title>sled::node::Node::index_next_node (58 samples, 0.03%)</title><rect x="19.3785%" y="533" width="0.0327%" height="15" fill="rgb(206,104,37)" fg:x="34423" fg:w="58"/><text x="19.6285%" y="543.50"></text></g><g><title>sled::binary_search::binary_search_lub (51 samples, 0.03%)</title><rect x="19.3824%" y="517" width="0.0287%" height="15" fill="rgb(223,8,27)" fg:x="34430" fg:w="51"/><text x="19.6324%" y="527.50"></text></g><g><title>[libc.so.6] (18 samples, 0.01%)</title><rect x="19.4010%" y="501" width="0.0101%" height="15" fill="rgb(216,217,28)" fg:x="34463" fg:w="18"/><text x="19.6510%" y="511.50"></text></g><g><title>sled::lru::Lru::accessed (22 samples, 0.01%)</title><rect x="19.4393%" y="501" width="0.0124%" height="15" fill="rgb(249,199,1)" fg:x="34531" fg:w="22"/><text x="19.6893%" y="511.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (1,070 samples, 0.60%)</title><rect x="18.8521%" y="597" width="0.6024%" height="15" fill="rgb(240,85,17)" fg:x="33488" fg:w="1070"/><text x="19.1021%" y="607.50"></text></g><g><title>sled::tree::Tree::insert (1,039 samples, 0.58%)</title><rect x="18.8696%" y="581" width="0.5849%" height="15" fill="rgb(206,108,45)" fg:x="33519" fg:w="1039"/><text x="19.1196%" y="591.50"></text></g><g><title>sled::tree::Tree::insert_inner (936 samples, 0.53%)</title><rect x="18.9276%" y="565" width="0.5269%" height="15" fill="rgb(245,210,41)" fg:x="33622" fg:w="936"/><text x="19.1776%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_key (167 samples, 0.09%)</title><rect x="19.3605%" y="549" width="0.0940%" height="15" fill="rgb(206,13,37)" fg:x="34391" fg:w="167"/><text x="19.6105%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_pid (77 samples, 0.04%)</title><rect x="19.4112%" y="533" width="0.0433%" height="15" fill="rgb(250,61,18)" fg:x="34481" fg:w="77"/><text x="19.6612%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::get (69 samples, 0.04%)</title><rect x="19.4157%" y="517" width="0.0388%" height="15" fill="rgb(235,172,48)" fg:x="34489" fg:w="69"/><text x="19.6657%" y="527.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::save_header (1,401 samples, 0.79%)</title><rect x="18.6748%" y="613" width="0.7887%" height="15" fill="rgb(249,201,17)" fg:x="33173" fg:w="1401"/><text x="18.9248%" y="623.50"></text></g><g><title>[libc.so.6] (47 samples, 0.03%)</title><rect x="19.4765%" y="501" width="0.0265%" height="15" fill="rgb(219,208,6)" fg:x="34597" fg:w="47"/><text x="19.7265%" y="511.50"></text></g><g><title>[libc.so.6] (50 samples, 0.03%)</title><rect x="19.4753%" y="517" width="0.0281%" height="15" fill="rgb(248,31,23)" fg:x="34595" fg:w="50"/><text x="19.7253%" y="527.50"></text></g><g><title>bitcoin::consensus::encode::serialize (66 samples, 0.04%)</title><rect x="19.4674%" y="597" width="0.0372%" height="15" fill="rgb(245,15,42)" fg:x="34581" fg:w="66"/><text x="19.7174%" y="607.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::BestChain as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (65 samples, 0.04%)</title><rect x="19.4680%" y="581" width="0.0366%" height="15" fill="rgb(222,217,39)" fg:x="34582" fg:w="65"/><text x="19.7180%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (64 samples, 0.04%)</title><rect x="19.4686%" y="565" width="0.0360%" height="15" fill="rgb(210,219,27)" fg:x="34583" fg:w="64"/><text x="19.7186%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (61 samples, 0.03%)</title><rect x="19.4703%" y="549" width="0.0343%" height="15" fill="rgb(252,166,36)" fg:x="34586" fg:w="61"/><text x="19.7203%" y="559.50"></text></g><g><title>realloc (57 samples, 0.03%)</title><rect x="19.4725%" y="533" width="0.0321%" height="15" fill="rgb(245,132,34)" fg:x="34590" fg:w="57"/><text x="19.7225%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (28 samples, 0.02%)</title><rect x="19.5367%" y="517" width="0.0158%" height="15" fill="rgb(236,54,3)" fg:x="34704" fg:w="28"/><text x="19.7867%" y="527.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (34 samples, 0.02%)</title><rect x="19.5350%" y="533" width="0.0191%" height="15" fill="rgb(241,173,43)" fg:x="34701" fg:w="34"/><text x="19.7850%" y="543.50"></text></g><g><title>sled::pin (40 samples, 0.02%)</title><rect x="19.5322%" y="565" width="0.0225%" height="15" fill="rgb(215,190,9)" fg:x="34696" fg:w="40"/><text x="19.7822%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (37 samples, 0.02%)</title><rect x="19.5339%" y="549" width="0.0208%" height="15" fill="rgb(242,101,16)" fg:x="34699" fg:w="37"/><text x="19.7839%" y="559.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (29 samples, 0.02%)</title><rect x="19.5789%" y="533" width="0.0163%" height="15" fill="rgb(223,190,21)" fg:x="34779" fg:w="29"/><text x="19.8289%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.01%)</title><rect x="19.5834%" y="517" width="0.0118%" height="15" fill="rgb(215,228,25)" fg:x="34787" fg:w="21"/><text x="19.8334%" y="527.50"></text></g><g><title>malloc (29 samples, 0.02%)</title><rect x="19.6042%" y="533" width="0.0163%" height="15" fill="rgb(225,36,22)" fg:x="34824" fg:w="29"/><text x="19.8542%" y="543.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_link (29 samples, 0.02%)</title><rect x="19.6549%" y="485" width="0.0163%" height="15" fill="rgb(251,106,46)" fg:x="34914" fg:w="29"/><text x="19.9049%" y="495.50"></text></g><g><title>sled::pagecache::segment::Segment::insert_pid (26 samples, 0.01%)</title><rect x="19.6566%" y="469" width="0.0146%" height="15" fill="rgb(208,90,1)" fg:x="34917" fg:w="26"/><text x="19.9066%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (25 samples, 0.01%)</title><rect x="19.6572%" y="453" width="0.0141%" height="15" fill="rgb(243,10,4)" fg:x="34918" fg:w="25"/><text x="19.9072%" y="463.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (80 samples, 0.05%)</title><rect x="19.6442%" y="501" width="0.0450%" height="15" fill="rgb(212,137,27)" fg:x="34895" fg:w="80"/><text x="19.8942%" y="511.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_replace (32 samples, 0.02%)</title><rect x="19.6712%" y="485" width="0.0180%" height="15" fill="rgb(231,220,49)" fg:x="34943" fg:w="32"/><text x="19.9212%" y="495.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (24 samples, 0.01%)</title><rect x="19.6893%" y="501" width="0.0135%" height="15" fill="rgb(237,96,20)" fg:x="34975" fg:w="24"/><text x="19.9393%" y="511.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (126 samples, 0.07%)</title><rect x="19.6346%" y="517" width="0.0709%" height="15" fill="rgb(239,229,30)" fg:x="34878" fg:w="126"/><text x="19.8846%" y="527.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (101 samples, 0.06%)</title><rect x="19.7140%" y="501" width="0.0569%" height="15" fill="rgb(219,65,33)" fg:x="35019" fg:w="101"/><text x="19.9640%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98 samples, 0.06%)</title><rect x="19.7157%" y="485" width="0.0552%" height="15" fill="rgb(243,134,7)" fg:x="35022" fg:w="98"/><text x="19.9657%" y="495.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (19 samples, 0.01%)</title><rect x="19.7748%" y="485" width="0.0107%" height="15" fill="rgb(216,177,54)" fg:x="35127" fg:w="19"/><text x="20.0248%" y="495.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (18 samples, 0.01%)</title><rect x="19.7855%" y="485" width="0.0101%" height="15" fill="rgb(211,160,20)" fg:x="35146" fg:w="18"/><text x="20.0355%" y="495.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (53 samples, 0.03%)</title><rect x="19.7714%" y="501" width="0.0298%" height="15" fill="rgb(239,85,39)" fg:x="35121" fg:w="53"/><text x="20.0214%" y="511.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (175 samples, 0.10%)</title><rect x="19.7056%" y="517" width="0.0985%" height="15" fill="rgb(232,125,22)" fg:x="35004" fg:w="175"/><text x="19.9556%" y="527.50"></text></g><g><title>sled::pagecache::PageCache::replace (329 samples, 0.19%)</title><rect x="19.6330%" y="533" width="0.1852%" height="15" fill="rgb(244,57,34)" fg:x="34875" fg:w="329"/><text x="19.8830%" y="543.50"></text></g><g><title>sled::pagecache::segment::SegmentCleaner::pop (25 samples, 0.01%)</title><rect x="19.8041%" y="517" width="0.0141%" height="15" fill="rgb(214,203,32)" fg:x="35179" fg:w="25"/><text x="20.0541%" y="527.50"></text></g><g><title>sled::pagecache::PageCache::link (482 samples, 0.27%)</title><rect x="19.5727%" y="549" width="0.2713%" height="15" fill="rgb(207,58,43)" fg:x="34768" fg:w="482"/><text x="19.8227%" y="559.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (29 samples, 0.02%)</title><rect x="19.8277%" y="533" width="0.0163%" height="15" fill="rgb(215,193,15)" fg:x="35221" fg:w="29"/><text x="20.0777%" y="543.50"></text></g><g><title>crc32fast::Hasher::update (28 samples, 0.02%)</title><rect x="19.8283%" y="517" width="0.0158%" height="15" fill="rgb(232,15,44)" fg:x="35222" fg:w="28"/><text x="20.0783%" y="527.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (28 samples, 0.02%)</title><rect x="19.8283%" y="501" width="0.0158%" height="15" fill="rgb(212,3,48)" fg:x="35222" fg:w="28"/><text x="20.0783%" y="511.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (671 samples, 0.38%)</title><rect x="19.5119%" y="597" width="0.3777%" height="15" fill="rgb(218,128,7)" fg:x="34660" fg:w="671"/><text x="19.7619%" y="607.50"></text></g><g><title>sled::tree::Tree::insert (649 samples, 0.37%)</title><rect x="19.5243%" y="581" width="0.3654%" height="15" fill="rgb(226,216,39)" fg:x="34682" fg:w="649"/><text x="19.7743%" y="591.50"></text></g><g><title>sled::tree::Tree::insert_inner (595 samples, 0.33%)</title><rect x="19.5547%" y="565" width="0.3350%" height="15" fill="rgb(243,47,51)" fg:x="34736" fg:w="595"/><text x="19.8047%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_key (81 samples, 0.05%)</title><rect x="19.8441%" y="549" width="0.0456%" height="15" fill="rgb(241,183,40)" fg:x="35250" fg:w="81"/><text x="20.0941%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_pid (53 samples, 0.03%)</title><rect x="19.8598%" y="533" width="0.0298%" height="15" fill="rgb(231,217,32)" fg:x="35278" fg:w="53"/><text x="20.1098%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::get (46 samples, 0.03%)</title><rect x="19.8638%" y="517" width="0.0259%" height="15" fill="rgb(229,61,38)" fg:x="35285" fg:w="46"/><text x="20.1138%" y="527.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::save_height (770 samples, 0.43%)</title><rect x="19.4635%" y="613" width="0.4335%" height="15" fill="rgb(225,210,5)" fg:x="34574" fg:w="770"/><text x="19.7135%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (19 samples, 0.01%)</title><rect x="19.9251%" y="517" width="0.0107%" height="15" fill="rgb(231,79,45)" fg:x="35394" fg:w="19"/><text x="20.1751%" y="527.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (22 samples, 0.01%)</title><rect x="19.9246%" y="533" width="0.0124%" height="15" fill="rgb(224,100,7)" fg:x="35393" fg:w="22"/><text x="20.1746%" y="543.50"></text></g><g><title>sled::pin (31 samples, 0.02%)</title><rect x="19.9217%" y="565" width="0.0175%" height="15" fill="rgb(241,198,18)" fg:x="35388" fg:w="31"/><text x="20.1717%" y="575.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (28 samples, 0.02%)</title><rect x="19.9234%" y="549" width="0.0158%" height="15" fill="rgb(252,97,53)" fg:x="35391" fg:w="28"/><text x="20.1734%" y="559.50"></text></g><g><title>sled::node::Node::node_kv_pair (22 samples, 0.01%)</title><rect x="19.9420%" y="549" width="0.0124%" height="15" fill="rgb(220,88,7)" fg:x="35424" fg:w="22"/><text x="20.1920%" y="559.50"></text></g><g><title>sled::node::Node::index_next_node (30 samples, 0.02%)</title><rect x="19.9685%" y="533" width="0.0169%" height="15" fill="rgb(213,176,14)" fg:x="35471" fg:w="30"/><text x="20.2185%" y="543.50"></text></g><g><title>sled::binary_search::binary_search_lub (27 samples, 0.02%)</title><rect x="19.9702%" y="517" width="0.0152%" height="15" fill="rgb(246,73,7)" fg:x="35474" fg:w="27"/><text x="20.2202%" y="527.50"></text></g><g><title>sled::lru::Lru::accessed (24 samples, 0.01%)</title><rect x="20.0011%" y="501" width="0.0135%" height="15" fill="rgb(245,64,36)" fg:x="35529" fg:w="24"/><text x="20.2511%" y="511.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (203 samples, 0.11%)</title><rect x="19.9032%" y="597" width="0.1143%" height="15" fill="rgb(245,80,10)" fg:x="35355" fg:w="203"/><text x="20.1532%" y="607.50"></text></g><g><title>sled::tree::Tree::insert (182 samples, 0.10%)</title><rect x="19.9150%" y="581" width="0.1025%" height="15" fill="rgb(232,107,50)" fg:x="35376" fg:w="182"/><text x="20.1650%" y="591.50"></text></g><g><title>sled::tree::Tree::insert_inner (139 samples, 0.08%)</title><rect x="19.9392%" y="565" width="0.0783%" height="15" fill="rgb(253,3,0)" fg:x="35419" fg:w="139"/><text x="20.1892%" y="575.50"></text></g><g><title>sled::tree::Tree::view_for_key (109 samples, 0.06%)</title><rect x="19.9561%" y="549" width="0.0614%" height="15" fill="rgb(212,99,53)" fg:x="35449" fg:w="109"/><text x="20.2061%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_pid (57 samples, 0.03%)</title><rect x="19.9854%" y="533" width="0.0321%" height="15" fill="rgb(249,111,54)" fg:x="35501" fg:w="57"/><text x="20.2354%" y="543.50"></text></g><g><title>sled::pagecache::PageCache::get (51 samples, 0.03%)</title><rect x="19.9887%" y="517" width="0.0287%" height="15" fill="rgb(249,55,30)" fg:x="35507" fg:w="51"/><text x="20.2387%" y="527.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::update_block_index (219 samples, 0.12%)</title><rect x="19.8970%" y="613" width="0.1233%" height="15" fill="rgb(237,47,42)" fg:x="35344" fg:w="219"/><text x="20.1470%" y="623.50"></text></g><g><title>bitcoin::blockdata::block::Block::bip34_block_height (24 samples, 0.01%)</title><rect x="20.0231%" y="613" width="0.0135%" height="15" fill="rgb(211,20,18)" fg:x="35568" fg:w="24"/><text x="20.2731%" y="623.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (45 samples, 0.03%)</title><rect x="20.0462%" y="565" width="0.0253%" height="15" fill="rgb(231,203,46)" fg:x="35609" fg:w="45"/><text x="20.2962%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (99 samples, 0.06%)</title><rect x="20.0411%" y="581" width="0.0557%" height="15" fill="rgb(237,142,3)" fg:x="35600" fg:w="99"/><text x="20.2911%" y="591.50"></text></g><g><title>bitcoin_hashes::Hash::hash (45 samples, 0.03%)</title><rect x="20.0715%" y="565" width="0.0253%" height="15" fill="rgb(241,107,1)" fg:x="35654" fg:w="45"/><text x="20.3215%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (44 samples, 0.02%)</title><rect x="20.0721%" y="549" width="0.0248%" height="15" fill="rgb(229,83,13)" fg:x="35655" fg:w="44"/><text x="20.3221%" y="559.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (164 samples, 0.09%)</title><rect x="20.0366%" y="613" width="0.0923%" height="15" fill="rgb(241,91,40)" fg:x="35592" fg:w="164"/><text x="20.2866%" y="623.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (161 samples, 0.09%)</title><rect x="20.0383%" y="597" width="0.0906%" height="15" fill="rgb(225,3,45)" fg:x="35595" fg:w="161"/><text x="20.2883%" y="607.50"></text></g><g><title>std::io::Write::write_all (57 samples, 0.03%)</title><rect x="20.0968%" y="581" width="0.0321%" height="15" fill="rgb(244,223,14)" fg:x="35699" fg:w="57"/><text x="20.3468%" y="591.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (51 samples, 0.03%)</title><rect x="20.1002%" y="565" width="0.0287%" height="15" fill="rgb(224,124,37)" fg:x="35705" fg:w="51"/><text x="20.3502%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (50 samples, 0.03%)</title><rect x="20.1008%" y="549" width="0.0281%" height="15" fill="rgb(251,171,30)" fg:x="35706" fg:w="50"/><text x="20.3508%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (407 samples, 0.23%)</title><rect x="20.1542%" y="565" width="0.2291%" height="15" fill="rgb(236,46,54)" fg:x="35801" fg:w="407"/><text x="20.4042%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (851 samples, 0.48%)</title><rect x="20.1441%" y="581" width="0.4791%" height="15" fill="rgb(245,213,5)" fg:x="35783" fg:w="851"/><text x="20.3941%" y="591.50"></text></g><g><title>bitcoin_hashes::Hash::hash (426 samples, 0.24%)</title><rect x="20.3834%" y="565" width="0.2398%" height="15" fill="rgb(230,144,27)" fg:x="36208" fg:w="426"/><text x="20.6334%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (416 samples, 0.23%)</title><rect x="20.3890%" y="549" width="0.2342%" height="15" fill="rgb(220,86,6)" fg:x="36218" fg:w="416"/><text x="20.6390%" y="559.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (55 samples, 0.03%)</title><rect x="20.6744%" y="549" width="0.0310%" height="15" fill="rgb(240,20,13)" fg:x="36725" fg:w="55"/><text x="20.9244%" y="559.50"></text></g><g><title>std::io::Write::write_all (51 samples, 0.03%)</title><rect x="20.6767%" y="533" width="0.0287%" height="15" fill="rgb(217,89,34)" fg:x="36729" fg:w="51"/><text x="20.9267%" y="543.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (32 samples, 0.02%)</title><rect x="20.6874%" y="517" width="0.0180%" height="15" fill="rgb(229,13,5)" fg:x="36748" fg:w="32"/><text x="20.9374%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (20 samples, 0.01%)</title><rect x="20.6941%" y="501" width="0.0113%" height="15" fill="rgb(244,67,35)" fg:x="36760" fg:w="20"/><text x="20.9441%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (39 samples, 0.02%)</title><rect x="20.7408%" y="501" width="0.0220%" height="15" fill="rgb(221,40,2)" fg:x="36843" fg:w="39"/><text x="20.9908%" y="511.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (86 samples, 0.05%)</title><rect x="20.7149%" y="549" width="0.0484%" height="15" fill="rgb(237,157,21)" fg:x="36797" fg:w="86"/><text x="20.9649%" y="559.50"></text></g><g><title>std::io::Write::write_all (77 samples, 0.04%)</title><rect x="20.7200%" y="533" width="0.0433%" height="15" fill="rgb(222,94,11)" fg:x="36806" fg:w="77"/><text x="20.9700%" y="543.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (50 samples, 0.03%)</title><rect x="20.7352%" y="517" width="0.0281%" height="15" fill="rgb(249,113,6)" fg:x="36833" fg:w="50"/><text x="20.9852%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (471 samples, 0.27%)</title><rect x="20.6570%" y="565" width="0.2652%" height="15" fill="rgb(238,137,36)" fg:x="36694" fg:w="471"/><text x="20.9070%" y="575.50"></text></g><g><title>std::io::Write::write_all (282 samples, 0.16%)</title><rect x="20.7634%" y="549" width="0.1588%" height="15" fill="rgb(210,102,26)" fg:x="36883" fg:w="282"/><text x="21.0134%" y="559.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (231 samples, 0.13%)</title><rect x="20.7921%" y="533" width="0.1300%" height="15" fill="rgb(218,30,30)" fg:x="36934" fg:w="231"/><text x="21.0421%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (204 samples, 0.11%)</title><rect x="20.8073%" y="517" width="0.1148%" height="15" fill="rgb(214,67,26)" fg:x="36961" fg:w="204"/><text x="21.0573%" y="527.50"></text></g><g><title>[libc.so.6] (34 samples, 0.02%)</title><rect x="20.9030%" y="501" width="0.0191%" height="15" fill="rgb(251,9,53)" fg:x="37131" fg:w="34"/><text x="21.1530%" y="511.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (51 samples, 0.03%)</title><rect x="20.9221%" y="565" width="0.0287%" height="15" fill="rgb(228,204,25)" fg:x="37165" fg:w="51"/><text x="21.1721%" y="575.50"></text></g><g><title>std::io::Write::write_all (46 samples, 0.03%)</title><rect x="20.9249%" y="549" width="0.0259%" height="15" fill="rgb(207,153,8)" fg:x="37170" fg:w="46"/><text x="21.1749%" y="559.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (34 samples, 0.02%)</title><rect x="20.9317%" y="533" width="0.0191%" height="15" fill="rgb(242,9,16)" fg:x="37182" fg:w="34"/><text x="21.1817%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (22 samples, 0.01%)</title><rect x="20.9384%" y="517" width="0.0124%" height="15" fill="rgb(217,211,10)" fg:x="37194" fg:w="22"/><text x="21.1884%" y="527.50"></text></g><g><title>[libc.so.6] (27 samples, 0.02%)</title><rect x="21.5954%" y="533" width="0.0152%" height="15" fill="rgb(219,228,52)" fg:x="38361" fg:w="27"/><text x="21.8454%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,146 samples, 0.65%)</title><rect x="20.9677%" y="549" width="0.6451%" height="15" fill="rgb(231,92,29)" fg:x="37246" fg:w="1146"/><text x="21.2177%" y="559.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="22.0869%" y="517" width="0.0124%" height="15" fill="rgb(232,8,23)" fg:x="39234" fg:w="22"/><text x="22.3369%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (2,038 samples, 1.15%)</title><rect x="20.9542%" y="565" width="1.1473%" height="15" fill="rgb(216,211,34)" fg:x="37222" fg:w="2038"/><text x="21.2042%" y="575.50"></text></g><g><title>bitcoin_hashes::Hash::hash (866 samples, 0.49%)</title><rect x="21.6140%" y="549" width="0.4875%" height="15" fill="rgb(236,151,0)" fg:x="38394" fg:w="866"/><text x="21.8640%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (835 samples, 0.47%)</title><rect x="21.6314%" y="533" width="0.4701%" height="15" fill="rgb(209,168,3)" fg:x="38425" fg:w="835"/><text x="21.8814%" y="543.50"></text></g><g><title>[libc.so.6] (91 samples, 0.05%)</title><rect x="22.6436%" y="501" width="0.0512%" height="15" fill="rgb(208,129,28)" fg:x="40223" fg:w="91"/><text x="22.8936%" y="511.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (1,063 samples, 0.60%)</title><rect x="22.1021%" y="565" width="0.5984%" height="15" fill="rgb(229,78,22)" fg:x="39261" fg:w="1063"/><text x="22.3521%" y="575.50"></text></g><g><title>std::io::Write::write_all (1,053 samples, 0.59%)</title><rect x="22.1077%" y="549" width="0.5928%" height="15" fill="rgb(228,187,13)" fg:x="39271" fg:w="1053"/><text x="22.3577%" y="559.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,013 samples, 0.57%)</title><rect x="22.1302%" y="533" width="0.5703%" height="15" fill="rgb(240,119,24)" fg:x="39311" fg:w="1013"/><text x="22.3802%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (988 samples, 0.56%)</title><rect x="22.1443%" y="517" width="0.5562%" height="15" fill="rgb(209,194,42)" fg:x="39336" fg:w="988"/><text x="22.3943%" y="527.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (3,851 samples, 2.17%)</title><rect x="20.6271%" y="581" width="2.1679%" height="15" fill="rgb(247,200,46)" fg:x="36641" fg:w="3851"/><text x="20.8771%" y="591.50">b..</text></g><g><title>std::io::Write::write_all (168 samples, 0.09%)</title><rect x="22.7005%" y="565" width="0.0946%" height="15" fill="rgb(218,76,16)" fg:x="40324" fg:w="168"/><text x="22.9505%" y="575.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (117 samples, 0.07%)</title><rect x="22.7292%" y="549" width="0.0659%" height="15" fill="rgb(225,21,48)" fg:x="40375" fg:w="117"/><text x="22.9792%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (91 samples, 0.05%)</title><rect x="22.7438%" y="533" width="0.0512%" height="15" fill="rgb(239,223,50)" fg:x="40401" fg:w="91"/><text x="22.9938%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (195 samples, 0.11%)</title><rect x="22.8024%" y="549" width="0.1098%" height="15" fill="rgb(244,45,21)" fg:x="40505" fg:w="195"/><text x="23.0524%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (415 samples, 0.23%)</title><rect x="22.7990%" y="565" width="0.2336%" height="15" fill="rgb(232,33,43)" fg:x="40499" fg:w="415"/><text x="23.0490%" y="575.50"></text></g><g><title>bitcoin_hashes::Hash::hash (214 samples, 0.12%)</title><rect x="22.9122%" y="549" width="0.1205%" height="15" fill="rgb(209,8,3)" fg:x="40700" fg:w="214"/><text x="23.1622%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (205 samples, 0.12%)</title><rect x="22.9172%" y="533" width="0.1154%" height="15" fill="rgb(214,25,53)" fg:x="40709" fg:w="205"/><text x="23.1672%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (102 samples, 0.06%)</title><rect x="23.0411%" y="533" width="0.0574%" height="15" fill="rgb(254,186,54)" fg:x="40929" fg:w="102"/><text x="23.2911%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (229 samples, 0.13%)</title><rect x="23.0366%" y="549" width="0.1289%" height="15" fill="rgb(208,174,49)" fg:x="40921" fg:w="229"/><text x="23.2866%" y="559.50"></text></g><g><title>bitcoin_hashes::Hash::hash (119 samples, 0.07%)</title><rect x="23.0985%" y="533" width="0.0670%" height="15" fill="rgb(233,191,51)" fg:x="41031" fg:w="119"/><text x="23.3485%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (114 samples, 0.06%)</title><rect x="23.1013%" y="517" width="0.0642%" height="15" fill="rgb(222,134,10)" fg:x="41036" fg:w="114"/><text x="23.3513%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (70 samples, 0.04%)</title><rect x="23.1677%" y="517" width="0.0394%" height="15" fill="rgb(230,226,20)" fg:x="41154" fg:w="70"/><text x="23.4177%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (113 samples, 0.06%)</title><rect x="23.1672%" y="533" width="0.0636%" height="15" fill="rgb(251,111,25)" fg:x="41153" fg:w="113"/><text x="23.4172%" y="543.50"></text></g><g><title>bitcoin_hashes::Hash::hash (42 samples, 0.02%)</title><rect x="23.2071%" y="517" width="0.0236%" height="15" fill="rgb(224,40,46)" fg:x="41224" fg:w="42"/><text x="23.4571%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (40 samples, 0.02%)</title><rect x="23.2083%" y="501" width="0.0225%" height="15" fill="rgb(236,108,47)" fg:x="41226" fg:w="40"/><text x="23.4583%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (27 samples, 0.02%)</title><rect x="23.2330%" y="501" width="0.0152%" height="15" fill="rgb(234,93,0)" fg:x="41270" fg:w="27"/><text x="23.4830%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (50 samples, 0.03%)</title><rect x="23.2319%" y="517" width="0.0281%" height="15" fill="rgb(224,213,32)" fg:x="41268" fg:w="50"/><text x="23.4819%" y="527.50"></text></g><g><title>bitcoin_hashes::Hash::hash (21 samples, 0.01%)</title><rect x="23.2482%" y="501" width="0.0118%" height="15" fill="rgb(251,11,48)" fg:x="41297" fg:w="21"/><text x="23.4982%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (20 samples, 0.01%)</title><rect x="23.2488%" y="485" width="0.0113%" height="15" fill="rgb(236,173,5)" fg:x="41298" fg:w="20"/><text x="23.4988%" y="495.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (27 samples, 0.02%)</title><rect x="23.2606%" y="501" width="0.0152%" height="15" fill="rgb(230,95,12)" fg:x="41319" fg:w="27"/><text x="23.5106%" y="511.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (21 samples, 0.01%)</title><rect x="23.2758%" y="501" width="0.0118%" height="15" fill="rgb(232,209,1)" fg:x="41346" fg:w="21"/><text x="23.5258%" y="511.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (60 samples, 0.03%)</title><rect x="23.2601%" y="517" width="0.0338%" height="15" fill="rgb(232,6,1)" fg:x="41318" fg:w="60"/><text x="23.5101%" y="527.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (145 samples, 0.08%)</title><rect x="23.2319%" y="533" width="0.0816%" height="15" fill="rgb(210,224,50)" fg:x="41268" fg:w="145"/><text x="23.4819%" y="543.50"></text></g><g><title>std::io::Write::write_all (35 samples, 0.02%)</title><rect x="23.2938%" y="517" width="0.0197%" height="15" fill="rgb(228,127,35)" fg:x="41378" fg:w="35"/><text x="23.5438%" y="527.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (33 samples, 0.02%)</title><rect x="23.2950%" y="501" width="0.0186%" height="15" fill="rgb(245,102,45)" fg:x="41380" fg:w="33"/><text x="23.5450%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (33 samples, 0.02%)</title><rect x="23.2950%" y="485" width="0.0186%" height="15" fill="rgb(214,1,49)" fg:x="41380" fg:w="33"/><text x="23.5450%" y="495.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (311 samples, 0.18%)</title><rect x="23.1660%" y="549" width="0.1751%" height="15" fill="rgb(226,163,40)" fg:x="41151" fg:w="311"/><text x="23.4160%" y="559.50"></text></g><g><title>std::io::Write::write_all (49 samples, 0.03%)</title><rect x="23.3135%" y="533" width="0.0276%" height="15" fill="rgb(239,212,28)" fg:x="41413" fg:w="49"/><text x="23.5635%" y="543.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (46 samples, 0.03%)</title><rect x="23.3152%" y="517" width="0.0259%" height="15" fill="rgb(220,20,13)" fg:x="41416" fg:w="46"/><text x="23.5652%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (46 samples, 0.03%)</title><rect x="23.3152%" y="501" width="0.0259%" height="15" fill="rgb(210,164,35)" fg:x="41416" fg:w="46"/><text x="23.5652%" y="511.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (650 samples, 0.37%)</title><rect x="23.0337%" y="565" width="0.3659%" height="15" fill="rgb(248,109,41)" fg:x="40916" fg:w="650"/><text x="23.2837%" y="575.50"></text></g><g><title>std::io::Write::write_all (104 samples, 0.06%)</title><rect x="23.3411%" y="549" width="0.0585%" height="15" fill="rgb(238,23,50)" fg:x="41462" fg:w="104"/><text x="23.5911%" y="559.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (102 samples, 0.06%)</title><rect x="23.3422%" y="533" width="0.0574%" height="15" fill="rgb(211,48,49)" fg:x="41464" fg:w="102"/><text x="23.5922%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (99 samples, 0.06%)</title><rect x="23.3439%" y="517" width="0.0557%" height="15" fill="rgb(223,36,21)" fg:x="41467" fg:w="99"/><text x="23.5939%" y="527.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (1,288 samples, 0.73%)</title><rect x="22.7951%" y="581" width="0.7251%" height="15" fill="rgb(207,123,46)" fg:x="40492" fg:w="1288"/><text x="23.0451%" y="591.50"></text></g><g><title>std::io::Write::write_all (214 samples, 0.12%)</title><rect x="23.3997%" y="565" width="0.1205%" height="15" fill="rgb(240,218,32)" fg:x="41566" fg:w="214"/><text x="23.6497%" y="575.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (205 samples, 0.12%)</title><rect x="23.4047%" y="549" width="0.1154%" height="15" fill="rgb(252,5,43)" fg:x="41575" fg:w="205"/><text x="23.6547%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (203 samples, 0.11%)</title><rect x="23.4059%" y="533" width="0.1143%" height="15" fill="rgb(252,84,19)" fg:x="41577" fg:w="203"/><text x="23.6559%" y="543.50"></text></g><g><title>bitcoin::blockdata::block::Block::check_merkle_root (6,472 samples, 3.64%)</title><rect x="20.1289%" y="613" width="3.6434%" height="15" fill="rgb(243,152,39)" fg:x="35756" fg:w="6472"/><text x="20.3789%" y="623.50">bitc..</text></g><g><title>bitcoin::util::hash::bitcoin_merkle_root (6,469 samples, 3.64%)</title><rect x="20.1306%" y="597" width="3.6417%" height="15" fill="rgb(234,160,15)" fg:x="35759" fg:w="6469"/><text x="20.3806%" y="607.50">bitc..</text></g><g><title>std::io::Write::write_all (426 samples, 0.24%)</title><rect x="23.5325%" y="581" width="0.2398%" height="15" fill="rgb(237,34,20)" fg:x="41802" fg:w="426"/><text x="23.7825%" y="591.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (418 samples, 0.24%)</title><rect x="23.5370%" y="565" width="0.2353%" height="15" fill="rgb(229,97,13)" fg:x="41810" fg:w="418"/><text x="23.7870%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (410 samples, 0.23%)</title><rect x="23.5415%" y="549" width="0.2308%" height="15" fill="rgb(234,71,50)" fg:x="41818" fg:w="410"/><text x="23.7915%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (44 samples, 0.02%)</title><rect x="23.7887%" y="581" width="0.0248%" height="15" fill="rgb(253,155,4)" fg:x="42257" fg:w="44"/><text x="24.0387%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (41 samples, 0.02%)</title><rect x="23.8151%" y="565" width="0.0231%" height="15" fill="rgb(222,185,37)" fg:x="42304" fg:w="41"/><text x="24.0651%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (104 samples, 0.06%)</title><rect x="23.8146%" y="581" width="0.0585%" height="15" fill="rgb(251,177,13)" fg:x="42303" fg:w="104"/><text x="24.0646%" y="591.50"></text></g><g><title>bitcoin_hashes::Hash::hash (62 samples, 0.03%)</title><rect x="23.8382%" y="565" width="0.0349%" height="15" fill="rgb(250,179,40)" fg:x="42345" fg:w="62"/><text x="24.0882%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (60 samples, 0.03%)</title><rect x="23.8393%" y="549" width="0.0338%" height="15" fill="rgb(242,44,2)" fg:x="42347" fg:w="60"/><text x="24.0893%" y="559.50"></text></g><g><title>bitcoin::blockdata::block::Block::compute_witness_commitment (159 samples, 0.09%)</title><rect x="23.7847%" y="597" width="0.0895%" height="15" fill="rgb(216,177,13)" fg:x="42250" fg:w="159"/><text x="24.0347%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (406 samples, 0.23%)</title><rect x="23.9091%" y="549" width="0.2286%" height="15" fill="rgb(216,106,43)" fg:x="42471" fg:w="406"/><text x="24.1591%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (851 samples, 0.48%)</title><rect x="23.9013%" y="565" width="0.4791%" height="15" fill="rgb(216,183,2)" fg:x="42457" fg:w="851"/><text x="24.1513%" y="575.50"></text></g><g><title>bitcoin_hashes::Hash::hash (431 samples, 0.24%)</title><rect x="24.1377%" y="549" width="0.2426%" height="15" fill="rgb(249,75,3)" fg:x="42877" fg:w="431"/><text x="24.3877%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (425 samples, 0.24%)</title><rect x="24.1411%" y="533" width="0.2393%" height="15" fill="rgb(219,67,39)" fg:x="42883" fg:w="425"/><text x="24.3911%" y="543.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (49 samples, 0.03%)</title><rect x="24.4276%" y="533" width="0.0276%" height="15" fill="rgb(253,228,2)" fg:x="43392" fg:w="49"/><text x="24.6776%" y="543.50"></text></g><g><title>std::io::Write::write_all (43 samples, 0.02%)</title><rect x="24.4310%" y="517" width="0.0242%" height="15" fill="rgb(235,138,27)" fg:x="43398" fg:w="43"/><text x="24.6810%" y="527.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (29 samples, 0.02%)</title><rect x="24.4389%" y="501" width="0.0163%" height="15" fill="rgb(236,97,51)" fg:x="43412" fg:w="29"/><text x="24.6889%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (21 samples, 0.01%)</title><rect x="24.4434%" y="485" width="0.0118%" height="15" fill="rgb(240,80,30)" fg:x="43420" fg:w="21"/><text x="24.6934%" y="495.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (70 samples, 0.04%)</title><rect x="24.4575%" y="533" width="0.0394%" height="15" fill="rgb(230,178,19)" fg:x="43445" fg:w="70"/><text x="24.7075%" y="543.50"></text></g><g><title>std::io::Write::write_all (63 samples, 0.04%)</title><rect x="24.4614%" y="517" width="0.0355%" height="15" fill="rgb(210,190,27)" fg:x="43452" fg:w="63"/><text x="24.7114%" y="527.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (44 samples, 0.02%)</title><rect x="24.4721%" y="501" width="0.0248%" height="15" fill="rgb(222,107,31)" fg:x="43471" fg:w="44"/><text x="24.7221%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (32 samples, 0.02%)</title><rect x="24.4788%" y="485" width="0.0180%" height="15" fill="rgb(216,127,34)" fg:x="43483" fg:w="32"/><text x="24.7288%" y="495.50"></text></g><g><title>[libc.so.6] (39 samples, 0.02%)</title><rect x="24.6325%" y="485" width="0.0220%" height="15" fill="rgb(234,116,52)" fg:x="43756" fg:w="39"/><text x="24.8825%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (432 samples, 0.24%)</title><rect x="24.4124%" y="549" width="0.2432%" height="15" fill="rgb(222,124,15)" fg:x="43365" fg:w="432"/><text x="24.6624%" y="559.50"></text></g><g><title>std::io::Write::write_all (282 samples, 0.16%)</title><rect x="24.4969%" y="533" width="0.1588%" height="15" fill="rgb(231,179,28)" fg:x="43515" fg:w="282"/><text x="24.7469%" y="543.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (242 samples, 0.14%)</title><rect x="24.5194%" y="517" width="0.1362%" height="15" fill="rgb(226,93,45)" fg:x="43555" fg:w="242"/><text x="24.7694%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (213 samples, 0.12%)</title><rect x="24.5357%" y="501" width="0.1199%" height="15" fill="rgb(215,8,51)" fg:x="43584" fg:w="213"/><text x="24.7857%" y="511.50"></text></g><g><title>[libc.so.6] (92 samples, 0.05%)</title><rect x="25.5383%" y="485" width="0.0518%" height="15" fill="rgb(223,106,5)" fg:x="45365" fg:w="92"/><text x="25.7883%" y="495.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,666 samples, 0.94%)</title><rect x="24.6556%" y="549" width="0.9379%" height="15" fill="rgb(250,191,5)" fg:x="43797" fg:w="1666"/><text x="24.9056%" y="559.50"></text></g><g><title>std::io::Write::write_all (1,656 samples, 0.93%)</title><rect x="24.6612%" y="533" width="0.9322%" height="15" fill="rgb(242,132,44)" fg:x="43807" fg:w="1656"/><text x="24.9112%" y="543.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,631 samples, 0.92%)</title><rect x="24.6753%" y="517" width="0.9182%" height="15" fill="rgb(251,152,29)" fg:x="43832" fg:w="1631"/><text x="24.9253%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,610 samples, 0.91%)</title><rect x="24.6871%" y="501" width="0.9064%" height="15" fill="rgb(218,179,5)" fg:x="43853" fg:w="1610"/><text x="24.9371%" y="511.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (40 samples, 0.02%)</title><rect x="25.5935%" y="549" width="0.0225%" height="15" fill="rgb(227,67,19)" fg:x="45463" fg:w="40"/><text x="25.8435%" y="559.50"></text></g><g><title>std::io::Write::write_all (34 samples, 0.02%)</title><rect x="25.5969%" y="533" width="0.0191%" height="15" fill="rgb(233,119,31)" fg:x="45469" fg:w="34"/><text x="25.8469%" y="543.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (27 samples, 0.02%)</title><rect x="25.6008%" y="517" width="0.0152%" height="15" fill="rgb(241,120,22)" fg:x="45476" fg:w="27"/><text x="25.8508%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (22 samples, 0.01%)</title><rect x="25.6036%" y="501" width="0.0124%" height="15" fill="rgb(224,102,30)" fg:x="45481" fg:w="22"/><text x="25.8536%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (739 samples, 0.42%)</title><rect x="25.6346%" y="533" width="0.4160%" height="15" fill="rgb(210,164,37)" fg:x="45536" fg:w="739"/><text x="25.8846%" y="543.50"></text></g><g><title>[libc.so.6] (20 samples, 0.01%)</title><rect x="26.5179%" y="501" width="0.0113%" height="15" fill="rgb(226,191,16)" fg:x="47105" fg:w="20"/><text x="26.7679%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,618 samples, 0.91%)</title><rect x="25.6194%" y="549" width="0.9109%" height="15" fill="rgb(214,40,45)" fg:x="45509" fg:w="1618"/><text x="25.8694%" y="559.50"></text></g><g><title>bitcoin_hashes::Hash::hash (852 samples, 0.48%)</title><rect x="26.0506%" y="533" width="0.4796%" height="15" fill="rgb(244,29,26)" fg:x="46275" fg:w="852"/><text x="26.3006%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (825 samples, 0.46%)</title><rect x="26.0658%" y="517" width="0.4644%" height="15" fill="rgb(216,16,5)" fg:x="46302" fg:w="825"/><text x="26.3158%" y="527.50"></text></g><g><title>[libc.so.6] (54 samples, 0.03%)</title><rect x="26.9727%" y="485" width="0.0304%" height="15" fill="rgb(249,76,35)" fg:x="47913" fg:w="54"/><text x="27.2227%" y="495.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (765 samples, 0.43%)</title><rect x="26.5730%" y="501" width="0.4307%" height="15" fill="rgb(207,11,44)" fg:x="47203" fg:w="765"/><text x="26.8230%" y="511.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (841 samples, 0.47%)</title><rect x="26.5308%" y="549" width="0.4734%" height="15" fill="rgb(228,190,49)" fg:x="47128" fg:w="841"/><text x="26.7808%" y="559.50"></text></g><g><title>std::io::Write::write_all (829 samples, 0.47%)</title><rect x="26.5376%" y="533" width="0.4667%" height="15" fill="rgb(214,173,12)" fg:x="47140" fg:w="829"/><text x="26.7876%" y="543.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (786 samples, 0.44%)</title><rect x="26.5618%" y="517" width="0.4425%" height="15" fill="rgb(218,26,35)" fg:x="47183" fg:w="786"/><text x="26.8118%" y="527.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="27.1197%" y="501" width="0.0124%" height="15" fill="rgb(220,200,19)" fg:x="48174" fg:w="22"/><text x="27.3697%" y="511.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::wtxid (4,885 samples, 2.75%)</title><rect x="24.3826%" y="565" width="2.7500%" height="15" fill="rgb(239,95,49)" fg:x="43312" fg:w="4885"/><text x="24.6326%" y="575.50">bi..</text></g><g><title>std::io::Write::write_all (228 samples, 0.13%)</title><rect x="27.0043%" y="549" width="0.1284%" height="15" fill="rgb(235,85,53)" fg:x="47969" fg:w="228"/><text x="27.2543%" y="559.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (153 samples, 0.09%)</title><rect x="27.0465%" y="533" width="0.0861%" height="15" fill="rgb(233,133,31)" fg:x="48044" fg:w="153"/><text x="27.2965%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (120 samples, 0.07%)</title><rect x="27.0650%" y="517" width="0.0676%" height="15" fill="rgb(218,25,20)" fg:x="48077" fg:w="120"/><text x="27.3150%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (200 samples, 0.11%)</title><rect x="27.1467%" y="533" width="0.1126%" height="15" fill="rgb(252,210,38)" fg:x="48222" fg:w="200"/><text x="27.3967%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (426 samples, 0.24%)</title><rect x="27.1371%" y="549" width="0.2398%" height="15" fill="rgb(242,134,21)" fg:x="48205" fg:w="426"/><text x="27.3871%" y="559.50"></text></g><g><title>bitcoin_hashes::Hash::hash (209 samples, 0.12%)</title><rect x="27.2593%" y="533" width="0.1177%" height="15" fill="rgb(213,28,48)" fg:x="48422" fg:w="209"/><text x="27.5093%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (201 samples, 0.11%)</title><rect x="27.2638%" y="517" width="0.1132%" height="15" fill="rgb(250,196,2)" fg:x="48430" fg:w="201"/><text x="27.5138%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (116 samples, 0.07%)</title><rect x="27.3786%" y="517" width="0.0653%" height="15" fill="rgb(227,5,17)" fg:x="48634" fg:w="116"/><text x="27.6286%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (230 samples, 0.13%)</title><rect x="27.3781%" y="533" width="0.1295%" height="15" fill="rgb(221,226,24)" fg:x="48633" fg:w="230"/><text x="27.6281%" y="543.50"></text></g><g><title>bitcoin_hashes::Hash::hash (113 samples, 0.06%)</title><rect x="27.4439%" y="517" width="0.0636%" height="15" fill="rgb(211,5,48)" fg:x="48750" fg:w="113"/><text x="27.6939%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (104 samples, 0.06%)</title><rect x="27.4490%" y="501" width="0.0585%" height="15" fill="rgb(219,150,6)" fg:x="48759" fg:w="104"/><text x="27.6990%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (45 samples, 0.03%)</title><rect x="27.5092%" y="501" width="0.0253%" height="15" fill="rgb(251,46,16)" fg:x="48866" fg:w="45"/><text x="27.7592%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (108 samples, 0.06%)</title><rect x="27.5087%" y="517" width="0.0608%" height="15" fill="rgb(220,204,40)" fg:x="48865" fg:w="108"/><text x="27.7587%" y="527.50"></text></g><g><title>bitcoin_hashes::Hash::hash (62 samples, 0.03%)</title><rect x="27.5346%" y="501" width="0.0349%" height="15" fill="rgb(211,85,2)" fg:x="48911" fg:w="62"/><text x="27.7846%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (59 samples, 0.03%)</title><rect x="27.5362%" y="485" width="0.0332%" height="15" fill="rgb(229,17,7)" fg:x="48914" fg:w="59"/><text x="27.7862%" y="495.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (30 samples, 0.02%)</title><rect x="27.5711%" y="501" width="0.0169%" height="15" fill="rgb(239,72,28)" fg:x="48976" fg:w="30"/><text x="27.8211%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (23 samples, 0.01%)</title><rect x="27.5886%" y="485" width="0.0129%" height="15" fill="rgb(230,47,54)" fg:x="49007" fg:w="23"/><text x="27.8386%" y="495.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (47 samples, 0.03%)</title><rect x="27.5886%" y="501" width="0.0265%" height="15" fill="rgb(214,50,8)" fg:x="49007" fg:w="47"/><text x="27.8386%" y="511.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (101 samples, 0.06%)</title><rect x="27.5700%" y="517" width="0.0569%" height="15" fill="rgb(216,198,43)" fg:x="48974" fg:w="101"/><text x="27.8200%" y="527.50"></text></g><g><title>std::io::Write::write_all (21 samples, 0.01%)</title><rect x="27.6151%" y="501" width="0.0118%" height="15" fill="rgb(234,20,35)" fg:x="49054" fg:w="21"/><text x="27.8651%" y="511.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (20 samples, 0.01%)</title><rect x="27.6156%" y="485" width="0.0113%" height="15" fill="rgb(254,45,19)" fg:x="49055" fg:w="20"/><text x="27.8656%" y="495.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (20 samples, 0.01%)</title><rect x="27.6156%" y="469" width="0.0113%" height="15" fill="rgb(219,14,44)" fg:x="49055" fg:w="20"/><text x="27.8656%" y="479.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (265 samples, 0.15%)</title><rect x="27.5081%" y="533" width="0.1492%" height="15" fill="rgb(217,220,26)" fg:x="48864" fg:w="265"/><text x="27.7581%" y="543.50"></text></g><g><title>std::io::Write::write_all (54 samples, 0.03%)</title><rect x="27.6269%" y="517" width="0.0304%" height="15" fill="rgb(213,158,28)" fg:x="49075" fg:w="54"/><text x="27.8769%" y="527.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (53 samples, 0.03%)</title><rect x="27.6274%" y="501" width="0.0298%" height="15" fill="rgb(252,51,52)" fg:x="49076" fg:w="53"/><text x="27.8774%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (53 samples, 0.03%)</title><rect x="27.6274%" y="485" width="0.0298%" height="15" fill="rgb(246,89,16)" fg:x="49076" fg:w="53"/><text x="27.8774%" y="495.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (593 samples, 0.33%)</title><rect x="27.3769%" y="549" width="0.3338%" height="15" fill="rgb(216,158,49)" fg:x="48631" fg:w="593"/><text x="27.6269%" y="559.50"></text></g><g><title>std::io::Write::write_all (95 samples, 0.05%)</title><rect x="27.6573%" y="533" width="0.0535%" height="15" fill="rgb(236,107,19)" fg:x="49129" fg:w="95"/><text x="27.9073%" y="543.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (93 samples, 0.05%)</title><rect x="27.6584%" y="517" width="0.0524%" height="15" fill="rgb(228,185,30)" fg:x="49131" fg:w="93"/><text x="27.9084%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (91 samples, 0.05%)</title><rect x="27.6595%" y="501" width="0.0512%" height="15" fill="rgb(246,134,8)" fg:x="49133" fg:w="91"/><text x="27.9095%" y="511.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (1,233 samples, 0.69%)</title><rect x="27.1326%" y="565" width="0.6941%" height="15" fill="rgb(214,143,50)" fg:x="48197" fg:w="1233"/><text x="27.3826%" y="575.50"></text></g><g><title>std::io::Write::write_all (206 samples, 0.12%)</title><rect x="27.7108%" y="549" width="0.1160%" height="15" fill="rgb(228,75,8)" fg:x="49224" fg:w="206"/><text x="27.9608%" y="559.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (200 samples, 0.11%)</title><rect x="27.7141%" y="533" width="0.1126%" height="15" fill="rgb(207,175,4)" fg:x="49230" fg:w="200"/><text x="27.9641%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (196 samples, 0.11%)</title><rect x="27.7164%" y="517" width="0.1103%" height="15" fill="rgb(205,108,24)" fg:x="49234" fg:w="196"/><text x="27.9664%" y="527.50"></text></g><g><title>bitcoin::blockdata::block::Block::witness_root (7,431 samples, 4.18%)</title><rect x="23.8742%" y="597" width="4.1833%" height="15" fill="rgb(244,120,49)" fg:x="42409" fg:w="7431"/><text x="24.1242%" y="607.50">bitco..</text></g><g><title>bitcoin::util::hash::bitcoin_merkle_root (7,427 samples, 4.18%)</title><rect x="23.8765%" y="581" width="4.1810%" height="15" fill="rgb(223,47,38)" fg:x="42413" fg:w="7427"/><text x="24.1265%" y="591.50">bitco..</text></g><g><title>std::io::Write::write_all (409 samples, 0.23%)</title><rect x="27.8273%" y="565" width="0.2302%" height="15" fill="rgb(229,179,11)" fg:x="49431" fg:w="409"/><text x="28.0773%" y="575.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (400 samples, 0.23%)</title><rect x="27.8324%" y="549" width="0.2252%" height="15" fill="rgb(231,122,1)" fg:x="49440" fg:w="400"/><text x="28.0824%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (393 samples, 0.22%)</title><rect x="27.8363%" y="533" width="0.2212%" height="15" fill="rgb(245,119,9)" fg:x="49447" fg:w="393"/><text x="28.0863%" y="543.50"></text></g><g><title>bitcoin::blockdata::block::Block::check_witness_commitment (7,614 samples, 4.29%)</title><rect x="23.7723%" y="613" width="4.2863%" height="15" fill="rgb(241,163,25)" fg:x="42228" fg:w="7614"/><text x="24.0223%" y="623.50">bitco..</text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (102 samples, 0.06%)</title><rect x="28.0682%" y="581" width="0.0574%" height="15" fill="rgb(217,214,3)" fg:x="49859" fg:w="102"/><text x="28.3182%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (249 samples, 0.14%)</title><rect x="28.0649%" y="597" width="0.1402%" height="15" fill="rgb(240,86,28)" fg:x="49853" fg:w="249"/><text x="28.3149%" y="607.50"></text></g><g><title>bitcoin_hashes::Hash::hash (141 samples, 0.08%)</title><rect x="28.1257%" y="581" width="0.0794%" height="15" fill="rgb(215,47,9)" fg:x="49961" fg:w="141"/><text x="28.3757%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (134 samples, 0.08%)</title><rect x="28.1296%" y="565" width="0.0754%" height="15" fill="rgb(252,25,45)" fg:x="49968" fg:w="134"/><text x="28.3796%" y="575.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (410 samples, 0.23%)</title><rect x="28.0587%" y="613" width="0.2308%" height="15" fill="rgb(251,164,9)" fg:x="49842" fg:w="410"/><text x="28.3087%" y="623.50"></text></g><g><title>std::io::Write::write_all (146 samples, 0.08%)</title><rect x="28.2073%" y="597" width="0.0822%" height="15" fill="rgb(233,194,0)" fg:x="50106" fg:w="146"/><text x="28.4573%" y="607.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (133 samples, 0.07%)</title><rect x="28.2146%" y="581" width="0.0749%" height="15" fill="rgb(249,111,24)" fg:x="50119" fg:w="133"/><text x="28.4646%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (119 samples, 0.07%)</title><rect x="28.2225%" y="565" width="0.0670%" height="15" fill="rgb(250,223,3)" fg:x="50133" fg:w="119"/><text x="28.4725%" y="575.50"></text></g><g><title>cfree (19 samples, 0.01%)</title><rect x="28.2895%" y="613" width="0.0107%" height="15" fill="rgb(236,178,37)" fg:x="50252" fg:w="19"/><text x="28.5395%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (19 samples, 0.01%)</title><rect x="28.3002%" y="613" width="0.0107%" height="15" fill="rgb(241,158,50)" fg:x="50271" fg:w="19"/><text x="28.5502%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="28.3204%" y="581" width="0.0152%" height="15" fill="rgb(213,121,41)" fg:x="50307" fg:w="27"/><text x="28.5704%" y="591.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::chain_params (43 samples, 0.02%)</title><rect x="28.3131%" y="613" width="0.0242%" height="15" fill="rgb(240,92,3)" fg:x="50294" fg:w="43"/><text x="28.5631%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.02%)</title><rect x="28.3176%" y="597" width="0.0197%" height="15" fill="rgb(205,123,3)" fg:x="50302" fg:w="35"/><text x="28.5676%" y="607.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (31 samples, 0.02%)</title><rect x="28.3520%" y="581" width="0.0175%" height="15" fill="rgb(205,97,47)" fg:x="50363" fg:w="31"/><text x="28.6020%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (68 samples, 0.04%)</title><rect x="28.4223%" y="501" width="0.0383%" height="15" fill="rgb(247,152,14)" fg:x="50488" fg:w="68"/><text x="28.6723%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (51 samples, 0.03%)</title><rect x="28.4319%" y="485" width="0.0287%" height="15" fill="rgb(248,195,53)" fg:x="50505" fg:w="51"/><text x="28.6819%" y="495.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (84 samples, 0.05%)</title><rect x="28.4156%" y="517" width="0.0473%" height="15" fill="rgb(226,201,16)" fg:x="50476" fg:w="84"/><text x="28.6656%" y="527.50"></text></g><g><title>sled::pin (102 samples, 0.06%)</title><rect x="28.4094%" y="549" width="0.0574%" height="15" fill="rgb(205,98,0)" fg:x="50465" fg:w="102"/><text x="28.6594%" y="559.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (96 samples, 0.05%)</title><rect x="28.4128%" y="533" width="0.0540%" height="15" fill="rgb(214,191,48)" fg:x="50471" fg:w="96"/><text x="28.6628%" y="543.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (73 samples, 0.04%)</title><rect x="28.4888%" y="533" width="0.0411%" height="15" fill="rgb(237,112,39)" fg:x="50606" fg:w="73"/><text x="28.7388%" y="543.50"></text></g><g><title>[libc.so.6] (45 samples, 0.03%)</title><rect x="28.5045%" y="517" width="0.0253%" height="15" fill="rgb(247,203,27)" fg:x="50634" fg:w="45"/><text x="28.7545%" y="527.50"></text></g><g><title>sled::node::Node::index_next_node (154 samples, 0.09%)</title><rect x="28.5557%" y="517" width="0.0867%" height="15" fill="rgb(235,124,28)" fg:x="50725" fg:w="154"/><text x="28.8057%" y="527.50"></text></g><g><title>sled::binary_search::binary_search_lub (123 samples, 0.07%)</title><rect x="28.5732%" y="501" width="0.0692%" height="15" fill="rgb(208,207,46)" fg:x="50756" fg:w="123"/><text x="28.8232%" y="511.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="28.6222%" y="485" width="0.0203%" height="15" fill="rgb(234,176,4)" fg:x="50843" fg:w="36"/><text x="28.8722%" y="495.50"></text></g><g><title>sled::lru::Lru::accessed (41 samples, 0.02%)</title><rect x="28.7173%" y="485" width="0.0231%" height="15" fill="rgb(230,133,28)" fg:x="51012" fg:w="41"/><text x="28.9673%" y="495.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (649 samples, 0.37%)</title><rect x="28.3756%" y="581" width="0.3654%" height="15" fill="rgb(211,137,40)" fg:x="50405" fg:w="649"/><text x="28.6256%" y="591.50"></text></g><g><title>sled::tree::Tree::get (622 samples, 0.35%)</title><rect x="28.3908%" y="565" width="0.3502%" height="15" fill="rgb(254,35,13)" fg:x="50432" fg:w="622"/><text x="28.6408%" y="575.50"></text></g><g><title>sled::tree::Tree::get_inner (487 samples, 0.27%)</title><rect x="28.4668%" y="549" width="0.2742%" height="15" fill="rgb(225,49,51)" fg:x="50567" fg:w="487"/><text x="28.7168%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_key (375 samples, 0.21%)</title><rect x="28.5299%" y="533" width="0.2111%" height="15" fill="rgb(251,10,15)" fg:x="50679" fg:w="375"/><text x="28.7799%" y="543.50"></text></g><g><title>sled::tree::Tree::view_for_pid (175 samples, 0.10%)</title><rect x="28.6424%" y="517" width="0.0985%" height="15" fill="rgb(228,207,15)" fg:x="50879" fg:w="175"/><text x="28.8924%" y="527.50"></text></g><g><title>sled::pagecache::PageCache::get (154 samples, 0.09%)</title><rect x="28.6543%" y="501" width="0.0867%" height="15" fill="rgb(241,99,19)" fg:x="50900" fg:w="154"/><text x="28.9043%" y="511.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::get_header (721 samples, 0.41%)</title><rect x="28.3418%" y="597" width="0.4059%" height="15" fill="rgb(207,104,49)" fg:x="50345" fg:w="721"/><text x="28.5918%" y="607.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (730 samples, 0.41%)</title><rect x="28.3373%" y="613" width="0.4110%" height="15" fill="rgb(234,99,18)" fg:x="50337" fg:w="730"/><text x="28.5873%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (19 samples, 0.01%)</title><rect x="28.7894%" y="501" width="0.0107%" height="15" fill="rgb(213,191,49)" fg:x="51140" fg:w="19"/><text x="29.0394%" y="511.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (23 samples, 0.01%)</title><rect x="28.7888%" y="517" width="0.0129%" height="15" fill="rgb(210,226,19)" fg:x="51139" fg:w="23"/><text x="29.0388%" y="527.50"></text></g><g><title>sled::pin (30 samples, 0.02%)</title><rect x="28.7860%" y="549" width="0.0169%" height="15" fill="rgb(229,97,18)" fg:x="51134" fg:w="30"/><text x="29.0360%" y="559.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (28 samples, 0.02%)</title><rect x="28.7871%" y="533" width="0.0158%" height="15" fill="rgb(211,167,15)" fg:x="51136" fg:w="28"/><text x="29.0371%" y="543.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (21 samples, 0.01%)</title><rect x="28.8192%" y="517" width="0.0118%" height="15" fill="rgb(210,169,34)" fg:x="51193" fg:w="21"/><text x="29.0692%" y="527.50"></text></g><g><title>malloc (38 samples, 0.02%)</title><rect x="28.8440%" y="517" width="0.0214%" height="15" fill="rgb(241,121,31)" fg:x="51237" fg:w="38"/><text x="29.0940%" y="527.50"></text></g><g><title>[libc.so.6] (19 samples, 0.01%)</title><rect x="28.8547%" y="501" width="0.0107%" height="15" fill="rgb(232,40,11)" fg:x="51256" fg:w="19"/><text x="29.1047%" y="511.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (23 samples, 0.01%)</title><rect x="28.8738%" y="517" width="0.0129%" height="15" fill="rgb(205,86,26)" fg:x="51290" fg:w="23"/><text x="29.1238%" y="527.50"></text></g><g><title>sled::pagecache::PageCache::link (147 samples, 0.08%)</title><rect x="28.8141%" y="533" width="0.0828%" height="15" fill="rgb(231,126,28)" fg:x="51184" fg:w="147"/><text x="29.0641%" y="543.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (18 samples, 0.01%)</title><rect x="28.8868%" y="517" width="0.0101%" height="15" fill="rgb(219,221,18)" fg:x="51313" fg:w="18"/><text x="29.1368%" y="527.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (290 samples, 0.16%)</title><rect x="28.7607%" y="581" width="0.1633%" height="15" fill="rgb(211,40,0)" fg:x="51089" fg:w="290"/><text x="29.0107%" y="591.50"></text></g><g><title>sled::tree::Tree::insert (261 samples, 0.15%)</title><rect x="28.7770%" y="565" width="0.1469%" height="15" fill="rgb(239,85,43)" fg:x="51118" fg:w="261"/><text x="29.0270%" y="575.50"></text></g><g><title>sled::tree::Tree::insert_inner (215 samples, 0.12%)</title><rect x="28.8029%" y="549" width="0.1210%" height="15" fill="rgb(231,55,21)" fg:x="51164" fg:w="215"/><text x="29.0529%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_key (48 samples, 0.03%)</title><rect x="28.8969%" y="533" width="0.0270%" height="15" fill="rgb(225,184,43)" fg:x="51331" fg:w="48"/><text x="29.1469%" y="543.50"></text></g><g><title>sled::tree::Tree::view_for_pid (29 samples, 0.02%)</title><rect x="28.9076%" y="517" width="0.0163%" height="15" fill="rgb(251,158,41)" fg:x="51350" fg:w="29"/><text x="29.1576%" y="527.50"></text></g><g><title>sled::pagecache::PageCache::get (21 samples, 0.01%)</title><rect x="28.9121%" y="501" width="0.0118%" height="15" fill="rgb(234,159,37)" fg:x="51358" fg:w="21"/><text x="29.1621%" y="511.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::save_roots (307 samples, 0.17%)</title><rect x="28.7533%" y="597" width="0.1728%" height="15" fill="rgb(216,204,22)" fg:x="51076" fg:w="307"/><text x="29.0033%" y="607.50"></text></g><g><title>[libc.so.6] (98 samples, 0.06%)</title><rect x="28.9498%" y="549" width="0.0552%" height="15" fill="rgb(214,17,3)" fg:x="51425" fg:w="98"/><text x="29.1998%" y="559.50"></text></g><g><title>[libc.so.6] (92 samples, 0.05%)</title><rect x="28.9532%" y="533" width="0.0518%" height="15" fill="rgb(212,111,17)" fg:x="51431" fg:w="92"/><text x="29.2032%" y="543.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::save_acc (458 samples, 0.26%)</title><rect x="28.7483%" y="613" width="0.2578%" height="15" fill="rgb(221,157,24)" fg:x="51067" fg:w="458"/><text x="28.9983%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (138 samples, 0.08%)</title><rect x="28.9284%" y="597" width="0.0777%" height="15" fill="rgb(252,16,13)" fg:x="51387" fg:w="138"/><text x="29.1784%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 samples, 0.07%)</title><rect x="28.9329%" y="581" width="0.0732%" height="15" fill="rgb(221,62,2)" fg:x="51395" fg:w="130"/><text x="29.1829%" y="591.50"></text></g><g><title>realloc (119 samples, 0.07%)</title><rect x="28.9391%" y="565" width="0.0670%" height="15" fill="rgb(247,87,22)" fg:x="51406" fg:w="119"/><text x="29.1891%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (37 samples, 0.02%)</title><rect x="29.0117%" y="565" width="0.0208%" height="15" fill="rgb(215,73,9)" fg:x="51535" fg:w="37"/><text x="29.2617%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (93 samples, 0.05%)</title><rect x="29.0112%" y="581" width="0.0524%" height="15" fill="rgb(207,175,33)" fg:x="51534" fg:w="93"/><text x="29.2612%" y="591.50"></text></g><g><title>bitcoin_hashes::Hash::hash (55 samples, 0.03%)</title><rect x="29.0326%" y="565" width="0.0310%" height="15" fill="rgb(243,129,54)" fg:x="51572" fg:w="55"/><text x="29.2826%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (53 samples, 0.03%)</title><rect x="29.0337%" y="549" width="0.0298%" height="15" fill="rgb(227,119,45)" fg:x="51574" fg:w="53"/><text x="29.2837%" y="559.50"></text></g><g><title>floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader::block_hash (169 samples, 0.10%)</title><rect x="29.0061%" y="613" width="0.0951%" height="15" fill="rgb(205,109,36)" fg:x="51525" fg:w="169"/><text x="29.2561%" y="623.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (167 samples, 0.09%)</title><rect x="29.0072%" y="597" width="0.0940%" height="15" fill="rgb(205,6,39)" fg:x="51527" fg:w="167"/><text x="29.2572%" y="607.50"></text></g><g><title>std::io::Write::write_all (67 samples, 0.04%)</title><rect x="29.0635%" y="581" width="0.0377%" height="15" fill="rgb(221,32,16)" fg:x="51627" fg:w="67"/><text x="29.3135%" y="591.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (64 samples, 0.04%)</title><rect x="29.0652%" y="565" width="0.0360%" height="15" fill="rgb(228,144,50)" fg:x="51630" fg:w="64"/><text x="29.3152%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (61 samples, 0.03%)</title><rect x="29.0669%" y="549" width="0.0343%" height="15" fill="rgb(229,201,53)" fg:x="51633" fg:w="61"/><text x="29.3169%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (246 samples, 0.14%)</title><rect x="29.2144%" y="597" width="0.1385%" height="15" fill="rgb(249,153,27)" fg:x="51895" fg:w="246"/><text x="29.4644%" y="607.50"></text></g><g><title>malloc (148 samples, 0.08%)</title><rect x="29.2696%" y="581" width="0.0833%" height="15" fill="rgb(227,106,25)" fg:x="51993" fg:w="148"/><text x="29.5196%" y="591.50"></text></g><g><title>[libc.so.6] (140 samples, 0.08%)</title><rect x="29.2741%" y="565" width="0.0788%" height="15" fill="rgb(230,65,29)" fg:x="52001" fg:w="140"/><text x="29.5241%" y="575.50"></text></g><g><title>[libc.so.6] (59 samples, 0.03%)</title><rect x="29.3197%" y="549" width="0.0332%" height="15" fill="rgb(221,57,46)" fg:x="52082" fg:w="59"/><text x="29.5697%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_slice (26 samples, 0.01%)</title><rect x="29.3551%" y="597" width="0.0146%" height="15" fill="rgb(229,161,17)" fg:x="52145" fg:w="26"/><text x="29.6051%" y="607.50"></text></g><g><title>[libc.so.6] (269 samples, 0.15%)</title><rect x="29.3698%" y="597" width="0.1514%" height="15" fill="rgb(222,213,11)" fg:x="52171" fg:w="269"/><text x="29.6198%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (74 samples, 0.04%)</title><rect x="29.5235%" y="597" width="0.0417%" height="15" fill="rgb(235,35,13)" fg:x="52444" fg:w="74"/><text x="29.7735%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (60 samples, 0.03%)</title><rect x="29.5313%" y="581" width="0.0338%" height="15" fill="rgb(233,158,34)" fg:x="52458" fg:w="60"/><text x="29.7813%" y="591.50"></text></g><g><title>malloc (35 samples, 0.02%)</title><rect x="29.5454%" y="565" width="0.0197%" height="15" fill="rgb(215,151,48)" fg:x="52483" fg:w="35"/><text x="29.7954%" y="575.50"></text></g><g><title>[libc.so.6] (31 samples, 0.02%)</title><rect x="29.6282%" y="517" width="0.0175%" height="15" fill="rgb(229,84,14)" fg:x="52630" fg:w="31"/><text x="29.8782%" y="527.50"></text></g><g><title>[libc.so.6] (116 samples, 0.07%)</title><rect x="29.5809%" y="549" width="0.0653%" height="15" fill="rgb(229,68,14)" fg:x="52546" fg:w="116"/><text x="29.8309%" y="559.50"></text></g><g><title>[libc.so.6] (113 samples, 0.06%)</title><rect x="29.5826%" y="533" width="0.0636%" height="15" fill="rgb(243,106,26)" fg:x="52549" fg:w="113"/><text x="29.8326%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (148 samples, 0.08%)</title><rect x="29.5651%" y="597" width="0.0833%" height="15" fill="rgb(206,45,38)" fg:x="52518" fg:w="148"/><text x="29.8151%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 samples, 0.08%)</title><rect x="29.5685%" y="581" width="0.0799%" height="15" fill="rgb(226,6,15)" fg:x="52524" fg:w="142"/><text x="29.8185%" y="591.50"></text></g><g><title>realloc (130 samples, 0.07%)</title><rect x="29.5753%" y="565" width="0.0732%" height="15" fill="rgb(232,22,54)" fg:x="52536" fg:w="130"/><text x="29.8253%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (44 samples, 0.02%)</title><rect x="29.6518%" y="549" width="0.0248%" height="15" fill="rgb(229,222,32)" fg:x="52672" fg:w="44"/><text x="29.9018%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (89 samples, 0.05%)</title><rect x="29.6501%" y="565" width="0.0501%" height="15" fill="rgb(228,62,29)" fg:x="52669" fg:w="89"/><text x="29.9001%" y="575.50"></text></g><g><title>bitcoin_hashes::Hash::hash (42 samples, 0.02%)</title><rect x="29.6766%" y="549" width="0.0236%" height="15" fill="rgb(251,103,34)" fg:x="52716" fg:w="42"/><text x="29.9266%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (39 samples, 0.02%)</title><rect x="29.6783%" y="533" width="0.0220%" height="15" fill="rgb(233,12,30)" fg:x="52719" fg:w="39"/><text x="29.9283%" y="543.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (152 samples, 0.09%)</title><rect x="29.6484%" y="597" width="0.0856%" height="15" fill="rgb(238,52,0)" fg:x="52666" fg:w="152"/><text x="29.8984%" y="607.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (152 samples, 0.09%)</title><rect x="29.6484%" y="581" width="0.0856%" height="15" fill="rgb(223,98,5)" fg:x="52666" fg:w="152"/><text x="29.8984%" y="591.50"></text></g><g><title>std::io::Write::write_all (60 samples, 0.03%)</title><rect x="29.7002%" y="565" width="0.0338%" height="15" fill="rgb(228,75,37)" fg:x="52758" fg:w="60"/><text x="29.9502%" y="575.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (60 samples, 0.03%)</title><rect x="29.7002%" y="549" width="0.0338%" height="15" fill="rgb(205,115,49)" fg:x="52758" fg:w="60"/><text x="29.9502%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (54 samples, 0.03%)</title><rect x="29.7036%" y="533" width="0.0304%" height="15" fill="rgb(250,154,43)" fg:x="52764" fg:w="54"/><text x="29.9536%" y="543.50"></text></g><g><title>bitcoin::blockdata::script::Script::is_provably_unspendable (64 samples, 0.04%)</title><rect x="29.7340%" y="597" width="0.0360%" height="15" fill="rgb(226,43,29)" fg:x="52818" fg:w="64"/><text x="29.9840%" y="607.50"></text></g><g><title>bitcoin::blockdata::opcodes::All::classify (28 samples, 0.02%)</title><rect x="29.7543%" y="581" width="0.0158%" height="15" fill="rgb(249,228,39)" fg:x="52854" fg:w="28"/><text x="30.0043%" y="591.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::is_coin_base (35 samples, 0.02%)</title><rect x="29.7700%" y="597" width="0.0197%" height="15" fill="rgb(216,79,43)" fg:x="52882" fg:w="35"/><text x="30.0200%" y="607.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (191 samples, 0.11%)</title><rect x="29.9721%" y="565" width="0.1075%" height="15" fill="rgb(228,95,12)" fg:x="53241" fg:w="191"/><text x="30.2221%" y="575.50"></text></g><g><title>std::io::Write::write_all (174 samples, 0.10%)</title><rect x="29.9817%" y="549" width="0.0980%" height="15" fill="rgb(249,221,15)" fg:x="53258" fg:w="174"/><text x="30.2317%" y="559.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (115 samples, 0.06%)</title><rect x="30.0149%" y="533" width="0.0647%" height="15" fill="rgb(233,34,13)" fg:x="53317" fg:w="115"/><text x="30.2649%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (77 samples, 0.04%)</title><rect x="30.0363%" y="517" width="0.0433%" height="15" fill="rgb(214,103,39)" fg:x="53355" fg:w="77"/><text x="30.2863%" y="527.50"></text></g><g><title>[libc.so.6] (18 samples, 0.01%)</title><rect x="30.0695%" y="501" width="0.0101%" height="15" fill="rgb(251,126,39)" fg:x="53414" fg:w="18"/><text x="30.3195%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::into_inner (27 samples, 0.02%)</title><rect x="30.0797%" y="565" width="0.0152%" height="15" fill="rgb(214,216,36)" fg:x="53432" fg:w="27"/><text x="30.3297%" y="575.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="30.3161%" y="501" width="0.0135%" height="15" fill="rgb(220,221,8)" fg:x="53852" fg:w="24"/><text x="30.5661%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (177 samples, 0.10%)</title><rect x="30.2305%" y="517" width="0.0996%" height="15" fill="rgb(240,216,3)" fg:x="53700" fg:w="177"/><text x="30.4805%" y="527.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (418 samples, 0.24%)</title><rect x="30.0954%" y="565" width="0.2353%" height="15" fill="rgb(232,218,17)" fg:x="53460" fg:w="418"/><text x="30.3454%" y="575.50"></text></g><g><title>std::io::Write::write_all (375 samples, 0.21%)</title><rect x="30.1196%" y="549" width="0.2111%" height="15" fill="rgb(229,163,45)" fg:x="53503" fg:w="375"/><text x="30.3696%" y="559.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (233 samples, 0.13%)</title><rect x="30.1996%" y="533" width="0.1312%" height="15" fill="rgb(231,110,42)" fg:x="53645" fg:w="233"/><text x="30.4496%" y="543.50"></text></g><g><title>[libc.so.6] (157 samples, 0.09%)</title><rect x="31.2658%" y="517" width="0.0884%" height="15" fill="rgb(208,170,48)" fg:x="55539" fg:w="157"/><text x="31.5158%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2,580 samples, 1.45%)</title><rect x="29.9040%" y="581" width="1.4524%" height="15" fill="rgb(239,116,25)" fg:x="53120" fg:w="2580"/><text x="30.1540%" y="591.50"></text></g><g><title>std::io::Write::write_all (1,822 samples, 1.03%)</title><rect x="30.3307%" y="565" width="1.0257%" height="15" fill="rgb(219,200,50)" fg:x="53878" fg:w="1822"/><text x="30.5807%" y="575.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,600 samples, 0.90%)</title><rect x="30.4557%" y="549" width="0.9007%" height="15" fill="rgb(245,200,0)" fg:x="54100" fg:w="1600"/><text x="30.7057%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,502 samples, 0.85%)</title><rect x="30.5109%" y="533" width="0.8456%" height="15" fill="rgb(245,119,33)" fg:x="54198" fg:w="1502"/><text x="30.7609%" y="543.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (142 samples, 0.08%)</title><rect x="31.3564%" y="581" width="0.0799%" height="15" fill="rgb(231,125,12)" fg:x="55700" fg:w="142"/><text x="31.6064%" y="591.50"></text></g><g><title>std::io::Write::write_all (125 samples, 0.07%)</title><rect x="31.3660%" y="565" width="0.0704%" height="15" fill="rgb(216,96,41)" fg:x="55717" fg:w="125"/><text x="31.6160%" y="575.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (91 samples, 0.05%)</title><rect x="31.3851%" y="549" width="0.0512%" height="15" fill="rgb(248,43,45)" fg:x="55751" fg:w="91"/><text x="31.6351%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (67 samples, 0.04%)</title><rect x="31.3987%" y="533" width="0.0377%" height="15" fill="rgb(217,222,7)" fg:x="55775" fg:w="67"/><text x="31.6487%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::engine (18 samples, 0.01%)</title><rect x="31.4364%" y="581" width="0.0101%" height="15" fill="rgb(233,28,6)" fg:x="55842" fg:w="18"/><text x="31.6864%" y="591.50"></text></g><g><title>[libc.so.6] (67 samples, 0.04%)</title><rect x="33.6437%" y="549" width="0.0377%" height="15" fill="rgb(231,218,15)" fg:x="59763" fg:w="67"/><text x="33.8937%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (3,895 samples, 2.19%)</title><rect x="31.5034%" y="565" width="2.1927%" height="15" fill="rgb(226,171,48)" fg:x="55961" fg:w="3895"/><text x="31.7534%" y="575.50">&lt;..</text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="33.6814%" y="549" width="0.0146%" height="15" fill="rgb(235,201,9)" fg:x="59830" fg:w="26"/><text x="33.9314%" y="559.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="33.6820%" y="533" width="0.0141%" height="15" fill="rgb(217,80,15)" fg:x="59831" fg:w="25"/><text x="33.9320%" y="543.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="33.6820%" y="517" width="0.0141%" height="15" fill="rgb(219,152,8)" fg:x="59831" fg:w="25"/><text x="33.9320%" y="527.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="33.6826%" y="501" width="0.0135%" height="15" fill="rgb(243,107,38)" fg:x="59832" fg:w="24"/><text x="33.9326%" y="511.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="33.6826%" y="485" width="0.0135%" height="15" fill="rgb(231,17,5)" fg:x="59832" fg:w="24"/><text x="33.9326%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="33.6831%" y="469" width="0.0129%" height="15" fill="rgb(209,25,54)" fg:x="59833" fg:w="23"/><text x="33.9331%" y="479.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="33.6831%" y="453" width="0.0129%" height="15" fill="rgb(219,0,2)" fg:x="59833" fg:w="23"/><text x="33.9331%" y="463.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="33.6831%" y="437" width="0.0129%" height="15" fill="rgb(246,9,5)" fg:x="59833" fg:w="23"/><text x="33.9331%" y="447.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="33.6831%" y="421" width="0.0129%" height="15" fill="rgb(226,159,4)" fg:x="59833" fg:w="23"/><text x="33.9331%" y="431.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="33.6854%" y="405" width="0.0107%" height="15" fill="rgb(219,175,34)" fg:x="59837" fg:w="19"/><text x="33.9354%" y="415.50"></text></g><g><title>[libc.so.6] (78 samples, 0.04%)</title><rect x="35.3275%" y="533" width="0.0439%" height="15" fill="rgb(236,10,46)" fg:x="62754" fg:w="78"/><text x="35.5775%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (6,991 samples, 3.94%)</title><rect x="31.4465%" y="581" width="3.9356%" height="15" fill="rgb(240,211,16)" fg:x="55860" fg:w="6991"/><text x="31.6965%" y="591.50">&lt;bit..</text></g><g><title>bitcoin_hashes::Hash::hash (2,995 samples, 1.69%)</title><rect x="33.6961%" y="565" width="1.6860%" height="15" fill="rgb(205,3,43)" fg:x="59856" fg:w="2995"/><text x="33.9461%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2,893 samples, 1.63%)</title><rect x="33.7535%" y="549" width="1.6286%" height="15" fill="rgb(245,7,22)" fg:x="59958" fg:w="2893"/><text x="34.0035%" y="559.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="35.3714%" y="533" width="0.0107%" height="15" fill="rgb(239,132,32)" fg:x="62832" fg:w="19"/><text x="35.6214%" y="543.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="35.3720%" y="517" width="0.0101%" height="15" fill="rgb(228,202,34)" fg:x="62833" fg:w="18"/><text x="35.6220%" y="527.50"></text></g><g><title>[libc.so.6] (543 samples, 0.31%)</title><rect x="40.9660%" y="517" width="0.3057%" height="15" fill="rgb(254,200,22)" fg:x="72770" fg:w="543"/><text x="41.2160%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (9,563 samples, 5.38%)</title><rect x="35.9118%" y="533" width="5.3835%" height="15" fill="rgb(219,10,39)" fg:x="63792" fg:w="9563"/><text x="36.1618%" y="543.50">&lt;bitcoi..</text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="41.2717%" y="517" width="0.0236%" height="15" fill="rgb(226,210,39)" fg:x="73313" fg:w="42"/><text x="41.5217%" y="527.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="41.2723%" y="501" width="0.0231%" height="15" fill="rgb(208,219,16)" fg:x="73314" fg:w="41"/><text x="41.5223%" y="511.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="41.2734%" y="485" width="0.0220%" height="15" fill="rgb(216,158,51)" fg:x="73316" fg:w="39"/><text x="41.5234%" y="495.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="41.2734%" y="469" width="0.0220%" height="15" fill="rgb(233,14,44)" fg:x="73316" fg:w="39"/><text x="41.5234%" y="479.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="41.2762%" y="453" width="0.0191%" height="15" fill="rgb(237,97,39)" fg:x="73321" fg:w="34"/><text x="41.5262%" y="463.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="41.2785%" y="437" width="0.0169%" height="15" fill="rgb(218,198,43)" fg:x="73325" fg:w="30"/><text x="41.5285%" y="447.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="41.2796%" y="421" width="0.0158%" height="15" fill="rgb(231,104,20)" fg:x="73327" fg:w="28"/><text x="41.5296%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="41.2813%" y="405" width="0.0141%" height="15" fill="rgb(254,36,13)" fg:x="73330" fg:w="25"/><text x="41.5313%" y="415.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="41.2818%" y="389" width="0.0135%" height="15" fill="rgb(248,14,50)" fg:x="73331" fg:w="24"/><text x="41.5318%" y="399.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (10,505 samples, 5.91%)</title><rect x="35.3827%" y="581" width="5.9138%" height="15" fill="rgb(217,107,29)" fg:x="62852" fg:w="10505"/><text x="35.6327%" y="591.50">bitcoin:..</text></g><g><title>std::io::Write::write_all (10,385 samples, 5.85%)</title><rect x="35.4502%" y="565" width="5.8463%" height="15" fill="rgb(251,169,33)" fg:x="62972" fg:w="10385"/><text x="35.7002%" y="575.50">std::io..</text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (9,856 samples, 5.55%)</title><rect x="35.7480%" y="549" width="5.5485%" height="15" fill="rgb(217,108,32)" fg:x="63501" fg:w="9856"/><text x="35.9980%" y="559.50">bitcoin..</text></g><g><title>[libc.so.6] (193 samples, 0.11%)</title><rect x="42.7168%" y="533" width="0.1086%" height="15" fill="rgb(219,66,42)" fg:x="75880" fg:w="193"/><text x="42.9668%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2,158 samples, 1.21%)</title><rect x="41.6134%" y="549" width="1.2149%" height="15" fill="rgb(206,180,7)" fg:x="73920" fg:w="2158"/><text x="41.8634%" y="559.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (23,162 samples, 13.04%)</title><rect x="29.7897%" y="597" width="13.0391%" height="15" fill="rgb(208,226,31)" fg:x="52917" fg:w="23162"/><text x="30.0397%" y="607.50">bitcoin::blockdata::..</text></g><g><title>std::io::Write::write_all (2,722 samples, 1.53%)</title><rect x="41.2965%" y="581" width="1.5324%" height="15" fill="rgb(218,26,49)" fg:x="73357" fg:w="2722"/><text x="41.5465%" y="591.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (2,356 samples, 1.33%)</title><rect x="41.5025%" y="565" width="1.3263%" height="15" fill="rgb(233,197,48)" fg:x="73723" fg:w="2356"/><text x="41.7525%" y="575.50"></text></g><g><title>__rdl_realloc (23 samples, 0.01%)</title><rect x="42.8851%" y="549" width="0.0129%" height="15" fill="rgb(252,181,51)" fg:x="76179" fg:w="23"/><text x="43.1351%" y="559.50"></text></g><g><title>[libc.so.6] (132 samples, 0.07%)</title><rect x="42.9493%" y="533" width="0.0743%" height="15" fill="rgb(253,90,19)" fg:x="76293" fg:w="132"/><text x="43.1993%" y="543.50"></text></g><g><title>[libc.so.6] (114 samples, 0.06%)</title><rect x="42.9594%" y="517" width="0.0642%" height="15" fill="rgb(215,171,30)" fg:x="76311" fg:w="114"/><text x="43.2094%" y="527.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="43.0101%" y="501" width="0.0135%" height="15" fill="rgb(214,222,9)" fg:x="76401" fg:w="24"/><text x="43.2601%" y="511.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (355 samples, 0.20%)</title><rect x="42.8288%" y="597" width="0.1998%" height="15" fill="rgb(223,3,22)" fg:x="76079" fg:w="355"/><text x="43.0788%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (309 samples, 0.17%)</title><rect x="42.8547%" y="581" width="0.1740%" height="15" fill="rgb(225,196,46)" fg:x="76125" fg:w="309"/><text x="43.1047%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (276 samples, 0.16%)</title><rect x="42.8733%" y="565" width="0.1554%" height="15" fill="rgb(209,110,37)" fg:x="76158" fg:w="276"/><text x="43.1233%" y="575.50"></text></g><g><title>realloc (219 samples, 0.12%)</title><rect x="42.9054%" y="549" width="0.1233%" height="15" fill="rgb(249,89,12)" fg:x="76215" fg:w="219"/><text x="43.1554%" y="559.50"></text></g><g><title>[libc.so.6] (119 samples, 0.07%)</title><rect x="43.0394%" y="581" width="0.0670%" height="15" fill="rgb(226,27,33)" fg:x="76453" fg:w="119"/><text x="43.2894%" y="591.50"></text></g><g><title>cfree (139 samples, 0.08%)</title><rect x="43.0287%" y="597" width="0.0783%" height="15" fill="rgb(213,82,22)" fg:x="76434" fg:w="139"/><text x="43.2787%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (101 samples, 0.06%)</title><rect x="43.1401%" y="581" width="0.0569%" height="15" fill="rgb(248,140,0)" fg:x="76632" fg:w="101"/><text x="43.3901%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (161 samples, 0.09%)</title><rect x="43.1069%" y="597" width="0.0906%" height="15" fill="rgb(228,106,3)" fg:x="76573" fg:w="161"/><text x="43.3569%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (108 samples, 0.06%)</title><rect x="43.2240%" y="581" width="0.0608%" height="15" fill="rgb(209,23,37)" fg:x="76781" fg:w="108"/><text x="43.4740%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (56 samples, 0.03%)</title><rect x="43.2533%" y="565" width="0.0315%" height="15" fill="rgb(241,93,50)" fg:x="76833" fg:w="56"/><text x="43.5033%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (129 samples, 0.07%)</title><rect x="43.3287%" y="565" width="0.0726%" height="15" fill="rgb(253,46,43)" fg:x="76967" fg:w="129"/><text x="43.5787%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (75 samples, 0.04%)</title><rect x="43.3591%" y="549" width="0.0422%" height="15" fill="rgb(226,206,43)" fg:x="77021" fg:w="75"/><text x="43.6091%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (410 samples, 0.23%)</title><rect x="43.1976%" y="597" width="0.2308%" height="15" fill="rgb(217,54,7)" fg:x="76734" fg:w="410"/><text x="43.4476%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (255 samples, 0.14%)</title><rect x="43.2848%" y="581" width="0.1436%" height="15" fill="rgb(223,5,52)" fg:x="76889" fg:w="255"/><text x="43.5348%" y="591.50"></text></g><g><title>malloc (48 samples, 0.03%)</title><rect x="43.4014%" y="565" width="0.0270%" height="15" fill="rgb(206,52,46)" fg:x="77096" fg:w="48"/><text x="43.6514%" y="575.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="43.4098%" y="549" width="0.0186%" height="15" fill="rgb(253,136,11)" fg:x="77111" fg:w="33"/><text x="43.6598%" y="559.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="44.1833%" y="565" width="0.0146%" height="15" fill="rgb(208,106,33)" fg:x="78485" fg:w="26"/><text x="44.4333%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (74 samples, 0.04%)</title><rect x="44.1574%" y="581" width="0.0417%" height="15" fill="rgb(206,54,4)" fg:x="78439" fg:w="74"/><text x="44.4074%" y="591.50"></text></g><g><title>[libc.so.6] (53 samples, 0.03%)</title><rect x="44.2266%" y="565" width="0.0298%" height="15" fill="rgb(213,3,15)" fg:x="78562" fg:w="53"/><text x="44.4766%" y="575.50"></text></g><g><title>[libc.so.6] (45 samples, 0.03%)</title><rect x="45.1037%" y="533" width="0.0253%" height="15" fill="rgb(252,211,39)" fg:x="80120" fg:w="45"/><text x="45.3537%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,646 samples, 0.93%)</title><rect x="44.2086%" y="581" width="0.9266%" height="15" fill="rgb(223,6,36)" fg:x="78530" fg:w="1646"/><text x="44.4586%" y="591.50"></text></g><g><title>bitcoin_hashes::sha512::from_engine (1,561 samples, 0.88%)</title><rect x="44.2565%" y="565" width="0.8788%" height="15" fill="rgb(252,169,45)" fg:x="78615" fg:w="1561"/><text x="44.5065%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,535 samples, 0.86%)</title><rect x="44.2711%" y="549" width="0.8641%" height="15" fill="rgb(212,48,26)" fg:x="78641" fg:w="1535"/><text x="44.5211%" y="559.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="45.1426%" y="581" width="0.0225%" height="15" fill="rgb(251,102,48)" fg:x="80189" fg:w="40"/><text x="45.3926%" y="591.50"></text></g><g><title>[libc.so.6] (46 samples, 0.03%)</title><rect x="45.3075%" y="501" width="0.0259%" height="15" fill="rgb(243,208,16)" fg:x="80482" fg:w="46"/><text x="45.5575%" y="511.50"></text></g><g><title>[libc.so.6] (233 samples, 0.13%)</title><rect x="45.2028%" y="533" width="0.1312%" height="15" fill="rgb(219,96,24)" fg:x="80296" fg:w="233"/><text x="45.4528%" y="543.50"></text></g><g><title>[libc.so.6] (225 samples, 0.13%)</title><rect x="45.2073%" y="517" width="0.1267%" height="15" fill="rgb(219,33,29)" fg:x="80304" fg:w="225"/><text x="45.4573%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (291 samples, 0.16%)</title><rect x="45.1718%" y="581" width="0.1638%" height="15" fill="rgb(223,176,5)" fg:x="80241" fg:w="291"/><text x="45.4218%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (280 samples, 0.16%)</title><rect x="45.1780%" y="565" width="0.1576%" height="15" fill="rgb(228,140,14)" fg:x="80252" fg:w="280"/><text x="45.4280%" y="575.50"></text></g><g><title>realloc (266 samples, 0.15%)</title><rect x="45.1859%" y="549" width="0.1497%" height="15" fill="rgb(217,179,31)" fg:x="80266" fg:w="266"/><text x="45.4359%" y="559.50"></text></g><g><title>cfree (133 samples, 0.07%)</title><rect x="45.3357%" y="581" width="0.0749%" height="15" fill="rgb(230,9,30)" fg:x="80532" fg:w="133"/><text x="45.5857%" y="591.50"></text></g><g><title>[libc.so.6] (122 samples, 0.07%)</title><rect x="45.3419%" y="565" width="0.0687%" height="15" fill="rgb(230,136,20)" fg:x="80543" fg:w="122"/><text x="45.5919%" y="575.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (50 samples, 0.03%)</title><rect x="45.4105%" y="581" width="0.0281%" height="15" fill="rgb(215,210,22)" fg:x="80665" fg:w="50"/><text x="45.6605%" y="591.50"></text></g><g><title>[libc.so.6] (75 samples, 0.04%)</title><rect x="46.5618%" y="565" width="0.0422%" height="15" fill="rgb(218,43,5)" fg:x="82710" fg:w="75"/><text x="46.8118%" y="575.50"></text></g><g><title>cfree (48 samples, 0.03%)</title><rect x="46.6130%" y="565" width="0.0270%" height="15" fill="rgb(216,11,5)" fg:x="82801" fg:w="48"/><text x="46.8630%" y="575.50"></text></g><g><title>[libc.so.6] (28 samples, 0.02%)</title><rect x="46.6243%" y="549" width="0.0158%" height="15" fill="rgb(209,82,29)" fg:x="82821" fg:w="28"/><text x="46.8743%" y="559.50"></text></g><g><title>[libc.so.6] (63 samples, 0.04%)</title><rect x="46.8399%" y="533" width="0.0355%" height="15" fill="rgb(244,115,12)" fg:x="83204" fg:w="63"/><text x="47.0899%" y="543.50"></text></g><g><title>[libc.so.6] (334 samples, 0.19%)</title><rect x="46.6884%" y="549" width="0.1880%" height="15" fill="rgb(222,82,18)" fg:x="82935" fg:w="334"/><text x="46.9384%" y="559.50"></text></g><g><title>core::slice::sort::merge_sort (2,555 samples, 1.44%)</title><rect x="45.4387%" y="581" width="1.4383%" height="15" fill="rgb(249,227,8)" fg:x="80715" fg:w="2555"/><text x="45.6887%" y="591.50"></text></g><g><title>malloc (420 samples, 0.24%)</title><rect x="46.6406%" y="565" width="0.2364%" height="15" fill="rgb(253,141,45)" fg:x="82850" fg:w="420"/><text x="46.8906%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.02%)</title><rect x="47.6443%" y="565" width="0.0214%" height="15" fill="rgb(234,184,4)" fg:x="84633" fg:w="38"/><text x="47.8943%" y="575.50"></text></g><g><title>[libc.so.6] (69 samples, 0.04%)</title><rect x="47.7310%" y="549" width="0.0388%" height="15" fill="rgb(218,194,23)" fg:x="84787" fg:w="69"/><text x="47.9810%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (186 samples, 0.10%)</title><rect x="47.6657%" y="565" width="0.1047%" height="15" fill="rgb(235,66,41)" fg:x="84671" fg:w="186"/><text x="47.9157%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::engine (97 samples, 0.05%)</title><rect x="47.7704%" y="565" width="0.0546%" height="15" fill="rgb(245,217,1)" fg:x="84857" fg:w="97"/><text x="48.0204%" y="575.50"></text></g><g><title>[libc.so.6] (135 samples, 0.08%)</title><rect x="47.8667%" y="549" width="0.0760%" height="15" fill="rgb(229,91,1)" fg:x="85028" fg:w="135"/><text x="48.1167%" y="559.50"></text></g><g><title>[libc.so.6] (173 samples, 0.10%)</title><rect x="50.5565%" y="517" width="0.0974%" height="15" fill="rgb(207,101,30)" fg:x="89806" fg:w="173"/><text x="50.8065%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::from_engine (5,048 samples, 2.84%)</title><rect x="47.8250%" y="565" width="2.8418%" height="15" fill="rgb(223,82,49)" fg:x="84954" fg:w="5048"/><text x="48.0750%" y="575.50">&lt;b..</text></g><g><title>bitcoin_hashes::sha512::from_engine (4,839 samples, 2.72%)</title><rect x="47.9427%" y="549" width="2.7241%" height="15" fill="rgb(218,167,17)" fg:x="85163" fg:w="4839"/><text x="48.1927%" y="559.50">bi..</text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (4,721 samples, 2.66%)</title><rect x="48.0091%" y="533" width="2.6577%" height="15" fill="rgb(208,103,14)" fg:x="85281" fg:w="4721"/><text x="48.2591%" y="543.50">&lt;b..</text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="50.6539%" y="517" width="0.0129%" height="15" fill="rgb(238,20,8)" fg:x="89979" fg:w="23"/><text x="50.9039%" y="527.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="50.6550%" y="501" width="0.0118%" height="15" fill="rgb(218,80,54)" fg:x="89981" fg:w="21"/><text x="50.9050%" y="511.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="50.6556%" y="485" width="0.0113%" height="15" fill="rgb(240,144,17)" fg:x="89982" fg:w="20"/><text x="50.9056%" y="495.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="50.6556%" y="469" width="0.0113%" height="15" fill="rgb(245,27,50)" fg:x="89982" fg:w="20"/><text x="50.9056%" y="479.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::to_byte_array (30 samples, 0.02%)</title><rect x="50.6668%" y="565" width="0.0169%" height="15" fill="rgb(251,51,7)" fg:x="90002" fg:w="30"/><text x="50.9168%" y="575.50"></text></g><g><title>[libc.so.6] (641 samples, 0.36%)</title><rect x="50.6921%" y="565" width="0.3609%" height="15" fill="rgb(245,217,29)" fg:x="90047" fg:w="641"/><text x="50.9421%" y="575.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="51.0530%" y="565" width="0.0186%" height="15" fill="rgb(221,176,29)" fg:x="90688" fg:w="33"/><text x="51.3030%" y="575.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="51.0530%" y="549" width="0.0186%" height="15" fill="rgb(212,180,24)" fg:x="90688" fg:w="33"/><text x="51.3030%" y="559.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="51.0530%" y="533" width="0.0186%" height="15" fill="rgb(254,24,2)" fg:x="90688" fg:w="33"/><text x="51.3030%" y="543.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="51.0530%" y="517" width="0.0186%" height="15" fill="rgb(230,100,2)" fg:x="90688" fg:w="33"/><text x="51.3030%" y="527.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="51.0553%" y="501" width="0.0163%" height="15" fill="rgb(219,142,25)" fg:x="90692" fg:w="29"/><text x="51.3053%" y="511.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="51.0569%" y="485" width="0.0146%" height="15" fill="rgb(240,73,43)" fg:x="90695" fg:w="26"/><text x="51.3069%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="51.0586%" y="469" width="0.0129%" height="15" fill="rgb(214,114,15)" fg:x="90698" fg:w="23"/><text x="51.3086%" y="479.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="51.0603%" y="453" width="0.0113%" height="15" fill="rgb(207,130,4)" fg:x="90701" fg:w="20"/><text x="51.3103%" y="463.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="51.0614%" y="437" width="0.0101%" height="15" fill="rgb(221,25,40)" fg:x="90703" fg:w="18"/><text x="51.3114%" y="447.50"></text></g><g><title>[libc.so.6] (31 samples, 0.02%)</title><rect x="51.1538%" y="485" width="0.0175%" height="15" fill="rgb(241,184,7)" fg:x="90867" fg:w="31"/><text x="51.4038%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (181 samples, 0.10%)</title><rect x="51.0783%" y="565" width="0.1019%" height="15" fill="rgb(235,159,4)" fg:x="90733" fg:w="181"/><text x="51.3283%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (177 samples, 0.10%)</title><rect x="51.0806%" y="549" width="0.0996%" height="15" fill="rgb(214,87,48)" fg:x="90737" fg:w="177"/><text x="51.3306%" y="559.50"></text></g><g><title>realloc (174 samples, 0.10%)</title><rect x="51.0823%" y="533" width="0.0980%" height="15" fill="rgb(246,198,24)" fg:x="90740" fg:w="174"/><text x="51.3323%" y="543.50"></text></g><g><title>[libc.so.6] (165 samples, 0.09%)</title><rect x="51.0873%" y="517" width="0.0929%" height="15" fill="rgb(209,66,40)" fg:x="90749" fg:w="165"/><text x="51.3373%" y="527.50"></text></g><g><title>[libc.so.6] (161 samples, 0.09%)</title><rect x="51.0896%" y="501" width="0.0906%" height="15" fill="rgb(233,147,39)" fg:x="90753" fg:w="161"/><text x="51.3396%" y="511.50"></text></g><g><title>[libc.so.6] (422 samples, 0.24%)</title><rect x="51.2163%" y="549" width="0.2376%" height="15" fill="rgb(231,145,52)" fg:x="90978" fg:w="422"/><text x="51.4663%" y="559.50"></text></g><g><title>cfree (487 samples, 0.27%)</title><rect x="51.1802%" y="565" width="0.2742%" height="15" fill="rgb(206,20,26)" fg:x="90914" fg:w="487"/><text x="51.4302%" y="575.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (28 samples, 0.02%)</title><rect x="51.4544%" y="565" width="0.0158%" height="15" fill="rgb(238,220,4)" fg:x="91401" fg:w="28"/><text x="51.7044%" y="575.50"></text></g><g><title>[libc.so.6] (81 samples, 0.05%)</title><rect x="71.3052%" y="549" width="0.0456%" height="15" fill="rgb(252,195,42)" fg:x="126663" fg:w="81"/><text x="71.5552%" y="559.50"></text></g><g><title>[unknown] (202 samples, 0.11%)</title><rect x="71.3508%" y="549" width="0.1137%" height="15" fill="rgb(209,10,6)" fg:x="126744" fg:w="202"/><text x="71.6008%" y="559.50"></text></g><g><title>[unknown] (186 samples, 0.10%)</title><rect x="71.3598%" y="533" width="0.1047%" height="15" fill="rgb(229,3,52)" fg:x="126760" fg:w="186"/><text x="71.6098%" y="543.50"></text></g><g><title>[unknown] (176 samples, 0.10%)</title><rect x="71.3654%" y="517" width="0.0991%" height="15" fill="rgb(253,49,37)" fg:x="126770" fg:w="176"/><text x="71.6154%" y="527.50"></text></g><g><title>[unknown] (168 samples, 0.09%)</title><rect x="71.3699%" y="501" width="0.0946%" height="15" fill="rgb(240,103,49)" fg:x="126778" fg:w="168"/><text x="71.6199%" y="511.50"></text></g><g><title>[unknown] (159 samples, 0.09%)</title><rect x="71.3750%" y="485" width="0.0895%" height="15" fill="rgb(250,182,30)" fg:x="126787" fg:w="159"/><text x="71.6250%" y="495.50"></text></g><g><title>[unknown] (149 samples, 0.08%)</title><rect x="71.3806%" y="469" width="0.0839%" height="15" fill="rgb(248,8,30)" fg:x="126797" fg:w="149"/><text x="71.6306%" y="479.50"></text></g><g><title>[unknown] (139 samples, 0.08%)</title><rect x="71.3863%" y="453" width="0.0783%" height="15" fill="rgb(237,120,30)" fg:x="126807" fg:w="139"/><text x="71.6363%" y="463.50"></text></g><g><title>[unknown] (131 samples, 0.07%)</title><rect x="71.3908%" y="437" width="0.0737%" height="15" fill="rgb(221,146,34)" fg:x="126815" fg:w="131"/><text x="71.6408%" y="447.50"></text></g><g><title>[unknown] (123 samples, 0.07%)</title><rect x="71.3953%" y="421" width="0.0692%" height="15" fill="rgb(242,55,13)" fg:x="126823" fg:w="123"/><text x="71.6453%" y="431.50"></text></g><g><title>[unknown] (101 samples, 0.06%)</title><rect x="71.4077%" y="405" width="0.0569%" height="15" fill="rgb(242,112,31)" fg:x="126845" fg:w="101"/><text x="71.6577%" y="415.50"></text></g><g><title>[unknown] (80 samples, 0.05%)</title><rect x="71.4195%" y="389" width="0.0450%" height="15" fill="rgb(249,192,27)" fg:x="126866" fg:w="80"/><text x="71.6695%" y="399.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="71.4381%" y="373" width="0.0265%" height="15" fill="rgb(208,204,44)" fg:x="126899" fg:w="47"/><text x="71.6881%" y="383.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="71.4476%" y="357" width="0.0169%" height="15" fill="rgb(208,93,54)" fg:x="126916" fg:w="30"/><text x="71.6976%" y="367.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="71.4516%" y="341" width="0.0129%" height="15" fill="rgb(242,1,31)" fg:x="126923" fg:w="23"/><text x="71.7016%" y="351.50"></text></g><g><title>[libc.so.6] (86 samples, 0.05%)</title><rect x="71.5642%" y="533" width="0.0484%" height="15" fill="rgb(241,83,25)" fg:x="127123" fg:w="86"/><text x="71.8142%" y="543.50"></text></g><g><title>cfree (239 samples, 0.13%)</title><rect x="71.4792%" y="549" width="0.1345%" height="15" fill="rgb(205,169,50)" fg:x="126972" fg:w="239"/><text x="71.7292%" y="559.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (55 samples, 0.03%)</title><rect x="71.6137%" y="549" width="0.0310%" height="15" fill="rgb(239,186,37)" fg:x="127211" fg:w="55"/><text x="71.8637%" y="559.50"></text></g><g><title>[libc.so.6] (104 samples, 0.06%)</title><rect x="72.2121%" y="517" width="0.0585%" height="15" fill="rgb(205,221,10)" fg:x="128274" fg:w="104"/><text x="72.4621%" y="527.50"></text></g><g><title>[libc.so.6] (805 samples, 0.45%)</title><rect x="71.8197%" y="533" width="0.4532%" height="15" fill="rgb(218,196,15)" fg:x="127577" fg:w="805"/><text x="72.0697%" y="543.50"></text></g><g><title>core::slice::sort::merge_sort (36,960 samples, 20.81%)</title><rect x="51.4701%" y="565" width="20.8067%" height="15" fill="rgb(218,196,35)" fg:x="91429" fg:w="36960"/><text x="51.7201%" y="575.50">core::slice::sort::merge_sort</text></g><g><title>malloc (1,123 samples, 0.63%)</title><rect x="71.6447%" y="549" width="0.6322%" height="15" fill="rgb(233,63,24)" fg:x="127266" fg:w="1123"/><text x="71.8947%" y="559.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes (45,357 samples, 25.53%)</title><rect x="46.8804%" y="581" width="25.5338%" height="15" fill="rgb(225,8,4)" fg:x="83276" fg:w="45357"/><text x="47.1304%" y="591.50">rustreexo::accumulator::proof::Proof::cal..</text></g><g><title>malloc (244 samples, 0.14%)</title><rect x="72.2769%" y="565" width="0.1374%" height="15" fill="rgb(234,105,35)" fg:x="128389" fg:w="244"/><text x="72.5269%" y="575.50"></text></g><g><title>[libc.so.6] (169 samples, 0.10%)</title><rect x="72.3191%" y="549" width="0.0951%" height="15" fill="rgb(236,21,32)" fg:x="128464" fg:w="169"/><text x="72.5691%" y="559.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="72.4013%" y="533" width="0.0129%" height="15" fill="rgb(228,109,6)" fg:x="128610" fg:w="23"/><text x="72.6513%" y="543.50"></text></g><g><title>[libc.so.6] (55 samples, 0.03%)</title><rect x="72.9569%" y="565" width="0.0310%" height="15" fill="rgb(229,215,31)" fg:x="129597" fg:w="55"/><text x="73.2069%" y="575.50"></text></g><g><title>__rdl_realloc (31 samples, 0.02%)</title><rect x="73.0318%" y="533" width="0.0175%" height="15" fill="rgb(221,52,54)" fg:x="129730" fg:w="31"/><text x="73.2818%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (24 samples, 0.01%)</title><rect x="73.0357%" y="517" width="0.0135%" height="15" fill="rgb(252,129,43)" fg:x="129737" fg:w="24"/><text x="73.2857%" y="527.50"></text></g><g><title>[libc.so.6] (186 samples, 0.10%)</title><rect x="74.1166%" y="485" width="0.1047%" height="15" fill="rgb(248,183,27)" fg:x="131657" fg:w="186"/><text x="74.3666%" y="495.50"></text></g><g><title>[libc.so.6] (1,736 samples, 0.98%)</title><rect x="73.2508%" y="501" width="0.9773%" height="15" fill="rgb(250,0,22)" fg:x="130119" fg:w="1736"/><text x="73.5008%" y="511.50"></text></g><g><title>[libc.so.6] (1,817 samples, 1.02%)</title><rect x="73.2057%" y="517" width="1.0229%" height="15" fill="rgb(213,166,10)" fg:x="130039" fg:w="1817"/><text x="73.4557%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2,210 samples, 1.24%)</title><rect x="72.9941%" y="565" width="1.2441%" height="15" fill="rgb(207,163,36)" fg:x="129663" fg:w="2210"/><text x="73.2441%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,171 samples, 1.22%)</title><rect x="73.0160%" y="549" width="1.2222%" height="15" fill="rgb(208,122,22)" fg:x="129702" fg:w="2171"/><text x="73.2660%" y="559.50"></text></g><g><title>realloc (2,093 samples, 1.18%)</title><rect x="73.0599%" y="533" width="1.1783%" height="15" fill="rgb(207,104,49)" fg:x="129780" fg:w="2093"/><text x="73.3099%" y="543.50"></text></g><g><title>[libc.so.6] (168 samples, 0.09%)</title><rect x="74.2483%" y="549" width="0.0946%" height="15" fill="rgb(248,211,50)" fg:x="131891" fg:w="168"/><text x="74.4983%" y="559.50"></text></g><g><title>cfree (187 samples, 0.11%)</title><rect x="74.2382%" y="565" width="0.1053%" height="15" fill="rgb(217,13,45)" fg:x="131873" fg:w="187"/><text x="74.4882%" y="575.50"></text></g><g><title>rustreexo::accumulator::stump::Stump::modify (54,992 samples, 30.96%)</title><rect x="43.4284%" y="597" width="30.9579%" height="15" fill="rgb(211,216,49)" fg:x="77144" fg:w="54992"/><text x="43.6784%" y="607.50">rustreexo::accumulator::stump::Stump::modify</text></g><g><title>rustreexo::accumulator::util::roots_to_destroy (3,501 samples, 1.97%)</title><rect x="72.4153%" y="581" width="1.9709%" height="15" fill="rgb(221,58,53)" fg:x="128635" fg:w="3501"/><text x="72.6653%" y="591.50">r..</text></g><g><title>malloc (76 samples, 0.04%)</title><rect x="74.3435%" y="565" width="0.0428%" height="15" fill="rgb(220,112,41)" fg:x="132060" fg:w="76"/><text x="74.5935%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (56 samples, 0.03%)</title><rect x="74.8085%" y="549" width="0.0315%" height="15" fill="rgb(236,38,28)" fg:x="132886" fg:w="56"/><text x="75.0585%" y="559.50"></text></g><g><title>malloc (44 samples, 0.02%)</title><rect x="74.8152%" y="533" width="0.0248%" height="15" fill="rgb(227,195,22)" fg:x="132898" fg:w="44"/><text x="75.0652%" y="543.50"></text></g><g><title>[libc.so.6] (41 samples, 0.02%)</title><rect x="74.8169%" y="517" width="0.0231%" height="15" fill="rgb(214,55,33)" fg:x="132901" fg:w="41"/><text x="75.0669%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (138 samples, 0.08%)</title><rect x="74.8400%" y="549" width="0.0777%" height="15" fill="rgb(248,80,13)" fg:x="132942" fg:w="138"/><text x="75.0900%" y="559.50"></text></g><g><title>[libc.so.6] (49 samples, 0.03%)</title><rect x="74.8901%" y="533" width="0.0276%" height="15" fill="rgb(238,52,6)" fg:x="133031" fg:w="49"/><text x="75.1401%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::engine (40 samples, 0.02%)</title><rect x="74.9177%" y="549" width="0.0225%" height="15" fill="rgb(224,198,47)" fg:x="133080" fg:w="40"/><text x="75.1677%" y="559.50"></text></g><g><title>[libc.so.6] (84 samples, 0.05%)</title><rect x="74.9678%" y="533" width="0.0473%" height="15" fill="rgb(233,171,20)" fg:x="133169" fg:w="84"/><text x="75.2178%" y="543.50"></text></g><g><title>[libc.so.6] (70 samples, 0.04%)</title><rect x="76.5919%" y="501" width="0.0394%" height="15" fill="rgb(241,30,25)" fg:x="136054" fg:w="70"/><text x="76.8419%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2,816 samples, 1.59%)</title><rect x="75.0533%" y="517" width="1.5853%" height="15" fill="rgb(207,171,38)" fg:x="133321" fg:w="2816"/><text x="75.3033%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::from_engine (3,018 samples, 1.70%)</title><rect x="74.9402%" y="549" width="1.6990%" height="15" fill="rgb(234,70,1)" fg:x="133120" fg:w="3018"/><text x="75.1902%" y="559.50"></text></g><g><title>bitcoin_hashes::sha512::from_engine (2,885 samples, 1.62%)</title><rect x="75.0151%" y="533" width="1.6241%" height="15" fill="rgb(232,178,18)" fg:x="133253" fg:w="2885"/><text x="75.2651%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::to_byte_array (22 samples, 0.01%)</title><rect x="76.6392%" y="549" width="0.0124%" height="15" fill="rgb(241,78,40)" fg:x="136138" fg:w="22"/><text x="76.8892%" y="559.50"></text></g><g><title>[libc.so.6] (385 samples, 0.22%)</title><rect x="76.6583%" y="549" width="0.2167%" height="15" fill="rgb(222,35,25)" fg:x="136172" fg:w="385"/><text x="76.9083%" y="559.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="76.8751%" y="549" width="0.0118%" height="15" fill="rgb(207,92,16)" fg:x="136557" fg:w="21"/><text x="77.1251%" y="559.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="76.8756%" y="533" width="0.0113%" height="15" fill="rgb(216,59,51)" fg:x="136558" fg:w="20"/><text x="77.1256%" y="543.50"></text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="76.9691%" y="469" width="0.0315%" height="15" fill="rgb(213,80,28)" fg:x="136724" fg:w="56"/><text x="77.2191%" y="479.50"></text></g><g><title>[libc.so.6] (190 samples, 0.11%)</title><rect x="76.8981%" y="501" width="0.1070%" height="15" fill="rgb(220,93,7)" fg:x="136598" fg:w="190"/><text x="77.1481%" y="511.50"></text></g><g><title>[libc.so.6] (185 samples, 0.10%)</title><rect x="76.9009%" y="485" width="0.1041%" height="15" fill="rgb(225,24,44)" fg:x="136603" fg:w="185"/><text x="77.1509%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (206 samples, 0.12%)</title><rect x="76.8897%" y="549" width="0.1160%" height="15" fill="rgb(243,74,40)" fg:x="136583" fg:w="206"/><text x="77.1397%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (201 samples, 0.11%)</title><rect x="76.8925%" y="533" width="0.1132%" height="15" fill="rgb(228,39,7)" fg:x="136588" fg:w="201"/><text x="77.1425%" y="543.50"></text></g><g><title>realloc (197 samples, 0.11%)</title><rect x="76.8948%" y="517" width="0.1109%" height="15" fill="rgb(227,79,8)" fg:x="136592" fg:w="197"/><text x="77.1448%" y="527.50"></text></g><g><title>[libc.so.6] (219 samples, 0.12%)</title><rect x="77.0209%" y="533" width="0.1233%" height="15" fill="rgb(236,58,11)" fg:x="136816" fg:w="219"/><text x="77.2709%" y="543.50"></text></g><g><title>cfree (247 samples, 0.14%)</title><rect x="77.0057%" y="549" width="0.1390%" height="15" fill="rgb(249,63,35)" fg:x="136789" fg:w="247"/><text x="77.2557%" y="559.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="87.1450%" y="533" width="0.0186%" height="15" fill="rgb(252,114,16)" fg:x="154800" fg:w="33"/><text x="87.3950%" y="543.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="87.1636%" y="533" width="0.0659%" height="15" fill="rgb(254,151,24)" fg:x="154833" fg:w="117"/><text x="87.4136%" y="543.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="87.1692%" y="517" width="0.0602%" height="15" fill="rgb(253,54,39)" fg:x="154843" fg:w="107"/><text x="87.4192%" y="527.50"></text></g><g><title>[unknown] (102 samples, 0.06%)</title><rect x="87.1720%" y="501" width="0.0574%" height="15" fill="rgb(243,25,45)" fg:x="154848" fg:w="102"/><text x="87.4220%" y="511.50"></text></g><g><title>[unknown] (97 samples, 0.05%)</title><rect x="87.1748%" y="485" width="0.0546%" height="15" fill="rgb(234,134,9)" fg:x="154853" fg:w="97"/><text x="87.4248%" y="495.50"></text></g><g><title>[unknown] (94 samples, 0.05%)</title><rect x="87.1765%" y="469" width="0.0529%" height="15" fill="rgb(227,166,31)" fg:x="154856" fg:w="94"/><text x="87.4265%" y="479.50"></text></g><g><title>[unknown] (86 samples, 0.05%)</title><rect x="87.1810%" y="453" width="0.0484%" height="15" fill="rgb(245,143,41)" fg:x="154864" fg:w="86"/><text x="87.4310%" y="463.50"></text></g><g><title>[unknown] (79 samples, 0.04%)</title><rect x="87.1850%" y="437" width="0.0445%" height="15" fill="rgb(238,181,32)" fg:x="154871" fg:w="79"/><text x="87.4350%" y="447.50"></text></g><g><title>[unknown] (69 samples, 0.04%)</title><rect x="87.1906%" y="421" width="0.0388%" height="15" fill="rgb(224,113,18)" fg:x="154881" fg:w="69"/><text x="87.4406%" y="431.50"></text></g><g><title>[unknown] (66 samples, 0.04%)</title><rect x="87.1923%" y="405" width="0.0372%" height="15" fill="rgb(240,229,28)" fg:x="154884" fg:w="66"/><text x="87.4423%" y="415.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="87.1968%" y="389" width="0.0327%" height="15" fill="rgb(250,185,3)" fg:x="154892" fg:w="58"/><text x="87.4468%" y="399.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="87.2052%" y="373" width="0.0242%" height="15" fill="rgb(212,59,25)" fg:x="154907" fg:w="43"/><text x="87.4552%" y="383.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="87.2159%" y="357" width="0.0135%" height="15" fill="rgb(221,87,20)" fg:x="154926" fg:w="24"/><text x="87.4659%" y="367.50"></text></g><g><title>cfree (104 samples, 0.06%)</title><rect x="87.2351%" y="533" width="0.0585%" height="15" fill="rgb(213,74,28)" fg:x="154960" fg:w="104"/><text x="87.4851%" y="543.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="87.2711%" y="517" width="0.0225%" height="15" fill="rgb(224,132,34)" fg:x="155024" fg:w="40"/><text x="87.5211%" y="527.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (31 samples, 0.02%)</title><rect x="87.2936%" y="533" width="0.0175%" height="15" fill="rgb(222,101,24)" fg:x="155064" fg:w="31"/><text x="87.5436%" y="543.50"></text></g><g><title>[libc.so.6] (129 samples, 0.07%)</title><rect x="87.7001%" y="501" width="0.0726%" height="15" fill="rgb(254,142,4)" fg:x="155786" fg:w="129"/><text x="87.9501%" y="511.50"></text></g><g><title>[libc.so.6] (639 samples, 0.36%)</title><rect x="87.4169%" y="517" width="0.3597%" height="15" fill="rgb(230,229,49)" fg:x="155283" fg:w="639"/><text x="87.6669%" y="527.50"></text></g><g><title>core::slice::sort::merge_sort (18,873 samples, 10.62%)</title><rect x="77.1532%" y="549" width="10.6246%" height="15" fill="rgb(238,70,47)" fg:x="137051" fg:w="18873"/><text x="77.4032%" y="559.50">core::slice::sor..</text></g><g><title>malloc (829 samples, 0.47%)</title><rect x="87.3111%" y="533" width="0.4667%" height="15" fill="rgb(231,160,17)" fg:x="155095" fg:w="829"/><text x="87.5611%" y="543.50"></text></g><g><title>rustreexo::accumulator::stump::Stump::verify (24,076 samples, 13.55%)</title><rect x="74.3862%" y="597" width="13.5536%" height="15" fill="rgb(218,68,53)" fg:x="132136" fg:w="24076"/><text x="74.6362%" y="607.50">rustreexo::accumulat..</text></g><g><title>rustreexo::accumulator::proof::Proof::verify (24,072 samples, 13.55%)</title><rect x="74.3885%" y="581" width="13.5514%" height="15" fill="rgb(236,111,10)" fg:x="132140" fg:w="24072"/><text x="74.6385%" y="591.50">rustreexo::accumulat..</text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes (24,040 samples, 13.53%)</title><rect x="74.4065%" y="565" width="13.5334%" height="15" fill="rgb(224,34,41)" fg:x="132172" fg:w="24040"/><text x="74.6565%" y="575.50">rustreexo::accumulat..</text></g><g><title>malloc (288 samples, 0.16%)</title><rect x="87.7777%" y="549" width="0.1621%" height="15" fill="rgb(241,118,19)" fg:x="155924" fg:w="288"/><text x="88.0277%" y="559.50"></text></g><g><title>[libc.so.6] (236 samples, 0.13%)</title><rect x="87.8070%" y="533" width="0.1329%" height="15" fill="rgb(238,129,25)" fg:x="155976" fg:w="236"/><text x="88.0570%" y="543.50"></text></g><g><title>[libc.so.6] (65 samples, 0.04%)</title><rect x="87.9033%" y="517" width="0.0366%" height="15" fill="rgb(238,22,31)" fg:x="156147" fg:w="65"/><text x="88.1533%" y="527.50"></text></g><g><title>sha2::sha512::x86::compress (21 samples, 0.01%)</title><rect x="87.9421%" y="597" width="0.0118%" height="15" fill="rgb(222,174,48)" fg:x="156216" fg:w="21"/><text x="88.1921%" y="607.50"></text></g><g><title>floresta_chain::pruned_utreexo::consensus::Consensus::update_acc (106,594 samples, 60.01%)</title><rect x="29.1024%" y="613" width="60.0073%" height="15" fill="rgb(206,152,40)" fg:x="51696" fg:w="106594"/><text x="29.3524%" y="623.50">floresta_chain::pruned_utreexo::consensus::Consensus::update_acc</text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (2,053 samples, 1.16%)</title><rect x="87.9540%" y="597" width="1.1557%" height="15" fill="rgb(218,99,54)" fg:x="156237" fg:w="2053"/><text x="88.2040%" y="607.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::is_coin_base (19 samples, 0.01%)</title><rect x="89.1767%" y="597" width="0.0107%" height="15" fill="rgb(220,174,26)" fg:x="158409" fg:w="19"/><text x="89.4267%" y="607.50"></text></g><g><title>[libc.so.6] (51 samples, 0.03%)</title><rect x="89.3557%" y="565" width="0.0287%" height="15" fill="rgb(245,116,9)" fg:x="158727" fg:w="51"/><text x="89.6057%" y="575.50"></text></g><g><title>[libc.so.6] (171 samples, 0.10%)</title><rect x="89.2887%" y="581" width="0.0963%" height="15" fill="rgb(209,72,35)" fg:x="158608" fg:w="171"/><text x="89.5387%" y="591.50"></text></g><g><title>cfree (352 samples, 0.20%)</title><rect x="89.1874%" y="597" width="0.1982%" height="15" fill="rgb(226,126,21)" fg:x="158428" fg:w="352"/><text x="89.4374%" y="607.50"></text></g><g><title>floresta_chain::pruned_utreexo::consensus::Consensus::verify_block_transactions (574 samples, 0.32%)</title><rect x="89.1097%" y="613" width="0.3231%" height="15" fill="rgb(227,192,1)" fg:x="158290" fg:w="574"/><text x="89.3597%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (84 samples, 0.05%)</title><rect x="89.3855%" y="597" width="0.0473%" height="15" fill="rgb(237,180,29)" fg:x="158780" fg:w="84"/><text x="89.6355%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (48 samples, 0.03%)</title><rect x="89.4058%" y="581" width="0.0270%" height="15" fill="rgb(230,197,35)" fg:x="158816" fg:w="48"/><text x="89.6558%" y="591.50"></text></g><g><title>[libc.so.6] (87 samples, 0.05%)</title><rect x="89.5302%" y="565" width="0.0490%" height="15" fill="rgb(246,193,31)" fg:x="159037" fg:w="87"/><text x="89.7802%" y="575.50"></text></g><g><title>[libc.so.6] (135 samples, 0.08%)</title><rect x="90.3290%" y="533" width="0.0760%" height="15" fill="rgb(241,36,4)" fg:x="160456" fg:w="135"/><text x="90.5790%" y="543.50"></text></g><g><title>[libc.so.6] (1,248 samples, 0.70%)</title><rect x="89.7047%" y="549" width="0.7026%" height="15" fill="rgb(241,130,17)" fg:x="159347" fg:w="1248"/><text x="89.9547%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,656 samples, 0.93%)</title><rect x="89.4767%" y="581" width="0.9322%" height="15" fill="rgb(206,137,32)" fg:x="158942" fg:w="1656"/><text x="89.7267%" y="591.50"></text></g><g><title>malloc (1,461 samples, 0.82%)</title><rect x="89.5865%" y="565" width="0.8225%" height="15" fill="rgb(237,228,51)" fg:x="159137" fg:w="1461"/><text x="89.8365%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,728 samples, 0.97%)</title><rect x="89.4463%" y="597" width="0.9728%" height="15" fill="rgb(243,6,42)" fg:x="158888" fg:w="1728"/><text x="89.6963%" y="607.50"></text></g><g><title>malloc (18 samples, 0.01%)</title><rect x="90.4090%" y="581" width="0.0101%" height="15" fill="rgb(251,74,28)" fg:x="160598" fg:w="18"/><text x="90.6590%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (38 samples, 0.02%)</title><rect x="90.4298%" y="581" width="0.0214%" height="15" fill="rgb(218,20,49)" fg:x="160635" fg:w="38"/><text x="90.6798%" y="591.50"></text></g><g><title>&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (46 samples, 0.03%)</title><rect x="90.4726%" y="517" width="0.0259%" height="15" fill="rgb(238,28,14)" fg:x="160711" fg:w="46"/><text x="90.7226%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (22 samples, 0.01%)</title><rect x="90.4861%" y="501" width="0.0124%" height="15" fill="rgb(229,40,46)" fg:x="160735" fg:w="22"/><text x="90.7361%" y="511.50"></text></g><g><title>async_io::reactor::Reactor::notify (41 samples, 0.02%)</title><rect x="90.5131%" y="501" width="0.0231%" height="15" fill="rgb(244,195,20)" fg:x="160783" fg:w="41"/><text x="90.7631%" y="511.50"></text></g><g><title>polling::Poller::notify (41 samples, 0.02%)</title><rect x="90.5131%" y="485" width="0.0231%" height="15" fill="rgb(253,56,35)" fg:x="160783" fg:w="41"/><text x="90.7631%" y="495.50"></text></g><g><title>write (38 samples, 0.02%)</title><rect x="90.5148%" y="469" width="0.0214%" height="15" fill="rgb(210,149,44)" fg:x="160786" fg:w="38"/><text x="90.7648%" y="479.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="90.5148%" y="453" width="0.0214%" height="15" fill="rgb(240,135,12)" fg:x="160786" fg:w="38"/><text x="90.7648%" y="463.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="90.5159%" y="437" width="0.0203%" height="15" fill="rgb(251,24,50)" fg:x="160788" fg:w="36"/><text x="90.7659%" y="447.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="90.5176%" y="421" width="0.0186%" height="15" fill="rgb(243,200,47)" fg:x="160791" fg:w="33"/><text x="90.7676%" y="431.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="90.5188%" y="405" width="0.0175%" height="15" fill="rgb(224,166,26)" fg:x="160793" fg:w="31"/><text x="90.7688%" y="415.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="90.5199%" y="389" width="0.0163%" height="15" fill="rgb(233,0,47)" fg:x="160795" fg:w="29"/><text x="90.7699%" y="399.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="90.5221%" y="373" width="0.0141%" height="15" fill="rgb(253,80,5)" fg:x="160799" fg:w="25"/><text x="90.7721%" y="383.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="90.5238%" y="357" width="0.0124%" height="15" fill="rgb(214,133,25)" fg:x="160802" fg:w="22"/><text x="90.7738%" y="367.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="90.5255%" y="341" width="0.0107%" height="15" fill="rgb(209,27,14)" fg:x="160805" fg:w="19"/><text x="90.7755%" y="351.50"></text></g><g><title>event_listener::List::notify (386 samples, 0.22%)</title><rect x="90.4551%" y="565" width="0.2173%" height="15" fill="rgb(219,102,51)" fg:x="160680" fg:w="386"/><text x="90.7051%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (377 samples, 0.21%)</title><rect x="90.4602%" y="549" width="0.2122%" height="15" fill="rgb(237,18,16)" fg:x="160689" fg:w="377"/><text x="90.7102%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (370 samples, 0.21%)</title><rect x="90.4642%" y="533" width="0.2083%" height="15" fill="rgb(241,85,17)" fg:x="160696" fg:w="370"/><text x="90.7142%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (302 samples, 0.17%)</title><rect x="90.5024%" y="517" width="0.1700%" height="15" fill="rgb(236,90,42)" fg:x="160764" fg:w="302"/><text x="90.7524%" y="527.50"></text></g><g><title>parking::Unparker::unpark (242 samples, 0.14%)</title><rect x="90.5362%" y="501" width="0.1362%" height="15" fill="rgb(249,57,21)" fg:x="160824" fg:w="242"/><text x="90.7862%" y="511.50"></text></g><g><title>syscall (225 samples, 0.13%)</title><rect x="90.5458%" y="485" width="0.1267%" height="15" fill="rgb(243,12,36)" fg:x="160841" fg:w="225"/><text x="90.7958%" y="495.50"></text></g><g><title>[unknown] (220 samples, 0.12%)</title><rect x="90.5486%" y="469" width="0.1238%" height="15" fill="rgb(253,128,47)" fg:x="160846" fg:w="220"/><text x="90.7986%" y="479.50"></text></g><g><title>[unknown] (195 samples, 0.11%)</title><rect x="90.5627%" y="453" width="0.1098%" height="15" fill="rgb(207,33,20)" fg:x="160871" fg:w="195"/><text x="90.8127%" y="463.50"></text></g><g><title>[unknown] (177 samples, 0.10%)</title><rect x="90.5728%" y="437" width="0.0996%" height="15" fill="rgb(233,215,35)" fg:x="160889" fg:w="177"/><text x="90.8228%" y="447.50"></text></g><g><title>[unknown] (161 samples, 0.09%)</title><rect x="90.5818%" y="421" width="0.0906%" height="15" fill="rgb(249,188,52)" fg:x="160905" fg:w="161"/><text x="90.8318%" y="431.50"></text></g><g><title>[unknown] (160 samples, 0.09%)</title><rect x="90.5824%" y="405" width="0.0901%" height="15" fill="rgb(225,12,32)" fg:x="160906" fg:w="160"/><text x="90.8324%" y="415.50"></text></g><g><title>[unknown] (138 samples, 0.08%)</title><rect x="90.5948%" y="389" width="0.0777%" height="15" fill="rgb(247,98,14)" fg:x="160928" fg:w="138"/><text x="90.8448%" y="399.50"></text></g><g><title>[unknown] (110 samples, 0.06%)</title><rect x="90.6105%" y="373" width="0.0619%" height="15" fill="rgb(247,219,48)" fg:x="160956" fg:w="110"/><text x="90.8605%" y="383.50"></text></g><g><title>[unknown] (86 samples, 0.05%)</title><rect x="90.6240%" y="357" width="0.0484%" height="15" fill="rgb(253,60,48)" fg:x="160980" fg:w="86"/><text x="90.8740%" y="367.50"></text></g><g><title>[unknown] (50 samples, 0.03%)</title><rect x="90.6443%" y="341" width="0.0281%" height="15" fill="rgb(245,15,52)" fg:x="161016" fg:w="50"/><text x="90.8943%" y="351.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="90.6589%" y="325" width="0.0135%" height="15" fill="rgb(220,133,28)" fg:x="161042" fg:w="24"/><text x="90.9089%" y="335.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (456 samples, 0.26%)</title><rect x="90.4191%" y="597" width="0.2567%" height="15" fill="rgb(217,180,4)" fg:x="160616" fg:w="456"/><text x="90.6691%" y="607.50"></text></g><g><title>event_listener::Event::notify (399 samples, 0.22%)</title><rect x="90.4512%" y="581" width="0.2246%" height="15" fill="rgb(251,24,1)" fg:x="160673" fg:w="399"/><text x="90.7012%" y="591.50"></text></g><g><title>[libc.so.6] (294 samples, 0.17%)</title><rect x="90.8852%" y="565" width="0.1655%" height="15" fill="rgb(212,185,49)" fg:x="161444" fg:w="294"/><text x="91.1352%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (660 samples, 0.37%)</title><rect x="90.6803%" y="597" width="0.3715%" height="15" fill="rgb(215,175,22)" fg:x="161080" fg:w="660"/><text x="90.9303%" y="607.50"></text></g><g><title>cfree (573 samples, 0.32%)</title><rect x="90.7293%" y="581" width="0.3226%" height="15" fill="rgb(250,205,14)" fg:x="161167" fg:w="573"/><text x="90.9793%" y="591.50"></text></g><g><title>futures_executor::local_pool::block_on (2,881 samples, 1.62%)</title><rect x="89.4328%" y="613" width="1.6219%" height="15" fill="rgb(225,211,22)" fg:x="158864" fg:w="2881"/><text x="89.6828%" y="623.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::UpdatableChainstate&gt;::connect_block (130,363 samples, 73.39%)</title><rect x="17.6705%" y="629" width="73.3881%" height="15" fill="rgb(251,179,42)" fg:x="31389" fg:w="130363"/><text x="17.9205%" y="639.50">&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::UpdatableChain..</text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (46 samples, 0.03%)</title><rect x="91.0637%" y="581" width="0.0259%" height="15" fill="rgb(208,216,51)" fg:x="161761" fg:w="46"/><text x="91.3137%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (93 samples, 0.05%)</title><rect x="91.0637%" y="597" width="0.0524%" height="15" fill="rgb(235,36,11)" fg:x="161761" fg:w="93"/><text x="91.3137%" y="607.50"></text></g><g><title>bitcoin_hashes::Hash::hash (47 samples, 0.03%)</title><rect x="91.0896%" y="581" width="0.0265%" height="15" fill="rgb(213,189,28)" fg:x="161807" fg:w="47"/><text x="91.3396%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (46 samples, 0.03%)</title><rect x="91.0902%" y="565" width="0.0259%" height="15" fill="rgb(227,203,42)" fg:x="161808" fg:w="46"/><text x="91.3402%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (61 samples, 0.03%)</title><rect x="91.1200%" y="565" width="0.0343%" height="15" fill="rgb(244,72,36)" fg:x="161861" fg:w="61"/><text x="91.3700%" y="575.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (165 samples, 0.09%)</title><rect x="91.0620%" y="629" width="0.0929%" height="15" fill="rgb(213,53,17)" fg:x="161758" fg:w="165"/><text x="91.3120%" y="639.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (164 samples, 0.09%)</title><rect x="91.0626%" y="613" width="0.0923%" height="15" fill="rgb(207,167,3)" fg:x="161759" fg:w="164"/><text x="91.3126%" y="623.50"></text></g><g><title>std::io::Write::write_all (69 samples, 0.04%)</title><rect x="91.1161%" y="597" width="0.0388%" height="15" fill="rgb(216,98,30)" fg:x="161854" fg:w="69"/><text x="91.3661%" y="607.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (65 samples, 0.04%)</title><rect x="91.1183%" y="581" width="0.0366%" height="15" fill="rgb(236,123,15)" fg:x="161858" fg:w="65"/><text x="91.3683%" y="591.50"></text></g><g><title>[libc.so.6] (284 samples, 0.16%)</title><rect x="91.2303%" y="597" width="0.1599%" height="15" fill="rgb(248,81,50)" fg:x="162057" fg:w="284"/><text x="91.4803%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (413 samples, 0.23%)</title><rect x="91.1633%" y="629" width="0.2325%" height="15" fill="rgb(214,120,4)" fg:x="161938" fg:w="413"/><text x="91.4133%" y="639.50"></text></g><g><title>cfree (381 samples, 0.21%)</title><rect x="91.1814%" y="613" width="0.2145%" height="15" fill="rgb(208,179,34)" fg:x="161970" fg:w="381"/><text x="91.4314%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::network::utreexo::UData&gt; (27 samples, 0.02%)</title><rect x="91.3958%" y="629" width="0.0152%" height="15" fill="rgb(227,140,7)" fg:x="162351" fg:w="27"/><text x="91.6458%" y="639.50"></text></g><g><title>cfree (19 samples, 0.01%)</title><rect x="91.4003%" y="613" width="0.0107%" height="15" fill="rgb(214,22,6)" fg:x="162359" fg:w="19"/><text x="91.6503%" y="623.50"></text></g><g><title>[libc.so.6] (341 samples, 0.19%)</title><rect x="91.6278%" y="565" width="0.1920%" height="15" fill="rgb(207,137,27)" fg:x="162763" fg:w="341"/><text x="91.8778%" y="575.50"></text></g><g><title>[libc.so.6] (522 samples, 0.29%)</title><rect x="91.5270%" y="581" width="0.2939%" height="15" fill="rgb(210,8,46)" fg:x="162584" fg:w="522"/><text x="91.7770%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (561 samples, 0.32%)</title><rect x="91.5129%" y="613" width="0.3158%" height="15" fill="rgb(240,16,54)" fg:x="162559" fg:w="561"/><text x="91.7629%" y="623.50"></text></g><g><title>malloc (541 samples, 0.30%)</title><rect x="91.5242%" y="597" width="0.3046%" height="15" fill="rgb(211,209,29)" fg:x="162579" fg:w="541"/><text x="91.7742%" y="607.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (21 samples, 0.01%)</title><rect x="91.9008%" y="581" width="0.0118%" height="15" fill="rgb(226,228,24)" fg:x="163248" fg:w="21"/><text x="92.1508%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as kv::value::Value&gt;::from_raw_value (91 samples, 0.05%)</title><rect x="91.9588%" y="565" width="0.0512%" height="15" fill="rgb(222,84,9)" fg:x="163351" fg:w="91"/><text x="92.2088%" y="575.50"></text></g><g><title>malloc (39 samples, 0.02%)</title><rect x="91.9881%" y="549" width="0.0220%" height="15" fill="rgb(234,203,30)" fg:x="163403" fg:w="39"/><text x="92.2381%" y="559.50"></text></g><g><title>[libc.so.6] (20 samples, 0.01%)</title><rect x="91.9988%" y="533" width="0.0113%" height="15" fill="rgb(238,109,14)" fg:x="163422" fg:w="20"/><text x="92.2488%" y="543.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (21 samples, 0.01%)</title><rect x="92.0106%" y="565" width="0.0118%" height="15" fill="rgb(233,206,34)" fg:x="163443" fg:w="21"/><text x="92.2606%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::Guard&gt; (23 samples, 0.01%)</title><rect x="92.0449%" y="549" width="0.0129%" height="15" fill="rgb(220,167,47)" fg:x="163504" fg:w="23"/><text x="92.2949%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::concurrency_control::Protector&gt; (26 samples, 0.01%)</title><rect x="92.0579%" y="549" width="0.0146%" height="15" fill="rgb(238,105,10)" fg:x="163527" fg:w="26"/><text x="92.3079%" y="559.50"></text></g><g><title>&lt;sled::concurrency_control::Protector as core::ops::drop::Drop&gt;::drop (24 samples, 0.01%)</title><rect x="92.0590%" y="533" width="0.0135%" height="15" fill="rgb(213,227,17)" fg:x="163529" fg:w="24"/><text x="92.3090%" y="543.50"></text></g><g><title>sled::concurrency_control::read (32 samples, 0.02%)</title><rect x="92.0725%" y="549" width="0.0180%" height="15" fill="rgb(217,132,38)" fg:x="163553" fg:w="32"/><text x="92.3225%" y="559.50"></text></g><g><title>cfree (28 samples, 0.02%)</title><rect x="92.1130%" y="517" width="0.0158%" height="15" fill="rgb(242,146,4)" fg:x="163625" fg:w="28"/><text x="92.3630%" y="527.50"></text></g><g><title>[libc.so.6] (20 samples, 0.01%)</title><rect x="92.1175%" y="501" width="0.0113%" height="15" fill="rgb(212,61,9)" fg:x="163633" fg:w="20"/><text x="92.3675%" y="511.50"></text></g><g><title>cfree (26 samples, 0.01%)</title><rect x="92.1305%" y="501" width="0.0146%" height="15" fill="rgb(247,126,22)" fg:x="163656" fg:w="26"/><text x="92.3805%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (187 samples, 0.11%)</title><rect x="92.1688%" y="485" width="0.1053%" height="15" fill="rgb(220,196,2)" fg:x="163724" fg:w="187"/><text x="92.4188%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (230 samples, 0.13%)</title><rect x="92.1451%" y="501" width="0.1295%" height="15" fill="rgb(208,46,4)" fg:x="163682" fg:w="230"/><text x="92.3951%" y="511.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (273 samples, 0.15%)</title><rect x="92.1288%" y="517" width="0.1537%" height="15" fill="rgb(252,104,46)" fg:x="163653" fg:w="273"/><text x="92.3788%" y="527.50"></text></g><g><title>sled::pin (364 samples, 0.20%)</title><rect x="92.0905%" y="549" width="0.2049%" height="15" fill="rgb(237,152,48)" fg:x="163585" fg:w="364"/><text x="92.3405%" y="559.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (324 samples, 0.18%)</title><rect x="92.1130%" y="533" width="0.1824%" height="15" fill="rgb(221,59,37)" fg:x="163625" fg:w="324"/><text x="92.3630%" y="543.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (23 samples, 0.01%)</title><rect x="92.2825%" y="517" width="0.0129%" height="15" fill="rgb(209,202,51)" fg:x="163926" fg:w="23"/><text x="92.5325%" y="527.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="92.3849%" y="485" width="0.0186%" height="15" fill="rgb(228,81,30)" fg:x="164108" fg:w="33"/><text x="92.6349%" y="495.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="92.3906%" y="469" width="0.0129%" height="15" fill="rgb(227,42,39)" fg:x="164118" fg:w="23"/><text x="92.6406%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (84 samples, 0.05%)</title><rect x="92.3568%" y="533" width="0.0473%" height="15" fill="rgb(221,26,2)" fg:x="164058" fg:w="84"/><text x="92.6068%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (74 samples, 0.04%)</title><rect x="92.3624%" y="517" width="0.0417%" height="15" fill="rgb(254,61,31)" fg:x="164068" fg:w="74"/><text x="92.6124%" y="527.50"></text></g><g><title>malloc (66 samples, 0.04%)</title><rect x="92.3669%" y="501" width="0.0372%" height="15" fill="rgb(222,173,38)" fg:x="164076" fg:w="66"/><text x="92.6169%" y="511.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (100 samples, 0.06%)</title><rect x="92.4041%" y="533" width="0.0563%" height="15" fill="rgb(218,50,12)" fg:x="164142" fg:w="100"/><text x="92.6541%" y="543.50"></text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="92.5899%" y="517" width="0.0315%" height="15" fill="rgb(223,88,40)" fg:x="164472" fg:w="56"/><text x="92.8399%" y="527.50"></text></g><g><title>sled::node::Node::index_next_node (419 samples, 0.24%)</title><rect x="92.6214%" y="517" width="0.2359%" height="15" fill="rgb(237,54,19)" fg:x="164528" fg:w="419"/><text x="92.8714%" y="527.50"></text></g><g><title>sled::binary_search::binary_search_lub (376 samples, 0.21%)</title><rect x="92.6456%" y="501" width="0.2117%" height="15" fill="rgb(251,129,25)" fg:x="164571" fg:w="376"/><text x="92.8956%" y="511.50"></text></g><g><title>[libc.so.6] (251 samples, 0.14%)</title><rect x="92.7160%" y="485" width="0.1413%" height="15" fill="rgb(238,97,19)" fg:x="164696" fg:w="251"/><text x="92.9660%" y="495.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (32 samples, 0.02%)</title><rect x="93.0194%" y="485" width="0.0180%" height="15" fill="rgb(240,169,18)" fg:x="165235" fg:w="32"/><text x="93.2694%" y="495.50"></text></g><g><title>sled::lru::Lru::accessed (219 samples, 0.12%)</title><rect x="93.0385%" y="485" width="0.1233%" height="15" fill="rgb(230,187,49)" fg:x="165269" fg:w="219"/><text x="93.2885%" y="495.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (2,232 samples, 1.26%)</title><rect x="91.9183%" y="581" width="1.2565%" height="15" fill="rgb(209,44,26)" fg:x="163279" fg:w="2232"/><text x="92.1683%" y="591.50"></text></g><g><title>sled::tree::Tree::get (2,047 samples, 1.15%)</title><rect x="92.0224%" y="565" width="1.1524%" height="15" fill="rgb(244,0,6)" fg:x="163464" fg:w="2047"/><text x="92.2724%" y="575.50"></text></g><g><title>sled::tree::Tree::get_inner (1,562 samples, 0.88%)</title><rect x="92.2954%" y="549" width="0.8793%" height="15" fill="rgb(248,18,21)" fg:x="163949" fg:w="1562"/><text x="92.5454%" y="559.50"></text></g><g><title>sled::tree::Tree::view_for_key (1,269 samples, 0.71%)</title><rect x="92.4604%" y="533" width="0.7144%" height="15" fill="rgb(245,180,19)" fg:x="164242" fg:w="1269"/><text x="92.7104%" y="543.50"></text></g><g><title>sled::tree::Tree::view_for_pid (564 samples, 0.32%)</title><rect x="92.8573%" y="517" width="0.3175%" height="15" fill="rgb(252,118,36)" fg:x="164947" fg:w="564"/><text x="93.1073%" y="527.50"></text></g><g><title>sled::pagecache::PageCache::get (460 samples, 0.26%)</title><rect x="92.9158%" y="501" width="0.2590%" height="15" fill="rgb(210,224,19)" fg:x="165051" fg:w="460"/><text x="93.1658%" y="511.50"></text></g><g><title>sled::pagecache::pagetable::PageTable::traverse (23 samples, 0.01%)</title><rect x="93.1618%" y="485" width="0.0129%" height="15" fill="rgb(218,30,24)" fg:x="165488" fg:w="23"/><text x="93.4118%" y="495.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::get_block_hash (2,415 samples, 1.36%)</title><rect x="91.8637%" y="597" width="1.3595%" height="15" fill="rgb(219,75,50)" fg:x="163182" fg:w="2415"/><text x="92.1137%" y="607.50"></text></g><g><title>sled::db::Db::open_tree (86 samples, 0.05%)</title><rect x="93.1748%" y="581" width="0.0484%" height="15" fill="rgb(234,72,50)" fg:x="165511" fg:w="86"/><text x="93.4248%" y="591.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_block_hash (2,478 samples, 1.39%)</title><rect x="91.8287%" y="613" width="1.3950%" height="15" fill="rgb(219,100,48)" fg:x="163120" fg:w="2478"/><text x="92.0787%" y="623.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::chain_params (23 samples, 0.01%)</title><rect x="93.2271%" y="597" width="0.0129%" height="15" fill="rgb(253,5,41)" fg:x="165604" fg:w="23"/><text x="93.4771%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.01%)</title><rect x="93.2299%" y="581" width="0.0101%" height="15" fill="rgb(247,181,11)" fg:x="165609" fg:w="18"/><text x="93.4799%" y="591.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (64 samples, 0.04%)</title><rect x="93.2491%" y="565" width="0.0360%" height="15" fill="rgb(222,223,25)" fg:x="165643" fg:w="64"/><text x="93.4991%" y="575.50"></text></g><g><title>sled::tree::Tree::get (55 samples, 0.03%)</title><rect x="93.2541%" y="549" width="0.0310%" height="15" fill="rgb(214,198,28)" fg:x="165652" fg:w="55"/><text x="93.5041%" y="559.50"></text></g><g><title>sled::tree::Tree::get_inner (46 samples, 0.03%)</title><rect x="93.2592%" y="533" width="0.0259%" height="15" fill="rgb(230,46,43)" fg:x="165661" fg:w="46"/><text x="93.5092%" y="543.50"></text></g><g><title>sled::tree::Tree::view_for_key (41 samples, 0.02%)</title><rect x="93.2620%" y="517" width="0.0231%" height="15" fill="rgb(233,65,53)" fg:x="165666" fg:w="41"/><text x="93.5120%" y="527.50"></text></g><g><title>sled::tree::Tree::view_for_pid (20 samples, 0.01%)</title><rect x="93.2738%" y="501" width="0.0113%" height="15" fill="rgb(221,121,27)" fg:x="165687" fg:w="20"/><text x="93.5238%" y="511.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::is_coinbase_mature (112 samples, 0.06%)</title><rect x="93.2237%" y="613" width="0.0631%" height="15" fill="rgb(247,70,47)" fg:x="165598" fg:w="112"/><text x="93.4737%" y="623.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (83 samples, 0.05%)</title><rect x="93.2401%" y="597" width="0.0467%" height="15" fill="rgb(228,85,35)" fg:x="165627" fg:w="83"/><text x="93.4901%" y="607.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::chainstore::ChainStore&gt;::get_header (82 samples, 0.05%)</title><rect x="93.2406%" y="581" width="0.0462%" height="15" fill="rgb(209,50,18)" fg:x="165628" fg:w="82"/><text x="93.4906%" y="591.50"></text></g><g><title>[libc.so.6] (72 samples, 0.04%)</title><rect x="93.3887%" y="533" width="0.0405%" height="15" fill="rgb(250,19,35)" fg:x="165891" fg:w="72"/><text x="93.6387%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (227 samples, 0.13%)</title><rect x="93.3020%" y="613" width="0.1278%" height="15" fill="rgb(253,107,29)" fg:x="165737" fg:w="227"/><text x="93.5520%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (222 samples, 0.12%)</title><rect x="93.3048%" y="597" width="0.1250%" height="15" fill="rgb(252,179,29)" fg:x="165742" fg:w="222"/><text x="93.5548%" y="607.50"></text></g><g><title>realloc (216 samples, 0.12%)</title><rect x="93.3082%" y="581" width="0.1216%" height="15" fill="rgb(238,194,6)" fg:x="165748" fg:w="216"/><text x="93.5582%" y="591.50"></text></g><g><title>[libc.so.6] (210 samples, 0.12%)</title><rect x="93.3116%" y="565" width="0.1182%" height="15" fill="rgb(238,164,29)" fg:x="165754" fg:w="210"/><text x="93.5616%" y="575.50"></text></g><g><title>[libc.so.6] (208 samples, 0.12%)</title><rect x="93.3127%" y="549" width="0.1171%" height="15" fill="rgb(224,25,9)" fg:x="165756" fg:w="208"/><text x="93.5627%" y="559.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (63 samples, 0.04%)</title><rect x="93.5266%" y="581" width="0.0355%" height="15" fill="rgb(244,153,23)" fg:x="166136" fg:w="63"/><text x="93.7766%" y="591.50"></text></g><g><title>std::io::Write::write_all (55 samples, 0.03%)</title><rect x="93.5311%" y="565" width="0.0310%" height="15" fill="rgb(212,203,14)" fg:x="166144" fg:w="55"/><text x="93.7811%" y="575.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (36 samples, 0.02%)</title><rect x="93.5418%" y="549" width="0.0203%" height="15" fill="rgb(220,164,20)" fg:x="166163" fg:w="36"/><text x="93.7918%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (26 samples, 0.01%)</title><rect x="93.5474%" y="533" width="0.0146%" height="15" fill="rgb(222,203,48)" fg:x="166173" fg:w="26"/><text x="93.7974%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::into_inner (79 samples, 0.04%)</title><rect x="93.5621%" y="581" width="0.0445%" height="15" fill="rgb(215,159,22)" fg:x="166199" fg:w="79"/><text x="93.8121%" y="591.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (83 samples, 0.05%)</title><rect x="93.6066%" y="581" width="0.0467%" height="15" fill="rgb(216,183,47)" fg:x="166278" fg:w="83"/><text x="93.8566%" y="591.50"></text></g><g><title>std::io::Write::write_all (63 samples, 0.04%)</title><rect x="93.6178%" y="565" width="0.0355%" height="15" fill="rgb(229,195,25)" fg:x="166298" fg:w="63"/><text x="93.8678%" y="575.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (38 samples, 0.02%)</title><rect x="93.6319%" y="549" width="0.0214%" height="15" fill="rgb(224,132,51)" fg:x="166323" fg:w="38"/><text x="93.8819%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (29 samples, 0.02%)</title><rect x="93.6370%" y="533" width="0.0163%" height="15" fill="rgb(240,63,7)" fg:x="166332" fg:w="29"/><text x="93.8870%" y="543.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="93.8053%" y="533" width="0.0146%" height="15" fill="rgb(249,182,41)" fg:x="166631" fg:w="26"/><text x="94.0553%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (590 samples, 0.33%)</title><rect x="93.4883%" y="597" width="0.3321%" height="15" fill="rgb(243,47,26)" fg:x="166068" fg:w="590"/><text x="93.7383%" y="607.50"></text></g><g><title>std::io::Write::write_all (297 samples, 0.17%)</title><rect x="93.6533%" y="581" width="0.1672%" height="15" fill="rgb(233,48,2)" fg:x="166361" fg:w="297"/><text x="93.9033%" y="591.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (246 samples, 0.14%)</title><rect x="93.6820%" y="565" width="0.1385%" height="15" fill="rgb(244,165,34)" fg:x="166412" fg:w="246"/><text x="93.9320%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (218 samples, 0.12%)</title><rect x="93.6978%" y="549" width="0.1227%" height="15" fill="rgb(207,89,7)" fg:x="166440" fg:w="218"/><text x="93.9478%" y="559.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (53 samples, 0.03%)</title><rect x="93.8205%" y="597" width="0.0298%" height="15" fill="rgb(244,117,36)" fg:x="166658" fg:w="53"/><text x="94.0705%" y="607.50"></text></g><g><title>std::io::Write::write_all (50 samples, 0.03%)</title><rect x="93.8222%" y="581" width="0.0281%" height="15" fill="rgb(226,144,34)" fg:x="166661" fg:w="50"/><text x="94.0722%" y="591.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (36 samples, 0.02%)</title><rect x="93.8300%" y="565" width="0.0203%" height="15" fill="rgb(213,23,19)" fg:x="166675" fg:w="36"/><text x="94.0800%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (32 samples, 0.02%)</title><rect x="93.8323%" y="549" width="0.0180%" height="15" fill="rgb(217,75,12)" fg:x="166679" fg:w="32"/><text x="94.0823%" y="559.50"></text></g><g><title>[libc.so.6] (29 samples, 0.02%)</title><rect x="94.4673%" y="565" width="0.0163%" height="15" fill="rgb(224,159,17)" fg:x="167807" fg:w="29"/><text x="94.7173%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,110 samples, 0.62%)</title><rect x="93.8644%" y="581" width="0.6249%" height="15" fill="rgb(217,118,1)" fg:x="166736" fg:w="1110"/><text x="94.1144%" y="591.50"></text></g><g><title>[libc.so.6] (29 samples, 0.02%)</title><rect x="94.9520%" y="549" width="0.0163%" height="15" fill="rgb(232,180,48)" fg:x="168668" fg:w="29"/><text x="95.2020%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,987 samples, 1.12%)</title><rect x="93.8526%" y="597" width="1.1186%" height="15" fill="rgb(230,27,33)" fg:x="166715" fg:w="1987"/><text x="94.1026%" y="607.50"></text></g><g><title>bitcoin_hashes::Hash::hash (856 samples, 0.48%)</title><rect x="94.4893%" y="581" width="0.4819%" height="15" fill="rgb(205,31,21)" fg:x="167846" fg:w="856"/><text x="94.7393%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (823 samples, 0.46%)</title><rect x="94.5078%" y="565" width="0.4633%" height="15" fill="rgb(253,59,4)" fg:x="167879" fg:w="823"/><text x="94.7578%" y="575.50"></text></g><g><title>[libc.so.6] (104 samples, 0.06%)</title><rect x="95.4559%" y="533" width="0.0585%" height="15" fill="rgb(224,201,9)" fg:x="169563" fg:w="104"/><text x="95.7059%" y="543.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (919 samples, 0.52%)</title><rect x="95.0032%" y="549" width="0.5174%" height="15" fill="rgb(229,206,30)" fg:x="168759" fg:w="919"/><text x="95.2532%" y="559.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (977 samples, 0.55%)</title><rect x="94.9711%" y="597" width="0.5500%" height="15" fill="rgb(212,67,47)" fg:x="168702" fg:w="977"/><text x="95.2211%" y="607.50"></text></g><g><title>std::io::Write::write_all (973 samples, 0.55%)</title><rect x="94.9734%" y="581" width="0.5478%" height="15" fill="rgb(211,96,50)" fg:x="168706" fg:w="973"/><text x="95.2234%" y="591.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (937 samples, 0.53%)</title><rect x="94.9937%" y="565" width="0.5275%" height="15" fill="rgb(252,114,18)" fg:x="168742" fg:w="937"/><text x="95.2437%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (99 samples, 0.06%)</title><rect x="95.5634%" y="565" width="0.0557%" height="15" fill="rgb(223,58,37)" fg:x="169754" fg:w="99"/><text x="95.8134%" y="575.50"></text></g><g><title>[libc.so.6] (21 samples, 0.01%)</title><rect x="95.6073%" y="549" width="0.0118%" height="15" fill="rgb(237,70,4)" fg:x="169832" fg:w="21"/><text x="95.8573%" y="559.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (3,891 samples, 2.19%)</title><rect x="93.4298%" y="613" width="2.1904%" height="15" fill="rgb(244,85,46)" fg:x="165964" fg:w="3891"/><text x="93.6798%" y="623.50">b..</text></g><g><title>std::io::Write::write_all (176 samples, 0.10%)</title><rect x="95.5212%" y="597" width="0.0991%" height="15" fill="rgb(223,39,52)" fg:x="169679" fg:w="176"/><text x="95.7712%" y="607.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (127 samples, 0.07%)</title><rect x="95.5487%" y="581" width="0.0715%" height="15" fill="rgb(218,200,14)" fg:x="169728" fg:w="127"/><text x="95.7987%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (105 samples, 0.06%)</title><rect x="95.6208%" y="613" width="0.0591%" height="15" fill="rgb(208,171,16)" fg:x="169856" fg:w="105"/><text x="95.8708%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 samples, 0.04%)</title><rect x="95.6388%" y="597" width="0.0411%" height="15" fill="rgb(234,200,18)" fg:x="169888" fg:w="73"/><text x="95.8888%" y="607.50"></text></g><g><title>[libc.so.6] (169 samples, 0.10%)</title><rect x="95.7300%" y="597" width="0.0951%" height="15" fill="rgb(228,45,11)" fg:x="170050" fg:w="169"/><text x="95.9800%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (222 samples, 0.12%)</title><rect x="95.8263%" y="597" width="0.1250%" height="15" fill="rgb(237,182,11)" fg:x="170221" fg:w="222"/><text x="96.0763%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (215 samples, 0.12%)</title><rect x="95.8302%" y="581" width="0.1210%" height="15" fill="rgb(241,175,49)" fg:x="170228" fg:w="215"/><text x="96.0802%" y="591.50"></text></g><g><title>malloc (204 samples, 0.11%)</title><rect x="95.8364%" y="565" width="0.1148%" height="15" fill="rgb(247,38,35)" fg:x="170239" fg:w="204"/><text x="96.0864%" y="575.50"></text></g><g><title>[libc.so.6] (160 samples, 0.09%)</title><rect x="95.8612%" y="549" width="0.0901%" height="15" fill="rgb(228,39,49)" fg:x="170283" fg:w="160"/><text x="96.1112%" y="559.50"></text></g><g><title>[libc.so.6] (131 samples, 0.07%)</title><rect x="96.1077%" y="517" width="0.0737%" height="15" fill="rgb(226,101,26)" fg:x="170721" fg:w="131"/><text x="96.3577%" y="527.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="96.1629%" y="501" width="0.0186%" height="15" fill="rgb(206,141,19)" fg:x="170819" fg:w="33"/><text x="96.4129%" y="511.50"></text></g><g><title>[libc.so.6] (202 samples, 0.11%)</title><rect x="96.0683%" y="533" width="0.1137%" height="15" fill="rgb(211,200,13)" fg:x="170651" fg:w="202"/><text x="96.3183%" y="543.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (424 samples, 0.24%)</title><rect x="95.9512%" y="597" width="0.2387%" height="15" fill="rgb(241,121,6)" fg:x="170443" fg:w="424"/><text x="96.2012%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (398 samples, 0.22%)</title><rect x="95.9659%" y="581" width="0.2241%" height="15" fill="rgb(234,221,29)" fg:x="170469" fg:w="398"/><text x="96.2159%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (372 samples, 0.21%)</title><rect x="95.9805%" y="565" width="0.2094%" height="15" fill="rgb(229,136,5)" fg:x="170495" fg:w="372"/><text x="96.2305%" y="575.50"></text></g><g><title>realloc (326 samples, 0.18%)</title><rect x="96.0064%" y="549" width="0.1835%" height="15" fill="rgb(238,36,11)" fg:x="170541" fg:w="326"/><text x="96.2564%" y="559.50"></text></g><g><title>cfree (50 samples, 0.03%)</title><rect x="96.1899%" y="597" width="0.0281%" height="15" fill="rgb(251,55,41)" fg:x="170867" fg:w="50"/><text x="96.4399%" y="607.50"></text></g><g><title>[libc.so.6] (45 samples, 0.03%)</title><rect x="96.1928%" y="581" width="0.0253%" height="15" fill="rgb(242,34,40)" fg:x="170872" fg:w="45"/><text x="96.4428%" y="591.50"></text></g><g><title>floresta_chain::pruned_utreexo::udata::LeafData::_get_leaf_hashes (2,045 samples, 1.15%)</title><rect x="95.6799%" y="613" width="1.1512%" height="15" fill="rgb(215,42,17)" fg:x="169961" fg:w="2045"/><text x="95.9299%" y="623.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (1,071 samples, 0.60%)</title><rect x="96.2282%" y="597" width="0.6029%" height="15" fill="rgb(207,44,46)" fg:x="170935" fg:w="1071"/><text x="96.4782%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::ripemd160::Hash as bitcoin_hashes::Hash&gt;::from_engine (448 samples, 0.25%)</title><rect x="96.8818%" y="565" width="0.2522%" height="15" fill="rgb(211,206,28)" fg:x="172096" fg:w="448"/><text x="97.1318%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::ripemd160::HashEngine as bitcoin_hashes::HashEngine&gt;::input (421 samples, 0.24%)</title><rect x="96.8970%" y="549" width="0.2370%" height="15" fill="rgb(237,167,16)" fg:x="172123" fg:w="421"/><text x="97.1470%" y="559.50"></text></g><g><title>&lt;bitcoin_hashes::ripemd160::HashEngine as bitcoin_hashes::HashEngine&gt;::input (19 samples, 0.01%)</title><rect x="97.1340%" y="565" width="0.0107%" height="15" fill="rgb(233,66,6)" fg:x="172544" fg:w="19"/><text x="97.3840%" y="575.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::PubkeyHash as bitcoin_hashes::Hash&gt;::from_engine (1,036 samples, 0.58%)</title><rect x="96.8615%" y="597" width="0.5832%" height="15" fill="rgb(246,123,29)" fg:x="172060" fg:w="1036"/><text x="97.1115%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::hash160::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,029 samples, 0.58%)</title><rect x="96.8655%" y="581" width="0.5793%" height="15" fill="rgb(209,62,40)" fg:x="172067" fg:w="1029"/><text x="97.1155%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (533 samples, 0.30%)</title><rect x="97.1447%" y="565" width="0.3001%" height="15" fill="rgb(218,4,25)" fg:x="172563" fg:w="533"/><text x="97.3947%" y="575.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::WScriptHash as bitcoin_hashes::Hash&gt;::from_engine (104 samples, 0.06%)</title><rect x="97.4470%" y="597" width="0.0585%" height="15" fill="rgb(253,91,49)" fg:x="173100" fg:w="104"/><text x="97.6970%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (104 samples, 0.06%)</title><rect x="97.4470%" y="581" width="0.0585%" height="15" fill="rgb(228,155,29)" fg:x="173100" fg:w="104"/><text x="97.6970%" y="591.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (98 samples, 0.06%)</title><rect x="97.4504%" y="565" width="0.0552%" height="15" fill="rgb(243,57,37)" fg:x="173106" fg:w="98"/><text x="97.7004%" y="575.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (22 samples, 0.01%)</title><rect x="97.5056%" y="597" width="0.0124%" height="15" fill="rgb(244,167,17)" fg:x="173204" fg:w="22"/><text x="97.7556%" y="607.50"></text></g><g><title>[libc.so.6] (110 samples, 0.06%)</title><rect x="97.5562%" y="533" width="0.0619%" height="15" fill="rgb(207,181,38)" fg:x="173294" fg:w="110"/><text x="97.8062%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (143 samples, 0.08%)</title><rect x="97.5382%" y="581" width="0.0805%" height="15" fill="rgb(211,8,23)" fg:x="173262" fg:w="143"/><text x="97.7882%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (140 samples, 0.08%)</title><rect x="97.5399%" y="565" width="0.0788%" height="15" fill="rgb(235,11,44)" fg:x="173265" fg:w="140"/><text x="97.7899%" y="575.50"></text></g><g><title>malloc (136 samples, 0.08%)</title><rect x="97.5422%" y="549" width="0.0766%" height="15" fill="rgb(248,18,52)" fg:x="173269" fg:w="136"/><text x="97.7922%" y="559.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="97.6666%" y="517" width="0.0197%" height="15" fill="rgb(208,4,7)" fg:x="173490" fg:w="35"/><text x="97.9166%" y="527.50"></text></g><g><title>[libc.so.6] (32 samples, 0.02%)</title><rect x="97.6683%" y="501" width="0.0180%" height="15" fill="rgb(240,17,39)" fg:x="173493" fg:w="32"/><text x="97.9183%" y="511.50"></text></g><g><title>bitcoin::blockdata::script::Script::new_witness_program (297 samples, 0.17%)</title><rect x="97.5213%" y="597" width="0.1672%" height="15" fill="rgb(207,170,3)" fg:x="173232" fg:w="297"/><text x="97.7713%" y="607.50"></text></g><g><title>bitcoin::blockdata::script::Builder::push_slice (124 samples, 0.07%)</title><rect x="97.6187%" y="581" width="0.0698%" height="15" fill="rgb(236,100,52)" fg:x="173405" fg:w="124"/><text x="97.8687%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (93 samples, 0.05%)</title><rect x="97.6362%" y="565" width="0.0524%" height="15" fill="rgb(246,78,51)" fg:x="173436" fg:w="93"/><text x="97.8862%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (90 samples, 0.05%)</title><rect x="97.6379%" y="549" width="0.0507%" height="15" fill="rgb(211,17,15)" fg:x="173439" fg:w="90"/><text x="97.8879%" y="559.50"></text></g><g><title>realloc (80 samples, 0.05%)</title><rect x="97.6435%" y="533" width="0.0450%" height="15" fill="rgb(209,59,46)" fg:x="173449" fg:w="80"/><text x="97.8935%" y="543.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::last (53 samples, 0.03%)</title><rect x="97.6885%" y="597" width="0.0298%" height="15" fill="rgb(210,92,25)" fg:x="173529" fg:w="53"/><text x="97.9385%" y="607.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::element_at (44 samples, 0.02%)</title><rect x="97.6936%" y="581" width="0.0248%" height="15" fill="rgb(238,174,52)" fg:x="173538" fg:w="44"/><text x="97.9436%" y="591.50"></text></g><g><title>floresta_chain::pruned_utreexo::udata::proof_util::reconstruct_leaf_data (1,587 samples, 0.89%)</title><rect x="96.8311%" y="613" width="0.8934%" height="15" fill="rgb(230,73,7)" fg:x="172006" fg:w="1587"/><text x="97.0811%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (256 samples, 0.14%)</title><rect x="97.8045%" y="597" width="0.1441%" height="15" fill="rgb(243,124,40)" fg:x="173735" fg:w="256"/><text x="98.0545%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (137 samples, 0.08%)</title><rect x="97.8715%" y="581" width="0.0771%" height="15" fill="rgb(244,170,11)" fg:x="173854" fg:w="137"/><text x="98.1215%" y="591.50"></text></g><g><title>cfree (19 samples, 0.01%)</title><rect x="98.0190%" y="581" width="0.0107%" height="15" fill="rgb(207,114,54)" fg:x="174116" fg:w="19"/><text x="98.2690%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (207 samples, 0.12%)</title><rect x="98.1017%" y="565" width="0.1165%" height="15" fill="rgb(205,42,20)" fg:x="174263" fg:w="207"/><text x="98.3517%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (336 samples, 0.19%)</title><rect x="98.0297%" y="581" width="0.1892%" height="15" fill="rgb(230,30,28)" fg:x="174135" fg:w="336"/><text x="98.2797%" y="591.50"></text></g><g><title>[libc.so.6] (456 samples, 0.26%)</title><rect x="98.3376%" y="549" width="0.2567%" height="15" fill="rgb(205,73,54)" fg:x="174682" fg:w="456"/><text x="98.5876%" y="559.50"></text></g><g><title>[libc.so.6] (651 samples, 0.37%)</title><rect x="98.2284%" y="565" width="0.3665%" height="15" fill="rgb(254,227,23)" fg:x="174488" fg:w="651"/><text x="98.4784%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,563 samples, 0.88%)</title><rect x="97.7245%" y="613" width="0.8799%" height="15" fill="rgb(228,202,34)" fg:x="173593" fg:w="1563"/><text x="97.9745%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,165 samples, 0.66%)</title><rect x="97.9486%" y="597" width="0.6558%" height="15" fill="rgb(222,225,37)" fg:x="173991" fg:w="1165"/><text x="98.1986%" y="607.50"></text></g><g><title>malloc (685 samples, 0.39%)</title><rect x="98.2188%" y="581" width="0.3856%" height="15" fill="rgb(221,14,54)" fg:x="174471" fg:w="685"/><text x="98.4688%" y="591.50"></text></g><g><title>[libc.so.6] (59 samples, 0.03%)</title><rect x="98.7705%" y="581" width="0.0332%" height="15" fill="rgb(254,102,2)" fg:x="175451" fg:w="59"/><text x="99.0205%" y="591.50"></text></g><g><title>[libc.so.6] (291 samples, 0.16%)</title><rect x="98.6405%" y="597" width="0.1638%" height="15" fill="rgb(232,104,17)" fg:x="175220" fg:w="291"/><text x="98.8905%" y="607.50"></text></g><g><title>malloc (356 samples, 0.20%)</title><rect x="98.6044%" y="613" width="0.2004%" height="15" fill="rgb(250,220,14)" fg:x="175156" fg:w="356"/><text x="98.8544%" y="623.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::handle_block::{{closure}} (144,153 samples, 81.15%)</title><rect x="17.6598%" y="645" width="81.1512%" height="15" fill="rgb(241,158,9)" fg:x="31370" fg:w="144153"/><text x="17.9098%" y="655.50">floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::handle_block::{{closure}}</text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::process_proof (13,145 samples, 7.40%)</title><rect x="91.4110%" y="629" width="7.4000%" height="15" fill="rgb(246,9,43)" fg:x="162378" fg:w="13145"/><text x="91.6610%" y="639.50">floresta_w..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (21 samples, 0.01%)</title><rect x="98.8201%" y="629" width="0.0118%" height="15" fill="rgb(206,73,33)" fg:x="175539" fg:w="21"/><text x="99.0701%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (56 samples, 0.03%)</title><rect x="98.8110%" y="645" width="0.0315%" height="15" fill="rgb(222,79,8)" fg:x="175523" fg:w="56"/><text x="99.0610%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (19 samples, 0.01%)</title><rect x="98.8319%" y="629" width="0.0107%" height="15" fill="rgb(234,8,54)" fg:x="175560" fg:w="19"/><text x="99.0819%" y="639.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::RunningNode,Chain&gt;::run::{{closure}} (150,418 samples, 84.68%)</title><rect x="14.1740%" y="677" width="84.6781%" height="15" fill="rgb(209,134,38)" fg:x="25178" fg:w="150418"/><text x="14.4240%" y="687.50">floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::RunningNode,Chain&gt;::run::{{closure}}</text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::run::{{closure}} (150,418 samples, 84.68%)</title><rect x="14.1740%" y="661" width="84.6781%" height="15" fill="rgb(230,127,29)" fg:x="25178" fg:w="150418"/><text x="14.4240%" y="671.50">floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::run::{{closure}}</text></g><g><title>async_io::driver::block_on (150,433 samples, 84.69%)</title><rect x="14.1689%" y="693" width="84.6866%" height="15" fill="rgb(242,44,41)" fg:x="25169" fg:w="150433"/><text x="14.4189%" y="703.50">async_io::driver::block_on</text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::RunningNode,Chain&gt;::run::{{closure}} (27 samples, 0.02%)</title><rect x="98.8634%" y="693" width="0.0152%" height="15" fill="rgb(222,56,43)" fg:x="175616" fg:w="27"/><text x="99.1134%" y="703.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::run::{{closure}} (27 samples, 0.02%)</title><rect x="98.8634%" y="677" width="0.0152%" height="15" fill="rgb(238,39,47)" fg:x="175616" fg:w="27"/><text x="99.1134%" y="687.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::handle_block::{{closure}} (18 samples, 0.01%)</title><rect x="98.8685%" y="661" width="0.0101%" height="15" fill="rgb(226,79,43)" fg:x="175625" fg:w="18"/><text x="99.1185%" y="671.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::UpdatableChainstate&gt;::connect_block (18 samples, 0.01%)</title><rect x="98.8685%" y="645" width="0.0101%" height="15" fill="rgb(242,105,53)" fg:x="175625" fg:w="18"/><text x="99.1185%" y="655.50"></text></g><g><title>[unknown] (150,620 samples, 84.79%)</title><rect x="14.0907%" y="709" width="84.7918%" height="15" fill="rgb(251,132,46)" fg:x="25030" fg:w="150620"/><text x="14.3407%" y="719.50">[unknown]</text></g><g><title>[libc.so.6] (27 samples, 0.02%)</title><rect x="98.8989%" y="341" width="0.0152%" height="15" fill="rgb(231,77,14)" fg:x="175679" fg:w="27"/><text x="99.1489%" y="351.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="98.8994%" y="325" width="0.0146%" height="15" fill="rgb(240,135,9)" fg:x="175680" fg:w="26"/><text x="99.1494%" y="335.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="98.9017%" y="309" width="0.0124%" height="15" fill="rgb(248,109,14)" fg:x="175684" fg:w="22"/><text x="99.1517%" y="319.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="98.9028%" y="293" width="0.0113%" height="15" fill="rgb(227,146,52)" fg:x="175686" fg:w="20"/><text x="99.1528%" y="303.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="98.9034%" y="277" width="0.0107%" height="15" fill="rgb(232,54,3)" fg:x="175687" fg:w="19"/><text x="99.1534%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="98.9034%" y="261" width="0.0107%" height="15" fill="rgb(229,201,43)" fg:x="175687" fg:w="19"/><text x="99.1534%" y="271.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (28 samples, 0.02%)</title><rect x="98.8989%" y="373" width="0.0158%" height="15" fill="rgb(252,161,33)" fg:x="175679" fg:w="28"/><text x="99.1489%" y="383.50"></text></g><g><title>&lt;sled::metrics::Metrics as core::default::Default&gt;::default (28 samples, 0.02%)</title><rect x="98.8989%" y="357" width="0.0158%" height="15" fill="rgb(226,146,40)" fg:x="175679" fg:w="28"/><text x="99.1489%" y="367.50"></text></g><g><title>[libc.so.6] (58 samples, 0.03%)</title><rect x="98.8825%" y="677" width="0.0327%" height="15" fill="rgb(219,47,25)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="687.50"></text></g><g><title>main (58 samples, 0.03%)</title><rect x="98.8825%" y="661" width="0.0327%" height="15" fill="rgb(250,135,13)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="671.50"></text></g><g><title>std::rt::lang_start_internal (58 samples, 0.03%)</title><rect x="98.8825%" y="645" width="0.0327%" height="15" fill="rgb(219,229,18)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="655.50"></text></g><g><title>std::panic::catch_unwind (58 samples, 0.03%)</title><rect x="98.8825%" y="629" width="0.0327%" height="15" fill="rgb(217,152,27)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="639.50"></text></g><g><title>std::panicking::try (58 samples, 0.03%)</title><rect x="98.8825%" y="613" width="0.0327%" height="15" fill="rgb(225,71,47)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="623.50"></text></g><g><title>std::panicking::try::do_call (58 samples, 0.03%)</title><rect x="98.8825%" y="597" width="0.0327%" height="15" fill="rgb(220,139,14)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (58 samples, 0.03%)</title><rect x="98.8825%" y="581" width="0.0327%" height="15" fill="rgb(247,54,32)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="591.50"></text></g><g><title>std::panic::catch_unwind (58 samples, 0.03%)</title><rect x="98.8825%" y="565" width="0.0327%" height="15" fill="rgb(252,131,39)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="575.50"></text></g><g><title>std::panicking::try (58 samples, 0.03%)</title><rect x="98.8825%" y="549" width="0.0327%" height="15" fill="rgb(210,108,39)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="559.50"></text></g><g><title>std::panicking::try::do_call (58 samples, 0.03%)</title><rect x="98.8825%" y="533" width="0.0327%" height="15" fill="rgb(205,23,29)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (58 samples, 0.03%)</title><rect x="98.8825%" y="517" width="0.0327%" height="15" fill="rgb(246,139,46)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="527.50"></text></g><g><title>std::rt::lang_start::{{closure}} (58 samples, 0.03%)</title><rect x="98.8825%" y="501" width="0.0327%" height="15" fill="rgb(250,81,26)" fg:x="175650" fg:w="58"/><text x="99.1325%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (57 samples, 0.03%)</title><rect x="98.8831%" y="485" width="0.0321%" height="15" fill="rgb(214,104,7)" fg:x="175651" fg:w="57"/><text x="99.1331%" y="495.50"></text></g><g><title>florestad::main (57 samples, 0.03%)</title><rect x="98.8831%" y="469" width="0.0321%" height="15" fill="rgb(233,189,8)" fg:x="175651" fg:w="57"/><text x="99.1331%" y="479.50"></text></g><g><title>floresta_watch_only::kv_database::KvDatabase::new (29 samples, 0.02%)</title><rect x="98.8989%" y="453" width="0.0163%" height="15" fill="rgb(228,141,17)" fg:x="175679" fg:w="29"/><text x="99.1489%" y="463.50"></text></g><g><title>kv::store::Store::new (29 samples, 0.02%)</title><rect x="98.8989%" y="437" width="0.0163%" height="15" fill="rgb(247,157,1)" fg:x="175679" fg:w="29"/><text x="99.1489%" y="447.50"></text></g><g><title>kv::config::Config::open (29 samples, 0.02%)</title><rect x="98.8989%" y="421" width="0.0163%" height="15" fill="rgb(249,225,5)" fg:x="175679" fg:w="29"/><text x="99.1489%" y="431.50"></text></g><g><title>sled::config::Config::open (29 samples, 0.02%)</title><rect x="98.8989%" y="405" width="0.0163%" height="15" fill="rgb(242,55,13)" fg:x="175679" fg:w="29"/><text x="99.1489%" y="415.50"></text></g><g><title>sled::db::Db::start_inner (29 samples, 0.02%)</title><rect x="98.8989%" y="389" width="0.0163%" height="15" fill="rgb(230,49,50)" fg:x="175679" fg:w="29"/><text x="99.1489%" y="399.50"></text></g><g><title>_start (69 samples, 0.04%)</title><rect x="98.8825%" y="709" width="0.0388%" height="15" fill="rgb(241,111,38)" fg:x="175650" fg:w="69"/><text x="99.1325%" y="719.50"></text></g><g><title>__libc_start_main (69 samples, 0.04%)</title><rect x="98.8825%" y="693" width="0.0388%" height="15" fill="rgb(252,155,4)" fg:x="175650" fg:w="69"/><text x="99.1325%" y="703.50"></text></g><g><title>florestad (150,741 samples, 84.86%)</title><rect x="14.0620%" y="725" width="84.8600%" height="15" fill="rgb(212,69,32)" fg:x="24979" fg:w="150741"/><text x="14.3120%" y="735.50">florestad</text></g><g><title>crossbeam_epoch::internal::Global::collect (24 samples, 0.01%)</title><rect x="98.9293%" y="549" width="0.0135%" height="15" fill="rgb(243,107,47)" fg:x="175733" fg:w="24"/><text x="99.1793%" y="559.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (23 samples, 0.01%)</title><rect x="98.9298%" y="533" width="0.0129%" height="15" fill="rgb(247,130,12)" fg:x="175734" fg:w="23"/><text x="99.1798%" y="543.50"></text></g><g><title>__libc_pwrite (127 samples, 0.07%)</title><rect x="98.9467%" y="485" width="0.0715%" height="15" fill="rgb(233,74,16)" fg:x="175764" fg:w="127"/><text x="99.1967%" y="495.50"></text></g><g><title>[unknown] (126 samples, 0.07%)</title><rect x="98.9473%" y="469" width="0.0709%" height="15" fill="rgb(208,58,18)" fg:x="175765" fg:w="126"/><text x="99.1973%" y="479.50"></text></g><g><title>[unknown] (126 samples, 0.07%)</title><rect x="98.9473%" y="453" width="0.0709%" height="15" fill="rgb(242,225,1)" fg:x="175765" fg:w="126"/><text x="99.1973%" y="463.50"></text></g><g><title>[unknown] (126 samples, 0.07%)</title><rect x="98.9473%" y="437" width="0.0709%" height="15" fill="rgb(249,39,40)" fg:x="175765" fg:w="126"/><text x="99.1973%" y="447.50"></text></g><g><title>[unknown] (126 samples, 0.07%)</title><rect x="98.9473%" y="421" width="0.0709%" height="15" fill="rgb(207,72,44)" fg:x="175765" fg:w="126"/><text x="99.1973%" y="431.50"></text></g><g><title>[unknown] (126 samples, 0.07%)</title><rect x="98.9473%" y="405" width="0.0709%" height="15" fill="rgb(215,193,12)" fg:x="175765" fg:w="126"/><text x="99.1973%" y="415.50"></text></g><g><title>[unknown] (126 samples, 0.07%)</title><rect x="98.9473%" y="389" width="0.0709%" height="15" fill="rgb(248,41,39)" fg:x="175765" fg:w="126"/><text x="99.1973%" y="399.50"></text></g><g><title>[unknown] (123 samples, 0.07%)</title><rect x="98.9490%" y="373" width="0.0692%" height="15" fill="rgb(253,85,4)" fg:x="175768" fg:w="123"/><text x="99.1990%" y="383.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="98.9523%" y="357" width="0.0659%" height="15" fill="rgb(243,70,31)" fg:x="175774" fg:w="117"/><text x="99.2023%" y="367.50"></text></g><g><title>[unknown] (113 samples, 0.06%)</title><rect x="98.9546%" y="341" width="0.0636%" height="15" fill="rgb(253,195,26)" fg:x="175778" fg:w="113"/><text x="99.2046%" y="351.50"></text></g><g><title>[unknown] (99 samples, 0.06%)</title><rect x="98.9625%" y="325" width="0.0557%" height="15" fill="rgb(243,42,11)" fg:x="175792" fg:w="99"/><text x="99.2125%" y="335.50"></text></g><g><title>[unknown] (89 samples, 0.05%)</title><rect x="98.9681%" y="309" width="0.0501%" height="15" fill="rgb(239,66,17)" fg:x="175802" fg:w="89"/><text x="99.2181%" y="319.50"></text></g><g><title>[unknown] (69 samples, 0.04%)</title><rect x="98.9794%" y="293" width="0.0388%" height="15" fill="rgb(217,132,21)" fg:x="175822" fg:w="69"/><text x="99.2294%" y="303.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="98.9940%" y="277" width="0.0242%" height="15" fill="rgb(252,202,21)" fg:x="175848" fg:w="43"/><text x="99.2440%" y="287.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="99.0036%" y="261" width="0.0146%" height="15" fill="rgb(233,98,36)" fg:x="175865" fg:w="26"/><text x="99.2536%" y="271.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (128 samples, 0.07%)</title><rect x="98.9467%" y="549" width="0.0721%" height="15" fill="rgb(216,153,54)" fg:x="175764" fg:w="128"/><text x="99.1967%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (128 samples, 0.07%)</title><rect x="98.9467%" y="533" width="0.0721%" height="15" fill="rgb(250,99,7)" fg:x="175764" fg:w="128"/><text x="99.1967%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write_at (128 samples, 0.07%)</title><rect x="98.9467%" y="517" width="0.0721%" height="15" fill="rgb(207,56,50)" fg:x="175764" fg:w="128"/><text x="99.1967%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (128 samples, 0.07%)</title><rect x="98.9467%" y="501" width="0.0721%" height="15" fill="rgb(244,61,34)" fg:x="175764" fg:w="128"/><text x="99.1967%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (209 samples, 0.12%)</title><rect x="98.9259%" y="581" width="0.1177%" height="15" fill="rgb(241,50,38)" fg:x="175727" fg:w="209"/><text x="99.1759%" y="591.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (206 samples, 0.12%)</title><rect x="98.9276%" y="565" width="0.1160%" height="15" fill="rgb(212,166,30)" fg:x="175730" fg:w="206"/><text x="99.1776%" y="575.50"></text></g><g><title>sync_file_range (44 samples, 0.02%)</title><rect x="99.0188%" y="549" width="0.0248%" height="15" fill="rgb(249,127,32)" fg:x="175892" fg:w="44"/><text x="99.2688%" y="559.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.0193%" y="533" width="0.0242%" height="15" fill="rgb(209,103,0)" fg:x="175893" fg:w="43"/><text x="99.2693%" y="543.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.0193%" y="517" width="0.0242%" height="15" fill="rgb(238,209,51)" fg:x="175893" fg:w="43"/><text x="99.2693%" y="527.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.0193%" y="501" width="0.0242%" height="15" fill="rgb(237,56,23)" fg:x="175893" fg:w="43"/><text x="99.2693%" y="511.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.0193%" y="485" width="0.0242%" height="15" fill="rgb(215,153,46)" fg:x="175893" fg:w="43"/><text x="99.2693%" y="495.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.0193%" y="469" width="0.0242%" height="15" fill="rgb(224,49,31)" fg:x="175893" fg:w="43"/><text x="99.2693%" y="479.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.0193%" y="453" width="0.0242%" height="15" fill="rgb(250,18,42)" fg:x="175893" fg:w="43"/><text x="99.2693%" y="463.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.0193%" y="437" width="0.0242%" height="15" fill="rgb(215,176,39)" fg:x="175893" fg:w="43"/><text x="99.2693%" y="447.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.0210%" y="421" width="0.0225%" height="15" fill="rgb(223,77,29)" fg:x="175896" fg:w="40"/><text x="99.2710%" y="431.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.0216%" y="405" width="0.0220%" height="15" fill="rgb(234,94,52)" fg:x="175897" fg:w="39"/><text x="99.2716%" y="415.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.0216%" y="389" width="0.0220%" height="15" fill="rgb(220,154,50)" fg:x="175897" fg:w="39"/><text x="99.2716%" y="399.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.0222%" y="373" width="0.0214%" height="15" fill="rgb(212,11,10)" fg:x="175898" fg:w="38"/><text x="99.2722%" y="383.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="99.0233%" y="357" width="0.0203%" height="15" fill="rgb(205,166,19)" fg:x="175900" fg:w="36"/><text x="99.2733%" y="367.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="99.0267%" y="341" width="0.0169%" height="15" fill="rgb(244,198,16)" fg:x="175906" fg:w="30"/><text x="99.2767%" y="351.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="99.0283%" y="325" width="0.0152%" height="15" fill="rgb(219,69,12)" fg:x="175909" fg:w="27"/><text x="99.2783%" y="335.50"></text></g><g><title>[libc.so.6] (286 samples, 0.16%)</title><rect x="98.9259%" y="709" width="0.1610%" height="15" fill="rgb(245,30,7)" fg:x="175727" fg:w="286"/><text x="99.1759%" y="719.50"></text></g><g><title>[libc.so.6] (286 samples, 0.16%)</title><rect x="98.9259%" y="693" width="0.1610%" height="15" fill="rgb(218,221,48)" fg:x="175727" fg:w="286"/><text x="99.1759%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (286 samples, 0.16%)</title><rect x="98.9259%" y="677" width="0.1610%" height="15" fill="rgb(216,66,15)" fg:x="175727" fg:w="286"/><text x="99.1759%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (286 samples, 0.16%)</title><rect x="98.9259%" y="661" width="0.1610%" height="15" fill="rgb(226,122,50)" fg:x="175727" fg:w="286"/><text x="99.1759%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (286 samples, 0.16%)</title><rect x="98.9259%" y="645" width="0.1610%" height="15" fill="rgb(239,156,16)" fg:x="175727" fg:w="286"/><text x="99.1759%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (286 samples, 0.16%)</title><rect x="98.9259%" y="629" width="0.1610%" height="15" fill="rgb(224,27,38)" fg:x="175727" fg:w="286"/><text x="99.1759%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (286 samples, 0.16%)</title><rect x="98.9259%" y="613" width="0.1610%" height="15" fill="rgb(224,39,27)" fg:x="175727" fg:w="286"/><text x="99.1759%" y="623.50"></text></g><g><title>sled::threadpool::perform_work (286 samples, 0.16%)</title><rect x="98.9259%" y="597" width="0.1610%" height="15" fill="rgb(215,92,29)" fg:x="175727" fg:w="286"/><text x="99.1759%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (77 samples, 0.04%)</title><rect x="99.0435%" y="581" width="0.0433%" height="15" fill="rgb(207,159,16)" fg:x="175936" fg:w="77"/><text x="99.2935%" y="591.50"></text></g><g><title>syscall (73 samples, 0.04%)</title><rect x="99.0458%" y="565" width="0.0411%" height="15" fill="rgb(238,163,47)" fg:x="175940" fg:w="73"/><text x="99.2958%" y="575.50"></text></g><g><title>[unknown] (71 samples, 0.04%)</title><rect x="99.0469%" y="549" width="0.0400%" height="15" fill="rgb(219,91,49)" fg:x="175942" fg:w="71"/><text x="99.2969%" y="559.50"></text></g><g><title>[unknown] (70 samples, 0.04%)</title><rect x="99.0475%" y="533" width="0.0394%" height="15" fill="rgb(227,167,31)" fg:x="175943" fg:w="70"/><text x="99.2975%" y="543.50"></text></g><g><title>[unknown] (70 samples, 0.04%)</title><rect x="99.0475%" y="517" width="0.0394%" height="15" fill="rgb(234,80,54)" fg:x="175943" fg:w="70"/><text x="99.2975%" y="527.50"></text></g><g><title>[unknown] (70 samples, 0.04%)</title><rect x="99.0475%" y="501" width="0.0394%" height="15" fill="rgb(212,114,2)" fg:x="175943" fg:w="70"/><text x="99.2975%" y="511.50"></text></g><g><title>[unknown] (69 samples, 0.04%)</title><rect x="99.0480%" y="485" width="0.0388%" height="15" fill="rgb(234,50,24)" fg:x="175944" fg:w="69"/><text x="99.2980%" y="495.50"></text></g><g><title>[unknown] (68 samples, 0.04%)</title><rect x="99.0486%" y="469" width="0.0383%" height="15" fill="rgb(221,68,8)" fg:x="175945" fg:w="68"/><text x="99.2986%" y="479.50"></text></g><g><title>[unknown] (67 samples, 0.04%)</title><rect x="99.0492%" y="453" width="0.0377%" height="15" fill="rgb(254,180,31)" fg:x="175946" fg:w="67"/><text x="99.2992%" y="463.50"></text></g><g><title>[unknown] (65 samples, 0.04%)</title><rect x="99.0503%" y="437" width="0.0366%" height="15" fill="rgb(247,130,50)" fg:x="175948" fg:w="65"/><text x="99.3003%" y="447.50"></text></g><g><title>[unknown] (64 samples, 0.04%)</title><rect x="99.0509%" y="421" width="0.0360%" height="15" fill="rgb(211,109,4)" fg:x="175949" fg:w="64"/><text x="99.3009%" y="431.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.0526%" y="405" width="0.0343%" height="15" fill="rgb(238,50,21)" fg:x="175952" fg:w="61"/><text x="99.3026%" y="415.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="99.0576%" y="389" width="0.0293%" height="15" fill="rgb(225,57,45)" fg:x="175961" fg:w="52"/><text x="99.3076%" y="399.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="99.0666%" y="373" width="0.0203%" height="15" fill="rgb(209,196,50)" fg:x="175977" fg:w="36"/><text x="99.3166%" y="383.50"></text></g><g><title>sled-io-0 (288 samples, 0.16%)</title><rect x="98.9259%" y="725" width="0.1621%" height="15" fill="rgb(242,140,13)" fg:x="175727" fg:w="288"/><text x="99.1759%" y="735.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (147 samples, 0.08%)</title><rect x="99.1049%" y="549" width="0.0828%" height="15" fill="rgb(217,111,7)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (147 samples, 0.08%)</title><rect x="99.1049%" y="533" width="0.0828%" height="15" fill="rgb(253,193,51)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write_at (147 samples, 0.08%)</title><rect x="99.1049%" y="517" width="0.0828%" height="15" fill="rgb(252,70,29)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (147 samples, 0.08%)</title><rect x="99.1049%" y="501" width="0.0828%" height="15" fill="rgb(232,127,12)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="511.50"></text></g><g><title>__libc_pwrite (147 samples, 0.08%)</title><rect x="99.1049%" y="485" width="0.0828%" height="15" fill="rgb(211,180,21)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="495.50"></text></g><g><title>[unknown] (147 samples, 0.08%)</title><rect x="99.1049%" y="469" width="0.0828%" height="15" fill="rgb(229,72,13)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="479.50"></text></g><g><title>[unknown] (147 samples, 0.08%)</title><rect x="99.1049%" y="453" width="0.0828%" height="15" fill="rgb(240,211,49)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="463.50"></text></g><g><title>[unknown] (147 samples, 0.08%)</title><rect x="99.1049%" y="437" width="0.0828%" height="15" fill="rgb(219,149,40)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="447.50"></text></g><g><title>[unknown] (147 samples, 0.08%)</title><rect x="99.1049%" y="421" width="0.0828%" height="15" fill="rgb(210,127,46)" fg:x="176045" fg:w="147"/><text x="99.3549%" y="431.50"></text></g><g><title>[unknown] (146 samples, 0.08%)</title><rect x="99.1055%" y="405" width="0.0822%" height="15" fill="rgb(220,106,7)" fg:x="176046" fg:w="146"/><text x="99.3555%" y="415.50"></text></g><g><title>[unknown] (146 samples, 0.08%)</title><rect x="99.1055%" y="389" width="0.0822%" height="15" fill="rgb(249,31,22)" fg:x="176046" fg:w="146"/><text x="99.3555%" y="399.50"></text></g><g><title>[unknown] (145 samples, 0.08%)</title><rect x="99.1060%" y="373" width="0.0816%" height="15" fill="rgb(253,1,49)" fg:x="176047" fg:w="145"/><text x="99.3560%" y="383.50"></text></g><g><title>[unknown] (140 samples, 0.08%)</title><rect x="99.1088%" y="357" width="0.0788%" height="15" fill="rgb(227,144,33)" fg:x="176052" fg:w="140"/><text x="99.3588%" y="367.50"></text></g><g><title>[unknown] (127 samples, 0.07%)</title><rect x="99.1162%" y="341" width="0.0715%" height="15" fill="rgb(249,163,44)" fg:x="176065" fg:w="127"/><text x="99.3662%" y="351.50"></text></g><g><title>[unknown] (113 samples, 0.06%)</title><rect x="99.1240%" y="325" width="0.0636%" height="15" fill="rgb(234,15,39)" fg:x="176079" fg:w="113"/><text x="99.3740%" y="335.50"></text></g><g><title>[unknown] (103 samples, 0.06%)</title><rect x="99.1297%" y="309" width="0.0580%" height="15" fill="rgb(207,66,16)" fg:x="176089" fg:w="103"/><text x="99.3797%" y="319.50"></text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="99.1454%" y="293" width="0.0422%" height="15" fill="rgb(233,112,24)" fg:x="176117" fg:w="75"/><text x="99.3954%" y="303.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.1578%" y="277" width="0.0298%" height="15" fill="rgb(230,90,22)" fg:x="176139" fg:w="53"/><text x="99.4078%" y="287.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="99.1741%" y="261" width="0.0135%" height="15" fill="rgb(229,61,13)" fg:x="176168" fg:w="24"/><text x="99.4241%" y="271.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (224 samples, 0.13%)</title><rect x="99.0880%" y="581" width="0.1261%" height="15" fill="rgb(225,57,24)" fg:x="176015" fg:w="224"/><text x="99.3380%" y="591.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (223 samples, 0.13%)</title><rect x="99.0886%" y="565" width="0.1255%" height="15" fill="rgb(208,169,48)" fg:x="176016" fg:w="223"/><text x="99.3386%" y="575.50"></text></g><g><title>sync_file_range (47 samples, 0.03%)</title><rect x="99.1877%" y="549" width="0.0265%" height="15" fill="rgb(244,218,51)" fg:x="176192" fg:w="47"/><text x="99.4377%" y="559.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.1877%" y="533" width="0.0265%" height="15" fill="rgb(214,148,10)" fg:x="176192" fg:w="47"/><text x="99.4377%" y="543.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.1877%" y="517" width="0.0265%" height="15" fill="rgb(225,174,27)" fg:x="176192" fg:w="47"/><text x="99.4377%" y="527.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.1877%" y="501" width="0.0265%" height="15" fill="rgb(230,96,26)" fg:x="176192" fg:w="47"/><text x="99.4377%" y="511.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.1877%" y="485" width="0.0265%" height="15" fill="rgb(232,10,30)" fg:x="176192" fg:w="47"/><text x="99.4377%" y="495.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.1877%" y="469" width="0.0265%" height="15" fill="rgb(222,8,50)" fg:x="176192" fg:w="47"/><text x="99.4377%" y="479.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.1877%" y="453" width="0.0265%" height="15" fill="rgb(213,81,27)" fg:x="176192" fg:w="47"/><text x="99.4377%" y="463.50"></text></g><g><title>[unknown] (46 samples, 0.03%)</title><rect x="99.1882%" y="437" width="0.0259%" height="15" fill="rgb(245,50,10)" fg:x="176193" fg:w="46"/><text x="99.4382%" y="447.50"></text></g><g><title>[unknown] (46 samples, 0.03%)</title><rect x="99.1882%" y="421" width="0.0259%" height="15" fill="rgb(216,100,18)" fg:x="176193" fg:w="46"/><text x="99.4382%" y="431.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.1888%" y="405" width="0.0253%" height="15" fill="rgb(236,147,54)" fg:x="176194" fg:w="45"/><text x="99.4388%" y="415.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.1888%" y="389" width="0.0253%" height="15" fill="rgb(205,143,26)" fg:x="176194" fg:w="45"/><text x="99.4388%" y="399.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.1916%" y="373" width="0.0225%" height="15" fill="rgb(236,26,9)" fg:x="176199" fg:w="40"/><text x="99.4416%" y="383.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.1933%" y="357" width="0.0208%" height="15" fill="rgb(221,165,53)" fg:x="176202" fg:w="37"/><text x="99.4433%" y="367.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="99.1955%" y="341" width="0.0186%" height="15" fill="rgb(214,110,17)" fg:x="176206" fg:w="33"/><text x="99.4455%" y="351.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="99.1978%" y="325" width="0.0163%" height="15" fill="rgb(237,197,12)" fg:x="176210" fg:w="29"/><text x="99.4478%" y="335.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="99.2017%" y="309" width="0.0124%" height="15" fill="rgb(205,84,17)" fg:x="176217" fg:w="22"/><text x="99.4517%" y="319.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="99.2040%" y="293" width="0.0101%" height="15" fill="rgb(237,18,45)" fg:x="176221" fg:w="18"/><text x="99.4540%" y="303.50"></text></g><g><title>sled-io-1 (310 samples, 0.17%)</title><rect x="99.0880%" y="725" width="0.1745%" height="15" fill="rgb(221,87,14)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="735.50"></text></g><g><title>[libc.so.6] (310 samples, 0.17%)</title><rect x="99.0880%" y="709" width="0.1745%" height="15" fill="rgb(238,186,15)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="719.50"></text></g><g><title>[libc.so.6] (310 samples, 0.17%)</title><rect x="99.0880%" y="693" width="0.1745%" height="15" fill="rgb(208,115,11)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (310 samples, 0.17%)</title><rect x="99.0880%" y="677" width="0.1745%" height="15" fill="rgb(254,175,0)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (310 samples, 0.17%)</title><rect x="99.0880%" y="661" width="0.1745%" height="15" fill="rgb(227,24,42)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (310 samples, 0.17%)</title><rect x="99.0880%" y="645" width="0.1745%" height="15" fill="rgb(223,211,37)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (310 samples, 0.17%)</title><rect x="99.0880%" y="629" width="0.1745%" height="15" fill="rgb(235,49,27)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (310 samples, 0.17%)</title><rect x="99.0880%" y="613" width="0.1745%" height="15" fill="rgb(254,97,51)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="623.50"></text></g><g><title>sled::threadpool::perform_work (310 samples, 0.17%)</title><rect x="99.0880%" y="597" width="0.1745%" height="15" fill="rgb(249,51,40)" fg:x="176015" fg:w="310"/><text x="99.3380%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (86 samples, 0.05%)</title><rect x="99.2141%" y="581" width="0.0484%" height="15" fill="rgb(210,128,45)" fg:x="176239" fg:w="86"/><text x="99.4641%" y="591.50"></text></g><g><title>syscall (84 samples, 0.05%)</title><rect x="99.2152%" y="565" width="0.0473%" height="15" fill="rgb(224,137,50)" fg:x="176241" fg:w="84"/><text x="99.4652%" y="575.50"></text></g><g><title>[unknown] (84 samples, 0.05%)</title><rect x="99.2152%" y="549" width="0.0473%" height="15" fill="rgb(242,15,9)" fg:x="176241" fg:w="84"/><text x="99.4652%" y="559.50"></text></g><g><title>[unknown] (84 samples, 0.05%)</title><rect x="99.2152%" y="533" width="0.0473%" height="15" fill="rgb(233,187,41)" fg:x="176241" fg:w="84"/><text x="99.4652%" y="543.50"></text></g><g><title>[unknown] (83 samples, 0.05%)</title><rect x="99.2158%" y="517" width="0.0467%" height="15" fill="rgb(227,2,29)" fg:x="176242" fg:w="83"/><text x="99.4658%" y="527.50"></text></g><g><title>[unknown] (83 samples, 0.05%)</title><rect x="99.2158%" y="501" width="0.0467%" height="15" fill="rgb(222,70,3)" fg:x="176242" fg:w="83"/><text x="99.4658%" y="511.50"></text></g><g><title>[unknown] (83 samples, 0.05%)</title><rect x="99.2158%" y="485" width="0.0467%" height="15" fill="rgb(213,11,42)" fg:x="176242" fg:w="83"/><text x="99.4658%" y="495.50"></text></g><g><title>[unknown] (82 samples, 0.05%)</title><rect x="99.2164%" y="469" width="0.0462%" height="15" fill="rgb(225,150,9)" fg:x="176243" fg:w="82"/><text x="99.4664%" y="479.50"></text></g><g><title>[unknown] (80 samples, 0.05%)</title><rect x="99.2175%" y="453" width="0.0450%" height="15" fill="rgb(230,162,45)" fg:x="176245" fg:w="80"/><text x="99.4675%" y="463.50"></text></g><g><title>[unknown] (79 samples, 0.04%)</title><rect x="99.2181%" y="437" width="0.0445%" height="15" fill="rgb(222,14,52)" fg:x="176246" fg:w="79"/><text x="99.4681%" y="447.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="99.2192%" y="421" width="0.0433%" height="15" fill="rgb(254,198,14)" fg:x="176248" fg:w="77"/><text x="99.4692%" y="431.50"></text></g><g><title>[unknown] (76 samples, 0.04%)</title><rect x="99.2197%" y="405" width="0.0428%" height="15" fill="rgb(220,217,30)" fg:x="176249" fg:w="76"/><text x="99.4697%" y="415.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="99.2276%" y="389" width="0.0349%" height="15" fill="rgb(215,146,41)" fg:x="176263" fg:w="62"/><text x="99.4776%" y="399.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.2327%" y="373" width="0.0298%" height="15" fill="rgb(217,27,36)" fg:x="176272" fg:w="53"/><text x="99.4827%" y="383.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (21 samples, 0.01%)</title><rect x="99.2631%" y="549" width="0.0118%" height="15" fill="rgb(219,218,39)" fg:x="176326" fg:w="21"/><text x="99.5131%" y="559.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (21 samples, 0.01%)</title><rect x="99.2631%" y="533" width="0.0118%" height="15" fill="rgb(219,4,42)" fg:x="176326" fg:w="21"/><text x="99.5131%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (21 samples, 0.01%)</title><rect x="99.2631%" y="517" width="0.0118%" height="15" fill="rgb(249,119,36)" fg:x="176326" fg:w="21"/><text x="99.5131%" y="527.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (117 samples, 0.07%)</title><rect x="99.2805%" y="549" width="0.0659%" height="15" fill="rgb(209,23,33)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (117 samples, 0.07%)</title><rect x="99.2805%" y="533" width="0.0659%" height="15" fill="rgb(211,10,0)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write_at (117 samples, 0.07%)</title><rect x="99.2805%" y="517" width="0.0659%" height="15" fill="rgb(208,99,37)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (117 samples, 0.07%)</title><rect x="99.2805%" y="501" width="0.0659%" height="15" fill="rgb(213,132,31)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="511.50"></text></g><g><title>__libc_pwrite (117 samples, 0.07%)</title><rect x="99.2805%" y="485" width="0.0659%" height="15" fill="rgb(243,129,40)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="495.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="99.2805%" y="469" width="0.0659%" height="15" fill="rgb(210,66,33)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="479.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="99.2805%" y="453" width="0.0659%" height="15" fill="rgb(209,189,4)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="463.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="99.2805%" y="437" width="0.0659%" height="15" fill="rgb(214,107,37)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="447.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="99.2805%" y="421" width="0.0659%" height="15" fill="rgb(245,88,54)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="431.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="99.2805%" y="405" width="0.0659%" height="15" fill="rgb(205,146,20)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="415.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="99.2805%" y="389" width="0.0659%" height="15" fill="rgb(220,161,25)" fg:x="176357" fg:w="117"/><text x="99.5305%" y="399.50"></text></g><g><title>[unknown] (115 samples, 0.06%)</title><rect x="99.2817%" y="373" width="0.0647%" height="15" fill="rgb(215,152,15)" fg:x="176359" fg:w="115"/><text x="99.5317%" y="383.50"></text></g><g><title>[unknown] (110 samples, 0.06%)</title><rect x="99.2845%" y="357" width="0.0619%" height="15" fill="rgb(233,192,44)" fg:x="176364" fg:w="110"/><text x="99.5345%" y="367.50"></text></g><g><title>[unknown] (101 samples, 0.06%)</title><rect x="99.2896%" y="341" width="0.0569%" height="15" fill="rgb(240,170,46)" fg:x="176373" fg:w="101"/><text x="99.5396%" y="351.50"></text></g><g><title>[unknown] (87 samples, 0.05%)</title><rect x="99.2974%" y="325" width="0.0490%" height="15" fill="rgb(207,104,33)" fg:x="176387" fg:w="87"/><text x="99.5474%" y="335.50"></text></g><g><title>[unknown] (76 samples, 0.04%)</title><rect x="99.3036%" y="309" width="0.0428%" height="15" fill="rgb(219,21,39)" fg:x="176398" fg:w="76"/><text x="99.5536%" y="319.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.3166%" y="293" width="0.0298%" height="15" fill="rgb(214,133,29)" fg:x="176421" fg:w="53"/><text x="99.5666%" y="303.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.3256%" y="277" width="0.0208%" height="15" fill="rgb(226,93,6)" fg:x="176437" fg:w="37"/><text x="99.5756%" y="287.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="99.3352%" y="261" width="0.0113%" height="15" fill="rgb(252,222,34)" fg:x="176454" fg:w="20"/><text x="99.5852%" y="271.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (190 samples, 0.11%)</title><rect x="99.2625%" y="581" width="0.1070%" height="15" fill="rgb(252,92,48)" fg:x="176325" fg:w="190"/><text x="99.5125%" y="591.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (190 samples, 0.11%)</title><rect x="99.2625%" y="565" width="0.1070%" height="15" fill="rgb(245,223,24)" fg:x="176325" fg:w="190"/><text x="99.5125%" y="575.50"></text></g><g><title>sync_file_range (41 samples, 0.02%)</title><rect x="99.3464%" y="549" width="0.0231%" height="15" fill="rgb(205,176,3)" fg:x="176474" fg:w="41"/><text x="99.5964%" y="559.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="99.3464%" y="533" width="0.0231%" height="15" fill="rgb(235,151,15)" fg:x="176474" fg:w="41"/><text x="99.5964%" y="543.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.3470%" y="517" width="0.0225%" height="15" fill="rgb(237,209,11)" fg:x="176475" fg:w="40"/><text x="99.5970%" y="527.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.3470%" y="501" width="0.0225%" height="15" fill="rgb(243,227,24)" fg:x="176475" fg:w="40"/><text x="99.5970%" y="511.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.3470%" y="485" width="0.0225%" height="15" fill="rgb(239,193,16)" fg:x="176475" fg:w="40"/><text x="99.5970%" y="495.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.3470%" y="469" width="0.0225%" height="15" fill="rgb(231,27,9)" fg:x="176475" fg:w="40"/><text x="99.5970%" y="479.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.3470%" y="453" width="0.0225%" height="15" fill="rgb(219,169,10)" fg:x="176475" fg:w="40"/><text x="99.5970%" y="463.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.3470%" y="437" width="0.0225%" height="15" fill="rgb(244,229,43)" fg:x="176475" fg:w="40"/><text x="99.5970%" y="447.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.3475%" y="421" width="0.0220%" height="15" fill="rgb(254,38,20)" fg:x="176476" fg:w="39"/><text x="99.5975%" y="431.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.3475%" y="405" width="0.0220%" height="15" fill="rgb(250,47,30)" fg:x="176476" fg:w="39"/><text x="99.5975%" y="415.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.3475%" y="389" width="0.0220%" height="15" fill="rgb(224,124,36)" fg:x="176476" fg:w="39"/><text x="99.5975%" y="399.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.3487%" y="373" width="0.0208%" height="15" fill="rgb(246,68,51)" fg:x="176478" fg:w="37"/><text x="99.5987%" y="383.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="99.3509%" y="357" width="0.0186%" height="15" fill="rgb(253,43,49)" fg:x="176482" fg:w="33"/><text x="99.6009%" y="367.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="99.3526%" y="341" width="0.0169%" height="15" fill="rgb(219,54,36)" fg:x="176485" fg:w="30"/><text x="99.6026%" y="351.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="99.3554%" y="325" width="0.0141%" height="15" fill="rgb(227,133,34)" fg:x="176490" fg:w="25"/><text x="99.6054%" y="335.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (66 samples, 0.04%)</title><rect x="99.3695%" y="581" width="0.0372%" height="15" fill="rgb(247,227,15)" fg:x="176515" fg:w="66"/><text x="99.6195%" y="591.50"></text></g><g><title>syscall (65 samples, 0.04%)</title><rect x="99.3701%" y="565" width="0.0366%" height="15" fill="rgb(229,96,14)" fg:x="176516" fg:w="65"/><text x="99.6201%" y="575.50"></text></g><g><title>[unknown] (65 samples, 0.04%)</title><rect x="99.3701%" y="549" width="0.0366%" height="15" fill="rgb(220,79,17)" fg:x="176516" fg:w="65"/><text x="99.6201%" y="559.50"></text></g><g><title>[unknown] (65 samples, 0.04%)</title><rect x="99.3701%" y="533" width="0.0366%" height="15" fill="rgb(205,131,53)" fg:x="176516" fg:w="65"/><text x="99.6201%" y="543.50"></text></g><g><title>[unknown] (63 samples, 0.04%)</title><rect x="99.3712%" y="517" width="0.0355%" height="15" fill="rgb(209,50,29)" fg:x="176518" fg:w="63"/><text x="99.6212%" y="527.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.3723%" y="501" width="0.0343%" height="15" fill="rgb(245,86,46)" fg:x="176520" fg:w="61"/><text x="99.6223%" y="511.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.3723%" y="485" width="0.0343%" height="15" fill="rgb(235,66,46)" fg:x="176520" fg:w="61"/><text x="99.6223%" y="495.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="99.3729%" y="469" width="0.0338%" height="15" fill="rgb(232,148,31)" fg:x="176521" fg:w="60"/><text x="99.6229%" y="479.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="99.3734%" y="453" width="0.0332%" height="15" fill="rgb(217,149,8)" fg:x="176522" fg:w="59"/><text x="99.6234%" y="463.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="99.3734%" y="437" width="0.0332%" height="15" fill="rgb(209,183,11)" fg:x="176522" fg:w="59"/><text x="99.6234%" y="447.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="99.3740%" y="421" width="0.0327%" height="15" fill="rgb(208,55,20)" fg:x="176523" fg:w="58"/><text x="99.6240%" y="431.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.3768%" y="405" width="0.0298%" height="15" fill="rgb(218,39,14)" fg:x="176528" fg:w="53"/><text x="99.6268%" y="415.50"></text></g><g><title>[unknown] (46 samples, 0.03%)</title><rect x="99.3808%" y="389" width="0.0259%" height="15" fill="rgb(216,169,33)" fg:x="176535" fg:w="46"/><text x="99.6308%" y="399.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.3858%" y="373" width="0.0208%" height="15" fill="rgb(233,80,24)" fg:x="176544" fg:w="37"/><text x="99.6358%" y="383.50"></text></g><g><title>sled-io-2 (257 samples, 0.14%)</title><rect x="99.2625%" y="725" width="0.1447%" height="15" fill="rgb(213,179,31)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="735.50"></text></g><g><title>[libc.so.6] (257 samples, 0.14%)</title><rect x="99.2625%" y="709" width="0.1447%" height="15" fill="rgb(209,19,5)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="719.50"></text></g><g><title>[libc.so.6] (257 samples, 0.14%)</title><rect x="99.2625%" y="693" width="0.1447%" height="15" fill="rgb(219,18,35)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (257 samples, 0.14%)</title><rect x="99.2625%" y="677" width="0.1447%" height="15" fill="rgb(209,169,16)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (257 samples, 0.14%)</title><rect x="99.2625%" y="661" width="0.1447%" height="15" fill="rgb(245,90,51)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (257 samples, 0.14%)</title><rect x="99.2625%" y="645" width="0.1447%" height="15" fill="rgb(220,99,45)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (257 samples, 0.14%)</title><rect x="99.2625%" y="629" width="0.1447%" height="15" fill="rgb(249,89,25)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (257 samples, 0.14%)</title><rect x="99.2625%" y="613" width="0.1447%" height="15" fill="rgb(239,193,0)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="623.50"></text></g><g><title>sled::threadpool::perform_work (257 samples, 0.14%)</title><rect x="99.2625%" y="597" width="0.1447%" height="15" fill="rgb(231,126,1)" fg:x="176325" fg:w="257"/><text x="99.5125%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (20 samples, 0.01%)</title><rect x="99.4117%" y="517" width="0.0113%" height="15" fill="rgb(243,166,3)" fg:x="176590" fg:w="20"/><text x="99.6617%" y="527.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (25 samples, 0.01%)</title><rect x="99.4095%" y="549" width="0.0141%" height="15" fill="rgb(223,22,34)" fg:x="176586" fg:w="25"/><text x="99.6595%" y="559.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (23 samples, 0.01%)</title><rect x="99.4106%" y="533" width="0.0129%" height="15" fill="rgb(251,52,51)" fg:x="176588" fg:w="23"/><text x="99.6606%" y="543.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (142 samples, 0.08%)</title><rect x="99.4264%" y="549" width="0.0799%" height="15" fill="rgb(221,165,28)" fg:x="176616" fg:w="142"/><text x="99.6764%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (142 samples, 0.08%)</title><rect x="99.4264%" y="533" width="0.0799%" height="15" fill="rgb(218,121,47)" fg:x="176616" fg:w="142"/><text x="99.6764%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write_at (142 samples, 0.08%)</title><rect x="99.4264%" y="517" width="0.0799%" height="15" fill="rgb(209,120,9)" fg:x="176616" fg:w="142"/><text x="99.6764%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (142 samples, 0.08%)</title><rect x="99.4264%" y="501" width="0.0799%" height="15" fill="rgb(236,68,12)" fg:x="176616" fg:w="142"/><text x="99.6764%" y="511.50"></text></g><g><title>__libc_pwrite (142 samples, 0.08%)</title><rect x="99.4264%" y="485" width="0.0799%" height="15" fill="rgb(225,194,26)" fg:x="176616" fg:w="142"/><text x="99.6764%" y="495.50"></text></g><g><title>[unknown] (141 samples, 0.08%)</title><rect x="99.4269%" y="469" width="0.0794%" height="15" fill="rgb(231,84,39)" fg:x="176617" fg:w="141"/><text x="99.6769%" y="479.50"></text></g><g><title>[unknown] (141 samples, 0.08%)</title><rect x="99.4269%" y="453" width="0.0794%" height="15" fill="rgb(210,11,45)" fg:x="176617" fg:w="141"/><text x="99.6769%" y="463.50"></text></g><g><title>[unknown] (141 samples, 0.08%)</title><rect x="99.4269%" y="437" width="0.0794%" height="15" fill="rgb(224,54,52)" fg:x="176617" fg:w="141"/><text x="99.6769%" y="447.50"></text></g><g><title>[unknown] (141 samples, 0.08%)</title><rect x="99.4269%" y="421" width="0.0794%" height="15" fill="rgb(238,102,14)" fg:x="176617" fg:w="141"/><text x="99.6769%" y="431.50"></text></g><g><title>[unknown] (141 samples, 0.08%)</title><rect x="99.4269%" y="405" width="0.0794%" height="15" fill="rgb(243,160,52)" fg:x="176617" fg:w="141"/><text x="99.6769%" y="415.50"></text></g><g><title>[unknown] (141 samples, 0.08%)</title><rect x="99.4269%" y="389" width="0.0794%" height="15" fill="rgb(216,114,19)" fg:x="176617" fg:w="141"/><text x="99.6769%" y="399.50"></text></g><g><title>[unknown] (141 samples, 0.08%)</title><rect x="99.4269%" y="373" width="0.0794%" height="15" fill="rgb(244,166,37)" fg:x="176617" fg:w="141"/><text x="99.6769%" y="383.50"></text></g><g><title>[unknown] (131 samples, 0.07%)</title><rect x="99.4325%" y="357" width="0.0737%" height="15" fill="rgb(246,29,44)" fg:x="176627" fg:w="131"/><text x="99.6825%" y="367.50"></text></g><g><title>[unknown] (118 samples, 0.07%)</title><rect x="99.4399%" y="341" width="0.0664%" height="15" fill="rgb(215,56,53)" fg:x="176640" fg:w="118"/><text x="99.6899%" y="351.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="99.4461%" y="325" width="0.0602%" height="15" fill="rgb(217,60,2)" fg:x="176651" fg:w="107"/><text x="99.6961%" y="335.50"></text></g><g><title>[unknown] (92 samples, 0.05%)</title><rect x="99.4545%" y="309" width="0.0518%" height="15" fill="rgb(207,26,24)" fg:x="176666" fg:w="92"/><text x="99.7045%" y="319.50"></text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="99.4641%" y="293" width="0.0422%" height="15" fill="rgb(252,210,15)" fg:x="176683" fg:w="75"/><text x="99.7141%" y="303.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.4793%" y="277" width="0.0270%" height="15" fill="rgb(253,209,26)" fg:x="176710" fg:w="48"/><text x="99.7293%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (223 samples, 0.13%)</title><rect x="99.4078%" y="581" width="0.1255%" height="15" fill="rgb(238,170,14)" fg:x="176583" fg:w="223"/><text x="99.6578%" y="591.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (222 samples, 0.12%)</title><rect x="99.4083%" y="565" width="0.1250%" height="15" fill="rgb(216,178,15)" fg:x="176584" fg:w="222"/><text x="99.6583%" y="575.50"></text></g><g><title>sync_file_range (48 samples, 0.03%)</title><rect x="99.5063%" y="549" width="0.0270%" height="15" fill="rgb(250,197,2)" fg:x="176758" fg:w="48"/><text x="99.7563%" y="559.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.5063%" y="533" width="0.0270%" height="15" fill="rgb(212,70,42)" fg:x="176758" fg:w="48"/><text x="99.7563%" y="543.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.5063%" y="517" width="0.0270%" height="15" fill="rgb(227,213,9)" fg:x="176758" fg:w="48"/><text x="99.7563%" y="527.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.5063%" y="501" width="0.0270%" height="15" fill="rgb(245,99,25)" fg:x="176758" fg:w="48"/><text x="99.7563%" y="511.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.5063%" y="485" width="0.0270%" height="15" fill="rgb(250,82,29)" fg:x="176758" fg:w="48"/><text x="99.7563%" y="495.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.5063%" y="469" width="0.0270%" height="15" fill="rgb(241,226,54)" fg:x="176758" fg:w="48"/><text x="99.7563%" y="479.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.5063%" y="453" width="0.0270%" height="15" fill="rgb(221,99,41)" fg:x="176758" fg:w="48"/><text x="99.7563%" y="463.50"></text></g><g><title>[unknown] (46 samples, 0.03%)</title><rect x="99.5074%" y="437" width="0.0259%" height="15" fill="rgb(213,90,21)" fg:x="176760" fg:w="46"/><text x="99.7574%" y="447.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.5080%" y="421" width="0.0253%" height="15" fill="rgb(205,208,24)" fg:x="176761" fg:w="45"/><text x="99.7580%" y="431.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.5080%" y="405" width="0.0253%" height="15" fill="rgb(246,31,12)" fg:x="176761" fg:w="45"/><text x="99.7580%" y="415.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.5085%" y="389" width="0.0248%" height="15" fill="rgb(213,154,6)" fg:x="176762" fg:w="44"/><text x="99.7585%" y="399.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.5085%" y="373" width="0.0248%" height="15" fill="rgb(222,163,29)" fg:x="176762" fg:w="44"/><text x="99.7585%" y="383.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.5108%" y="357" width="0.0225%" height="15" fill="rgb(227,201,8)" fg:x="176766" fg:w="40"/><text x="99.7608%" y="367.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="99.5130%" y="341" width="0.0203%" height="15" fill="rgb(233,9,32)" fg:x="176770" fg:w="36"/><text x="99.7630%" y="351.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="99.5159%" y="325" width="0.0175%" height="15" fill="rgb(217,54,24)" fg:x="176775" fg:w="31"/><text x="99.7659%" y="335.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (56 samples, 0.03%)</title><rect x="99.5333%" y="581" width="0.0315%" height="15" fill="rgb(235,192,0)" fg:x="176806" fg:w="56"/><text x="99.7833%" y="591.50"></text></g><g><title>syscall (52 samples, 0.03%)</title><rect x="99.5356%" y="565" width="0.0293%" height="15" fill="rgb(235,45,9)" fg:x="176810" fg:w="52"/><text x="99.7856%" y="575.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="99.5356%" y="549" width="0.0293%" height="15" fill="rgb(246,42,40)" fg:x="176810" fg:w="52"/><text x="99.7856%" y="559.50"></text></g><g><title>[unknown] (51 samples, 0.03%)</title><rect x="99.5361%" y="533" width="0.0287%" height="15" fill="rgb(248,111,24)" fg:x="176811" fg:w="51"/><text x="99.7861%" y="543.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="99.5373%" y="517" width="0.0276%" height="15" fill="rgb(249,65,22)" fg:x="176813" fg:w="49"/><text x="99.7873%" y="527.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="99.5373%" y="501" width="0.0276%" height="15" fill="rgb(238,111,51)" fg:x="176813" fg:w="49"/><text x="99.7873%" y="511.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="99.5373%" y="485" width="0.0276%" height="15" fill="rgb(250,118,22)" fg:x="176813" fg:w="49"/><text x="99.7873%" y="495.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.5384%" y="469" width="0.0265%" height="15" fill="rgb(234,84,26)" fg:x="176815" fg:w="47"/><text x="99.7884%" y="479.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.5384%" y="453" width="0.0265%" height="15" fill="rgb(243,172,12)" fg:x="176815" fg:w="47"/><text x="99.7884%" y="463.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.5384%" y="437" width="0.0265%" height="15" fill="rgb(236,150,49)" fg:x="176815" fg:w="47"/><text x="99.7884%" y="447.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.5384%" y="421" width="0.0265%" height="15" fill="rgb(225,197,26)" fg:x="176815" fg:w="47"/><text x="99.7884%" y="431.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.5395%" y="405" width="0.0253%" height="15" fill="rgb(214,17,42)" fg:x="176817" fg:w="45"/><text x="99.7895%" y="415.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.5440%" y="389" width="0.0208%" height="15" fill="rgb(224,165,40)" fg:x="176825" fg:w="37"/><text x="99.7940%" y="399.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.5451%" y="373" width="0.0197%" height="15" fill="rgb(246,100,4)" fg:x="176827" fg:w="35"/><text x="99.7951%" y="383.50"></text></g><g><title>[libc.so.6] (282 samples, 0.16%)</title><rect x="99.4072%" y="709" width="0.1588%" height="15" fill="rgb(222,103,0)" fg:x="176582" fg:w="282"/><text x="99.6572%" y="719.50"></text></g><g><title>[libc.so.6] (282 samples, 0.16%)</title><rect x="99.4072%" y="693" width="0.1588%" height="15" fill="rgb(227,189,26)" fg:x="176582" fg:w="282"/><text x="99.6572%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (282 samples, 0.16%)</title><rect x="99.4072%" y="677" width="0.1588%" height="15" fill="rgb(214,202,17)" fg:x="176582" fg:w="282"/><text x="99.6572%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (282 samples, 0.16%)</title><rect x="99.4072%" y="661" width="0.1588%" height="15" fill="rgb(229,111,3)" fg:x="176582" fg:w="282"/><text x="99.6572%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (282 samples, 0.16%)</title><rect x="99.4072%" y="645" width="0.1588%" height="15" fill="rgb(229,172,15)" fg:x="176582" fg:w="282"/><text x="99.6572%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (282 samples, 0.16%)</title><rect x="99.4072%" y="629" width="0.1588%" height="15" fill="rgb(230,224,35)" fg:x="176582" fg:w="282"/><text x="99.6572%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (281 samples, 0.16%)</title><rect x="99.4078%" y="613" width="0.1582%" height="15" fill="rgb(251,141,6)" fg:x="176583" fg:w="281"/><text x="99.6578%" y="623.50"></text></g><g><title>sled::threadpool::perform_work (281 samples, 0.16%)</title><rect x="99.4078%" y="597" width="0.1582%" height="15" fill="rgb(225,208,6)" fg:x="176583" fg:w="281"/><text x="99.6578%" y="607.50"></text></g><g><title>sled-io-3 (283 samples, 0.16%)</title><rect x="99.4072%" y="725" width="0.1593%" height="15" fill="rgb(246,181,16)" fg:x="176582" fg:w="283"/><text x="99.6572%" y="735.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (119 samples, 0.07%)</title><rect x="99.5817%" y="549" width="0.0670%" height="15" fill="rgb(227,129,36)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (119 samples, 0.07%)</title><rect x="99.5817%" y="533" width="0.0670%" height="15" fill="rgb(248,117,24)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write_at (119 samples, 0.07%)</title><rect x="99.5817%" y="517" width="0.0670%" height="15" fill="rgb(214,185,35)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (119 samples, 0.07%)</title><rect x="99.5817%" y="501" width="0.0670%" height="15" fill="rgb(236,150,34)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="511.50"></text></g><g><title>__libc_pwrite (119 samples, 0.07%)</title><rect x="99.5817%" y="485" width="0.0670%" height="15" fill="rgb(243,228,27)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="495.50"></text></g><g><title>[unknown] (119 samples, 0.07%)</title><rect x="99.5817%" y="469" width="0.0670%" height="15" fill="rgb(245,77,44)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="479.50"></text></g><g><title>[unknown] (119 samples, 0.07%)</title><rect x="99.5817%" y="453" width="0.0670%" height="15" fill="rgb(235,214,42)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="463.50"></text></g><g><title>[unknown] (119 samples, 0.07%)</title><rect x="99.5817%" y="437" width="0.0670%" height="15" fill="rgb(221,74,3)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="447.50"></text></g><g><title>[unknown] (119 samples, 0.07%)</title><rect x="99.5817%" y="421" width="0.0670%" height="15" fill="rgb(206,121,29)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="431.50"></text></g><g><title>[unknown] (119 samples, 0.07%)</title><rect x="99.5817%" y="405" width="0.0670%" height="15" fill="rgb(249,131,53)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="415.50"></text></g><g><title>[unknown] (119 samples, 0.07%)</title><rect x="99.5817%" y="389" width="0.0670%" height="15" fill="rgb(236,170,29)" fg:x="176892" fg:w="119"/><text x="99.8317%" y="399.50"></text></g><g><title>[unknown] (118 samples, 0.07%)</title><rect x="99.5823%" y="373" width="0.0664%" height="15" fill="rgb(247,96,15)" fg:x="176893" fg:w="118"/><text x="99.8323%" y="383.50"></text></g><g><title>[unknown] (114 samples, 0.06%)</title><rect x="99.5845%" y="357" width="0.0642%" height="15" fill="rgb(211,210,7)" fg:x="176897" fg:w="114"/><text x="99.8345%" y="367.50"></text></g><g><title>[unknown] (112 samples, 0.06%)</title><rect x="99.5857%" y="341" width="0.0631%" height="15" fill="rgb(240,88,50)" fg:x="176899" fg:w="112"/><text x="99.8357%" y="351.50"></text></g><g><title>[unknown] (99 samples, 0.06%)</title><rect x="99.5930%" y="325" width="0.0557%" height="15" fill="rgb(209,229,26)" fg:x="176912" fg:w="99"/><text x="99.8430%" y="335.50"></text></g><g><title>[unknown] (90 samples, 0.05%)</title><rect x="99.5981%" y="309" width="0.0507%" height="15" fill="rgb(210,68,23)" fg:x="176921" fg:w="90"/><text x="99.8481%" y="319.50"></text></g><g><title>[unknown] (70 samples, 0.04%)</title><rect x="99.6093%" y="293" width="0.0394%" height="15" fill="rgb(229,180,13)" fg:x="176941" fg:w="70"/><text x="99.8593%" y="303.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.6217%" y="277" width="0.0270%" height="15" fill="rgb(236,53,44)" fg:x="176963" fg:w="48"/><text x="99.8717%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (182 samples, 0.10%)</title><rect x="99.5671%" y="581" width="0.1025%" height="15" fill="rgb(244,214,29)" fg:x="176866" fg:w="182"/><text x="99.8171%" y="591.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (180 samples, 0.10%)</title><rect x="99.5682%" y="565" width="0.1013%" height="15" fill="rgb(220,75,29)" fg:x="176868" fg:w="180"/><text x="99.8182%" y="575.50"></text></g><g><title>sync_file_range (37 samples, 0.02%)</title><rect x="99.6487%" y="549" width="0.0208%" height="15" fill="rgb(214,183,37)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="559.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="533" width="0.0208%" height="15" fill="rgb(239,117,29)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="543.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="517" width="0.0208%" height="15" fill="rgb(237,171,35)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="527.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="501" width="0.0208%" height="15" fill="rgb(229,178,53)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="511.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="485" width="0.0208%" height="15" fill="rgb(210,102,19)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="495.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="469" width="0.0208%" height="15" fill="rgb(235,127,22)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="479.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="453" width="0.0208%" height="15" fill="rgb(244,31,31)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="463.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="437" width="0.0208%" height="15" fill="rgb(231,43,21)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="447.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="421" width="0.0208%" height="15" fill="rgb(217,131,35)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="431.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6487%" y="405" width="0.0208%" height="15" fill="rgb(221,149,4)" fg:x="177011" fg:w="37"/><text x="99.8987%" y="415.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="99.6493%" y="389" width="0.0203%" height="15" fill="rgb(232,170,28)" fg:x="177012" fg:w="36"/><text x="99.8993%" y="399.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.6498%" y="373" width="0.0197%" height="15" fill="rgb(238,56,10)" fg:x="177013" fg:w="35"/><text x="99.8998%" y="383.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="99.6510%" y="357" width="0.0186%" height="15" fill="rgb(235,196,14)" fg:x="177015" fg:w="33"/><text x="99.9010%" y="367.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="99.6532%" y="341" width="0.0163%" height="15" fill="rgb(216,45,48)" fg:x="177019" fg:w="29"/><text x="99.9032%" y="351.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="99.6577%" y="325" width="0.0118%" height="15" fill="rgb(238,213,17)" fg:x="177027" fg:w="21"/><text x="99.9077%" y="335.50"></text></g><g><title>[libc.so.6] (230 samples, 0.13%)</title><rect x="99.5671%" y="709" width="0.1295%" height="15" fill="rgb(212,13,2)" fg:x="176866" fg:w="230"/><text x="99.8171%" y="719.50"></text></g><g><title>[libc.so.6] (230 samples, 0.13%)</title><rect x="99.5671%" y="693" width="0.1295%" height="15" fill="rgb(240,114,20)" fg:x="176866" fg:w="230"/><text x="99.8171%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (230 samples, 0.13%)</title><rect x="99.5671%" y="677" width="0.1295%" height="15" fill="rgb(228,41,40)" fg:x="176866" fg:w="230"/><text x="99.8171%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (230 samples, 0.13%)</title><rect x="99.5671%" y="661" width="0.1295%" height="15" fill="rgb(244,132,35)" fg:x="176866" fg:w="230"/><text x="99.8171%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (230 samples, 0.13%)</title><rect x="99.5671%" y="645" width="0.1295%" height="15" fill="rgb(253,189,4)" fg:x="176866" fg:w="230"/><text x="99.8171%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (230 samples, 0.13%)</title><rect x="99.5671%" y="629" width="0.1295%" height="15" fill="rgb(224,37,19)" fg:x="176866" fg:w="230"/><text x="99.8171%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (230 samples, 0.13%)</title><rect x="99.5671%" y="613" width="0.1295%" height="15" fill="rgb(235,223,18)" fg:x="176866" fg:w="230"/><text x="99.8171%" y="623.50"></text></g><g><title>sled::threadpool::perform_work (230 samples, 0.13%)</title><rect x="99.5671%" y="597" width="0.1295%" height="15" fill="rgb(235,163,25)" fg:x="176866" fg:w="230"/><text x="99.8171%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (48 samples, 0.03%)</title><rect x="99.6695%" y="581" width="0.0270%" height="15" fill="rgb(217,145,28)" fg:x="177048" fg:w="48"/><text x="99.9195%" y="591.50"></text></g><g><title>syscall (47 samples, 0.03%)</title><rect x="99.6701%" y="565" width="0.0265%" height="15" fill="rgb(223,223,32)" fg:x="177049" fg:w="47"/><text x="99.9201%" y="575.50"></text></g><g><title>[unknown] (47 samples, 0.03%)</title><rect x="99.6701%" y="549" width="0.0265%" height="15" fill="rgb(227,189,39)" fg:x="177049" fg:w="47"/><text x="99.9201%" y="559.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.6712%" y="533" width="0.0253%" height="15" fill="rgb(248,10,22)" fg:x="177051" fg:w="45"/><text x="99.9212%" y="543.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.6718%" y="517" width="0.0248%" height="15" fill="rgb(248,46,39)" fg:x="177052" fg:w="44"/><text x="99.9218%" y="527.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.6724%" y="501" width="0.0242%" height="15" fill="rgb(248,113,48)" fg:x="177053" fg:w="43"/><text x="99.9224%" y="511.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.6724%" y="485" width="0.0242%" height="15" fill="rgb(245,16,25)" fg:x="177053" fg:w="43"/><text x="99.9224%" y="495.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.6724%" y="469" width="0.0242%" height="15" fill="rgb(249,152,16)" fg:x="177053" fg:w="43"/><text x="99.9224%" y="479.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.6729%" y="453" width="0.0236%" height="15" fill="rgb(250,16,1)" fg:x="177054" fg:w="42"/><text x="99.9229%" y="463.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="99.6735%" y="437" width="0.0231%" height="15" fill="rgb(249,138,3)" fg:x="177055" fg:w="41"/><text x="99.9235%" y="447.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.6746%" y="421" width="0.0220%" height="15" fill="rgb(227,71,41)" fg:x="177057" fg:w="39"/><text x="99.9246%" y="431.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.6752%" y="405" width="0.0214%" height="15" fill="rgb(209,184,23)" fg:x="177058" fg:w="38"/><text x="99.9252%" y="415.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.6769%" y="389" width="0.0197%" height="15" fill="rgb(223,215,31)" fg:x="177061" fg:w="35"/><text x="99.9269%" y="399.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="99.6814%" y="373" width="0.0152%" height="15" fill="rgb(210,146,28)" fg:x="177069" fg:w="27"/><text x="99.9314%" y="383.50"></text></g><g><title>sled-io-4 (232 samples, 0.13%)</title><rect x="99.5665%" y="725" width="0.1306%" height="15" fill="rgb(209,183,41)" fg:x="176865" fg:w="232"/><text x="99.8165%" y="735.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (26 samples, 0.01%)</title><rect x="99.6988%" y="549" width="0.0146%" height="15" fill="rgb(209,224,45)" fg:x="177100" fg:w="26"/><text x="99.9488%" y="559.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (24 samples, 0.01%)</title><rect x="99.6999%" y="533" width="0.0135%" height="15" fill="rgb(224,209,51)" fg:x="177102" fg:w="24"/><text x="99.9499%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (21 samples, 0.01%)</title><rect x="99.7016%" y="517" width="0.0118%" height="15" fill="rgb(223,17,39)" fg:x="177105" fg:w="21"/><text x="99.9516%" y="527.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (139 samples, 0.08%)</title><rect x="99.7168%" y="549" width="0.0783%" height="15" fill="rgb(234,204,37)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (139 samples, 0.08%)</title><rect x="99.7168%" y="533" width="0.0783%" height="15" fill="rgb(236,120,5)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write_at (139 samples, 0.08%)</title><rect x="99.7168%" y="517" width="0.0783%" height="15" fill="rgb(248,97,27)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (139 samples, 0.08%)</title><rect x="99.7168%" y="501" width="0.0783%" height="15" fill="rgb(240,66,17)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="511.50"></text></g><g><title>__libc_pwrite (139 samples, 0.08%)</title><rect x="99.7168%" y="485" width="0.0783%" height="15" fill="rgb(210,79,3)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="495.50"></text></g><g><title>[unknown] (139 samples, 0.08%)</title><rect x="99.7168%" y="469" width="0.0783%" height="15" fill="rgb(214,176,27)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="479.50"></text></g><g><title>[unknown] (139 samples, 0.08%)</title><rect x="99.7168%" y="453" width="0.0783%" height="15" fill="rgb(235,185,3)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="463.50"></text></g><g><title>[unknown] (139 samples, 0.08%)</title><rect x="99.7168%" y="437" width="0.0783%" height="15" fill="rgb(227,24,12)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="447.50"></text></g><g><title>[unknown] (139 samples, 0.08%)</title><rect x="99.7168%" y="421" width="0.0783%" height="15" fill="rgb(252,169,48)" fg:x="177132" fg:w="139"/><text x="99.9668%" y="431.50"></text></g><g><title>[unknown] (137 samples, 0.08%)</title><rect x="99.7180%" y="405" width="0.0771%" height="15" fill="rgb(212,65,1)" fg:x="177134" fg:w="137"/><text x="99.9680%" y="415.50"></text></g><g><title>[unknown] (137 samples, 0.08%)</title><rect x="99.7180%" y="389" width="0.0771%" height="15" fill="rgb(242,39,24)" fg:x="177134" fg:w="137"/><text x="99.9680%" y="399.50"></text></g><g><title>[unknown] (136 samples, 0.08%)</title><rect x="99.7185%" y="373" width="0.0766%" height="15" fill="rgb(249,32,23)" fg:x="177135" fg:w="136"/><text x="99.9685%" y="383.50"></text></g><g><title>[unknown] (133 samples, 0.07%)</title><rect x="99.7202%" y="357" width="0.0749%" height="15" fill="rgb(251,195,23)" fg:x="177138" fg:w="133"/><text x="99.9702%" y="367.50"></text></g><g><title>[unknown] (125 samples, 0.07%)</title><rect x="99.7247%" y="341" width="0.0704%" height="15" fill="rgb(236,174,8)" fg:x="177146" fg:w="125"/><text x="99.9747%" y="351.50"></text></g><g><title>[unknown] (110 samples, 0.06%)</title><rect x="99.7332%" y="325" width="0.0619%" height="15" fill="rgb(220,197,8)" fg:x="177161" fg:w="110"/><text x="99.9832%" y="335.50"></text></g><g><title>[unknown] (101 samples, 0.06%)</title><rect x="99.7382%" y="309" width="0.0569%" height="15" fill="rgb(240,108,37)" fg:x="177170" fg:w="101"/><text x="99.9882%" y="319.50"></text></g><g><title>[unknown] (80 samples, 0.05%)</title><rect x="99.7500%" y="293" width="0.0450%" height="15" fill="rgb(232,176,24)" fg:x="177191" fg:w="80"/><text x="100.0000%" y="303.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.7681%" y="277" width="0.0270%" height="15" fill="rgb(243,35,29)" fg:x="177223" fg:w="48"/><text x="100.0181%" y="287.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="99.7827%" y="261" width="0.0124%" height="15" fill="rgb(210,37,18)" fg:x="177249" fg:w="22"/><text x="100.0327%" y="271.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (227 samples, 0.13%)</title><rect x="99.6977%" y="581" width="0.1278%" height="15" fill="rgb(224,184,40)" fg:x="177098" fg:w="227"/><text x="99.9477%" y="591.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (227 samples, 0.13%)</title><rect x="99.6977%" y="565" width="0.1278%" height="15" fill="rgb(236,39,29)" fg:x="177098" fg:w="227"/><text x="99.9477%" y="575.50"></text></g><g><title>sync_file_range (54 samples, 0.03%)</title><rect x="99.7951%" y="549" width="0.0304%" height="15" fill="rgb(232,48,39)" fg:x="177271" fg:w="54"/><text x="100.0451%" y="559.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="99.7951%" y="533" width="0.0304%" height="15" fill="rgb(236,34,42)" fg:x="177271" fg:w="54"/><text x="100.0451%" y="543.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="99.7951%" y="517" width="0.0304%" height="15" fill="rgb(243,106,37)" fg:x="177271" fg:w="54"/><text x="100.0451%" y="527.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.7956%" y="501" width="0.0298%" height="15" fill="rgb(218,96,6)" fg:x="177272" fg:w="53"/><text x="100.0456%" y="511.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.7956%" y="485" width="0.0298%" height="15" fill="rgb(235,130,12)" fg:x="177272" fg:w="53"/><text x="100.0456%" y="495.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.7956%" y="469" width="0.0298%" height="15" fill="rgb(231,95,0)" fg:x="177272" fg:w="53"/><text x="100.0456%" y="479.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.7956%" y="453" width="0.0298%" height="15" fill="rgb(228,12,23)" fg:x="177272" fg:w="53"/><text x="100.0456%" y="463.50"></text></g><g><title>[unknown] (50 samples, 0.03%)</title><rect x="99.7973%" y="437" width="0.0281%" height="15" fill="rgb(216,12,1)" fg:x="177275" fg:w="50"/><text x="100.0473%" y="447.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="99.7979%" y="421" width="0.0276%" height="15" fill="rgb(219,59,3)" fg:x="177276" fg:w="49"/><text x="100.0479%" y="431.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="99.7979%" y="405" width="0.0276%" height="15" fill="rgb(215,208,46)" fg:x="177276" fg:w="49"/><text x="100.0479%" y="415.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="99.7979%" y="389" width="0.0276%" height="15" fill="rgb(254,224,29)" fg:x="177276" fg:w="49"/><text x="100.0479%" y="399.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="99.7979%" y="373" width="0.0276%" height="15" fill="rgb(232,14,29)" fg:x="177276" fg:w="49"/><text x="100.0479%" y="383.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.8018%" y="357" width="0.0236%" height="15" fill="rgb(208,45,52)" fg:x="177283" fg:w="42"/><text x="100.0518%" y="367.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="99.8069%" y="341" width="0.0186%" height="15" fill="rgb(234,191,28)" fg:x="177292" fg:w="33"/><text x="100.0569%" y="351.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="99.8137%" y="325" width="0.0118%" height="15" fill="rgb(244,67,43)" fg:x="177304" fg:w="21"/><text x="100.0637%" y="335.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (61 samples, 0.03%)</title><rect x="99.8255%" y="581" width="0.0343%" height="15" fill="rgb(236,189,24)" fg:x="177325" fg:w="61"/><text x="100.0755%" y="591.50"></text></g><g><title>syscall (60 samples, 0.03%)</title><rect x="99.8260%" y="565" width="0.0338%" height="15" fill="rgb(239,214,33)" fg:x="177326" fg:w="60"/><text x="100.0760%" y="575.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="99.8260%" y="549" width="0.0338%" height="15" fill="rgb(226,176,41)" fg:x="177326" fg:w="60"/><text x="100.0760%" y="559.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="99.8260%" y="533" width="0.0338%" height="15" fill="rgb(248,47,8)" fg:x="177326" fg:w="60"/><text x="100.0760%" y="543.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="99.8266%" y="517" width="0.0332%" height="15" fill="rgb(218,81,44)" fg:x="177327" fg:w="59"/><text x="100.0766%" y="527.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="99.8266%" y="501" width="0.0332%" height="15" fill="rgb(213,98,6)" fg:x="177327" fg:w="59"/><text x="100.0766%" y="511.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="99.8266%" y="485" width="0.0332%" height="15" fill="rgb(222,85,22)" fg:x="177327" fg:w="59"/><text x="100.0766%" y="495.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="99.8266%" y="469" width="0.0332%" height="15" fill="rgb(239,46,39)" fg:x="177327" fg:w="59"/><text x="100.0766%" y="479.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.8283%" y="453" width="0.0315%" height="15" fill="rgb(237,12,29)" fg:x="177330" fg:w="56"/><text x="100.0783%" y="463.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.8283%" y="437" width="0.0315%" height="15" fill="rgb(214,77,8)" fg:x="177330" fg:w="56"/><text x="100.0783%" y="447.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="99.8289%" y="421" width="0.0310%" height="15" fill="rgb(217,168,37)" fg:x="177331" fg:w="55"/><text x="100.0789%" y="431.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="99.8294%" y="405" width="0.0304%" height="15" fill="rgb(221,217,23)" fg:x="177332" fg:w="54"/><text x="100.0794%" y="415.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.8356%" y="389" width="0.0242%" height="15" fill="rgb(243,229,36)" fg:x="177343" fg:w="43"/><text x="100.0856%" y="399.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.8401%" y="373" width="0.0197%" height="15" fill="rgb(251,163,40)" fg:x="177351" fg:w="35"/><text x="100.0901%" y="383.50"></text></g><g><title>[libc.so.6] (290 samples, 0.16%)</title><rect x="99.6977%" y="709" width="0.1633%" height="15" fill="rgb(237,222,12)" fg:x="177098" fg:w="290"/><text x="99.9477%" y="719.50"></text></g><g><title>[libc.so.6] (290 samples, 0.16%)</title><rect x="99.6977%" y="693" width="0.1633%" height="15" fill="rgb(248,132,6)" fg:x="177098" fg:w="290"/><text x="99.9477%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (290 samples, 0.16%)</title><rect x="99.6977%" y="677" width="0.1633%" height="15" fill="rgb(227,167,50)" fg:x="177098" fg:w="290"/><text x="99.9477%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (290 samples, 0.16%)</title><rect x="99.6977%" y="661" width="0.1633%" height="15" fill="rgb(242,84,37)" fg:x="177098" fg:w="290"/><text x="99.9477%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (290 samples, 0.16%)</title><rect x="99.6977%" y="645" width="0.1633%" height="15" fill="rgb(212,4,50)" fg:x="177098" fg:w="290"/><text x="99.9477%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (290 samples, 0.16%)</title><rect x="99.6977%" y="629" width="0.1633%" height="15" fill="rgb(230,228,32)" fg:x="177098" fg:w="290"/><text x="99.9477%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (290 samples, 0.16%)</title><rect x="99.6977%" y="613" width="0.1633%" height="15" fill="rgb(248,217,23)" fg:x="177098" fg:w="290"/><text x="99.9477%" y="623.50"></text></g><g><title>sled::threadpool::perform_work (290 samples, 0.16%)</title><rect x="99.6977%" y="597" width="0.1633%" height="15" fill="rgb(238,197,32)" fg:x="177098" fg:w="290"/><text x="99.9477%" y="607.50"></text></g><g><title>sled-io-5 (293 samples, 0.16%)</title><rect x="99.6971%" y="725" width="0.1649%" height="15" fill="rgb(236,106,1)" fg:x="177097" fg:w="293"/><text x="99.9471%" y="735.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (107 samples, 0.06%)</title><rect x="99.8795%" y="549" width="0.0602%" height="15" fill="rgb(219,228,13)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (107 samples, 0.06%)</title><rect x="99.8795%" y="533" width="0.0602%" height="15" fill="rgb(238,30,35)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::write_at (107 samples, 0.06%)</title><rect x="99.8795%" y="517" width="0.0602%" height="15" fill="rgb(236,70,23)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (107 samples, 0.06%)</title><rect x="99.8795%" y="501" width="0.0602%" height="15" fill="rgb(249,104,48)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="511.50"></text></g><g><title>__libc_pwrite (107 samples, 0.06%)</title><rect x="99.8795%" y="485" width="0.0602%" height="15" fill="rgb(254,117,50)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="495.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="99.8795%" y="469" width="0.0602%" height="15" fill="rgb(223,152,4)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="479.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="99.8795%" y="453" width="0.0602%" height="15" fill="rgb(245,6,2)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="463.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="99.8795%" y="437" width="0.0602%" height="15" fill="rgb(249,150,24)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="447.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="99.8795%" y="421" width="0.0602%" height="15" fill="rgb(228,185,42)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="431.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="99.8795%" y="405" width="0.0602%" height="15" fill="rgb(226,39,33)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="415.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="99.8795%" y="389" width="0.0602%" height="15" fill="rgb(221,166,19)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="399.50"></text></g><g><title>[unknown] (107 samples, 0.06%)</title><rect x="99.8795%" y="373" width="0.0602%" height="15" fill="rgb(209,109,2)" fg:x="177421" fg:w="107"/><text x="100.1295%" y="383.50"></text></g><g><title>[unknown] (103 samples, 0.06%)</title><rect x="99.8818%" y="357" width="0.0580%" height="15" fill="rgb(252,216,26)" fg:x="177425" fg:w="103"/><text x="100.1318%" y="367.50"></text></g><g><title>[unknown] (93 samples, 0.05%)</title><rect x="99.8874%" y="341" width="0.0524%" height="15" fill="rgb(227,173,36)" fg:x="177435" fg:w="93"/><text x="100.1374%" y="351.50"></text></g><g><title>[unknown] (72 samples, 0.04%)</title><rect x="99.8992%" y="325" width="0.0405%" height="15" fill="rgb(209,90,7)" fg:x="177456" fg:w="72"/><text x="100.1492%" y="335.50"></text></g><g><title>[unknown] (64 samples, 0.04%)</title><rect x="99.9037%" y="309" width="0.0360%" height="15" fill="rgb(250,194,11)" fg:x="177464" fg:w="64"/><text x="100.1537%" y="319.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="99.9105%" y="293" width="0.0293%" height="15" fill="rgb(220,72,50)" fg:x="177476" fg:w="52"/><text x="100.1605%" y="303.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="99.9217%" y="277" width="0.0180%" height="15" fill="rgb(222,106,48)" fg:x="177496" fg:w="32"/><text x="100.1717%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (194 samples, 0.11%)</title><rect x="99.8621%" y="581" width="0.1092%" height="15" fill="rgb(216,220,45)" fg:x="177390" fg:w="194"/><text x="100.1121%" y="591.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (192 samples, 0.11%)</title><rect x="99.8632%" y="565" width="0.1081%" height="15" fill="rgb(234,112,18)" fg:x="177392" fg:w="192"/><text x="100.1132%" y="575.50"></text></g><g><title>sync_file_range (56 samples, 0.03%)</title><rect x="99.9398%" y="549" width="0.0315%" height="15" fill="rgb(206,179,9)" fg:x="177528" fg:w="56"/><text x="100.1898%" y="559.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.9398%" y="533" width="0.0315%" height="15" fill="rgb(215,115,40)" fg:x="177528" fg:w="56"/><text x="100.1898%" y="543.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.9398%" y="517" width="0.0315%" height="15" fill="rgb(222,69,34)" fg:x="177528" fg:w="56"/><text x="100.1898%" y="527.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.9398%" y="501" width="0.0315%" height="15" fill="rgb(209,161,10)" fg:x="177528" fg:w="56"/><text x="100.1898%" y="511.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="99.9403%" y="485" width="0.0310%" height="15" fill="rgb(217,6,38)" fg:x="177529" fg:w="55"/><text x="100.1903%" y="495.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="99.9403%" y="469" width="0.0310%" height="15" fill="rgb(229,229,48)" fg:x="177529" fg:w="55"/><text x="100.1903%" y="479.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.9415%" y="453" width="0.0298%" height="15" fill="rgb(225,21,28)" fg:x="177531" fg:w="53"/><text x="100.1915%" y="463.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="99.9420%" y="437" width="0.0293%" height="15" fill="rgb(206,33,13)" fg:x="177532" fg:w="52"/><text x="100.1920%" y="447.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="99.9420%" y="421" width="0.0293%" height="15" fill="rgb(242,178,17)" fg:x="177532" fg:w="52"/><text x="100.1920%" y="431.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="99.9420%" y="405" width="0.0293%" height="15" fill="rgb(220,162,5)" fg:x="177532" fg:w="52"/><text x="100.1920%" y="415.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="99.9420%" y="389" width="0.0293%" height="15" fill="rgb(210,33,43)" fg:x="177532" fg:w="52"/><text x="100.1920%" y="399.50"></text></g><g><title>[unknown] (51 samples, 0.03%)</title><rect x="99.9426%" y="373" width="0.0287%" height="15" fill="rgb(216,116,54)" fg:x="177533" fg:w="51"/><text x="100.1926%" y="383.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.9465%" y="357" width="0.0248%" height="15" fill="rgb(249,92,24)" fg:x="177540" fg:w="44"/><text x="100.1965%" y="367.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="99.9482%" y="341" width="0.0231%" height="15" fill="rgb(231,189,14)" fg:x="177543" fg:w="41"/><text x="100.1982%" y="351.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="99.9561%" y="325" width="0.0152%" height="15" fill="rgb(230,8,41)" fg:x="177557" fg:w="27"/><text x="100.2061%" y="335.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (48 samples, 0.03%)</title><rect x="99.9713%" y="581" width="0.0270%" height="15" fill="rgb(249,7,27)" fg:x="177584" fg:w="48"/><text x="100.2213%" y="591.50"></text></g><g><title>syscall (46 samples, 0.03%)</title><rect x="99.9724%" y="565" width="0.0259%" height="15" fill="rgb(232,86,5)" fg:x="177586" fg:w="46"/><text x="100.2224%" y="575.50"></text></g><g><title>[unknown] (46 samples, 0.03%)</title><rect x="99.9724%" y="549" width="0.0259%" height="15" fill="rgb(224,175,18)" fg:x="177586" fg:w="46"/><text x="100.2224%" y="559.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.9730%" y="533" width="0.0253%" height="15" fill="rgb(220,129,12)" fg:x="177587" fg:w="45"/><text x="100.2230%" y="543.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.9730%" y="517" width="0.0253%" height="15" fill="rgb(210,19,36)" fg:x="177587" fg:w="45"/><text x="100.2230%" y="527.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.9730%" y="501" width="0.0253%" height="15" fill="rgb(219,96,14)" fg:x="177587" fg:w="45"/><text x="100.2230%" y="511.50"></text></g><g><title>[unknown] (45 samples, 0.03%)</title><rect x="99.9730%" y="485" width="0.0253%" height="15" fill="rgb(249,106,1)" fg:x="177587" fg:w="45"/><text x="100.2230%" y="495.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.9735%" y="469" width="0.0248%" height="15" fill="rgb(249,155,20)" fg:x="177588" fg:w="44"/><text x="100.2235%" y="479.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.9764%" y="453" width="0.0220%" height="15" fill="rgb(244,168,9)" fg:x="177593" fg:w="39"/><text x="100.2264%" y="463.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.9764%" y="437" width="0.0220%" height="15" fill="rgb(216,23,50)" fg:x="177593" fg:w="39"/><text x="100.2264%" y="447.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.9764%" y="421" width="0.0220%" height="15" fill="rgb(224,219,20)" fg:x="177593" fg:w="39"/><text x="100.2264%" y="431.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.9775%" y="405" width="0.0208%" height="15" fill="rgb(222,156,15)" fg:x="177595" fg:w="37"/><text x="100.2275%" y="415.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="99.9876%" y="389" width="0.0107%" height="15" fill="rgb(231,97,17)" fg:x="177613" fg:w="19"/><text x="100.2376%" y="399.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="99.9876%" y="373" width="0.0107%" height="15" fill="rgb(218,70,48)" fg:x="177613" fg:w="19"/><text x="100.2376%" y="383.50"></text></g><g><title>[libc.so.6] (243 samples, 0.14%)</title><rect x="99.8621%" y="709" width="0.1368%" height="15" fill="rgb(212,196,52)" fg:x="177390" fg:w="243"/><text x="100.1121%" y="719.50"></text></g><g><title>[libc.so.6] (243 samples, 0.14%)</title><rect x="99.8621%" y="693" width="0.1368%" height="15" fill="rgb(243,203,18)" fg:x="177390" fg:w="243"/><text x="100.1121%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (243 samples, 0.14%)</title><rect x="99.8621%" y="677" width="0.1368%" height="15" fill="rgb(252,125,41)" fg:x="177390" fg:w="243"/><text x="100.1121%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (243 samples, 0.14%)</title><rect x="99.8621%" y="661" width="0.1368%" height="15" fill="rgb(223,180,33)" fg:x="177390" fg:w="243"/><text x="100.1121%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (243 samples, 0.14%)</title><rect x="99.8621%" y="645" width="0.1368%" height="15" fill="rgb(254,159,46)" fg:x="177390" fg:w="243"/><text x="100.1121%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (243 samples, 0.14%)</title><rect x="99.8621%" y="629" width="0.1368%" height="15" fill="rgb(254,38,10)" fg:x="177390" fg:w="243"/><text x="100.1121%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (243 samples, 0.14%)</title><rect x="99.8621%" y="613" width="0.1368%" height="15" fill="rgb(208,217,32)" fg:x="177390" fg:w="243"/><text x="100.1121%" y="623.50"></text></g><g><title>sled::threadpool::perform_work (243 samples, 0.14%)</title><rect x="99.8621%" y="597" width="0.1368%" height="15" fill="rgb(221,120,13)" fg:x="177390" fg:w="243"/><text x="100.1121%" y="607.50"></text></g><g><title>all (177,635 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(246,54,52)" fg:x="0" fg:w="177635"/><text x="0.2500%" y="751.50"></text></g><g><title>sled-io-6 (245 samples, 0.14%)</title><rect x="99.8621%" y="725" width="0.1379%" height="15" fill="rgb(242,34,25)" fg:x="177390" fg:w="245"/><text x="100.1121%" y="735.50"></text></g></svg></svg>