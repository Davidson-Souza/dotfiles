<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1366" onload="init(evt)" viewBox="0 0 1200 1366" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1366" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1349.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1349.00"> </text><svg id="frames" x="10" width="1180" total_samples="216085"><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (51 samples, 0.02%)</title><rect x="0.0259%" y="1029" width="0.0236%" height="15" fill="rgb(227,0,7)" fg:x="56" fg:w="51"/><text x="0.2759%" y="1039.50"></text></g><g><title>async_io::reactor::Reactor::get (59 samples, 0.03%)</title><rect x="0.0227%" y="1045" width="0.0273%" height="15" fill="rgb(217,0,24)" fg:x="49" fg:w="59"/><text x="0.2727%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.01%)</title><rect x="0.0754%" y="1013" width="0.0143%" height="15" fill="rgb(221,193,54)" fg:x="163" fg:w="31"/><text x="0.3254%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (26 samples, 0.01%)</title><rect x="0.0777%" y="997" width="0.0120%" height="15" fill="rgb(248,212,6)" fg:x="168" fg:w="26"/><text x="0.3277%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (25 samples, 0.01%)</title><rect x="0.0782%" y="981" width="0.0116%" height="15" fill="rgb(208,68,35)" fg:x="169" fg:w="25"/><text x="0.3282%" y="991.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (68 samples, 0.03%)</title><rect x="0.0949%" y="997" width="0.0315%" height="15" fill="rgb(232,128,0)" fg:x="205" fg:w="68"/><text x="0.3449%" y="1007.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (47 samples, 0.02%)</title><rect x="0.1046%" y="981" width="0.0218%" height="15" fill="rgb(207,160,47)" fg:x="226" fg:w="47"/><text x="0.3546%" y="991.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (47 samples, 0.02%)</title><rect x="0.1046%" y="965" width="0.0218%" height="15" fill="rgb(228,23,34)" fg:x="226" fg:w="47"/><text x="0.3546%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (47 samples, 0.02%)</title><rect x="0.1046%" y="949" width="0.0218%" height="15" fill="rgb(218,30,26)" fg:x="226" fg:w="47"/><text x="0.3546%" y="959.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (47 samples, 0.02%)</title><rect x="0.1046%" y="933" width="0.0218%" height="15" fill="rgb(220,122,19)" fg:x="226" fg:w="47"/><text x="0.3546%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (47 samples, 0.02%)</title><rect x="0.1046%" y="917" width="0.0218%" height="15" fill="rgb(250,228,42)" fg:x="226" fg:w="47"/><text x="0.3546%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (47 samples, 0.02%)</title><rect x="0.1046%" y="901" width="0.0218%" height="15" fill="rgb(240,193,28)" fg:x="226" fg:w="47"/><text x="0.3546%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.02%)</title><rect x="0.1046%" y="885" width="0.0218%" height="15" fill="rgb(216,20,37)" fg:x="226" fg:w="47"/><text x="0.3546%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.02%)</title><rect x="0.1046%" y="869" width="0.0218%" height="15" fill="rgb(206,188,39)" fg:x="226" fg:w="47"/><text x="0.3546%" y="879.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.02%)</title><rect x="0.1046%" y="853" width="0.0218%" height="15" fill="rgb(217,207,13)" fg:x="226" fg:w="47"/><text x="0.3546%" y="863.50"></text></g><g><title>malloc (35 samples, 0.02%)</title><rect x="0.1101%" y="837" width="0.0162%" height="15" fill="rgb(231,73,38)" fg:x="238" fg:w="35"/><text x="0.3601%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::split_off (77 samples, 0.04%)</title><rect x="0.0912%" y="1013" width="0.0356%" height="15" fill="rgb(225,20,46)" fg:x="197" fg:w="77"/><text x="0.3412%" y="1023.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (65 samples, 0.03%)</title><rect x="0.1268%" y="1013" width="0.0301%" height="15" fill="rgb(210,31,41)" fg:x="274" fg:w="65"/><text x="0.3768%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (27 samples, 0.01%)</title><rect x="0.1647%" y="1013" width="0.0125%" height="15" fill="rgb(221,200,47)" fg:x="356" fg:w="27"/><text x="0.4147%" y="1023.50"></text></g><g><title>clock_gettime (23 samples, 0.01%)</title><rect x="0.1666%" y="997" width="0.0106%" height="15" fill="rgb(226,26,5)" fg:x="360" fg:w="23"/><text x="0.4166%" y="1007.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (235 samples, 0.11%)</title><rect x="0.0703%" y="1029" width="0.1088%" height="15" fill="rgb(249,33,26)" fg:x="152" fg:w="235"/><text x="0.3203%" y="1039.50"></text></g><g><title>epoll_wait (680 samples, 0.31%)</title><rect x="0.2027%" y="997" width="0.3147%" height="15" fill="rgb(235,183,28)" fg:x="438" fg:w="680"/><text x="0.4527%" y="1007.50"></text></g><g><title>[unknown] (649 samples, 0.30%)</title><rect x="0.2170%" y="981" width="0.3003%" height="15" fill="rgb(221,5,38)" fg:x="469" fg:w="649"/><text x="0.4670%" y="991.50"></text></g><g><title>[unknown] (617 samples, 0.29%)</title><rect x="0.2319%" y="965" width="0.2855%" height="15" fill="rgb(247,18,42)" fg:x="501" fg:w="617"/><text x="0.4819%" y="975.50"></text></g><g><title>[unknown] (595 samples, 0.28%)</title><rect x="0.2420%" y="949" width="0.2754%" height="15" fill="rgb(241,131,45)" fg:x="523" fg:w="595"/><text x="0.4920%" y="959.50"></text></g><g><title>[unknown] (579 samples, 0.27%)</title><rect x="0.2494%" y="933" width="0.2680%" height="15" fill="rgb(249,31,29)" fg:x="539" fg:w="579"/><text x="0.4994%" y="943.50"></text></g><g><title>[unknown] (531 samples, 0.25%)</title><rect x="0.2717%" y="917" width="0.2457%" height="15" fill="rgb(225,111,53)" fg:x="587" fg:w="531"/><text x="0.5217%" y="927.50"></text></g><g><title>[unknown] (434 samples, 0.20%)</title><rect x="0.3165%" y="901" width="0.2008%" height="15" fill="rgb(238,160,17)" fg:x="684" fg:w="434"/><text x="0.5665%" y="911.50"></text></g><g><title>[unknown] (383 samples, 0.18%)</title><rect x="0.3401%" y="885" width="0.1772%" height="15" fill="rgb(214,148,48)" fg:x="735" fg:w="383"/><text x="0.5901%" y="895.50"></text></g><g><title>[unknown] (354 samples, 0.16%)</title><rect x="0.3536%" y="869" width="0.1638%" height="15" fill="rgb(232,36,49)" fg:x="764" fg:w="354"/><text x="0.6036%" y="879.50"></text></g><g><title>[unknown] (295 samples, 0.14%)</title><rect x="0.3809%" y="853" width="0.1365%" height="15" fill="rgb(209,103,24)" fg:x="823" fg:w="295"/><text x="0.6309%" y="863.50"></text></g><g><title>[unknown] (197 samples, 0.09%)</title><rect x="0.4262%" y="837" width="0.0912%" height="15" fill="rgb(229,88,8)" fg:x="921" fg:w="197"/><text x="0.6762%" y="847.50"></text></g><g><title>[unknown] (129 samples, 0.06%)</title><rect x="0.4577%" y="821" width="0.0597%" height="15" fill="rgb(213,181,19)" fg:x="989" fg:w="129"/><text x="0.7077%" y="831.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="0.4831%" y="805" width="0.0342%" height="15" fill="rgb(254,191,54)" fg:x="1044" fg:w="74"/><text x="0.7331%" y="815.50"></text></g><g><title>polling::epoll::Poller::modify (296 samples, 0.14%)</title><rect x="0.5188%" y="997" width="0.1370%" height="15" fill="rgb(241,83,37)" fg:x="1121" fg:w="296"/><text x="0.7688%" y="1007.50"></text></g><g><title>polling::epoll::Poller::ctl (280 samples, 0.13%)</title><rect x="0.5262%" y="981" width="0.1296%" height="15" fill="rgb(233,36,39)" fg:x="1137" fg:w="280"/><text x="0.7762%" y="991.50"></text></g><g><title>epoll_ctl (262 samples, 0.12%)</title><rect x="0.5345%" y="965" width="0.1212%" height="15" fill="rgb(226,3,54)" fg:x="1155" fg:w="262"/><text x="0.7845%" y="975.50"></text></g><g><title>[unknown] (248 samples, 0.11%)</title><rect x="0.5410%" y="949" width="0.1148%" height="15" fill="rgb(245,192,40)" fg:x="1169" fg:w="248"/><text x="0.7910%" y="959.50"></text></g><g><title>[unknown] (216 samples, 0.10%)</title><rect x="0.5558%" y="933" width="0.1000%" height="15" fill="rgb(238,167,29)" fg:x="1201" fg:w="216"/><text x="0.8058%" y="943.50"></text></g><g><title>[unknown] (177 samples, 0.08%)</title><rect x="0.5738%" y="917" width="0.0819%" height="15" fill="rgb(232,182,51)" fg:x="1240" fg:w="177"/><text x="0.8238%" y="927.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="0.5859%" y="901" width="0.0699%" height="15" fill="rgb(231,60,39)" fg:x="1266" fg:w="151"/><text x="0.8359%" y="911.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="0.6201%" y="885" width="0.0356%" height="15" fill="rgb(208,69,12)" fg:x="1340" fg:w="77"/><text x="0.8701%" y="895.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="0.6456%" y="869" width="0.0102%" height="15" fill="rgb(235,93,37)" fg:x="1395" fg:w="22"/><text x="0.8956%" y="879.50"></text></g><g><title>read (228 samples, 0.11%)</title><rect x="0.6558%" y="997" width="0.1055%" height="15" fill="rgb(213,116,39)" fg:x="1417" fg:w="228"/><text x="0.9058%" y="1007.50"></text></g><g><title>[unknown] (206 samples, 0.10%)</title><rect x="0.6659%" y="981" width="0.0953%" height="15" fill="rgb(222,207,29)" fg:x="1439" fg:w="206"/><text x="0.9159%" y="991.50"></text></g><g><title>[unknown] (170 samples, 0.08%)</title><rect x="0.6826%" y="965" width="0.0787%" height="15" fill="rgb(206,96,30)" fg:x="1475" fg:w="170"/><text x="0.9326%" y="975.50"></text></g><g><title>[unknown] (147 samples, 0.07%)</title><rect x="0.6932%" y="949" width="0.0680%" height="15" fill="rgb(218,138,4)" fg:x="1498" fg:w="147"/><text x="0.9432%" y="959.50"></text></g><g><title>[unknown] (133 samples, 0.06%)</title><rect x="0.6997%" y="933" width="0.0615%" height="15" fill="rgb(250,191,14)" fg:x="1512" fg:w="133"/><text x="0.9497%" y="943.50"></text></g><g><title>[unknown] (111 samples, 0.05%)</title><rect x="0.7099%" y="917" width="0.0514%" height="15" fill="rgb(239,60,40)" fg:x="1534" fg:w="111"/><text x="0.9599%" y="927.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="0.7367%" y="901" width="0.0245%" height="15" fill="rgb(206,27,48)" fg:x="1592" fg:w="53"/><text x="0.9867%" y="911.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="0.7488%" y="885" width="0.0125%" height="15" fill="rgb(225,35,8)" fg:x="1618" fg:w="27"/><text x="0.9988%" y="895.50"></text></g><g><title>polling::epoll::Poller::wait (1,529 samples, 0.71%)</title><rect x="0.1925%" y="1013" width="0.7076%" height="15" fill="rgb(250,213,24)" fg:x="416" fg:w="1529"/><text x="0.4425%" y="1023.50"></text></g><g><title>timerfd_settime (296 samples, 0.14%)</title><rect x="0.7631%" y="997" width="0.1370%" height="15" fill="rgb(247,123,22)" fg:x="1649" fg:w="296"/><text x="1.0131%" y="1007.50"></text></g><g><title>[unknown] (287 samples, 0.13%)</title><rect x="0.7673%" y="981" width="0.1328%" height="15" fill="rgb(231,138,38)" fg:x="1658" fg:w="287"/><text x="1.0173%" y="991.50"></text></g><g><title>[unknown] (261 samples, 0.12%)</title><rect x="0.7793%" y="965" width="0.1208%" height="15" fill="rgb(231,145,46)" fg:x="1684" fg:w="261"/><text x="1.0293%" y="975.50"></text></g><g><title>[unknown] (235 samples, 0.11%)</title><rect x="0.7914%" y="949" width="0.1088%" height="15" fill="rgb(251,118,11)" fg:x="1710" fg:w="235"/><text x="1.0414%" y="959.50"></text></g><g><title>[unknown] (216 samples, 0.10%)</title><rect x="0.8001%" y="933" width="0.1000%" height="15" fill="rgb(217,147,25)" fg:x="1729" fg:w="216"/><text x="1.0501%" y="943.50"></text></g><g><title>[unknown] (183 samples, 0.08%)</title><rect x="0.8154%" y="917" width="0.0847%" height="15" fill="rgb(247,81,37)" fg:x="1762" fg:w="183"/><text x="1.0654%" y="927.50"></text></g><g><title>[unknown] (100 samples, 0.05%)</title><rect x="0.8538%" y="901" width="0.0463%" height="15" fill="rgb(209,12,38)" fg:x="1845" fg:w="100"/><text x="1.1038%" y="911.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="0.8728%" y="885" width="0.0273%" height="15" fill="rgb(227,1,9)" fg:x="1886" fg:w="59"/><text x="1.1228%" y="895.50"></text></g><g><title>polling::Poller::wait (1,549 samples, 0.72%)</title><rect x="0.1842%" y="1029" width="0.7168%" height="15" fill="rgb(248,47,43)" fg:x="398" fg:w="1549"/><text x="0.4342%" y="1039.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (60 samples, 0.03%)</title><rect x="0.9094%" y="901" width="0.0278%" height="15" fill="rgb(221,10,30)" fg:x="1965" fg:w="60"/><text x="1.1594%" y="911.50"></text></g><g><title>parking::Unparker::unpark (59 samples, 0.03%)</title><rect x="0.9098%" y="885" width="0.0273%" height="15" fill="rgb(210,229,1)" fg:x="1966" fg:w="59"/><text x="1.1598%" y="895.50"></text></g><g><title>parking::Inner::unpark (56 samples, 0.03%)</title><rect x="0.9112%" y="869" width="0.0259%" height="15" fill="rgb(222,148,37)" fg:x="1969" fg:w="56"/><text x="1.1612%" y="879.50"></text></g><g><title>syscall (54 samples, 0.02%)</title><rect x="0.9121%" y="853" width="0.0250%" height="15" fill="rgb(234,67,33)" fg:x="1971" fg:w="54"/><text x="1.1621%" y="863.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="0.9121%" y="837" width="0.0250%" height="15" fill="rgb(247,98,35)" fg:x="1971" fg:w="54"/><text x="1.1621%" y="847.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="0.9149%" y="821" width="0.0222%" height="15" fill="rgb(247,138,52)" fg:x="1977" fg:w="48"/><text x="1.1649%" y="831.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="0.9163%" y="805" width="0.0208%" height="15" fill="rgb(213,79,30)" fg:x="1980" fg:w="45"/><text x="1.1663%" y="815.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="0.9172%" y="789" width="0.0199%" height="15" fill="rgb(246,177,23)" fg:x="1982" fg:w="43"/><text x="1.1672%" y="799.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="0.9177%" y="773" width="0.0194%" height="15" fill="rgb(230,62,27)" fg:x="1983" fg:w="42"/><text x="1.1677%" y="783.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="0.9191%" y="757" width="0.0180%" height="15" fill="rgb(216,154,8)" fg:x="1986" fg:w="39"/><text x="1.1691%" y="767.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="0.9237%" y="741" width="0.0134%" height="15" fill="rgb(244,35,45)" fg:x="1996" fg:w="29"/><text x="1.1737%" y="751.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="0.9256%" y="725" width="0.0116%" height="15" fill="rgb(251,115,12)" fg:x="2000" fg:w="25"/><text x="1.1756%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (78 samples, 0.04%)</title><rect x="0.9020%" y="949" width="0.0361%" height="15" fill="rgb(240,54,50)" fg:x="1949" fg:w="78"/><text x="1.1520%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (76 samples, 0.04%)</title><rect x="0.9029%" y="933" width="0.0352%" height="15" fill="rgb(233,84,52)" fg:x="1951" fg:w="76"/><text x="1.1529%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (62 samples, 0.03%)</title><rect x="0.9094%" y="917" width="0.0287%" height="15" fill="rgb(207,117,47)" fg:x="1965" fg:w="62"/><text x="1.1594%" y="927.50"></text></g><g><title>std::panic::catch_unwind (86 samples, 0.04%)</title><rect x="0.9020%" y="1029" width="0.0398%" height="15" fill="rgb(249,43,39)" fg:x="1949" fg:w="86"/><text x="1.1520%" y="1039.50"></text></g><g><title>std::panicking::try (86 samples, 0.04%)</title><rect x="0.9020%" y="1013" width="0.0398%" height="15" fill="rgb(209,38,44)" fg:x="1949" fg:w="86"/><text x="1.1520%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (86 samples, 0.04%)</title><rect x="0.9020%" y="997" width="0.0398%" height="15" fill="rgb(236,212,23)" fg:x="1949" fg:w="86"/><text x="1.1520%" y="1007.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (86 samples, 0.04%)</title><rect x="0.9020%" y="981" width="0.0398%" height="15" fill="rgb(242,79,21)" fg:x="1949" fg:w="86"/><text x="1.1520%" y="991.50"></text></g><g><title>core::task::wake::Waker::wake (86 samples, 0.04%)</title><rect x="0.9020%" y="965" width="0.0398%" height="15" fill="rgb(211,96,35)" fg:x="1949" fg:w="86"/><text x="1.1520%" y="975.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,913 samples, 0.89%)</title><rect x="0.0588%" y="1045" width="0.8853%" height="15" fill="rgb(253,215,40)" fg:x="127" fg:w="1913"/><text x="0.3088%" y="1055.50"></text></g><g><title>core::time::Duration::from_micros (38 samples, 0.02%)</title><rect x="0.9510%" y="1045" width="0.0176%" height="15" fill="rgb(211,81,21)" fg:x="2055" fg:w="38"/><text x="1.2010%" y="1055.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (69 samples, 0.03%)</title><rect x="1.0186%" y="965" width="0.0319%" height="15" fill="rgb(208,190,38)" fg:x="2201" fg:w="69"/><text x="1.2686%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (26 samples, 0.01%)</title><rect x="1.0385%" y="949" width="0.0120%" height="15" fill="rgb(235,213,38)" fg:x="2244" fg:w="26"/><text x="1.2885%" y="959.50"></text></g><g><title>std::sys::unix::os::errno (26 samples, 0.01%)</title><rect x="1.0385%" y="933" width="0.0120%" height="15" fill="rgb(237,122,38)" fg:x="2244" fg:w="26"/><text x="1.2885%" y="943.50"></text></g><g><title>__errno_location (26 samples, 0.01%)</title><rect x="1.0385%" y="917" width="0.0120%" height="15" fill="rgb(244,218,35)" fg:x="2244" fg:w="26"/><text x="1.2885%" y="927.50"></text></g><g><title>clock_gettime (78 samples, 0.04%)</title><rect x="1.0575%" y="917" width="0.0361%" height="15" fill="rgb(240,68,47)" fg:x="2285" fg:w="78"/><text x="1.3075%" y="927.50"></text></g><g><title>__vdso_clock_gettime (44 samples, 0.02%)</title><rect x="1.0732%" y="901" width="0.0204%" height="15" fill="rgb(210,16,53)" fg:x="2319" fg:w="44"/><text x="1.3232%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (94 samples, 0.04%)</title><rect x="1.0505%" y="965" width="0.0435%" height="15" fill="rgb(235,124,12)" fg:x="2270" fg:w="94"/><text x="1.3005%" y="975.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (92 samples, 0.04%)</title><rect x="1.0514%" y="949" width="0.0426%" height="15" fill="rgb(224,169,11)" fg:x="2272" fg:w="92"/><text x="1.3014%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (85 samples, 0.04%)</title><rect x="1.0547%" y="933" width="0.0393%" height="15" fill="rgb(250,166,2)" fg:x="2279" fg:w="85"/><text x="1.3047%" y="943.50"></text></g><g><title>std::sys::unix::futex::futex_wait (4,856 samples, 2.25%)</title><rect x="1.0079%" y="981" width="2.2473%" height="15" fill="rgb(242,216,29)" fg:x="2178" fg:w="4856"/><text x="1.2579%" y="991.50">s..</text></g><g><title>syscall (4,666 samples, 2.16%)</title><rect x="1.0959%" y="965" width="2.1593%" height="15" fill="rgb(230,116,27)" fg:x="2368" fg:w="4666"/><text x="1.3459%" y="975.50">s..</text></g><g><title>[unknown] (4,602 samples, 2.13%)</title><rect x="1.1255%" y="949" width="2.1297%" height="15" fill="rgb(228,99,48)" fg:x="2432" fg:w="4602"/><text x="1.3755%" y="959.50">[..</text></g><g><title>[unknown] (4,444 samples, 2.06%)</title><rect x="1.1986%" y="933" width="2.0566%" height="15" fill="rgb(253,11,6)" fg:x="2590" fg:w="4444"/><text x="1.4486%" y="943.50">[..</text></g><g><title>[unknown] (4,308 samples, 1.99%)</title><rect x="1.2615%" y="917" width="1.9937%" height="15" fill="rgb(247,143,39)" fg:x="2726" fg:w="4308"/><text x="1.5115%" y="927.50">[..</text></g><g><title>[unknown] (4,215 samples, 1.95%)</title><rect x="1.3046%" y="901" width="1.9506%" height="15" fill="rgb(236,97,10)" fg:x="2819" fg:w="4215"/><text x="1.5546%" y="911.50">[..</text></g><g><title>[unknown] (4,129 samples, 1.91%)</title><rect x="1.3444%" y="885" width="1.9108%" height="15" fill="rgb(233,208,19)" fg:x="2905" fg:w="4129"/><text x="1.5944%" y="895.50">[..</text></g><g><title>[unknown] (3,892 samples, 1.80%)</title><rect x="1.4541%" y="869" width="1.8011%" height="15" fill="rgb(216,164,2)" fg:x="3142" fg:w="3892"/><text x="1.7041%" y="879.50">[..</text></g><g><title>[unknown] (3,600 samples, 1.67%)</title><rect x="1.5892%" y="853" width="1.6660%" height="15" fill="rgb(220,129,5)" fg:x="3434" fg:w="3600"/><text x="1.8392%" y="863.50"></text></g><g><title>[unknown] (3,344 samples, 1.55%)</title><rect x="1.7077%" y="837" width="1.5475%" height="15" fill="rgb(242,17,10)" fg:x="3690" fg:w="3344"/><text x="1.9577%" y="847.50"></text></g><g><title>[unknown] (2,884 samples, 1.33%)</title><rect x="1.9205%" y="821" width="1.3347%" height="15" fill="rgb(242,107,0)" fg:x="4150" fg:w="2884"/><text x="2.1705%" y="831.50"></text></g><g><title>[unknown] (2,314 samples, 1.07%)</title><rect x="2.1843%" y="805" width="1.0709%" height="15" fill="rgb(251,28,31)" fg:x="4720" fg:w="2314"/><text x="2.4343%" y="815.50"></text></g><g><title>[unknown] (1,516 samples, 0.70%)</title><rect x="2.5536%" y="789" width="0.7016%" height="15" fill="rgb(233,223,10)" fg:x="5518" fg:w="1516"/><text x="2.8036%" y="799.50"></text></g><g><title>[unknown] (982 samples, 0.45%)</title><rect x="2.8007%" y="773" width="0.4545%" height="15" fill="rgb(215,21,27)" fg:x="6052" fg:w="982"/><text x="3.0507%" y="783.50"></text></g><g><title>[unknown] (635 samples, 0.29%)</title><rect x="2.9613%" y="757" width="0.2939%" height="15" fill="rgb(232,23,21)" fg:x="6399" fg:w="635"/><text x="3.2113%" y="767.50"></text></g><g><title>[unknown] (217 samples, 0.10%)</title><rect x="3.1548%" y="741" width="0.1004%" height="15" fill="rgb(244,5,23)" fg:x="6817" fg:w="217"/><text x="3.4048%" y="751.50"></text></g><g><title>[unknown] (171 samples, 0.08%)</title><rect x="3.1761%" y="725" width="0.0791%" height="15" fill="rgb(226,81,46)" fg:x="6863" fg:w="171"/><text x="3.4261%" y="735.50"></text></g><g><title>[unknown] (150 samples, 0.07%)</title><rect x="3.1858%" y="709" width="0.0694%" height="15" fill="rgb(247,70,30)" fg:x="6884" fg:w="150"/><text x="3.4358%" y="719.50"></text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="3.1946%" y="693" width="0.0606%" height="15" fill="rgb(212,68,19)" fg:x="6903" fg:w="131"/><text x="3.4446%" y="703.50"></text></g><g><title>[unknown] (119 samples, 0.06%)</title><rect x="3.2001%" y="677" width="0.0551%" height="15" fill="rgb(240,187,13)" fg:x="6915" fg:w="119"/><text x="3.4501%" y="687.50"></text></g><g><title>[unknown] (92 samples, 0.04%)</title><rect x="3.2126%" y="661" width="0.0426%" height="15" fill="rgb(223,113,26)" fg:x="6942" fg:w="92"/><text x="3.4626%" y="671.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="3.2214%" y="645" width="0.0338%" height="15" fill="rgb(206,192,2)" fg:x="6961" fg:w="73"/><text x="3.4714%" y="655.50"></text></g><g><title>[unknown] (67 samples, 0.03%)</title><rect x="3.2242%" y="629" width="0.0310%" height="15" fill="rgb(241,108,4)" fg:x="6967" fg:w="67"/><text x="3.4742%" y="639.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="3.2274%" y="613" width="0.0278%" height="15" fill="rgb(247,173,49)" fg:x="6974" fg:w="60"/><text x="3.4774%" y="623.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="3.2325%" y="597" width="0.0227%" height="15" fill="rgb(224,114,35)" fg:x="6985" fg:w="49"/><text x="3.4825%" y="607.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="3.2381%" y="581" width="0.0171%" height="15" fill="rgb(245,159,27)" fg:x="6997" fg:w="37"/><text x="3.4881%" y="591.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="3.2450%" y="565" width="0.0102%" height="15" fill="rgb(245,172,44)" fg:x="7012" fg:w="22"/><text x="3.4950%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (41 samples, 0.02%)</title><rect x="3.2552%" y="981" width="0.0190%" height="15" fill="rgb(236,23,11)" fg:x="7034" fg:w="41"/><text x="3.5052%" y="991.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (4,942 samples, 2.29%)</title><rect x="0.9899%" y="1029" width="2.2871%" height="15" fill="rgb(205,117,38)" fg:x="2139" fg:w="4942"/><text x="1.2399%" y="1039.50">s..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_timeout (4,937 samples, 2.28%)</title><rect x="0.9922%" y="1013" width="2.2847%" height="15" fill="rgb(237,72,25)" fg:x="2144" fg:w="4937"/><text x="1.2422%" y="1023.50">s..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (4,923 samples, 2.28%)</title><rect x="0.9987%" y="997" width="2.2783%" height="15" fill="rgb(244,70,9)" fg:x="2158" fg:w="4923"/><text x="1.2487%" y="1007.50">s..</text></g><g><title>parking::Inner::park (4,995 samples, 2.31%)</title><rect x="0.9686%" y="1045" width="2.3116%" height="15" fill="rgb(217,125,39)" fg:x="2093" fg:w="4995"/><text x="1.2186%" y="1055.50">p..</text></g><g><title>[libc.so.6] (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1285" width="3.2811%" height="15" fill="rgb(235,36,10)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1295.50">[li..</text></g><g><title>[libc.so.6] (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1269" width="3.2811%" height="15" fill="rgb(251,123,47)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1279.50">[li..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1253" width="3.2811%" height="15" fill="rgb(221,13,13)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1263.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1237" width="3.2811%" height="15" fill="rgb(238,131,9)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1247.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1221" width="3.2811%" height="15" fill="rgb(211,50,8)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1231.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1205" width="3.2811%" height="15" fill="rgb(245,182,24)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1215.50">cor..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1189" width="3.2811%" height="15" fill="rgb(242,14,37)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1199.50">std..</text></g><g><title>std::panic::catch_unwind (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1173" width="3.2811%" height="15" fill="rgb(246,228,12)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1183.50">std..</text></g><g><title>std::panicking::try (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1157" width="3.2811%" height="15" fill="rgb(213,55,15)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1167.50">std..</text></g><g><title>std::panicking::try::do_call (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1141" width="3.2811%" height="15" fill="rgb(209,9,3)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1151.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1125" width="3.2811%" height="15" fill="rgb(230,59,30)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1135.50">&lt;co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1109" width="3.2811%" height="15" fill="rgb(209,121,21)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1119.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1093" width="3.2811%" height="15" fill="rgb(220,109,13)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1103.50">std..</text></g><g><title>async_io::driver::unparker::{{closure}}::{{closure}} (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1077" width="3.2811%" height="15" fill="rgb(232,18,1)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1087.50">asy..</text></g><g><title>async_io::driver::main_loop (7,090 samples, 3.28%)</title><rect x="0.0000%" y="1061" width="3.2811%" height="15" fill="rgb(215,41,42)" fg:x="0" fg:w="7090"/><text x="0.2500%" y="1071.50">asy..</text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="3.2811%" y="1285" width="0.0606%" height="15" fill="rgb(224,123,36)" fg:x="7090" fg:w="131"/><text x="3.5311%" y="1295.50"></text></g><g><title>syscall (22 samples, 0.01%)</title><rect x="3.3316%" y="1269" width="0.0102%" height="15" fill="rgb(240,125,3)" fg:x="7199" fg:w="22"/><text x="3.5816%" y="1279.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="3.3316%" y="1253" width="0.0102%" height="15" fill="rgb(205,98,50)" fg:x="7199" fg:w="22"/><text x="3.5816%" y="1263.50"></text></g><g><title>async-io (7,231 samples, 3.35%)</title><rect x="0.0000%" y="1301" width="3.3464%" height="15" fill="rgb(205,185,37)" fg:x="0" fg:w="7231"/><text x="0.2500%" y="1311.50">asy..</text></g><g><title>[anon] (55 samples, 0.03%)</title><rect x="3.3542%" y="1285" width="0.0255%" height="15" fill="rgb(238,207,15)" fg:x="7248" fg:w="55"/><text x="3.6042%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (25 samples, 0.01%)</title><rect x="3.5130%" y="741" width="0.0116%" height="15" fill="rgb(213,199,42)" fg:x="7591" fg:w="25"/><text x="3.7630%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91 samples, 0.04%)</title><rect x="3.5273%" y="693" width="0.0421%" height="15" fill="rgb(235,201,11)" fg:x="7622" fg:w="91"/><text x="3.7773%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (84 samples, 0.04%)</title><rect x="3.5306%" y="677" width="0.0389%" height="15" fill="rgb(207,46,11)" fg:x="7629" fg:w="84"/><text x="3.7806%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (42 samples, 0.02%)</title><rect x="3.5500%" y="661" width="0.0194%" height="15" fill="rgb(241,35,35)" fg:x="7671" fg:w="42"/><text x="3.8000%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 samples, 0.05%)</title><rect x="3.5245%" y="741" width="0.0454%" height="15" fill="rgb(243,32,47)" fg:x="7616" fg:w="98"/><text x="3.7745%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (98 samples, 0.05%)</title><rect x="3.5245%" y="725" width="0.0454%" height="15" fill="rgb(247,202,23)" fg:x="7616" fg:w="98"/><text x="3.7745%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (98 samples, 0.05%)</title><rect x="3.5245%" y="709" width="0.0454%" height="15" fill="rgb(219,102,11)" fg:x="7616" fg:w="98"/><text x="3.7745%" y="719.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (276 samples, 0.13%)</title><rect x="3.7434%" y="709" width="0.1277%" height="15" fill="rgb(243,110,44)" fg:x="8089" fg:w="276"/><text x="3.9934%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (225 samples, 0.10%)</title><rect x="3.7670%" y="693" width="0.1041%" height="15" fill="rgb(222,74,54)" fg:x="8140" fg:w="225"/><text x="4.0170%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (225 samples, 0.10%)</title><rect x="3.7670%" y="677" width="0.1041%" height="15" fill="rgb(216,99,12)" fg:x="8140" fg:w="225"/><text x="4.0170%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (600 samples, 0.28%)</title><rect x="3.5986%" y="725" width="0.2777%" height="15" fill="rgb(226,22,26)" fg:x="7776" fg:w="600"/><text x="3.8486%" y="735.50"></text></g><g><title>async_executor::steal (665 samples, 0.31%)</title><rect x="3.5713%" y="741" width="0.3077%" height="15" fill="rgb(217,163,10)" fg:x="7717" fg:w="665"/><text x="3.8213%" y="751.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (421 samples, 0.19%)</title><rect x="3.9161%" y="725" width="0.1948%" height="15" fill="rgb(213,25,53)" fg:x="8462" fg:w="421"/><text x="4.1661%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (246 samples, 0.11%)</title><rect x="3.9970%" y="709" width="0.1138%" height="15" fill="rgb(252,105,26)" fg:x="8637" fg:w="246"/><text x="4.2470%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (246 samples, 0.11%)</title><rect x="3.9970%" y="693" width="0.1138%" height="15" fill="rgb(220,39,43)" fg:x="8637" fg:w="246"/><text x="4.2470%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (650 samples, 0.30%)</title><rect x="3.8790%" y="741" width="0.3008%" height="15" fill="rgb(229,68,48)" fg:x="8382" fg:w="650"/><text x="4.1290%" y="751.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (149 samples, 0.07%)</title><rect x="4.1109%" y="725" width="0.0690%" height="15" fill="rgb(252,8,32)" fg:x="8883" fg:w="149"/><text x="4.3609%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (42 samples, 0.02%)</title><rect x="4.1604%" y="709" width="0.0194%" height="15" fill="rgb(223,20,43)" fg:x="8990" fg:w="42"/><text x="4.4104%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (42 samples, 0.02%)</title><rect x="4.1604%" y="693" width="0.0194%" height="15" fill="rgb(229,81,49)" fg:x="8990" fg:w="42"/><text x="4.4104%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (29 samples, 0.01%)</title><rect x="4.1798%" y="741" width="0.0134%" height="15" fill="rgb(236,28,36)" fg:x="9032" fg:w="29"/><text x="4.4298%" y="751.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="4.1798%" y="725" width="0.0134%" height="15" fill="rgb(249,185,26)" fg:x="9032" fg:w="29"/><text x="4.4298%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (29 samples, 0.01%)</title><rect x="4.1798%" y="709" width="0.0134%" height="15" fill="rgb(249,174,33)" fg:x="9032" fg:w="29"/><text x="4.4298%" y="719.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,546 samples, 0.72%)</title><rect x="3.4986%" y="757" width="0.7155%" height="15" fill="rgb(233,201,37)" fg:x="7560" fg:w="1546"/><text x="3.7486%" y="767.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (28 samples, 0.01%)</title><rect x="4.2011%" y="741" width="0.0130%" height="15" fill="rgb(221,78,26)" fg:x="9078" fg:w="28"/><text x="4.4511%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (28 samples, 0.01%)</title><rect x="4.2011%" y="725" width="0.0130%" height="15" fill="rgb(250,127,30)" fg:x="9078" fg:w="28"/><text x="4.4511%" y="735.50"></text></g><g><title>async_executor::State::notify (43 samples, 0.02%)</title><rect x="4.2141%" y="757" width="0.0199%" height="15" fill="rgb(230,49,44)" fg:x="9106" fg:w="43"/><text x="4.4641%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (36 samples, 0.02%)</title><rect x="4.2497%" y="725" width="0.0167%" height="15" fill="rgb(229,67,23)" fg:x="9183" fg:w="36"/><text x="4.4997%" y="735.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (27 samples, 0.01%)</title><rect x="4.2539%" y="709" width="0.0125%" height="15" fill="rgb(249,83,47)" fg:x="9192" fg:w="27"/><text x="4.5039%" y="719.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.01%)</title><rect x="4.2539%" y="693" width="0.0125%" height="15" fill="rgb(215,43,3)" fg:x="9192" fg:w="27"/><text x="4.5039%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.01%)</title><rect x="4.2539%" y="677" width="0.0125%" height="15" fill="rgb(238,154,13)" fg:x="9192" fg:w="27"/><text x="4.5039%" y="687.50"></text></g><g><title>async_executor::Sleepers::insert (46 samples, 0.02%)</title><rect x="4.2469%" y="741" width="0.0213%" height="15" fill="rgb(219,56,2)" fg:x="9177" fg:w="46"/><text x="4.4969%" y="751.50"></text></g><g><title>async_executor::Sleepers::update (68 samples, 0.03%)</title><rect x="4.2687%" y="741" width="0.0315%" height="15" fill="rgb(233,0,4)" fg:x="9224" fg:w="68"/><text x="4.5187%" y="751.50"></text></g><g><title>std::sync::poison::Flag::done (32 samples, 0.01%)</title><rect x="4.3002%" y="709" width="0.0148%" height="15" fill="rgb(235,30,7)" fg:x="9292" fg:w="32"/><text x="4.5502%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (58 samples, 0.03%)</title><rect x="4.3002%" y="741" width="0.0268%" height="15" fill="rgb(250,79,13)" fg:x="9292" fg:w="58"/><text x="4.5502%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.03%)</title><rect x="4.3002%" y="725" width="0.0268%" height="15" fill="rgb(211,146,34)" fg:x="9292" fg:w="58"/><text x="4.5502%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (26 samples, 0.01%)</title><rect x="4.3150%" y="709" width="0.0120%" height="15" fill="rgb(228,22,38)" fg:x="9324" fg:w="26"/><text x="4.5650%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (26 samples, 0.01%)</title><rect x="4.3150%" y="693" width="0.0120%" height="15" fill="rgb(235,168,5)" fg:x="9324" fg:w="26"/><text x="4.5650%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (26 samples, 0.01%)</title><rect x="4.3150%" y="677" width="0.0120%" height="15" fill="rgb(221,155,16)" fg:x="9324" fg:w="26"/><text x="4.5650%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.02%)</title><rect x="4.3270%" y="741" width="0.0167%" height="15" fill="rgb(215,215,53)" fg:x="9350" fg:w="36"/><text x="4.5770%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (36 samples, 0.02%)</title><rect x="4.3270%" y="725" width="0.0167%" height="15" fill="rgb(223,4,10)" fg:x="9350" fg:w="36"/><text x="4.5770%" y="735.50"></text></g><g><title>async_executor::Ticker::sleep (239 samples, 0.11%)</title><rect x="4.2340%" y="757" width="0.1106%" height="15" fill="rgb(234,103,6)" fg:x="9149" fg:w="239"/><text x="4.4840%" y="767.50"></text></g><g><title>async_executor::Sleepers::remove (51 samples, 0.02%)</title><rect x="4.3529%" y="741" width="0.0236%" height="15" fill="rgb(227,97,0)" fg:x="9406" fg:w="51"/><text x="4.6029%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (22 samples, 0.01%)</title><rect x="4.3765%" y="741" width="0.0102%" height="15" fill="rgb(234,150,53)" fg:x="9457" fg:w="22"/><text x="4.6265%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="4.3765%" y="725" width="0.0102%" height="15" fill="rgb(228,201,54)" fg:x="9457" fg:w="22"/><text x="4.6265%" y="735.50"></text></g><g><title>async_executor::Ticker::wake (98 samples, 0.05%)</title><rect x="4.3446%" y="757" width="0.0454%" height="15" fill="rgb(222,22,37)" fg:x="9388" fg:w="98"/><text x="4.5946%" y="767.50"></text></g><g><title>async_io::reactor::Reactor::notify (774 samples, 0.36%)</title><rect x="4.4112%" y="725" width="0.3582%" height="15" fill="rgb(237,53,32)" fg:x="9532" fg:w="774"/><text x="4.6612%" y="735.50"></text></g><g><title>polling::Poller::notify (747 samples, 0.35%)</title><rect x="4.4237%" y="709" width="0.3457%" height="15" fill="rgb(233,25,53)" fg:x="9559" fg:w="747"/><text x="4.6737%" y="719.50"></text></g><g><title>polling::epoll::Poller::notify (727 samples, 0.34%)</title><rect x="4.4330%" y="693" width="0.3364%" height="15" fill="rgb(210,40,34)" fg:x="9579" fg:w="727"/><text x="4.6830%" y="703.50"></text></g><g><title>write (717 samples, 0.33%)</title><rect x="4.4376%" y="677" width="0.3318%" height="15" fill="rgb(241,220,44)" fg:x="9589" fg:w="717"/><text x="4.6876%" y="687.50"></text></g><g><title>[unknown] (672 samples, 0.31%)</title><rect x="4.4584%" y="661" width="0.3110%" height="15" fill="rgb(235,28,35)" fg:x="9634" fg:w="672"/><text x="4.7084%" y="671.50"></text></g><g><title>[unknown] (633 samples, 0.29%)</title><rect x="4.4765%" y="645" width="0.2929%" height="15" fill="rgb(210,56,17)" fg:x="9673" fg:w="633"/><text x="4.7265%" y="655.50"></text></g><g><title>[unknown] (572 samples, 0.26%)</title><rect x="4.5047%" y="629" width="0.2647%" height="15" fill="rgb(224,130,29)" fg:x="9734" fg:w="572"/><text x="4.7547%" y="639.50"></text></g><g><title>[unknown] (548 samples, 0.25%)</title><rect x="4.5158%" y="613" width="0.2536%" height="15" fill="rgb(235,212,8)" fg:x="9758" fg:w="548"/><text x="4.7658%" y="623.50"></text></g><g><title>[unknown] (489 samples, 0.23%)</title><rect x="4.5431%" y="597" width="0.2263%" height="15" fill="rgb(223,33,50)" fg:x="9817" fg:w="489"/><text x="4.7931%" y="607.50"></text></g><g><title>[unknown] (412 samples, 0.19%)</title><rect x="4.5788%" y="581" width="0.1907%" height="15" fill="rgb(219,149,13)" fg:x="9894" fg:w="412"/><text x="4.8288%" y="591.50"></text></g><g><title>[unknown] (356 samples, 0.16%)</title><rect x="4.6047%" y="565" width="0.1647%" height="15" fill="rgb(250,156,29)" fg:x="9950" fg:w="356"/><text x="4.8547%" y="575.50"></text></g><g><title>[unknown] (294 samples, 0.14%)</title><rect x="4.6334%" y="549" width="0.1361%" height="15" fill="rgb(216,193,19)" fg:x="10012" fg:w="294"/><text x="4.8834%" y="559.50"></text></g><g><title>[unknown] (250 samples, 0.12%)</title><rect x="4.6537%" y="533" width="0.1157%" height="15" fill="rgb(216,135,14)" fg:x="10056" fg:w="250"/><text x="4.9037%" y="543.50"></text></g><g><title>[unknown] (227 samples, 0.11%)</title><rect x="4.6644%" y="517" width="0.1051%" height="15" fill="rgb(241,47,5)" fg:x="10079" fg:w="227"/><text x="4.9144%" y="527.50"></text></g><g><title>[unknown] (211 samples, 0.10%)</title><rect x="4.6718%" y="501" width="0.0976%" height="15" fill="rgb(233,42,35)" fg:x="10095" fg:w="211"/><text x="4.9218%" y="511.50"></text></g><g><title>[unknown] (170 samples, 0.08%)</title><rect x="4.6907%" y="485" width="0.0787%" height="15" fill="rgb(231,13,6)" fg:x="10136" fg:w="170"/><text x="4.9407%" y="495.50"></text></g><g><title>[unknown] (102 samples, 0.05%)</title><rect x="4.7222%" y="469" width="0.0472%" height="15" fill="rgb(207,181,40)" fg:x="10204" fg:w="102"/><text x="4.9722%" y="479.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="4.7426%" y="453" width="0.0268%" height="15" fill="rgb(254,173,49)" fg:x="10248" fg:w="58"/><text x="4.9926%" y="463.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="4.7574%" y="437" width="0.0120%" height="15" fill="rgb(221,1,38)" fg:x="10280" fg:w="26"/><text x="5.0074%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (39 samples, 0.02%)</title><rect x="4.7949%" y="709" width="0.0180%" height="15" fill="rgb(206,124,46)" fg:x="10361" fg:w="39"/><text x="5.0449%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (39 samples, 0.02%)</title><rect x="4.7949%" y="693" width="0.0180%" height="15" fill="rgb(249,21,11)" fg:x="10361" fg:w="39"/><text x="5.0449%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (39 samples, 0.02%)</title><rect x="4.7949%" y="677" width="0.0180%" height="15" fill="rgb(222,201,40)" fg:x="10361" fg:w="39"/><text x="5.0449%" y="687.50"></text></g><g><title>parking::Unparker::unpark (1,175 samples, 0.54%)</title><rect x="4.7847%" y="725" width="0.5438%" height="15" fill="rgb(235,61,29)" fg:x="10339" fg:w="1175"/><text x="5.0347%" y="735.50"></text></g><g><title>parking::Inner::unpark (1,114 samples, 0.52%)</title><rect x="4.8129%" y="709" width="0.5155%" height="15" fill="rgb(219,207,3)" fg:x="10400" fg:w="1114"/><text x="5.0629%" y="719.50"></text></g><g><title>syscall (1,068 samples, 0.49%)</title><rect x="4.8342%" y="693" width="0.4942%" height="15" fill="rgb(222,56,46)" fg:x="10446" fg:w="1068"/><text x="5.0842%" y="703.50"></text></g><g><title>[unknown] (1,053 samples, 0.49%)</title><rect x="4.8412%" y="677" width="0.4873%" height="15" fill="rgb(239,76,54)" fg:x="10461" fg:w="1053"/><text x="5.0912%" y="687.50"></text></g><g><title>[unknown] (954 samples, 0.44%)</title><rect x="4.8870%" y="661" width="0.4415%" height="15" fill="rgb(231,124,27)" fg:x="10560" fg:w="954"/><text x="5.1370%" y="671.50"></text></g><g><title>[unknown] (875 samples, 0.40%)</title><rect x="4.9235%" y="645" width="0.4049%" height="15" fill="rgb(249,195,6)" fg:x="10639" fg:w="875"/><text x="5.1735%" y="655.50"></text></g><g><title>[unknown] (830 samples, 0.38%)</title><rect x="4.9444%" y="629" width="0.3841%" height="15" fill="rgb(237,174,47)" fg:x="10684" fg:w="830"/><text x="5.1944%" y="639.50"></text></g><g><title>[unknown] (795 samples, 0.37%)</title><rect x="4.9605%" y="613" width="0.3679%" height="15" fill="rgb(206,201,31)" fg:x="10719" fg:w="795"/><text x="5.2105%" y="623.50"></text></g><g><title>[unknown] (718 samples, 0.33%)</title><rect x="4.9962%" y="597" width="0.3323%" height="15" fill="rgb(231,57,52)" fg:x="10796" fg:w="718"/><text x="5.2462%" y="607.50"></text></g><g><title>[unknown] (599 samples, 0.28%)</title><rect x="5.0513%" y="581" width="0.2772%" height="15" fill="rgb(248,177,22)" fg:x="10915" fg:w="599"/><text x="5.3013%" y="591.50"></text></g><g><title>[unknown] (495 samples, 0.23%)</title><rect x="5.0994%" y="565" width="0.2291%" height="15" fill="rgb(215,211,37)" fg:x="11019" fg:w="495"/><text x="5.3494%" y="575.50"></text></g><g><title>[unknown] (258 samples, 0.12%)</title><rect x="5.2091%" y="549" width="0.1194%" height="15" fill="rgb(241,128,51)" fg:x="11256" fg:w="258"/><text x="5.4591%" y="559.50"></text></g><g><title>[unknown] (138 samples, 0.06%)</title><rect x="5.2646%" y="533" width="0.0639%" height="15" fill="rgb(227,165,31)" fg:x="11376" fg:w="138"/><text x="5.5146%" y="543.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="5.3049%" y="517" width="0.0236%" height="15" fill="rgb(228,167,24)" fg:x="11463" fg:w="51"/><text x="5.5549%" y="527.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="5.3136%" y="501" width="0.0148%" height="15" fill="rgb(228,143,12)" fg:x="11482" fg:w="32"/><text x="5.5636%" y="511.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="5.3155%" y="485" width="0.0130%" height="15" fill="rgb(249,149,8)" fg:x="11486" fg:w="28"/><text x="5.5655%" y="495.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="5.3169%" y="469" width="0.0116%" height="15" fill="rgb(243,35,44)" fg:x="11489" fg:w="25"/><text x="5.5669%" y="479.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="5.3169%" y="453" width="0.0116%" height="15" fill="rgb(246,89,9)" fg:x="11489" fg:w="25"/><text x="5.5669%" y="463.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (2,013 samples, 0.93%)</title><rect x="4.4015%" y="741" width="0.9316%" height="15" fill="rgb(233,213,13)" fg:x="9511" fg:w="2013"/><text x="4.6515%" y="751.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (4,082 samples, 1.89%)</title><rect x="3.4579%" y="821" width="1.8891%" height="15" fill="rgb(233,141,41)" fg:x="7472" fg:w="4082"/><text x="3.7079%" y="831.50">a..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (4,015 samples, 1.86%)</title><rect x="3.4889%" y="805" width="1.8581%" height="15" fill="rgb(239,167,4)" fg:x="7539" fg:w="4015"/><text x="3.7389%" y="815.50">a..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4,000 samples, 1.85%)</title><rect x="3.4958%" y="789" width="1.8511%" height="15" fill="rgb(209,217,16)" fg:x="7554" fg:w="4000"/><text x="3.7458%" y="799.50">&lt;..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (4,000 samples, 1.85%)</title><rect x="3.4958%" y="773" width="1.8511%" height="15" fill="rgb(219,88,35)" fg:x="7554" fg:w="4000"/><text x="3.7458%" y="783.50">a..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2,055 samples, 0.95%)</title><rect x="4.3960%" y="757" width="0.9510%" height="15" fill="rgb(220,193,23)" fg:x="9499" fg:w="2055"/><text x="4.6460%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;async_executor::LocalExecutor::run&lt;(),async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;::{{closure}},async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (30 samples, 0.01%)</title><rect x="5.3331%" y="741" width="0.0139%" height="15" fill="rgb(230,90,52)" fg:x="11524" fg:w="30"/><text x="5.5831%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="5.3331%" y="725" width="0.0139%" height="15" fill="rgb(252,106,19)" fg:x="11524" fg:w="30"/><text x="5.5831%" y="735.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (26 samples, 0.01%)</title><rect x="5.3609%" y="805" width="0.0120%" height="15" fill="rgb(206,74,20)" fg:x="11584" fg:w="26"/><text x="5.6109%" y="815.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (26 samples, 0.01%)</title><rect x="5.3609%" y="789" width="0.0120%" height="15" fill="rgb(230,138,44)" fg:x="11584" fg:w="26"/><text x="5.6109%" y="799.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="5.3609%" y="773" width="0.0120%" height="15" fill="rgb(235,182,43)" fg:x="11584" fg:w="26"/><text x="5.6109%" y="783.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (26 samples, 0.01%)</title><rect x="5.3609%" y="757" width="0.0120%" height="15" fill="rgb(242,16,51)" fg:x="11584" fg:w="26"/><text x="5.6109%" y="767.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (26 samples, 0.01%)</title><rect x="5.3609%" y="741" width="0.0120%" height="15" fill="rgb(248,9,4)" fg:x="11584" fg:w="26"/><text x="5.6109%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (26 samples, 0.01%)</title><rect x="5.3609%" y="725" width="0.0120%" height="15" fill="rgb(210,31,22)" fg:x="11584" fg:w="26"/><text x="5.6109%" y="735.50"></text></g><g><title>parking::Unparker::unpark (24 samples, 0.01%)</title><rect x="5.3618%" y="709" width="0.0111%" height="15" fill="rgb(239,54,39)" fg:x="11586" fg:w="24"/><text x="5.6118%" y="719.50"></text></g><g><title>parking::Inner::unpark (24 samples, 0.01%)</title><rect x="5.3618%" y="693" width="0.0111%" height="15" fill="rgb(230,99,41)" fg:x="11586" fg:w="24"/><text x="5.6118%" y="703.50"></text></g><g><title>syscall (24 samples, 0.01%)</title><rect x="5.3618%" y="677" width="0.0111%" height="15" fill="rgb(253,106,12)" fg:x="11586" fg:w="24"/><text x="5.6118%" y="687.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="5.3618%" y="661" width="0.0111%" height="15" fill="rgb(213,46,41)" fg:x="11586" fg:w="24"/><text x="5.6118%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (34 samples, 0.02%)</title><rect x="5.4867%" y="693" width="0.0157%" height="15" fill="rgb(215,133,35)" fg:x="11856" fg:w="34"/><text x="5.7367%" y="703.50"></text></g><g><title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::get (33 samples, 0.02%)</title><rect x="5.4872%" y="677" width="0.0153%" height="15" fill="rgb(213,28,5)" fg:x="11857" fg:w="33"/><text x="5.7372%" y="687.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (23 samples, 0.01%)</title><rect x="5.4918%" y="661" width="0.0106%" height="15" fill="rgb(215,77,49)" fg:x="11867" fg:w="23"/><text x="5.7418%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (23 samples, 0.01%)</title><rect x="5.4918%" y="645" width="0.0106%" height="15" fill="rgb(248,100,22)" fg:x="11867" fg:w="23"/><text x="5.7418%" y="655.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (22 samples, 0.01%)</title><rect x="5.5321%" y="645" width="0.0102%" height="15" fill="rgb(208,67,9)" fg:x="11954" fg:w="22"/><text x="5.7821%" y="655.50"></text></g><g><title>event_listener::Inner::lock (46 samples, 0.02%)</title><rect x="5.6172%" y="485" width="0.0213%" height="15" fill="rgb(219,133,21)" fg:x="12138" fg:w="46"/><text x="5.8672%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.02%)</title><rect x="5.6172%" y="469" width="0.0213%" height="15" fill="rgb(246,46,29)" fg:x="12138" fg:w="46"/><text x="5.8672%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (45 samples, 0.02%)</title><rect x="5.6177%" y="453" width="0.0208%" height="15" fill="rgb(246,185,52)" fg:x="12139" fg:w="45"/><text x="5.8677%" y="463.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (110 samples, 0.05%)</title><rect x="5.5899%" y="501" width="0.0509%" height="15" fill="rgb(252,136,11)" fg:x="12079" fg:w="110"/><text x="5.8399%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (88 samples, 0.04%)</title><rect x="5.6427%" y="485" width="0.0407%" height="15" fill="rgb(219,138,53)" fg:x="12193" fg:w="88"/><text x="5.8927%" y="495.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (77 samples, 0.04%)</title><rect x="5.6478%" y="469" width="0.0356%" height="15" fill="rgb(211,51,23)" fg:x="12204" fg:w="77"/><text x="5.8978%" y="479.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (99 samples, 0.05%)</title><rect x="5.6413%" y="501" width="0.0458%" height="15" fill="rgb(247,221,28)" fg:x="12190" fg:w="99"/><text x="5.8913%" y="511.50"></text></g><g><title>&lt;async_std::stream::stream::next::NextFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.13%)</title><rect x="5.5700%" y="533" width="0.1342%" height="15" fill="rgb(251,222,45)" fg:x="12036" fg:w="290"/><text x="5.8200%" y="543.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (290 samples, 0.13%)</title><rect x="5.5700%" y="517" width="0.1342%" height="15" fill="rgb(217,162,53)" fg:x="12036" fg:w="290"/><text x="5.8200%" y="527.50"></text></g><g><title>event_listener::Event::listen (24 samples, 0.01%)</title><rect x="5.6931%" y="501" width="0.0111%" height="15" fill="rgb(229,93,14)" fg:x="12302" fg:w="24"/><text x="5.9431%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (329 samples, 0.15%)</title><rect x="5.5561%" y="613" width="0.1523%" height="15" fill="rgb(209,67,49)" fg:x="12006" fg:w="329"/><text x="5.8061%" y="623.50"></text></g><g><title>floresta_electrum::electrum_protocol::ElectrumServer&lt;Blockchain&gt;::main_loop::{{closure}}::{{closure}}::{{closure}} (326 samples, 0.15%)</title><rect x="5.5575%" y="597" width="0.1509%" height="15" fill="rgb(213,87,29)" fg:x="12009" fg:w="326"/><text x="5.8075%" y="607.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (299 samples, 0.14%)</title><rect x="5.5700%" y="581" width="0.1384%" height="15" fill="rgb(205,151,52)" fg:x="12036" fg:w="299"/><text x="5.8200%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (299 samples, 0.14%)</title><rect x="5.5700%" y="565" width="0.1384%" height="15" fill="rgb(253,215,39)" fg:x="12036" fg:w="299"/><text x="5.8200%" y="575.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (299 samples, 0.14%)</title><rect x="5.5700%" y="549" width="0.1384%" height="15" fill="rgb(221,220,41)" fg:x="12036" fg:w="299"/><text x="5.8200%" y="559.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (395 samples, 0.18%)</title><rect x="5.5423%" y="645" width="0.1828%" height="15" fill="rgb(218,133,21)" fg:x="11976" fg:w="395"/><text x="5.7923%" y="655.50"></text></g><g><title>floresta_electrum::electrum_protocol::ElectrumServer&lt;Blockchain&gt;::main_loop::{{closure}}::{{closure}} (379 samples, 0.18%)</title><rect x="5.5497%" y="629" width="0.1754%" height="15" fill="rgb(221,193,43)" fg:x="11992" fg:w="379"/><text x="5.7997%" y="639.50"></text></g><g><title>futures_util::async_await::random::shuffle (36 samples, 0.02%)</title><rect x="5.7084%" y="613" width="0.0167%" height="15" fill="rgb(240,128,52)" fg:x="12335" fg:w="36"/><text x="5.9584%" y="623.50"></text></g><g><title>futures_util::async_await::random::gen_index (28 samples, 0.01%)</title><rect x="5.7121%" y="597" width="0.0130%" height="15" fill="rgb(253,114,12)" fg:x="12343" fg:w="28"/><text x="5.9621%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (109 samples, 0.05%)</title><rect x="5.7551%" y="581" width="0.0504%" height="15" fill="rgb(215,223,47)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (109 samples, 0.05%)</title><rect x="5.7551%" y="565" width="0.0504%" height="15" fill="rgb(248,225,23)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (109 samples, 0.05%)</title><rect x="5.7551%" y="549" width="0.0504%" height="15" fill="rgb(250,108,0)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (109 samples, 0.05%)</title><rect x="5.7551%" y="533" width="0.0504%" height="15" fill="rgb(228,208,7)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (109 samples, 0.05%)</title><rect x="5.7551%" y="517" width="0.0504%" height="15" fill="rgb(244,45,10)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (109 samples, 0.05%)</title><rect x="5.7551%" y="501" width="0.0504%" height="15" fill="rgb(207,125,25)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (109 samples, 0.05%)</title><rect x="5.7551%" y="485" width="0.0504%" height="15" fill="rgb(210,195,18)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (109 samples, 0.05%)</title><rect x="5.7551%" y="469" width="0.0504%" height="15" fill="rgb(249,80,12)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (109 samples, 0.05%)</title><rect x="5.7551%" y="453" width="0.0504%" height="15" fill="rgb(221,65,9)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (109 samples, 0.05%)</title><rect x="5.7551%" y="437" width="0.0504%" height="15" fill="rgb(235,49,36)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="447.50"></text></g><g><title>alloc::alloc::alloc (109 samples, 0.05%)</title><rect x="5.7551%" y="421" width="0.0504%" height="15" fill="rgb(225,32,20)" fg:x="12436" fg:w="109"/><text x="6.0051%" y="431.50"></text></g><g><title>malloc (89 samples, 0.04%)</title><rect x="5.7644%" y="405" width="0.0412%" height="15" fill="rgb(215,141,46)" fg:x="12456" fg:w="89"/><text x="6.0144%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (110 samples, 0.05%)</title><rect x="5.7551%" y="629" width="0.0509%" height="15" fill="rgb(250,160,47)" fg:x="12436" fg:w="110"/><text x="6.0051%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (110 samples, 0.05%)</title><rect x="5.7551%" y="613" width="0.0509%" height="15" fill="rgb(216,222,40)" fg:x="12436" fg:w="110"/><text x="6.0051%" y="623.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (110 samples, 0.05%)</title><rect x="5.7551%" y="597" width="0.0509%" height="15" fill="rgb(234,217,39)" fg:x="12436" fg:w="110"/><text x="6.0051%" y="607.50"></text></g><g><title>alloc::string::String::with_capacity (22 samples, 0.01%)</title><rect x="5.8472%" y="613" width="0.0102%" height="15" fill="rgb(207,178,40)" fg:x="12635" fg:w="22"/><text x="6.0972%" y="623.50"></text></g><g><title>core::fmt::Formatter::new (51 samples, 0.02%)</title><rect x="5.9805%" y="581" width="0.0236%" height="15" fill="rgb(221,136,13)" fg:x="12923" fg:w="51"/><text x="6.2305%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (65 samples, 0.03%)</title><rect x="6.0522%" y="565" width="0.0301%" height="15" fill="rgb(249,199,10)" fg:x="13078" fg:w="65"/><text x="6.3022%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (50 samples, 0.02%)</title><rect x="6.1281%" y="437" width="0.0231%" height="15" fill="rgb(249,222,13)" fg:x="13242" fg:w="50"/><text x="6.3781%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.03%)</title><rect x="6.1513%" y="437" width="0.0287%" height="15" fill="rgb(244,185,38)" fg:x="13292" fg:w="62"/><text x="6.4013%" y="447.50"></text></g><g><title>[libc.so.6] (62 samples, 0.03%)</title><rect x="6.1513%" y="421" width="0.0287%" height="15" fill="rgb(236,202,9)" fg:x="13292" fg:w="62"/><text x="6.4013%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (134 samples, 0.06%)</title><rect x="6.1184%" y="517" width="0.0620%" height="15" fill="rgb(250,229,37)" fg:x="13221" fg:w="134"/><text x="6.3684%" y="527.50"></text></g><g><title>alloc::string::String::push_str (134 samples, 0.06%)</title><rect x="6.1184%" y="501" width="0.0620%" height="15" fill="rgb(206,174,23)" fg:x="13221" fg:w="134"/><text x="6.3684%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (134 samples, 0.06%)</title><rect x="6.1184%" y="485" width="0.0620%" height="15" fill="rgb(211,33,43)" fg:x="13221" fg:w="134"/><text x="6.3684%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (134 samples, 0.06%)</title><rect x="6.1184%" y="469" width="0.0620%" height="15" fill="rgb(245,58,50)" fg:x="13221" fg:w="134"/><text x="6.3684%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (134 samples, 0.06%)</title><rect x="6.1184%" y="453" width="0.0620%" height="15" fill="rgb(244,68,36)" fg:x="13221" fg:w="134"/><text x="6.3684%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (174 samples, 0.08%)</title><rect x="6.1004%" y="533" width="0.0805%" height="15" fill="rgb(232,229,15)" fg:x="13182" fg:w="174"/><text x="6.3504%" y="543.50"></text></g><g><title>&lt;core::fmt::num::LowerHex as core::fmt::num::GenericRadix&gt;::digit (30 samples, 0.01%)</title><rect x="6.1818%" y="533" width="0.0139%" height="15" fill="rgb(254,30,23)" fg:x="13358" fg:w="30"/><text x="6.4318%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.01%)</title><rect x="6.1957%" y="533" width="0.0134%" height="15" fill="rgb(235,160,14)" fg:x="13388" fg:w="29"/><text x="6.4457%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (29 samples, 0.01%)</title><rect x="6.1957%" y="517" width="0.0134%" height="15" fill="rgb(212,155,44)" fg:x="13388" fg:w="29"/><text x="6.4457%" y="527.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::pre_dec_end (29 samples, 0.01%)</title><rect x="6.1957%" y="501" width="0.0134%" height="15" fill="rgb(226,2,50)" fg:x="13388" fg:w="29"/><text x="6.4457%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (29 samples, 0.01%)</title><rect x="6.1957%" y="485" width="0.0134%" height="15" fill="rgb(234,177,6)" fg:x="13388" fg:w="29"/><text x="6.4457%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (29 samples, 0.01%)</title><rect x="6.1957%" y="469" width="0.0134%" height="15" fill="rgb(217,24,9)" fg:x="13388" fg:w="29"/><text x="6.4457%" y="479.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (29 samples, 0.01%)</title><rect x="6.2119%" y="533" width="0.0134%" height="15" fill="rgb(220,13,46)" fg:x="13423" fg:w="29"/><text x="6.4619%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (29 samples, 0.01%)</title><rect x="6.2119%" y="517" width="0.0134%" height="15" fill="rgb(239,221,27)" fg:x="13423" fg:w="29"/><text x="6.4619%" y="527.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (29 samples, 0.01%)</title><rect x="6.2119%" y="501" width="0.0134%" height="15" fill="rgb(222,198,25)" fg:x="13423" fg:w="29"/><text x="6.4619%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (43 samples, 0.02%)</title><rect x="6.3345%" y="517" width="0.0199%" height="15" fill="rgb(211,99,13)" fg:x="13688" fg:w="43"/><text x="6.5845%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (31 samples, 0.01%)</title><rect x="6.3401%" y="501" width="0.0143%" height="15" fill="rgb(232,111,31)" fg:x="13700" fg:w="31"/><text x="6.5901%" y="511.50"></text></g><g><title>alloc::string::String::push_str (31 samples, 0.01%)</title><rect x="6.3401%" y="485" width="0.0143%" height="15" fill="rgb(245,82,37)" fg:x="13700" fg:w="31"/><text x="6.5901%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.01%)</title><rect x="6.3401%" y="469" width="0.0143%" height="15" fill="rgb(227,149,46)" fg:x="13700" fg:w="31"/><text x="6.5901%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.01%)</title><rect x="6.3401%" y="453" width="0.0143%" height="15" fill="rgb(218,36,50)" fg:x="13700" fg:w="31"/><text x="6.5901%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.01%)</title><rect x="6.3401%" y="437" width="0.0143%" height="15" fill="rgb(226,80,48)" fg:x="13700" fg:w="31"/><text x="6.5901%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (70 samples, 0.03%)</title><rect x="6.3581%" y="517" width="0.0324%" height="15" fill="rgb(238,224,15)" fg:x="13739" fg:w="70"/><text x="6.6081%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_char (24 samples, 0.01%)</title><rect x="6.3910%" y="501" width="0.0111%" height="15" fill="rgb(241,136,10)" fg:x="13810" fg:w="24"/><text x="6.6410%" y="511.50"></text></g><g><title>core::fmt::Formatter::padding (27 samples, 0.01%)</title><rect x="6.3905%" y="517" width="0.0125%" height="15" fill="rgb(208,32,45)" fg:x="13809" fg:w="27"/><text x="6.6405%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral (393 samples, 0.18%)</title><rect x="6.2272%" y="533" width="0.1819%" height="15" fill="rgb(207,135,9)" fg:x="13456" fg:w="393"/><text x="6.4772%" y="543.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (754 samples, 0.35%)</title><rect x="6.0893%" y="565" width="0.3489%" height="15" fill="rgb(206,86,44)" fg:x="13158" fg:w="754"/><text x="6.3393%" y="575.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (734 samples, 0.34%)</title><rect x="6.0985%" y="549" width="0.3397%" height="15" fill="rgb(245,177,15)" fg:x="13178" fg:w="734"/><text x="6.3485%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (47 samples, 0.02%)</title><rect x="6.4165%" y="533" width="0.0218%" height="15" fill="rgb(206,64,50)" fg:x="13865" fg:w="47"/><text x="6.6665%" y="543.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (47 samples, 0.02%)</title><rect x="6.4165%" y="517" width="0.0218%" height="15" fill="rgb(234,36,40)" fg:x="13865" fg:w="47"/><text x="6.6665%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (47 samples, 0.02%)</title><rect x="6.4165%" y="501" width="0.0218%" height="15" fill="rgb(213,64,8)" fg:x="13865" fg:w="47"/><text x="6.6665%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (47 samples, 0.02%)</title><rect x="6.4165%" y="485" width="0.0218%" height="15" fill="rgb(210,75,36)" fg:x="13865" fg:w="47"/><text x="6.6665%" y="495.50"></text></g><g><title>core::fmt::run (948 samples, 0.44%)</title><rect x="6.0041%" y="581" width="0.4387%" height="15" fill="rgb(229,88,21)" fg:x="12974" fg:w="948"/><text x="6.2541%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1,335 samples, 0.62%)</title><rect x="5.8574%" y="613" width="0.6178%" height="15" fill="rgb(252,204,47)" fg:x="12657" fg:w="1335"/><text x="6.1074%" y="623.50"></text></g><g><title>core::fmt::write (1,299 samples, 0.60%)</title><rect x="5.8741%" y="597" width="0.6012%" height="15" fill="rgb(208,77,27)" fg:x="12693" fg:w="1299"/><text x="6.1241%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (60 samples, 0.03%)</title><rect x="6.4475%" y="581" width="0.0278%" height="15" fill="rgb(221,76,26)" fg:x="13932" fg:w="60"/><text x="6.6975%" y="591.50"></text></g><g><title>&lt;[u8] as bitcoin_hashes::hex::ToHex&gt;::to_hex (1,454 samples, 0.67%)</title><rect x="5.8060%" y="629" width="0.6729%" height="15" fill="rgb(225,139,18)" fg:x="12546" fg:w="1454"/><text x="6.0560%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (29 samples, 0.01%)</title><rect x="6.4993%" y="533" width="0.0134%" height="15" fill="rgb(230,137,11)" fg:x="14044" fg:w="29"/><text x="6.7493%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (75 samples, 0.03%)</title><rect x="6.4826%" y="565" width="0.0347%" height="15" fill="rgb(212,28,1)" fg:x="14008" fg:w="75"/><text x="6.7326%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (42 samples, 0.02%)</title><rect x="6.4979%" y="549" width="0.0194%" height="15" fill="rgb(248,164,17)" fg:x="14041" fg:w="42"/><text x="6.7479%" y="559.50"></text></g><g><title>cfree (38 samples, 0.02%)</title><rect x="6.5187%" y="549" width="0.0176%" height="15" fill="rgb(222,171,42)" fg:x="14086" fg:w="38"/><text x="6.7687%" y="559.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="6.5234%" y="533" width="0.0130%" height="15" fill="rgb(243,84,45)" fg:x="14096" fg:w="28"/><text x="6.7734%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.02%)</title><rect x="6.5363%" y="469" width="0.0171%" height="15" fill="rgb(252,49,23)" fg:x="14124" fg:w="37"/><text x="6.7863%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.02%)</title><rect x="6.5363%" y="453" width="0.0171%" height="15" fill="rgb(215,19,7)" fg:x="14124" fg:w="37"/><text x="6.7863%" y="463.50"></text></g><g><title>cfree (34 samples, 0.02%)</title><rect x="6.5377%" y="437" width="0.0157%" height="15" fill="rgb(238,81,41)" fg:x="14127" fg:w="34"/><text x="6.7877%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (38 samples, 0.02%)</title><rect x="6.5363%" y="533" width="0.0176%" height="15" fill="rgb(210,199,37)" fg:x="14124" fg:w="38"/><text x="6.7863%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (38 samples, 0.02%)</title><rect x="6.5363%" y="517" width="0.0176%" height="15" fill="rgb(244,192,49)" fg:x="14124" fg:w="38"/><text x="6.7863%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (38 samples, 0.02%)</title><rect x="6.5363%" y="501" width="0.0176%" height="15" fill="rgb(226,211,11)" fg:x="14124" fg:w="38"/><text x="6.7863%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.02%)</title><rect x="6.5363%" y="485" width="0.0176%" height="15" fill="rgb(236,162,54)" fg:x="14124" fg:w="38"/><text x="6.7863%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (36 samples, 0.02%)</title><rect x="6.5659%" y="357" width="0.0167%" height="15" fill="rgb(220,229,9)" fg:x="14188" fg:w="36"/><text x="6.8159%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.03%)</title><rect x="6.5590%" y="501" width="0.0324%" height="15" fill="rgb(250,87,22)" fg:x="14173" fg:w="70"/><text x="6.8090%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (70 samples, 0.03%)</title><rect x="6.5590%" y="485" width="0.0324%" height="15" fill="rgb(239,43,17)" fg:x="14173" fg:w="70"/><text x="6.8090%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (61 samples, 0.03%)</title><rect x="6.5632%" y="469" width="0.0282%" height="15" fill="rgb(231,177,25)" fg:x="14182" fg:w="61"/><text x="6.8132%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (59 samples, 0.03%)</title><rect x="6.5641%" y="453" width="0.0273%" height="15" fill="rgb(219,179,1)" fg:x="14184" fg:w="59"/><text x="6.8141%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (59 samples, 0.03%)</title><rect x="6.5641%" y="437" width="0.0273%" height="15" fill="rgb(238,219,53)" fg:x="14184" fg:w="59"/><text x="6.8141%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.03%)</title><rect x="6.5641%" y="421" width="0.0273%" height="15" fill="rgb(232,167,36)" fg:x="14184" fg:w="59"/><text x="6.8141%" y="431.50"></text></g><g><title>core::mem::drop (56 samples, 0.03%)</title><rect x="6.5655%" y="405" width="0.0259%" height="15" fill="rgb(244,19,51)" fg:x="14187" fg:w="56"/><text x="6.8155%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (56 samples, 0.03%)</title><rect x="6.5655%" y="389" width="0.0259%" height="15" fill="rgb(224,6,22)" fg:x="14187" fg:w="56"/><text x="6.8155%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.03%)</title><rect x="6.5655%" y="373" width="0.0259%" height="15" fill="rgb(224,145,5)" fg:x="14187" fg:w="56"/><text x="6.8155%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (120 samples, 0.06%)</title><rect x="6.5363%" y="549" width="0.0555%" height="15" fill="rgb(234,130,49)" fg:x="14124" fg:w="120"/><text x="6.7863%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (82 samples, 0.04%)</title><rect x="6.5539%" y="533" width="0.0379%" height="15" fill="rgb(254,6,2)" fg:x="14162" fg:w="82"/><text x="6.8039%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (71 samples, 0.03%)</title><rect x="6.5590%" y="517" width="0.0329%" height="15" fill="rgb(208,96,46)" fg:x="14173" fg:w="71"/><text x="6.8090%" y="527.50"></text></g><g><title>core::mem::drop (247 samples, 0.11%)</title><rect x="6.4794%" y="613" width="0.1143%" height="15" fill="rgb(239,3,39)" fg:x="14001" fg:w="247"/><text x="6.7294%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (247 samples, 0.11%)</title><rect x="6.4794%" y="597" width="0.1143%" height="15" fill="rgb(233,210,1)" fg:x="14001" fg:w="247"/><text x="6.7294%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (247 samples, 0.11%)</title><rect x="6.4794%" y="581" width="0.1143%" height="15" fill="rgb(244,137,37)" fg:x="14001" fg:w="247"/><text x="6.7294%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (165 samples, 0.08%)</title><rect x="6.5173%" y="565" width="0.0764%" height="15" fill="rgb(240,136,2)" fg:x="14083" fg:w="165"/><text x="6.7673%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (253 samples, 0.12%)</title><rect x="6.4789%" y="629" width="0.1171%" height="15" fill="rgb(239,18,37)" fg:x="14000" fg:w="253"/><text x="6.7289%" y="639.50"></text></g><g><title>&lt;async_lock::rwlock::Write&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 0.04%)</title><rect x="6.5974%" y="629" width="0.0426%" height="15" fill="rgb(218,185,22)" fg:x="14256" fg:w="92"/><text x="6.8474%" y="639.50"></text></g><g><title>event_listener::Event::listen (43 samples, 0.02%)</title><rect x="6.6201%" y="613" width="0.0199%" height="15" fill="rgb(225,218,4)" fg:x="14305" fg:w="43"/><text x="6.8701%" y="623.50"></text></g><g><title>&lt;spin::relax::Spin as spin::relax::RelaxStrategy&gt;::relax (87 samples, 0.04%)</title><rect x="6.6451%" y="597" width="0.0403%" height="15" fill="rgb(230,182,32)" fg:x="14359" fg:w="87"/><text x="6.8951%" y="607.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (87 samples, 0.04%)</title><rect x="6.6451%" y="581" width="0.0403%" height="15" fill="rgb(242,56,43)" fg:x="14359" fg:w="87"/><text x="6.8951%" y="591.50"></text></g><g><title>core::hint::spin_loop (87 samples, 0.04%)</title><rect x="6.6451%" y="565" width="0.0403%" height="15" fill="rgb(233,99,24)" fg:x="14359" fg:w="87"/><text x="6.8951%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (87 samples, 0.04%)</title><rect x="6.6451%" y="549" width="0.0403%" height="15" fill="rgb(234,209,42)" fg:x="14359" fg:w="87"/><text x="6.8951%" y="559.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::is_in_idb (237 samples, 0.11%)</title><rect x="6.6423%" y="629" width="0.1097%" height="15" fill="rgb(227,7,12)" fg:x="14353" fg:w="237"/><text x="6.8923%" y="639.50"></text></g><g><title>spin::rwlock::RwLock&lt;T,R&gt;::read (231 samples, 0.11%)</title><rect x="6.6451%" y="613" width="0.1069%" height="15" fill="rgb(245,203,43)" fg:x="14359" fg:w="231"/><text x="6.8951%" y="623.50"></text></g><g><title>spin::rwlock::RwLock&lt;T,R&gt;::try_read (144 samples, 0.07%)</title><rect x="6.6853%" y="597" width="0.0666%" height="15" fill="rgb(238,205,33)" fg:x="14446" fg:w="144"/><text x="6.9353%" y="607.50"></text></g><g><title>spin::rwlock::RwLock&lt;T,R&gt;::acquire_reader (144 samples, 0.07%)</title><rect x="6.6853%" y="581" width="0.0666%" height="15" fill="rgb(231,56,7)" fg:x="14446" fg:w="144"/><text x="6.9353%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.01%)</title><rect x="6.7409%" y="565" width="0.0111%" height="15" fill="rgb(244,186,29)" fg:x="14566" fg:w="24"/><text x="6.9909%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.01%)</title><rect x="6.7409%" y="549" width="0.0111%" height="15" fill="rgb(234,111,31)" fg:x="14566" fg:w="24"/><text x="6.9909%" y="559.50"></text></g><g><title>[libc.so.6] (87 samples, 0.04%)</title><rect x="6.7950%" y="325" width="0.0403%" height="15" fill="rgb(241,149,10)" fg:x="14683" fg:w="87"/><text x="7.0450%" y="335.50"></text></g><g><title>[libc.so.6] (80 samples, 0.04%)</title><rect x="6.7983%" y="309" width="0.0370%" height="15" fill="rgb(249,206,44)" fg:x="14690" fg:w="80"/><text x="7.0483%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (142 samples, 0.07%)</title><rect x="6.7751%" y="389" width="0.0657%" height="15" fill="rgb(251,153,30)" fg:x="14640" fg:w="142"/><text x="7.0251%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (142 samples, 0.07%)</title><rect x="6.7751%" y="373" width="0.0657%" height="15" fill="rgb(239,152,38)" fg:x="14640" fg:w="142"/><text x="7.0251%" y="383.50"></text></g><g><title>alloc::alloc::realloc (138 samples, 0.06%)</title><rect x="6.7770%" y="357" width="0.0639%" height="15" fill="rgb(249,139,47)" fg:x="14644" fg:w="138"/><text x="7.0270%" y="367.50"></text></g><g><title>realloc (130 samples, 0.06%)</title><rect x="6.7807%" y="341" width="0.0602%" height="15" fill="rgb(244,64,35)" fg:x="14652" fg:w="130"/><text x="7.0307%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (144 samples, 0.07%)</title><rect x="6.7746%" y="405" width="0.0666%" height="15" fill="rgb(216,46,15)" fg:x="14639" fg:w="144"/><text x="7.0246%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (154 samples, 0.07%)</title><rect x="6.7714%" y="469" width="0.0713%" height="15" fill="rgb(250,74,19)" fg:x="14632" fg:w="154"/><text x="7.0214%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (154 samples, 0.07%)</title><rect x="6.7714%" y="453" width="0.0713%" height="15" fill="rgb(249,42,33)" fg:x="14632" fg:w="154"/><text x="7.0214%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (152 samples, 0.07%)</title><rect x="6.7723%" y="437" width="0.0703%" height="15" fill="rgb(242,149,17)" fg:x="14634" fg:w="152"/><text x="7.0223%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (152 samples, 0.07%)</title><rect x="6.7723%" y="421" width="0.0703%" height="15" fill="rgb(244,29,21)" fg:x="14634" fg:w="152"/><text x="7.0223%" y="431.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (156 samples, 0.07%)</title><rect x="6.7709%" y="565" width="0.0722%" height="15" fill="rgb(220,130,37)" fg:x="14631" fg:w="156"/><text x="7.0209%" y="575.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (156 samples, 0.07%)</title><rect x="6.7709%" y="549" width="0.0722%" height="15" fill="rgb(211,67,2)" fg:x="14631" fg:w="156"/><text x="7.0209%" y="559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (156 samples, 0.07%)</title><rect x="6.7709%" y="533" width="0.0722%" height="15" fill="rgb(235,68,52)" fg:x="14631" fg:w="156"/><text x="7.0209%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (156 samples, 0.07%)</title><rect x="6.7709%" y="517" width="0.0722%" height="15" fill="rgb(246,142,3)" fg:x="14631" fg:w="156"/><text x="7.0209%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (156 samples, 0.07%)</title><rect x="6.7709%" y="501" width="0.0722%" height="15" fill="rgb(241,25,7)" fg:x="14631" fg:w="156"/><text x="7.0209%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (156 samples, 0.07%)</title><rect x="6.7709%" y="485" width="0.0722%" height="15" fill="rgb(242,119,39)" fg:x="14631" fg:w="156"/><text x="7.0209%" y="495.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (160 samples, 0.07%)</title><rect x="6.7709%" y="597" width="0.0740%" height="15" fill="rgb(241,98,45)" fg:x="14631" fg:w="160"/><text x="7.0209%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (160 samples, 0.07%)</title><rect x="6.7709%" y="581" width="0.0740%" height="15" fill="rgb(254,28,30)" fg:x="14631" fg:w="160"/><text x="7.0209%" y="591.50"></text></g><g><title>[libc.so.6] (64 samples, 0.03%)</title><rect x="6.8556%" y="325" width="0.0296%" height="15" fill="rgb(241,142,54)" fg:x="14814" fg:w="64"/><text x="7.1056%" y="335.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="6.8630%" y="309" width="0.0222%" height="15" fill="rgb(222,85,15)" fg:x="14830" fg:w="48"/><text x="7.1130%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (87 samples, 0.04%)</title><rect x="6.8487%" y="389" width="0.0403%" height="15" fill="rgb(210,85,47)" fg:x="14799" fg:w="87"/><text x="7.0987%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (87 samples, 0.04%)</title><rect x="6.8487%" y="373" width="0.0403%" height="15" fill="rgb(224,206,25)" fg:x="14799" fg:w="87"/><text x="7.0987%" y="383.50"></text></g><g><title>alloc::alloc::realloc (87 samples, 0.04%)</title><rect x="6.8487%" y="357" width="0.0403%" height="15" fill="rgb(243,201,19)" fg:x="14799" fg:w="87"/><text x="7.0987%" y="367.50"></text></g><g><title>realloc (86 samples, 0.04%)</title><rect x="6.8492%" y="341" width="0.0398%" height="15" fill="rgb(236,59,4)" fg:x="14800" fg:w="86"/><text x="7.0992%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (88 samples, 0.04%)</title><rect x="6.8487%" y="405" width="0.0407%" height="15" fill="rgb(254,179,45)" fg:x="14799" fg:w="88"/><text x="7.0987%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (99 samples, 0.05%)</title><rect x="6.8455%" y="469" width="0.0458%" height="15" fill="rgb(226,14,10)" fg:x="14792" fg:w="99"/><text x="7.0955%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (99 samples, 0.05%)</title><rect x="6.8455%" y="453" width="0.0458%" height="15" fill="rgb(244,27,41)" fg:x="14792" fg:w="99"/><text x="7.0955%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (95 samples, 0.04%)</title><rect x="6.8473%" y="437" width="0.0440%" height="15" fill="rgb(235,35,32)" fg:x="14796" fg:w="95"/><text x="7.0973%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (95 samples, 0.04%)</title><rect x="6.8473%" y="421" width="0.0440%" height="15" fill="rgb(218,68,31)" fg:x="14796" fg:w="95"/><text x="7.0973%" y="431.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (101 samples, 0.05%)</title><rect x="6.8450%" y="565" width="0.0467%" height="15" fill="rgb(207,120,37)" fg:x="14791" fg:w="101"/><text x="7.0950%" y="575.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (101 samples, 0.05%)</title><rect x="6.8450%" y="549" width="0.0467%" height="15" fill="rgb(227,98,0)" fg:x="14791" fg:w="101"/><text x="7.0950%" y="559.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (101 samples, 0.05%)</title><rect x="6.8450%" y="533" width="0.0467%" height="15" fill="rgb(207,7,3)" fg:x="14791" fg:w="101"/><text x="7.0950%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (101 samples, 0.05%)</title><rect x="6.8450%" y="517" width="0.0467%" height="15" fill="rgb(206,98,19)" fg:x="14791" fg:w="101"/><text x="7.0950%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (101 samples, 0.05%)</title><rect x="6.8450%" y="501" width="0.0467%" height="15" fill="rgb(217,5,26)" fg:x="14791" fg:w="101"/><text x="7.0950%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (101 samples, 0.05%)</title><rect x="6.8450%" y="485" width="0.0467%" height="15" fill="rgb(235,190,38)" fg:x="14791" fg:w="101"/><text x="7.0950%" y="495.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (104 samples, 0.05%)</title><rect x="6.8450%" y="597" width="0.0481%" height="15" fill="rgb(247,86,24)" fg:x="14791" fg:w="104"/><text x="7.0950%" y="607.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (104 samples, 0.05%)</title><rect x="6.8450%" y="581" width="0.0481%" height="15" fill="rgb(205,101,16)" fg:x="14791" fg:w="104"/><text x="7.0950%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.02%)</title><rect x="6.8940%" y="437" width="0.0176%" height="15" fill="rgb(246,168,33)" fg:x="14897" fg:w="38"/><text x="7.1440%" y="447.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (51 samples, 0.02%)</title><rect x="6.8931%" y="597" width="0.0236%" height="15" fill="rgb(231,114,1)" fg:x="14895" fg:w="51"/><text x="7.1431%" y="607.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (51 samples, 0.02%)</title><rect x="6.8931%" y="581" width="0.0236%" height="15" fill="rgb(207,184,53)" fg:x="14895" fg:w="51"/><text x="7.1431%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (51 samples, 0.02%)</title><rect x="6.8931%" y="565" width="0.0236%" height="15" fill="rgb(224,95,51)" fg:x="14895" fg:w="51"/><text x="7.1431%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (51 samples, 0.02%)</title><rect x="6.8931%" y="549" width="0.0236%" height="15" fill="rgb(212,188,45)" fg:x="14895" fg:w="51"/><text x="7.1431%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (51 samples, 0.02%)</title><rect x="6.8931%" y="533" width="0.0236%" height="15" fill="rgb(223,154,38)" fg:x="14895" fg:w="51"/><text x="7.1431%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (51 samples, 0.02%)</title><rect x="6.8931%" y="517" width="0.0236%" height="15" fill="rgb(251,22,52)" fg:x="14895" fg:w="51"/><text x="7.1431%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (51 samples, 0.02%)</title><rect x="6.8931%" y="501" width="0.0236%" height="15" fill="rgb(229,209,22)" fg:x="14895" fg:w="51"/><text x="7.1431%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.02%)</title><rect x="6.8931%" y="485" width="0.0236%" height="15" fill="rgb(234,138,34)" fg:x="14895" fg:w="51"/><text x="7.1431%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (49 samples, 0.02%)</title><rect x="6.8940%" y="469" width="0.0227%" height="15" fill="rgb(212,95,11)" fg:x="14897" fg:w="49"/><text x="7.1440%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (49 samples, 0.02%)</title><rect x="6.8940%" y="453" width="0.0227%" height="15" fill="rgb(240,179,47)" fg:x="14897" fg:w="49"/><text x="7.1440%" y="463.50"></text></g><g><title>[libc.so.6] (96 samples, 0.04%)</title><rect x="6.9227%" y="357" width="0.0444%" height="15" fill="rgb(240,163,11)" fg:x="14959" fg:w="96"/><text x="7.1727%" y="367.50"></text></g><g><title>[libc.so.6] (89 samples, 0.04%)</title><rect x="6.9260%" y="341" width="0.0412%" height="15" fill="rgb(236,37,12)" fg:x="14966" fg:w="89"/><text x="7.1760%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 samples, 0.05%)</title><rect x="6.9172%" y="437" width="0.0514%" height="15" fill="rgb(232,164,16)" fg:x="14947" fg:w="111"/><text x="7.1672%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (110 samples, 0.05%)</title><rect x="6.9176%" y="421" width="0.0509%" height="15" fill="rgb(244,205,15)" fg:x="14948" fg:w="110"/><text x="7.1676%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (110 samples, 0.05%)</title><rect x="6.9176%" y="405" width="0.0509%" height="15" fill="rgb(223,117,47)" fg:x="14948" fg:w="110"/><text x="7.1676%" y="415.50"></text></g><g><title>alloc::alloc::realloc (110 samples, 0.05%)</title><rect x="6.9176%" y="389" width="0.0509%" height="15" fill="rgb(244,107,35)" fg:x="14948" fg:w="110"/><text x="7.1676%" y="399.50"></text></g><g><title>realloc (107 samples, 0.05%)</title><rect x="6.9190%" y="373" width="0.0495%" height="15" fill="rgb(205,140,8)" fg:x="14951" fg:w="107"/><text x="7.1690%" y="383.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (440 samples, 0.20%)</title><rect x="6.7654%" y="613" width="0.2036%" height="15" fill="rgb(228,84,46)" fg:x="14619" fg:w="440"/><text x="7.0154%" y="623.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (113 samples, 0.05%)</title><rect x="6.9167%" y="597" width="0.0523%" height="15" fill="rgb(254,188,9)" fg:x="14946" fg:w="113"/><text x="7.1667%" y="607.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (113 samples, 0.05%)</title><rect x="6.9167%" y="581" width="0.0523%" height="15" fill="rgb(206,112,54)" fg:x="14946" fg:w="113"/><text x="7.1667%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (113 samples, 0.05%)</title><rect x="6.9167%" y="565" width="0.0523%" height="15" fill="rgb(216,84,49)" fg:x="14946" fg:w="113"/><text x="7.1667%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (113 samples, 0.05%)</title><rect x="6.9167%" y="549" width="0.0523%" height="15" fill="rgb(214,194,35)" fg:x="14946" fg:w="113"/><text x="7.1667%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (113 samples, 0.05%)</title><rect x="6.9167%" y="533" width="0.0523%" height="15" fill="rgb(249,28,3)" fg:x="14946" fg:w="113"/><text x="7.1667%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (113 samples, 0.05%)</title><rect x="6.9167%" y="517" width="0.0523%" height="15" fill="rgb(222,56,52)" fg:x="14946" fg:w="113"/><text x="7.1667%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (113 samples, 0.05%)</title><rect x="6.9167%" y="501" width="0.0523%" height="15" fill="rgb(245,217,50)" fg:x="14946" fg:w="113"/><text x="7.1667%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (113 samples, 0.05%)</title><rect x="6.9167%" y="485" width="0.0523%" height="15" fill="rgb(213,201,24)" fg:x="14946" fg:w="113"/><text x="7.1667%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (112 samples, 0.05%)</title><rect x="6.9172%" y="469" width="0.0518%" height="15" fill="rgb(248,116,28)" fg:x="14947" fg:w="112"/><text x="7.1672%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (112 samples, 0.05%)</title><rect x="6.9172%" y="453" width="0.0518%" height="15" fill="rgb(219,72,43)" fg:x="14947" fg:w="112"/><text x="7.1672%" y="463.50"></text></g><g><title>bitcoin::consensus::encode::serialize (451 samples, 0.21%)</title><rect x="6.7612%" y="629" width="0.2087%" height="15" fill="rgb(209,138,14)" fg:x="14610" fg:w="451"/><text x="7.0112%" y="639.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="6.9815%" y="533" width="0.0185%" height="15" fill="rgb(222,18,33)" fg:x="15086" fg:w="40"/><text x="7.2315%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (43 samples, 0.02%)</title><rect x="6.9806%" y="629" width="0.0199%" height="15" fill="rgb(213,199,7)" fg:x="15084" fg:w="43"/><text x="7.2306%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (43 samples, 0.02%)</title><rect x="6.9806%" y="613" width="0.0199%" height="15" fill="rgb(250,110,10)" fg:x="15084" fg:w="43"/><text x="7.2306%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.02%)</title><rect x="6.9806%" y="597" width="0.0199%" height="15" fill="rgb(248,123,6)" fg:x="15084" fg:w="43"/><text x="7.2306%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (43 samples, 0.02%)</title><rect x="6.9806%" y="581" width="0.0199%" height="15" fill="rgb(206,91,31)" fg:x="15084" fg:w="43"/><text x="7.2306%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (43 samples, 0.02%)</title><rect x="6.9806%" y="565" width="0.0199%" height="15" fill="rgb(211,154,13)" fg:x="15084" fg:w="43"/><text x="7.2306%" y="575.50"></text></g><g><title>cfree (42 samples, 0.02%)</title><rect x="6.9810%" y="549" width="0.0194%" height="15" fill="rgb(225,148,7)" fg:x="15085" fg:w="42"/><text x="7.2310%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::rwlock::Write&lt;floresta_watch_only::AddressCache&lt;floresta_watch_only::kv_database::KvDatabase&gt;&gt;&gt; (35 samples, 0.02%)</title><rect x="7.0079%" y="629" width="0.0162%" height="15" fill="rgb(220,160,43)" fg:x="15143" fg:w="35"/><text x="7.2579%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::rwlock::WriteState&lt;floresta_watch_only::AddressCache&lt;floresta_watch_only::kv_database::KvDatabase&gt;&gt;&gt; (27 samples, 0.01%)</title><rect x="7.0116%" y="613" width="0.0125%" height="15" fill="rgb(213,52,39)" fg:x="15151" fg:w="27"/><text x="7.2616%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (27 samples, 0.01%)</title><rect x="7.0116%" y="597" width="0.0125%" height="15" fill="rgb(243,137,7)" fg:x="15151" fg:w="27"/><text x="7.2616%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (25 samples, 0.01%)</title><rect x="7.0125%" y="581" width="0.0116%" height="15" fill="rgb(230,79,13)" fg:x="15153" fg:w="25"/><text x="7.2625%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::script::Script&gt; (200 samples, 0.09%)</title><rect x="7.0306%" y="485" width="0.0926%" height="15" fill="rgb(247,105,23)" fg:x="15192" fg:w="200"/><text x="7.2806%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (200 samples, 0.09%)</title><rect x="7.0306%" y="469" width="0.0926%" height="15" fill="rgb(223,179,41)" fg:x="15192" fg:w="200"/><text x="7.2806%" y="479.50"></text></g><g><title>alloc::alloc::box_free (200 samples, 0.09%)</title><rect x="7.0306%" y="453" width="0.0926%" height="15" fill="rgb(218,9,34)" fg:x="15192" fg:w="200"/><text x="7.2806%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (200 samples, 0.09%)</title><rect x="7.0306%" y="437" width="0.0926%" height="15" fill="rgb(222,106,8)" fg:x="15192" fg:w="200"/><text x="7.2806%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 0.02%)</title><rect x="7.1041%" y="421" width="0.0190%" height="15" fill="rgb(211,220,0)" fg:x="15351" fg:w="41"/><text x="7.3541%" y="431.50"></text></g><g><title>cfree (41 samples, 0.02%)</title><rect x="7.1041%" y="405" width="0.0190%" height="15" fill="rgb(229,52,16)" fg:x="15351" fg:w="41"/><text x="7.3541%" y="415.50"></text></g><g><title>[libc.so.6] (246 samples, 0.11%)</title><rect x="7.2670%" y="373" width="0.1138%" height="15" fill="rgb(212,155,18)" fg:x="15703" fg:w="246"/><text x="7.5170%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (563 samples, 0.26%)</title><rect x="7.1231%" y="421" width="0.2605%" height="15" fill="rgb(242,21,14)" fg:x="15392" fg:w="563"/><text x="7.3731%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (563 samples, 0.26%)</title><rect x="7.1231%" y="405" width="0.2605%" height="15" fill="rgb(222,19,48)" fg:x="15392" fg:w="563"/><text x="7.3731%" y="415.50"></text></g><g><title>cfree (553 samples, 0.26%)</title><rect x="7.1278%" y="389" width="0.2559%" height="15" fill="rgb(232,45,27)" fg:x="15402" fg:w="553"/><text x="7.3778%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (771 samples, 0.36%)</title><rect x="7.0296%" y="533" width="0.3568%" height="15" fill="rgb(249,103,42)" fg:x="15190" fg:w="771"/><text x="7.2796%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::TxIn]&gt; (770 samples, 0.36%)</title><rect x="7.0301%" y="517" width="0.3563%" height="15" fill="rgb(246,81,33)" fg:x="15191" fg:w="770"/><text x="7.2801%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::TxIn&gt; (769 samples, 0.36%)</title><rect x="7.0306%" y="501" width="0.3559%" height="15" fill="rgb(252,33,42)" fg:x="15192" fg:w="769"/><text x="7.2806%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::witness::Witness&gt; (569 samples, 0.26%)</title><rect x="7.1231%" y="485" width="0.2633%" height="15" fill="rgb(209,212,41)" fg:x="15392" fg:w="569"/><text x="7.3731%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (569 samples, 0.26%)</title><rect x="7.1231%" y="469" width="0.2633%" height="15" fill="rgb(207,154,6)" fg:x="15392" fg:w="569"/><text x="7.3731%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (569 samples, 0.26%)</title><rect x="7.1231%" y="453" width="0.2633%" height="15" fill="rgb(223,64,47)" fg:x="15392" fg:w="569"/><text x="7.3731%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (569 samples, 0.26%)</title><rect x="7.1231%" y="437" width="0.2633%" height="15" fill="rgb(211,161,38)" fg:x="15392" fg:w="569"/><text x="7.3731%" y="447.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="7.4392%" y="437" width="0.0236%" height="15" fill="rgb(219,138,40)" fg:x="16075" fg:w="51"/><text x="7.6892%" y="447.50"></text></g><g><title>[libc.so.6] (49 samples, 0.02%)</title><rect x="7.4401%" y="421" width="0.0227%" height="15" fill="rgb(241,228,46)" fg:x="16077" fg:w="49"/><text x="7.6901%" y="431.50"></text></g><g><title>[libc.so.6] (154 samples, 0.07%)</title><rect x="7.3976%" y="453" width="0.0713%" height="15" fill="rgb(223,209,38)" fg:x="15985" fg:w="154"/><text x="7.6476%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (181 samples, 0.08%)</title><rect x="7.3869%" y="501" width="0.0838%" height="15" fill="rgb(236,164,45)" fg:x="15962" fg:w="181"/><text x="7.6369%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (181 samples, 0.08%)</title><rect x="7.3869%" y="485" width="0.0838%" height="15" fill="rgb(231,15,5)" fg:x="15962" fg:w="181"/><text x="7.6369%" y="495.50"></text></g><g><title>cfree (179 samples, 0.08%)</title><rect x="7.3878%" y="469" width="0.0828%" height="15" fill="rgb(252,35,15)" fg:x="15964" fg:w="179"/><text x="7.6378%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt;&gt; (955 samples, 0.44%)</title><rect x="7.0296%" y="549" width="0.4420%" height="15" fill="rgb(248,181,18)" fg:x="15190" fg:w="955"/><text x="7.2796%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bitcoin::blockdata::transaction::TxIn&gt;&gt; (184 samples, 0.09%)</title><rect x="7.3864%" y="533" width="0.0852%" height="15" fill="rgb(233,39,42)" fg:x="15961" fg:w="184"/><text x="7.6364%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (184 samples, 0.09%)</title><rect x="7.3864%" y="517" width="0.0852%" height="15" fill="rgb(238,110,33)" fg:x="15961" fg:w="184"/><text x="7.6364%" y="527.50"></text></g><g><title>[libc.so.6] (212 samples, 0.10%)</title><rect x="7.6900%" y="389" width="0.0981%" height="15" fill="rgb(233,195,10)" fg:x="16617" fg:w="212"/><text x="7.9400%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (696 samples, 0.32%)</title><rect x="7.4716%" y="533" width="0.3221%" height="15" fill="rgb(254,105,3)" fg:x="16145" fg:w="696"/><text x="7.7216%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::TxOut]&gt; (696 samples, 0.32%)</title><rect x="7.4716%" y="517" width="0.3221%" height="15" fill="rgb(221,225,9)" fg:x="16145" fg:w="696"/><text x="7.7216%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::TxOut&gt; (695 samples, 0.32%)</title><rect x="7.4721%" y="501" width="0.3216%" height="15" fill="rgb(224,227,45)" fg:x="16146" fg:w="695"/><text x="7.7221%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::script::Script&gt; (695 samples, 0.32%)</title><rect x="7.4721%" y="485" width="0.3216%" height="15" fill="rgb(229,198,43)" fg:x="16146" fg:w="695"/><text x="7.7221%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (695 samples, 0.32%)</title><rect x="7.4721%" y="469" width="0.3216%" height="15" fill="rgb(206,209,35)" fg:x="16146" fg:w="695"/><text x="7.7221%" y="479.50"></text></g><g><title>alloc::alloc::box_free (695 samples, 0.32%)</title><rect x="7.4721%" y="453" width="0.3216%" height="15" fill="rgb(245,195,53)" fg:x="16146" fg:w="695"/><text x="7.7221%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (695 samples, 0.32%)</title><rect x="7.4721%" y="437" width="0.3216%" height="15" fill="rgb(240,92,26)" fg:x="16146" fg:w="695"/><text x="7.7221%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (591 samples, 0.27%)</title><rect x="7.5202%" y="421" width="0.2735%" height="15" fill="rgb(207,40,23)" fg:x="16250" fg:w="591"/><text x="7.7702%" y="431.50"></text></g><g><title>cfree (585 samples, 0.27%)</title><rect x="7.5230%" y="405" width="0.2707%" height="15" fill="rgb(223,111,35)" fg:x="16256" fg:w="585"/><text x="7.7730%" y="415.50"></text></g><g><title>[libc.so.6] (105 samples, 0.05%)</title><rect x="7.8090%" y="453" width="0.0486%" height="15" fill="rgb(229,147,28)" fg:x="16874" fg:w="105"/><text x="8.0590%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (140 samples, 0.06%)</title><rect x="7.7937%" y="501" width="0.0648%" height="15" fill="rgb(211,29,28)" fg:x="16841" fg:w="140"/><text x="8.0437%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (140 samples, 0.06%)</title><rect x="7.7937%" y="485" width="0.0648%" height="15" fill="rgb(228,72,33)" fg:x="16841" fg:w="140"/><text x="8.0437%" y="495.50"></text></g><g><title>cfree (133 samples, 0.06%)</title><rect x="7.7969%" y="469" width="0.0615%" height="15" fill="rgb(205,214,31)" fg:x="16848" fg:w="133"/><text x="8.0469%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,805 samples, 0.84%)</title><rect x="7.0241%" y="597" width="0.8353%" height="15" fill="rgb(224,111,15)" fg:x="15178" fg:w="1805"/><text x="7.2741%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (1,804 samples, 0.83%)</title><rect x="7.0246%" y="581" width="0.8349%" height="15" fill="rgb(253,21,26)" fg:x="15179" fg:w="1804"/><text x="7.2746%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::Transaction&gt; (1,793 samples, 0.83%)</title><rect x="7.0296%" y="565" width="0.8298%" height="15" fill="rgb(245,139,43)" fg:x="15190" fg:w="1793"/><text x="7.2796%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt;&gt; (838 samples, 0.39%)</title><rect x="7.4716%" y="549" width="0.3878%" height="15" fill="rgb(252,170,7)" fg:x="16145" fg:w="838"/><text x="7.7216%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bitcoin::blockdata::transaction::TxOut&gt;&gt; (142 samples, 0.07%)</title><rect x="7.7937%" y="533" width="0.0657%" height="15" fill="rgb(231,118,14)" fg:x="16841" fg:w="142"/><text x="8.0437%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (142 samples, 0.07%)</title><rect x="7.7937%" y="517" width="0.0657%" height="15" fill="rgb(238,83,0)" fg:x="16841" fg:w="142"/><text x="8.0437%" y="527.50"></text></g><g><title>[libc.so.6] (148 samples, 0.07%)</title><rect x="7.8636%" y="517" width="0.0685%" height="15" fill="rgb(221,39,39)" fg:x="16992" fg:w="148"/><text x="8.1136%" y="527.50"></text></g><g><title>__lll_lock_wait_private (122 samples, 0.06%)</title><rect x="7.8756%" y="501" width="0.0565%" height="15" fill="rgb(222,119,46)" fg:x="17018" fg:w="122"/><text x="8.1256%" y="511.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="7.8779%" y="485" width="0.0541%" height="15" fill="rgb(222,165,49)" fg:x="17023" fg:w="117"/><text x="8.1279%" y="495.50"></text></g><g><title>[unknown] (111 samples, 0.05%)</title><rect x="7.8807%" y="469" width="0.0514%" height="15" fill="rgb(219,113,52)" fg:x="17029" fg:w="111"/><text x="8.1307%" y="479.50"></text></g><g><title>[unknown] (106 samples, 0.05%)</title><rect x="7.8830%" y="453" width="0.0491%" height="15" fill="rgb(214,7,15)" fg:x="17034" fg:w="106"/><text x="8.1330%" y="463.50"></text></g><g><title>[unknown] (103 samples, 0.05%)</title><rect x="7.8844%" y="437" width="0.0477%" height="15" fill="rgb(235,32,4)" fg:x="17037" fg:w="103"/><text x="8.1344%" y="447.50"></text></g><g><title>[unknown] (101 samples, 0.05%)</title><rect x="7.8853%" y="421" width="0.0467%" height="15" fill="rgb(238,90,54)" fg:x="17039" fg:w="101"/><text x="8.1353%" y="431.50"></text></g><g><title>[unknown] (98 samples, 0.05%)</title><rect x="7.8867%" y="405" width="0.0454%" height="15" fill="rgb(213,208,19)" fg:x="17042" fg:w="98"/><text x="8.1367%" y="415.50"></text></g><g><title>[unknown] (89 samples, 0.04%)</title><rect x="7.8909%" y="389" width="0.0412%" height="15" fill="rgb(233,156,4)" fg:x="17051" fg:w="89"/><text x="8.1409%" y="399.50"></text></g><g><title>[unknown] (85 samples, 0.04%)</title><rect x="7.8927%" y="373" width="0.0393%" height="15" fill="rgb(207,194,5)" fg:x="17055" fg:w="85"/><text x="8.1427%" y="383.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="7.8960%" y="357" width="0.0361%" height="15" fill="rgb(206,111,30)" fg:x="17062" fg:w="78"/><text x="8.1460%" y="367.50"></text></g><g><title>[unknown] (66 samples, 0.03%)</title><rect x="7.9015%" y="341" width="0.0305%" height="15" fill="rgb(243,70,54)" fg:x="17074" fg:w="66"/><text x="8.1515%" y="351.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="7.9126%" y="325" width="0.0194%" height="15" fill="rgb(242,28,8)" fg:x="17098" fg:w="42"/><text x="8.1626%" y="335.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="7.9196%" y="309" width="0.0125%" height="15" fill="rgb(219,106,18)" fg:x="17113" fg:w="27"/><text x="8.1696%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::block::Block&gt; (1,980 samples, 0.92%)</title><rect x="7.0241%" y="629" width="0.9163%" height="15" fill="rgb(244,222,10)" fg:x="15178" fg:w="1980"/><text x="7.2741%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::Transaction&gt;&gt; (1,980 samples, 0.92%)</title><rect x="7.0241%" y="613" width="0.9163%" height="15" fill="rgb(236,179,52)" fg:x="15178" fg:w="1980"/><text x="7.2741%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bitcoin::blockdata::transaction::Transaction&gt;&gt; (175 samples, 0.08%)</title><rect x="7.8594%" y="597" width="0.0810%" height="15" fill="rgb(213,23,39)" fg:x="16983" fg:w="175"/><text x="8.1094%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (175 samples, 0.08%)</title><rect x="7.8594%" y="581" width="0.0810%" height="15" fill="rgb(238,48,10)" fg:x="16983" fg:w="175"/><text x="8.1094%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (174 samples, 0.08%)</title><rect x="7.8599%" y="565" width="0.0805%" height="15" fill="rgb(251,196,23)" fg:x="16984" fg:w="174"/><text x="8.1099%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (174 samples, 0.08%)</title><rect x="7.8599%" y="549" width="0.0805%" height="15" fill="rgb(250,152,24)" fg:x="16984" fg:w="174"/><text x="8.1099%" y="559.50"></text></g><g><title>cfree (173 samples, 0.08%)</title><rect x="7.8603%" y="533" width="0.0801%" height="15" fill="rgb(209,150,17)" fg:x="16985" fg:w="173"/><text x="8.1103%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.03%)</title><rect x="7.9700%" y="613" width="0.0255%" height="15" fill="rgb(234,202,34)" fg:x="17222" fg:w="55"/><text x="8.2200%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.03%)</title><rect x="7.9700%" y="597" width="0.0255%" height="15" fill="rgb(253,148,53)" fg:x="17222" fg:w="55"/><text x="8.2200%" y="607.50"></text></g><g><title>floresta_watch_only::AddressCache&lt;D&gt;::block_process (87 samples, 0.04%)</title><rect x="7.9584%" y="629" width="0.0403%" height="15" fill="rgb(218,129,16)" fg:x="17197" fg:w="87"/><text x="8.2084%" y="639.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="8.0255%" y="469" width="0.0102%" height="15" fill="rgb(216,85,19)" fg:x="17342" fg:w="22"/><text x="8.2755%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (30 samples, 0.01%)</title><rect x="8.0232%" y="533" width="0.0139%" height="15" fill="rgb(235,228,7)" fg:x="17337" fg:w="30"/><text x="8.2732%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (30 samples, 0.01%)</title><rect x="8.0232%" y="517" width="0.0139%" height="15" fill="rgb(245,175,0)" fg:x="17337" fg:w="30"/><text x="8.2732%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (30 samples, 0.01%)</title><rect x="8.0232%" y="501" width="0.0139%" height="15" fill="rgb(208,168,36)" fg:x="17337" fg:w="30"/><text x="8.2732%" y="511.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (30 samples, 0.01%)</title><rect x="8.0232%" y="485" width="0.0139%" height="15" fill="rgb(246,171,24)" fg:x="17337" fg:w="30"/><text x="8.2732%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (57 samples, 0.03%)</title><rect x="8.0154%" y="597" width="0.0264%" height="15" fill="rgb(215,142,24)" fg:x="17320" fg:w="57"/><text x="8.2654%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (51 samples, 0.02%)</title><rect x="8.0181%" y="581" width="0.0236%" height="15" fill="rgb(250,187,7)" fg:x="17326" fg:w="51"/><text x="8.2681%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (43 samples, 0.02%)</title><rect x="8.0218%" y="565" width="0.0199%" height="15" fill="rgb(228,66,33)" fg:x="17334" fg:w="43"/><text x="8.2718%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (43 samples, 0.02%)</title><rect x="8.0218%" y="549" width="0.0199%" height="15" fill="rgb(234,215,21)" fg:x="17334" fg:w="43"/><text x="8.2718%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (45 samples, 0.02%)</title><rect x="8.0528%" y="581" width="0.0208%" height="15" fill="rgb(222,191,20)" fg:x="17401" fg:w="45"/><text x="8.3028%" y="591.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (186 samples, 0.09%)</title><rect x="8.0070%" y="629" width="0.0861%" height="15" fill="rgb(245,79,54)" fg:x="17302" fg:w="186"/><text x="8.2570%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (186 samples, 0.09%)</title><rect x="8.0070%" y="613" width="0.0861%" height="15" fill="rgb(240,10,37)" fg:x="17302" fg:w="186"/><text x="8.2570%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (111 samples, 0.05%)</title><rect x="8.0417%" y="597" width="0.0514%" height="15" fill="rgb(214,192,32)" fg:x="17377" fg:w="111"/><text x="8.2917%" y="607.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (42 samples, 0.02%)</title><rect x="8.0737%" y="581" width="0.0194%" height="15" fill="rgb(209,36,54)" fg:x="17446" fg:w="42"/><text x="8.3237%" y="591.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (42 samples, 0.02%)</title><rect x="8.0737%" y="565" width="0.0194%" height="15" fill="rgb(220,10,11)" fg:x="17446" fg:w="42"/><text x="8.3237%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (42 samples, 0.02%)</title><rect x="8.0737%" y="549" width="0.0194%" height="15" fill="rgb(221,106,17)" fg:x="17446" fg:w="42"/><text x="8.3237%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (42 samples, 0.02%)</title><rect x="8.0737%" y="533" width="0.0194%" height="15" fill="rgb(251,142,44)" fg:x="17446" fg:w="42"/><text x="8.3237%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.02%)</title><rect x="8.0737%" y="517" width="0.0194%" height="15" fill="rgb(238,13,15)" fg:x="17446" fg:w="42"/><text x="8.3237%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.02%)</title><rect x="8.0737%" y="501" width="0.0194%" height="15" fill="rgb(208,107,27)" fg:x="17446" fg:w="42"/><text x="8.3237%" y="511.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.02%)</title><rect x="8.0737%" y="485" width="0.0194%" height="15" fill="rgb(205,136,37)" fg:x="17446" fg:w="42"/><text x="8.3237%" y="495.50"></text></g><g><title>malloc (34 samples, 0.02%)</title><rect x="8.0774%" y="469" width="0.0157%" height="15" fill="rgb(250,205,27)" fg:x="17454" fg:w="34"/><text x="8.3274%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (53 samples, 0.02%)</title><rect x="8.0991%" y="597" width="0.0245%" height="15" fill="rgb(210,80,43)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (53 samples, 0.02%)</title><rect x="8.0991%" y="581" width="0.0245%" height="15" fill="rgb(247,160,36)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_str (53 samples, 0.02%)</title><rect x="8.0991%" y="565" width="0.0245%" height="15" fill="rgb(234,13,49)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (53 samples, 0.02%)</title><rect x="8.0991%" y="549" width="0.0245%" height="15" fill="rgb(234,122,0)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (53 samples, 0.02%)</title><rect x="8.0991%" y="533" width="0.0245%" height="15" fill="rgb(207,146,38)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (53 samples, 0.02%)</title><rect x="8.0991%" y="517" width="0.0245%" height="15" fill="rgb(207,177,25)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53 samples, 0.02%)</title><rect x="8.0991%" y="501" width="0.0245%" height="15" fill="rgb(211,178,42)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (53 samples, 0.02%)</title><rect x="8.0991%" y="485" width="0.0245%" height="15" fill="rgb(230,69,54)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 0.02%)</title><rect x="8.0991%" y="469" width="0.0245%" height="15" fill="rgb(214,135,41)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.02%)</title><rect x="8.0991%" y="453" width="0.0245%" height="15" fill="rgb(237,67,25)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.02%)</title><rect x="8.0991%" y="437" width="0.0245%" height="15" fill="rgb(222,189,50)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 0.02%)</title><rect x="8.0991%" y="421" width="0.0245%" height="15" fill="rgb(245,148,34)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.02%)</title><rect x="8.0991%" y="405" width="0.0245%" height="15" fill="rgb(222,29,6)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.02%)</title><rect x="8.0991%" y="389" width="0.0245%" height="15" fill="rgb(221,189,43)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="399.50"></text></g><g><title>alloc::alloc::alloc (53 samples, 0.02%)</title><rect x="8.0991%" y="373" width="0.0245%" height="15" fill="rgb(207,36,27)" fg:x="17501" fg:w="53"/><text x="8.3491%" y="383.50"></text></g><g><title>malloc (51 samples, 0.02%)</title><rect x="8.1001%" y="357" width="0.0236%" height="15" fill="rgb(217,90,24)" fg:x="17503" fg:w="51"/><text x="8.3501%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.01%)</title><rect x="8.1237%" y="469" width="0.0139%" height="15" fill="rgb(224,66,35)" fg:x="17554" fg:w="30"/><text x="8.3737%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.01%)</title><rect x="8.1237%" y="453" width="0.0139%" height="15" fill="rgb(221,13,50)" fg:x="17554" fg:w="30"/><text x="8.3737%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.01%)</title><rect x="8.1237%" y="437" width="0.0139%" height="15" fill="rgb(236,68,49)" fg:x="17554" fg:w="30"/><text x="8.3737%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.01%)</title><rect x="8.1237%" y="421" width="0.0139%" height="15" fill="rgb(229,146,28)" fg:x="17554" fg:w="30"/><text x="8.3737%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.01%)</title><rect x="8.1237%" y="405" width="0.0139%" height="15" fill="rgb(225,31,38)" fg:x="17554" fg:w="30"/><text x="8.3737%" y="415.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.01%)</title><rect x="8.1237%" y="389" width="0.0139%" height="15" fill="rgb(250,208,3)" fg:x="17554" fg:w="30"/><text x="8.3737%" y="399.50"></text></g><g><title>malloc (29 samples, 0.01%)</title><rect x="8.1241%" y="373" width="0.0134%" height="15" fill="rgb(246,54,23)" fg:x="17555" fg:w="29"/><text x="8.3741%" y="383.50"></text></g><g><title>floresta_electrum::electrum_protocol::ElectrumServer&lt;Blockchain&gt;::main_loop::{{closure}} (5,696 samples, 2.64%)</title><rect x="5.5025%" y="661" width="2.6360%" height="15" fill="rgb(243,76,11)" fg:x="11890" fg:w="5696"/><text x="5.7525%" y="671.50">fl..</text></g><g><title>floresta_electrum::electrum_protocol::ElectrumServer&lt;Blockchain&gt;::handle_notification::{{closure}} (5,194 samples, 2.40%)</title><rect x="5.7348%" y="645" width="2.4037%" height="15" fill="rgb(245,21,50)" fg:x="12392" fg:w="5194"/><text x="5.9848%" y="655.50">fl..</text></g><g><title>serde_json::value::to_value (85 samples, 0.04%)</title><rect x="8.0991%" y="629" width="0.0393%" height="15" fill="rgb(228,9,43)" fg:x="17501" fg:w="85"/><text x="8.3491%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (85 samples, 0.04%)</title><rect x="8.0991%" y="613" width="0.0393%" height="15" fill="rgb(208,100,47)" fg:x="17501" fg:w="85"/><text x="8.3491%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::string::String&gt;::serialize (32 samples, 0.01%)</title><rect x="8.1237%" y="597" width="0.0148%" height="15" fill="rgb(232,26,8)" fg:x="17554" fg:w="32"/><text x="8.3737%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_str (32 samples, 0.01%)</title><rect x="8.1237%" y="581" width="0.0148%" height="15" fill="rgb(216,166,38)" fg:x="17554" fg:w="32"/><text x="8.3737%" y="591.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (32 samples, 0.01%)</title><rect x="8.1237%" y="565" width="0.0148%" height="15" fill="rgb(251,202,51)" fg:x="17554" fg:w="32"/><text x="8.3737%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (32 samples, 0.01%)</title><rect x="8.1237%" y="549" width="0.0148%" height="15" fill="rgb(254,216,34)" fg:x="17554" fg:w="32"/><text x="8.3737%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (32 samples, 0.01%)</title><rect x="8.1237%" y="533" width="0.0148%" height="15" fill="rgb(251,32,27)" fg:x="17554" fg:w="32"/><text x="8.3737%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.01%)</title><rect x="8.1237%" y="517" width="0.0148%" height="15" fill="rgb(208,127,28)" fg:x="17554" fg:w="32"/><text x="8.3737%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.01%)</title><rect x="8.1237%" y="501" width="0.0148%" height="15" fill="rgb(224,137,22)" fg:x="17554" fg:w="32"/><text x="8.3737%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.01%)</title><rect x="8.1237%" y="485" width="0.0148%" height="15" fill="rgb(254,70,32)" fg:x="17554" fg:w="32"/><text x="8.3737%" y="495.50"></text></g><g><title>&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (50 samples, 0.02%)</title><rect x="8.2417%" y="485" width="0.0231%" height="15" fill="rgb(229,75,37)" fg:x="17809" fg:w="50"/><text x="8.4917%" y="495.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="8.2431%" y="469" width="0.0218%" height="15" fill="rgb(252,64,23)" fg:x="17812" fg:w="47"/><text x="8.4931%" y="479.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (56 samples, 0.03%)</title><rect x="8.2648%" y="485" width="0.0259%" height="15" fill="rgb(232,162,48)" fg:x="17859" fg:w="56"/><text x="8.5148%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (55 samples, 0.03%)</title><rect x="8.2653%" y="469" width="0.0255%" height="15" fill="rgb(246,160,12)" fg:x="17860" fg:w="55"/><text x="8.5153%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (42 samples, 0.02%)</title><rect x="8.2713%" y="453" width="0.0194%" height="15" fill="rgb(247,166,0)" fg:x="17873" fg:w="42"/><text x="8.5213%" y="463.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (141 samples, 0.07%)</title><rect x="8.2366%" y="517" width="0.0653%" height="15" fill="rgb(249,219,21)" fg:x="17798" fg:w="141"/><text x="8.4866%" y="527.50"></text></g><g><title>async_channel::Recv&lt;T&gt;::run_with_strategy (136 samples, 0.06%)</title><rect x="8.2389%" y="501" width="0.0629%" height="15" fill="rgb(205,209,3)" fg:x="17803" fg:w="136"/><text x="8.4889%" y="511.50"></text></g><g><title>event_listener::Event::listen (22 samples, 0.01%)</title><rect x="8.2916%" y="485" width="0.0102%" height="15" fill="rgb(243,44,1)" fg:x="17917" fg:w="22"/><text x="8.5416%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (124 samples, 0.06%)</title><rect x="8.3398%" y="437" width="0.0574%" height="15" fill="rgb(206,159,16)" fg:x="18021" fg:w="124"/><text x="8.5898%" y="447.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (109 samples, 0.05%)</title><rect x="8.3467%" y="421" width="0.0504%" height="15" fill="rgb(244,77,30)" fg:x="18036" fg:w="109"/><text x="8.5967%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (23 samples, 0.01%)</title><rect x="8.3865%" y="405" width="0.0106%" height="15" fill="rgb(218,69,12)" fg:x="18122" fg:w="23"/><text x="8.6365%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.01%)</title><rect x="8.3865%" y="389" width="0.0106%" height="15" fill="rgb(212,87,7)" fg:x="18122" fg:w="23"/><text x="8.6365%" y="399.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (149 samples, 0.07%)</title><rect x="8.3319%" y="453" width="0.0690%" height="15" fill="rgb(245,114,25)" fg:x="18004" fg:w="149"/><text x="8.5819%" y="463.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (202 samples, 0.09%)</title><rect x="8.3157%" y="485" width="0.0935%" height="15" fill="rgb(210,61,42)" fg:x="17969" fg:w="202"/><text x="8.5657%" y="495.50"></text></g><g><title>async_channel::Recv&lt;T&gt;::run_with_strategy (197 samples, 0.09%)</title><rect x="8.3180%" y="469" width="0.0912%" height="15" fill="rgb(211,52,33)" fg:x="17974" fg:w="197"/><text x="8.5680%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (325 samples, 0.15%)</title><rect x="8.4286%" y="437" width="0.1504%" height="15" fill="rgb(234,58,33)" fg:x="18213" fg:w="325"/><text x="8.6786%" y="447.50"></text></g><g><title>polling::Poller::notify (323 samples, 0.15%)</title><rect x="8.4296%" y="421" width="0.1495%" height="15" fill="rgb(220,115,36)" fg:x="18215" fg:w="323"/><text x="8.6796%" y="431.50"></text></g><g><title>polling::epoll::Poller::notify (311 samples, 0.14%)</title><rect x="8.4351%" y="405" width="0.1439%" height="15" fill="rgb(243,153,54)" fg:x="18227" fg:w="311"/><text x="8.6851%" y="415.50"></text></g><g><title>write (307 samples, 0.14%)</title><rect x="8.4370%" y="389" width="0.1421%" height="15" fill="rgb(251,47,18)" fg:x="18231" fg:w="307"/><text x="8.6870%" y="399.50"></text></g><g><title>[unknown] (284 samples, 0.13%)</title><rect x="8.4476%" y="373" width="0.1314%" height="15" fill="rgb(242,102,42)" fg:x="18254" fg:w="284"/><text x="8.6976%" y="383.50"></text></g><g><title>[unknown] (269 samples, 0.12%)</title><rect x="8.4545%" y="357" width="0.1245%" height="15" fill="rgb(234,31,38)" fg:x="18269" fg:w="269"/><text x="8.7045%" y="367.50"></text></g><g><title>[unknown] (243 samples, 0.11%)</title><rect x="8.4666%" y="341" width="0.1125%" height="15" fill="rgb(221,117,51)" fg:x="18295" fg:w="243"/><text x="8.7166%" y="351.50"></text></g><g><title>[unknown] (235 samples, 0.11%)</title><rect x="8.4703%" y="325" width="0.1088%" height="15" fill="rgb(212,20,18)" fg:x="18303" fg:w="235"/><text x="8.7203%" y="335.50"></text></g><g><title>[unknown] (217 samples, 0.10%)</title><rect x="8.4786%" y="309" width="0.1004%" height="15" fill="rgb(245,133,36)" fg:x="18321" fg:w="217"/><text x="8.7286%" y="319.50"></text></g><g><title>[unknown] (185 samples, 0.09%)</title><rect x="8.4934%" y="293" width="0.0856%" height="15" fill="rgb(212,6,19)" fg:x="18353" fg:w="185"/><text x="8.7434%" y="303.50"></text></g><g><title>[unknown] (144 samples, 0.07%)</title><rect x="8.5124%" y="277" width="0.0666%" height="15" fill="rgb(218,1,36)" fg:x="18394" fg:w="144"/><text x="8.7624%" y="287.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="8.5249%" y="261" width="0.0541%" height="15" fill="rgb(246,84,54)" fg:x="18421" fg:w="117"/><text x="8.7749%" y="271.50"></text></g><g><title>[unknown] (99 samples, 0.05%)</title><rect x="8.5332%" y="245" width="0.0458%" height="15" fill="rgb(242,110,6)" fg:x="18439" fg:w="99"/><text x="8.7832%" y="255.50"></text></g><g><title>[unknown] (90 samples, 0.04%)</title><rect x="8.5374%" y="229" width="0.0417%" height="15" fill="rgb(214,47,5)" fg:x="18448" fg:w="90"/><text x="8.7874%" y="239.50"></text></g><g><title>[unknown] (87 samples, 0.04%)</title><rect x="8.5388%" y="213" width="0.0403%" height="15" fill="rgb(218,159,25)" fg:x="18451" fg:w="87"/><text x="8.7888%" y="223.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="8.5503%" y="197" width="0.0287%" height="15" fill="rgb(215,211,28)" fg:x="18476" fg:w="62"/><text x="8.8003%" y="207.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="8.5642%" y="181" width="0.0148%" height="15" fill="rgb(238,59,32)" fg:x="18506" fg:w="32"/><text x="8.8142%" y="191.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (345 samples, 0.16%)</title><rect x="8.4268%" y="453" width="0.1597%" height="15" fill="rgb(226,82,3)" fg:x="18209" fg:w="345"/><text x="8.6768%" y="463.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (396 samples, 0.18%)</title><rect x="8.4092%" y="485" width="0.1833%" height="15" fill="rgb(240,164,32)" fg:x="18171" fg:w="396"/><text x="8.6592%" y="495.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (391 samples, 0.18%)</title><rect x="8.4115%" y="469" width="0.1809%" height="15" fill="rgb(232,46,7)" fg:x="18176" fg:w="391"/><text x="8.6615%" y="479.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (612 samples, 0.28%)</title><rect x="8.3111%" y="501" width="0.2832%" height="15" fill="rgb(229,129,53)" fg:x="17959" fg:w="612"/><text x="8.5611%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (50 samples, 0.02%)</title><rect x="8.6100%" y="453" width="0.0231%" height="15" fill="rgb(234,188,29)" fg:x="18605" fg:w="50"/><text x="8.8600%" y="463.50"></text></g><g><title>clock_gettime (45 samples, 0.02%)</title><rect x="8.6124%" y="437" width="0.0208%" height="15" fill="rgb(246,141,4)" fg:x="18610" fg:w="45"/><text x="8.8624%" y="447.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (80 samples, 0.04%)</title><rect x="8.5985%" y="501" width="0.0370%" height="15" fill="rgb(229,23,39)" fg:x="18580" fg:w="80"/><text x="8.8485%" y="511.50"></text></g><g><title>async_std::utils::timer_after (76 samples, 0.04%)</title><rect x="8.6003%" y="485" width="0.0352%" height="15" fill="rgb(206,12,3)" fg:x="18584" fg:w="76"/><text x="8.8503%" y="495.50"></text></g><g><title>async_io::Timer::after (71 samples, 0.03%)</title><rect x="8.6026%" y="469" width="0.0329%" height="15" fill="rgb(252,226,20)" fg:x="18589" fg:w="71"/><text x="8.8526%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;core::result::Result&lt;bitcoin::network::message::RawNetworkMessage,floresta_wire::p2p_wire::peer::PeerError&gt;&gt;&gt; (33 samples, 0.02%)</title><rect x="8.6383%" y="485" width="0.0153%" height="15" fill="rgb(216,123,35)" fg:x="18666" fg:w="33"/><text x="8.8883%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (33 samples, 0.02%)</title><rect x="8.6383%" y="469" width="0.0153%" height="15" fill="rgb(212,68,40)" fg:x="18666" fg:w="33"/><text x="8.8883%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (33 samples, 0.02%)</title><rect x="8.6383%" y="453" width="0.0153%" height="15" fill="rgb(254,125,32)" fg:x="18666" fg:w="33"/><text x="8.8883%" y="463.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (33 samples, 0.02%)</title><rect x="8.6383%" y="437" width="0.0153%" height="15" fill="rgb(253,97,22)" fg:x="18666" fg:w="33"/><text x="8.8883%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (32 samples, 0.01%)</title><rect x="8.6628%" y="453" width="0.0148%" height="15" fill="rgb(241,101,14)" fg:x="18719" fg:w="32"/><text x="8.9128%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (24 samples, 0.01%)</title><rect x="8.6665%" y="437" width="0.0111%" height="15" fill="rgb(238,103,29)" fg:x="18727" fg:w="24"/><text x="8.9165%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (23 samples, 0.01%)</title><rect x="8.6670%" y="421" width="0.0106%" height="15" fill="rgb(233,195,47)" fg:x="18728" fg:w="23"/><text x="8.9170%" y="431.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (53 samples, 0.02%)</title><rect x="8.6535%" y="469" width="0.0245%" height="15" fill="rgb(246,218,30)" fg:x="18699" fg:w="53"/><text x="8.9035%" y="479.50"></text></g><g><title>async_std::future::timeout::timeout::{{closure}} (829 samples, 0.38%)</title><rect x="8.3018%" y="517" width="0.3836%" height="15" fill="rgb(219,145,47)" fg:x="17939" fg:w="829"/><text x="8.5518%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;async_channel::Recv&lt;core::result::Result&lt;bitcoin::network::message::RawNetworkMessage,floresta_wire::p2p_wire::peer::PeerError&gt;&gt;&gt;&gt; (108 samples, 0.05%)</title><rect x="8.6355%" y="501" width="0.0500%" height="15" fill="rgb(243,12,26)" fg:x="18660" fg:w="108"/><text x="8.8855%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (69 samples, 0.03%)</title><rect x="8.6535%" y="485" width="0.0319%" height="15" fill="rgb(214,87,16)" fg:x="18699" fg:w="69"/><text x="8.9035%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,084 samples, 0.50%)</title><rect x="8.1917%" y="597" width="0.5017%" height="15" fill="rgb(208,99,42)" fg:x="17701" fg:w="1084"/><text x="8.4417%" y="607.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer&lt;T&gt;::peer_loop_inner::{{closure}}::{{closure}}::{{closure}} (1,081 samples, 0.50%)</title><rect x="8.1931%" y="581" width="0.5003%" height="15" fill="rgb(253,99,2)" fg:x="17704" fg:w="1081"/><text x="8.4431%" y="591.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1,015 samples, 0.47%)</title><rect x="8.2236%" y="565" width="0.4697%" height="15" fill="rgb(220,168,23)" fg:x="17770" fg:w="1015"/><text x="8.4736%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,015 samples, 0.47%)</title><rect x="8.2236%" y="549" width="0.4697%" height="15" fill="rgb(242,38,24)" fg:x="17770" fg:w="1015"/><text x="8.4736%" y="559.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,012 samples, 0.47%)</title><rect x="8.2250%" y="533" width="0.4683%" height="15" fill="rgb(225,182,9)" fg:x="17773" fg:w="1012"/><text x="8.4750%" y="543.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,162 samples, 0.54%)</title><rect x="8.1755%" y="629" width="0.5378%" height="15" fill="rgb(243,178,37)" fg:x="17666" fg:w="1162"/><text x="8.4255%" y="639.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer&lt;T&gt;::peer_loop_inner::{{closure}}::{{closure}} (1,144 samples, 0.53%)</title><rect x="8.1838%" y="613" width="0.5294%" height="15" fill="rgb(232,139,19)" fg:x="17684" fg:w="1144"/><text x="8.4338%" y="623.50"></text></g><g><title>futures_util::async_await::random::shuffle (43 samples, 0.02%)</title><rect x="8.6933%" y="597" width="0.0199%" height="15" fill="rgb(225,201,24)" fg:x="18785" fg:w="43"/><text x="8.9433%" y="607.50"></text></g><g><title>futures_util::async_await::random::gen_index (37 samples, 0.02%)</title><rect x="8.6961%" y="581" width="0.0171%" height="15" fill="rgb(221,47,46)" fg:x="18791" fg:w="37"/><text x="8.9461%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;async_channel::Recv&lt;floresta_wire::p2p_wire::node::NodeRequest&gt;&gt;&gt; (23 samples, 0.01%)</title><rect x="8.7336%" y="629" width="0.0106%" height="15" fill="rgb(249,23,13)" fg:x="18872" fg:w="23"/><text x="8.9836%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;async_channel::Recv&lt;floresta_wire::p2p_wire::node::NodeRequest&gt;&gt;&gt; (23 samples, 0.01%)</title><rect x="8.7336%" y="613" width="0.0106%" height="15" fill="rgb(219,9,5)" fg:x="18872" fg:w="23"/><text x="8.9836%" y="623.50"></text></g><g><title>__send (319 samples, 0.15%)</title><rect x="8.7757%" y="485" width="0.1476%" height="15" fill="rgb(254,171,16)" fg:x="18963" fg:w="319"/><text x="9.0257%" y="495.50"></text></g><g><title>[unknown] (312 samples, 0.14%)</title><rect x="8.7790%" y="469" width="0.1444%" height="15" fill="rgb(230,171,20)" fg:x="18970" fg:w="312"/><text x="9.0290%" y="479.50"></text></g><g><title>[unknown] (306 samples, 0.14%)</title><rect x="8.7817%" y="453" width="0.1416%" height="15" fill="rgb(210,71,41)" fg:x="18976" fg:w="306"/><text x="9.0317%" y="463.50"></text></g><g><title>[unknown] (300 samples, 0.14%)</title><rect x="8.7845%" y="437" width="0.1388%" height="15" fill="rgb(206,173,20)" fg:x="18982" fg:w="300"/><text x="9.0345%" y="447.50"></text></g><g><title>[unknown] (296 samples, 0.14%)</title><rect x="8.7864%" y="421" width="0.1370%" height="15" fill="rgb(233,88,34)" fg:x="18986" fg:w="296"/><text x="9.0364%" y="431.50"></text></g><g><title>[unknown] (286 samples, 0.13%)</title><rect x="8.7910%" y="405" width="0.1324%" height="15" fill="rgb(223,209,46)" fg:x="18996" fg:w="286"/><text x="9.0410%" y="415.50"></text></g><g><title>[unknown] (280 samples, 0.13%)</title><rect x="8.7938%" y="389" width="0.1296%" height="15" fill="rgb(250,43,18)" fg:x="19002" fg:w="280"/><text x="9.0438%" y="399.50"></text></g><g><title>[unknown] (265 samples, 0.12%)</title><rect x="8.8007%" y="373" width="0.1226%" height="15" fill="rgb(208,13,10)" fg:x="19017" fg:w="265"/><text x="9.0507%" y="383.50"></text></g><g><title>[unknown] (233 samples, 0.11%)</title><rect x="8.8155%" y="357" width="0.1078%" height="15" fill="rgb(212,200,36)" fg:x="19049" fg:w="233"/><text x="9.0655%" y="367.50"></text></g><g><title>[unknown] (210 samples, 0.10%)</title><rect x="8.8262%" y="341" width="0.0972%" height="15" fill="rgb(225,90,30)" fg:x="19072" fg:w="210"/><text x="9.0762%" y="351.50"></text></g><g><title>[unknown] (170 samples, 0.08%)</title><rect x="8.8447%" y="325" width="0.0787%" height="15" fill="rgb(236,182,39)" fg:x="19112" fg:w="170"/><text x="9.0947%" y="335.50"></text></g><g><title>[unknown] (140 samples, 0.06%)</title><rect x="8.8586%" y="309" width="0.0648%" height="15" fill="rgb(212,144,35)" fg:x="19142" fg:w="140"/><text x="9.1086%" y="319.50"></text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="8.8627%" y="293" width="0.0606%" height="15" fill="rgb(228,63,44)" fg:x="19151" fg:w="131"/><text x="9.1127%" y="303.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="8.8660%" y="277" width="0.0574%" height="15" fill="rgb(228,109,6)" fg:x="19158" fg:w="124"/><text x="9.1160%" y="287.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="8.8692%" y="261" width="0.0541%" height="15" fill="rgb(238,117,24)" fg:x="19165" fg:w="117"/><text x="9.1192%" y="271.50"></text></g><g><title>[unknown] (111 samples, 0.05%)</title><rect x="8.8720%" y="245" width="0.0514%" height="15" fill="rgb(242,26,26)" fg:x="19171" fg:w="111"/><text x="9.1220%" y="255.50"></text></g><g><title>[unknown] (106 samples, 0.05%)</title><rect x="8.8743%" y="229" width="0.0491%" height="15" fill="rgb(221,92,48)" fg:x="19176" fg:w="106"/><text x="9.1243%" y="239.50"></text></g><g><title>[unknown] (94 samples, 0.04%)</title><rect x="8.8798%" y="213" width="0.0435%" height="15" fill="rgb(209,209,32)" fg:x="19188" fg:w="94"/><text x="9.1298%" y="223.50"></text></g><g><title>[unknown] (92 samples, 0.04%)</title><rect x="8.8808%" y="197" width="0.0426%" height="15" fill="rgb(221,70,22)" fg:x="19190" fg:w="92"/><text x="9.1308%" y="207.50"></text></g><g><title>[unknown] (89 samples, 0.04%)</title><rect x="8.8822%" y="181" width="0.0412%" height="15" fill="rgb(248,145,5)" fg:x="19193" fg:w="89"/><text x="9.1322%" y="191.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="8.8872%" y="165" width="0.0361%" height="15" fill="rgb(226,116,26)" fg:x="19204" fg:w="78"/><text x="9.1372%" y="175.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="8.8896%" y="149" width="0.0338%" height="15" fill="rgb(244,5,17)" fg:x="19209" fg:w="73"/><text x="9.1396%" y="159.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="8.8974%" y="133" width="0.0259%" height="15" fill="rgb(252,159,33)" fg:x="19226" fg:w="56"/><text x="9.1474%" y="143.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="8.9016%" y="117" width="0.0218%" height="15" fill="rgb(206,71,0)" fg:x="19235" fg:w="47"/><text x="9.1516%" y="127.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="8.9053%" y="101" width="0.0180%" height="15" fill="rgb(233,118,54)" fg:x="19243" fg:w="39"/><text x="9.1553%" y="111.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="8.9085%" y="85" width="0.0148%" height="15" fill="rgb(234,83,48)" fg:x="19250" fg:w="32"/><text x="9.1585%" y="95.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="8.9099%" y="69" width="0.0134%" height="15" fill="rgb(228,3,54)" fg:x="19253" fg:w="29"/><text x="9.1599%" y="79.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (322 samples, 0.15%)</title><rect x="8.7753%" y="517" width="0.1490%" height="15" fill="rgb(226,155,13)" fg:x="18962" fg:w="322"/><text x="9.0253%" y="527.50"></text></g><g><title>std::sys_common::net::TcpStream::write (321 samples, 0.15%)</title><rect x="8.7757%" y="501" width="0.1486%" height="15" fill="rgb(241,28,37)" fg:x="18963" fg:w="321"/><text x="9.0257%" y="511.50"></text></g><g><title>&lt;futures_util::io::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (331 samples, 0.15%)</title><rect x="8.7715%" y="597" width="0.1532%" height="15" fill="rgb(233,93,10)" fg:x="18954" fg:w="331"/><text x="9.0215%" y="607.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncWrite&gt;::poll_write (331 samples, 0.15%)</title><rect x="8.7715%" y="581" width="0.1532%" height="15" fill="rgb(225,113,19)" fg:x="18954" fg:w="331"/><text x="9.0215%" y="591.50"></text></g><g><title>&lt;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (331 samples, 0.15%)</title><rect x="8.7715%" y="565" width="0.1532%" height="15" fill="rgb(241,2,18)" fg:x="18954" fg:w="331"/><text x="9.0215%" y="575.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (327 samples, 0.15%)</title><rect x="8.7734%" y="549" width="0.1513%" height="15" fill="rgb(228,207,21)" fg:x="18958" fg:w="327"/><text x="9.0234%" y="559.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (327 samples, 0.15%)</title><rect x="8.7734%" y="533" width="0.1513%" height="15" fill="rgb(213,211,35)" fg:x="18958" fg:w="327"/><text x="9.0234%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (24 samples, 0.01%)</title><rect x="8.9511%" y="469" width="0.0111%" height="15" fill="rgb(209,83,10)" fg:x="19342" fg:w="24"/><text x="9.2011%" y="479.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (96 samples, 0.04%)</title><rect x="8.9354%" y="485" width="0.0444%" height="15" fill="rgb(209,164,1)" fg:x="19308" fg:w="96"/><text x="9.1854%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (38 samples, 0.02%)</title><rect x="8.9622%" y="469" width="0.0176%" height="15" fill="rgb(213,184,43)" fg:x="19366" fg:w="38"/><text x="9.2122%" y="479.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (97 samples, 0.04%)</title><rect x="8.9354%" y="501" width="0.0449%" height="15" fill="rgb(231,61,34)" fg:x="19308" fg:w="97"/><text x="9.1854%" y="511.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (43 samples, 0.02%)</title><rect x="8.9849%" y="453" width="0.0199%" height="15" fill="rgb(235,75,3)" fg:x="19415" fg:w="43"/><text x="9.2349%" y="463.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (50 samples, 0.02%)</title><rect x="8.9844%" y="469" width="0.0231%" height="15" fill="rgb(220,106,47)" fg:x="19414" fg:w="50"/><text x="9.2344%" y="479.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (55 samples, 0.03%)</title><rect x="8.9830%" y="485" width="0.0255%" height="15" fill="rgb(210,196,33)" fg:x="19411" fg:w="55"/><text x="9.2330%" y="495.50"></text></g><g><title>&lt;bitcoin::consensus::encode::CheckedData as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (193 samples, 0.09%)</title><rect x="8.9280%" y="549" width="0.0893%" height="15" fill="rgb(229,154,42)" fg:x="19292" fg:w="193"/><text x="9.1780%" y="559.50"></text></g><g><title>bitcoin::consensus::encode::sha2_checksum (178 samples, 0.08%)</title><rect x="8.9349%" y="533" width="0.0824%" height="15" fill="rgb(228,114,26)" fg:x="19307" fg:w="178"/><text x="9.1849%" y="543.50"></text></g><g><title>bitcoin_hashes::Hash::hash (177 samples, 0.08%)</title><rect x="8.9354%" y="517" width="0.0819%" height="15" fill="rgb(208,144,1)" fg:x="19308" fg:w="177"/><text x="9.1854%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (74 samples, 0.03%)</title><rect x="8.9830%" y="501" width="0.0342%" height="15" fill="rgb(239,112,37)" fg:x="19411" fg:w="74"/><text x="9.2330%" y="511.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (23 samples, 0.01%)</title><rect x="9.0187%" y="549" width="0.0106%" height="15" fill="rgb(210,96,50)" fg:x="19488" fg:w="23"/><text x="9.2687%" y="559.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (23 samples, 0.01%)</title><rect x="9.0187%" y="533" width="0.0106%" height="15" fill="rgb(222,178,2)" fg:x="19488" fg:w="23"/><text x="9.2687%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (23 samples, 0.01%)</title><rect x="9.0187%" y="517" width="0.0106%" height="15" fill="rgb(226,74,18)" fg:x="19488" fg:w="23"/><text x="9.2687%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.01%)</title><rect x="9.0187%" y="501" width="0.0106%" height="15" fill="rgb(225,67,54)" fg:x="19488" fg:w="23"/><text x="9.2687%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.01%)</title><rect x="9.0187%" y="485" width="0.0106%" height="15" fill="rgb(251,92,32)" fg:x="19488" fg:w="23"/><text x="9.2687%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.01%)</title><rect x="9.0187%" y="469" width="0.0106%" height="15" fill="rgb(228,149,22)" fg:x="19488" fg:w="23"/><text x="9.2687%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.01%)</title><rect x="9.0191%" y="453" width="0.0102%" height="15" fill="rgb(243,54,13)" fg:x="19489" fg:w="22"/><text x="9.2691%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.01%)</title><rect x="9.0191%" y="437" width="0.0102%" height="15" fill="rgb(243,180,28)" fg:x="19489" fg:w="22"/><text x="9.2691%" y="447.50"></text></g><g><title>bitcoin::consensus::encode::serialize (34 samples, 0.02%)</title><rect x="9.0293%" y="549" width="0.0157%" height="15" fill="rgb(208,167,24)" fg:x="19511" fg:w="34"/><text x="9.2793%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::network::message_blockdata::Inventory&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (32 samples, 0.01%)</title><rect x="9.0302%" y="533" width="0.0148%" height="15" fill="rgb(245,73,45)" fg:x="19513" fg:w="32"/><text x="9.2802%" y="543.50"></text></g><g><title>&lt;bitcoin::network::message_blockdata::Inventory as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (26 samples, 0.01%)</title><rect x="9.0330%" y="517" width="0.0120%" height="15" fill="rgb(237,203,48)" fg:x="19519" fg:w="26"/><text x="9.2830%" y="527.50"></text></g><g><title>bitcoin::consensus::encode::serialize (279 samples, 0.13%)</title><rect x="8.9247%" y="597" width="0.1291%" height="15" fill="rgb(211,197,16)" fg:x="19285" fg:w="279"/><text x="9.1747%" y="607.50"></text></g><g><title>&lt;&amp;mut T as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (276 samples, 0.13%)</title><rect x="8.9261%" y="581" width="0.1277%" height="15" fill="rgb(243,99,51)" fg:x="19288" fg:w="276"/><text x="9.1761%" y="591.50"></text></g><g><title>&lt;bitcoin::network::message::RawNetworkMessage as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (275 samples, 0.13%)</title><rect x="8.9266%" y="565" width="0.1273%" height="15" fill="rgb(215,123,29)" fg:x="19289" fg:w="275"/><text x="9.1766%" y="575.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer&lt;T&gt;::handle_node_request::{{closure}} (664 samples, 0.31%)</title><rect x="8.7540%" y="629" width="0.3073%" height="15" fill="rgb(239,186,37)" fg:x="18916" fg:w="664"/><text x="9.0040%" y="639.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer&lt;T&gt;::write::{{closure}} (636 samples, 0.29%)</title><rect x="8.7669%" y="613" width="0.2943%" height="15" fill="rgb(252,136,39)" fg:x="18944" fg:w="636"/><text x="9.0169%" y="623.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="9.0710%" y="613" width="0.0106%" height="15" fill="rgb(223,213,32)" fg:x="19601" fg:w="23"/><text x="9.3210%" y="623.50"></text></g><g><title>[libc.so.6] (44 samples, 0.02%)</title><rect x="9.1200%" y="405" width="0.0204%" height="15" fill="rgb(233,115,5)" fg:x="19707" fg:w="44"/><text x="9.3700%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (66 samples, 0.03%)</title><rect x="9.1103%" y="517" width="0.0305%" height="15" fill="rgb(207,226,44)" fg:x="19686" fg:w="66"/><text x="9.3603%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (63 samples, 0.03%)</title><rect x="9.1117%" y="501" width="0.0292%" height="15" fill="rgb(208,126,0)" fg:x="19689" fg:w="63"/><text x="9.3617%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.03%)</title><rect x="9.1117%" y="485" width="0.0292%" height="15" fill="rgb(244,66,21)" fg:x="19689" fg:w="63"/><text x="9.3617%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.03%)</title><rect x="9.1117%" y="469" width="0.0292%" height="15" fill="rgb(222,97,12)" fg:x="19689" fg:w="63"/><text x="9.3617%" y="479.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.03%)</title><rect x="9.1117%" y="453" width="0.0292%" height="15" fill="rgb(219,213,19)" fg:x="19689" fg:w="63"/><text x="9.3617%" y="463.50"></text></g><g><title>malloc (63 samples, 0.03%)</title><rect x="9.1117%" y="437" width="0.0292%" height="15" fill="rgb(252,169,30)" fg:x="19689" fg:w="63"/><text x="9.3617%" y="447.50"></text></g><g><title>[libc.so.6] (62 samples, 0.03%)</title><rect x="9.1122%" y="421" width="0.0287%" height="15" fill="rgb(206,32,51)" fg:x="19690" fg:w="62"/><text x="9.3622%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (125 samples, 0.06%)</title><rect x="9.0918%" y="549" width="0.0578%" height="15" fill="rgb(250,172,42)" fg:x="19646" fg:w="125"/><text x="9.3418%" y="559.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (115 samples, 0.05%)</title><rect x="9.0964%" y="533" width="0.0532%" height="15" fill="rgb(209,34,43)" fg:x="19656" fg:w="115"/><text x="9.3464%" y="543.50"></text></g><g><title>event_listener::List::notify_additional (43 samples, 0.02%)</title><rect x="9.1547%" y="533" width="0.0199%" height="15" fill="rgb(223,11,35)" fg:x="19782" fg:w="43"/><text x="9.4047%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake (43 samples, 0.02%)</title><rect x="9.1547%" y="517" width="0.0199%" height="15" fill="rgb(251,219,26)" fg:x="19782" fg:w="43"/><text x="9.4047%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (43 samples, 0.02%)</title><rect x="9.1547%" y="501" width="0.0199%" height="15" fill="rgb(231,119,3)" fg:x="19782" fg:w="43"/><text x="9.4047%" y="511.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (41 samples, 0.02%)</title><rect x="9.1557%" y="485" width="0.0190%" height="15" fill="rgb(216,97,11)" fg:x="19784" fg:w="41"/><text x="9.4057%" y="495.50"></text></g><g><title>parking::Unparker::unpark (38 samples, 0.02%)</title><rect x="9.1570%" y="469" width="0.0176%" height="15" fill="rgb(223,59,9)" fg:x="19787" fg:w="38"/><text x="9.4070%" y="479.50"></text></g><g><title>parking::Inner::unpark (36 samples, 0.02%)</title><rect x="9.1580%" y="453" width="0.0167%" height="15" fill="rgb(233,93,31)" fg:x="19789" fg:w="36"/><text x="9.4080%" y="463.50"></text></g><g><title>syscall (35 samples, 0.02%)</title><rect x="9.1584%" y="437" width="0.0162%" height="15" fill="rgb(239,81,33)" fg:x="19790" fg:w="35"/><text x="9.4084%" y="447.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="9.1584%" y="421" width="0.0162%" height="15" fill="rgb(213,120,34)" fg:x="19790" fg:w="35"/><text x="9.4084%" y="431.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="9.1612%" y="405" width="0.0134%" height="15" fill="rgb(243,49,53)" fg:x="19796" fg:w="29"/><text x="9.4112%" y="415.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="9.1626%" y="389" width="0.0120%" height="15" fill="rgb(247,216,33)" fg:x="19799" fg:w="26"/><text x="9.4126%" y="399.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="9.1635%" y="373" width="0.0111%" height="15" fill="rgb(226,26,14)" fg:x="19801" fg:w="24"/><text x="9.4135%" y="383.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="9.1640%" y="357" width="0.0106%" height="15" fill="rgb(215,49,53)" fg:x="19802" fg:w="23"/><text x="9.4140%" y="367.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (181 samples, 0.08%)</title><rect x="9.0913%" y="565" width="0.0838%" height="15" fill="rgb(245,162,40)" fg:x="19645" fg:w="181"/><text x="9.3413%" y="575.50"></text></g><g><title>event_listener::Event::notify_additional (51 samples, 0.02%)</title><rect x="9.1515%" y="549" width="0.0236%" height="15" fill="rgb(229,68,17)" fg:x="19775" fg:w="51"/><text x="9.4015%" y="559.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (202 samples, 0.09%)</title><rect x="9.0886%" y="597" width="0.0935%" height="15" fill="rgb(213,182,10)" fg:x="19639" fg:w="202"/><text x="9.3386%" y="607.50"></text></g><g><title>async_channel::Send&lt;T&gt;::run_with_strategy (196 samples, 0.09%)</title><rect x="9.0913%" y="581" width="0.0907%" height="15" fill="rgb(245,125,30)" fg:x="19645" fg:w="196"/><text x="9.3413%" y="591.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer&lt;T&gt;::send_to_node::{{closure}} (241 samples, 0.11%)</title><rect x="9.0830%" y="613" width="0.1115%" height="15" fill="rgb(232,202,2)" fg:x="19627" fg:w="241"/><text x="9.3330%" y="623.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer&lt;T&gt;::handle_peer_message::{{closure}} (293 samples, 0.14%)</title><rect x="9.0612%" y="629" width="0.1356%" height="15" fill="rgb(237,140,51)" fg:x="19580" fg:w="293"/><text x="9.3112%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,984 samples, 3.69%)</title><rect x="5.5025%" y="677" width="3.6948%" height="15" fill="rgb(236,157,25)" fg:x="11890" fg:w="7984"/><text x="5.7525%" y="687.50">&lt;asy..</text></g><g><title>floresta_wire::p2p_wire::peer::Peer&lt;T&gt;::read_loop::{{closure}} (2,288 samples, 1.06%)</title><rect x="8.1385%" y="661" width="1.0588%" height="15" fill="rgb(219,209,0)" fg:x="17586" fg:w="2288"/><text x="8.3885%" y="671.50"></text></g><g><title>floresta_wire::p2p_wire::peer::Peer&lt;T&gt;::peer_loop_inner::{{closure}} (2,278 samples, 1.05%)</title><rect x="8.1431%" y="645" width="1.0542%" height="15" fill="rgb(240,116,54)" fg:x="17596" fg:w="2278"/><text x="8.3931%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,998 samples, 3.70%)</title><rect x="5.5025%" y="693" width="3.7013%" height="15" fill="rgb(216,10,36)" fg:x="11890" fg:w="7998"/><text x="5.7525%" y="703.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (8,048 samples, 3.72%)</title><rect x="5.4798%" y="757" width="3.7245%" height="15" fill="rgb(222,72,44)" fg:x="11841" fg:w="8048"/><text x="5.7298%" y="767.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8,047 samples, 3.72%)</title><rect x="5.4803%" y="741" width="3.7240%" height="15" fill="rgb(232,159,9)" fg:x="11842" fg:w="8047"/><text x="5.7303%" y="751.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8,047 samples, 3.72%)</title><rect x="5.4803%" y="725" width="3.7240%" height="15" fill="rgb(210,39,32)" fg:x="11842" fg:w="8047"/><text x="5.7303%" y="735.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8,037 samples, 3.72%)</title><rect x="5.4849%" y="709" width="3.7194%" height="15" fill="rgb(216,194,45)" fg:x="11852" fg:w="8037"/><text x="5.7349%" y="719.50">std:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (8,146 samples, 3.77%)</title><rect x="5.4367%" y="773" width="3.7698%" height="15" fill="rgb(218,18,35)" fg:x="11748" fg:w="8146"/><text x="5.6867%" y="783.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,176 samples, 3.78%)</title><rect x="5.4247%" y="789" width="3.7837%" height="15" fill="rgb(207,83,51)" fg:x="11722" fg:w="8176"/><text x="5.6747%" y="799.50">&lt;cor..</text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="9.2621%" y="469" width="0.0106%" height="15" fill="rgb(225,63,43)" fg:x="20014" fg:w="23"/><text x="9.5121%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (39 samples, 0.02%)</title><rect x="9.2575%" y="565" width="0.0180%" height="15" fill="rgb(207,57,36)" fg:x="20004" fg:w="39"/><text x="9.5075%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (32 samples, 0.01%)</title><rect x="9.2607%" y="549" width="0.0148%" height="15" fill="rgb(216,99,33)" fg:x="20011" fg:w="32"/><text x="9.5107%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.01%)</title><rect x="9.2607%" y="533" width="0.0148%" height="15" fill="rgb(225,42,16)" fg:x="20011" fg:w="32"/><text x="9.5107%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.01%)</title><rect x="9.2607%" y="517" width="0.0148%" height="15" fill="rgb(220,201,45)" fg:x="20011" fg:w="32"/><text x="9.5107%" y="527.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.01%)</title><rect x="9.2607%" y="501" width="0.0148%" height="15" fill="rgb(225,33,4)" fg:x="20011" fg:w="32"/><text x="9.5107%" y="511.50"></text></g><g><title>malloc (32 samples, 0.01%)</title><rect x="9.2607%" y="485" width="0.0148%" height="15" fill="rgb(224,33,50)" fg:x="20011" fg:w="32"/><text x="9.5107%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (90 samples, 0.04%)</title><rect x="9.2431%" y="597" width="0.0417%" height="15" fill="rgb(246,198,51)" fg:x="19973" fg:w="90"/><text x="9.4931%" y="607.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (87 samples, 0.04%)</title><rect x="9.2445%" y="581" width="0.0403%" height="15" fill="rgb(205,22,4)" fg:x="19976" fg:w="87"/><text x="9.4945%" y="591.50"></text></g><g><title>&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (60 samples, 0.03%)</title><rect x="9.3116%" y="517" width="0.0278%" height="15" fill="rgb(206,3,8)" fg:x="20121" fg:w="60"/><text x="9.5616%" y="527.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (54 samples, 0.02%)</title><rect x="9.3144%" y="501" width="0.0250%" height="15" fill="rgb(251,23,15)" fg:x="20127" fg:w="54"/><text x="9.5644%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (37 samples, 0.02%)</title><rect x="9.3223%" y="485" width="0.0171%" height="15" fill="rgb(252,88,28)" fg:x="20144" fg:w="37"/><text x="9.5723%" y="495.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (26 samples, 0.01%)</title><rect x="9.3273%" y="469" width="0.0120%" height="15" fill="rgb(212,127,14)" fg:x="20155" fg:w="26"/><text x="9.5773%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (217 samples, 0.10%)</title><rect x="9.3477%" y="485" width="0.1004%" height="15" fill="rgb(247,145,37)" fg:x="20199" fg:w="217"/><text x="9.5977%" y="495.50"></text></g><g><title>polling::Poller::notify (207 samples, 0.10%)</title><rect x="9.3523%" y="469" width="0.0958%" height="15" fill="rgb(209,117,53)" fg:x="20209" fg:w="207"/><text x="9.6023%" y="479.50"></text></g><g><title>polling::epoll::Poller::notify (202 samples, 0.09%)</title><rect x="9.3547%" y="453" width="0.0935%" height="15" fill="rgb(212,90,42)" fg:x="20214" fg:w="202"/><text x="9.6047%" y="463.50"></text></g><g><title>write (201 samples, 0.09%)</title><rect x="9.3551%" y="437" width="0.0930%" height="15" fill="rgb(218,164,37)" fg:x="20215" fg:w="201"/><text x="9.6051%" y="447.50"></text></g><g><title>[unknown] (183 samples, 0.08%)</title><rect x="9.3634%" y="421" width="0.0847%" height="15" fill="rgb(246,65,34)" fg:x="20233" fg:w="183"/><text x="9.6134%" y="431.50"></text></g><g><title>[unknown] (174 samples, 0.08%)</title><rect x="9.3676%" y="405" width="0.0805%" height="15" fill="rgb(231,100,33)" fg:x="20242" fg:w="174"/><text x="9.6176%" y="415.50"></text></g><g><title>[unknown] (157 samples, 0.07%)</title><rect x="9.3755%" y="389" width="0.0727%" height="15" fill="rgb(228,126,14)" fg:x="20259" fg:w="157"/><text x="9.6255%" y="399.50"></text></g><g><title>[unknown] (155 samples, 0.07%)</title><rect x="9.3764%" y="373" width="0.0717%" height="15" fill="rgb(215,173,21)" fg:x="20261" fg:w="155"/><text x="9.6264%" y="383.50"></text></g><g><title>[unknown] (140 samples, 0.06%)</title><rect x="9.3833%" y="357" width="0.0648%" height="15" fill="rgb(210,6,40)" fg:x="20276" fg:w="140"/><text x="9.6333%" y="367.50"></text></g><g><title>[unknown] (127 samples, 0.06%)</title><rect x="9.3894%" y="341" width="0.0588%" height="15" fill="rgb(212,48,18)" fg:x="20289" fg:w="127"/><text x="9.6394%" y="351.50"></text></g><g><title>[unknown] (114 samples, 0.05%)</title><rect x="9.3954%" y="325" width="0.0528%" height="15" fill="rgb(230,214,11)" fg:x="20302" fg:w="114"/><text x="9.6454%" y="335.50"></text></g><g><title>[unknown] (97 samples, 0.04%)</title><rect x="9.4032%" y="309" width="0.0449%" height="15" fill="rgb(254,105,39)" fg:x="20319" fg:w="97"/><text x="9.6532%" y="319.50"></text></g><g><title>[unknown] (84 samples, 0.04%)</title><rect x="9.4093%" y="293" width="0.0389%" height="15" fill="rgb(245,158,5)" fg:x="20332" fg:w="84"/><text x="9.6593%" y="303.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="9.4134%" y="277" width="0.0347%" height="15" fill="rgb(249,208,11)" fg:x="20341" fg:w="75"/><text x="9.6634%" y="287.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="9.4139%" y="261" width="0.0342%" height="15" fill="rgb(210,39,28)" fg:x="20342" fg:w="74"/><text x="9.6639%" y="271.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="9.4231%" y="245" width="0.0250%" height="15" fill="rgb(211,56,53)" fg:x="20362" fg:w="54"/><text x="9.6731%" y="255.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="9.4343%" y="229" width="0.0139%" height="15" fill="rgb(226,201,30)" fg:x="20386" fg:w="30"/><text x="9.6843%" y="239.50"></text></g><g><title>parking::Unparker::unpark (240 samples, 0.11%)</title><rect x="9.4532%" y="485" width="0.1111%" height="15" fill="rgb(239,101,34)" fg:x="20427" fg:w="240"/><text x="9.7032%" y="495.50"></text></g><g><title>parking::Inner::unpark (224 samples, 0.10%)</title><rect x="9.4606%" y="469" width="0.1037%" height="15" fill="rgb(226,209,5)" fg:x="20443" fg:w="224"/><text x="9.7106%" y="479.50"></text></g><g><title>syscall (218 samples, 0.10%)</title><rect x="9.4634%" y="453" width="0.1009%" height="15" fill="rgb(250,105,47)" fg:x="20449" fg:w="218"/><text x="9.7134%" y="463.50"></text></g><g><title>[unknown] (211 samples, 0.10%)</title><rect x="9.4666%" y="437" width="0.0976%" height="15" fill="rgb(230,72,3)" fg:x="20456" fg:w="211"/><text x="9.7166%" y="447.50"></text></g><g><title>[unknown] (197 samples, 0.09%)</title><rect x="9.4731%" y="421" width="0.0912%" height="15" fill="rgb(232,218,39)" fg:x="20470" fg:w="197"/><text x="9.7231%" y="431.50"></text></g><g><title>[unknown] (183 samples, 0.08%)</title><rect x="9.4796%" y="405" width="0.0847%" height="15" fill="rgb(248,166,6)" fg:x="20484" fg:w="183"/><text x="9.7296%" y="415.50"></text></g><g><title>[unknown] (169 samples, 0.08%)</title><rect x="9.4861%" y="389" width="0.0782%" height="15" fill="rgb(247,89,20)" fg:x="20498" fg:w="169"/><text x="9.7361%" y="399.50"></text></g><g><title>[unknown] (162 samples, 0.07%)</title><rect x="9.4893%" y="373" width="0.0750%" height="15" fill="rgb(248,130,54)" fg:x="20505" fg:w="162"/><text x="9.7393%" y="383.50"></text></g><g><title>[unknown] (147 samples, 0.07%)</title><rect x="9.4963%" y="357" width="0.0680%" height="15" fill="rgb(234,196,4)" fg:x="20520" fg:w="147"/><text x="9.7463%" y="367.50"></text></g><g><title>[unknown] (118 samples, 0.05%)</title><rect x="9.5097%" y="341" width="0.0546%" height="15" fill="rgb(250,143,31)" fg:x="20549" fg:w="118"/><text x="9.7597%" y="351.50"></text></g><g><title>[unknown] (80 samples, 0.04%)</title><rect x="9.5273%" y="325" width="0.0370%" height="15" fill="rgb(211,110,34)" fg:x="20587" fg:w="80"/><text x="9.7773%" y="335.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="9.5449%" y="309" width="0.0194%" height="15" fill="rgb(215,124,48)" fg:x="20625" fg:w="42"/><text x="9.7949%" y="319.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="9.5527%" y="293" width="0.0116%" height="15" fill="rgb(216,46,13)" fg:x="20642" fg:w="25"/><text x="9.8027%" y="303.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (480 samples, 0.22%)</title><rect x="9.3440%" y="501" width="0.2221%" height="15" fill="rgb(205,184,25)" fg:x="20191" fg:w="480"/><text x="9.5940%" y="511.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (705 samples, 0.33%)</title><rect x="9.2417%" y="613" width="0.3263%" height="15" fill="rgb(228,1,10)" fg:x="19970" fg:w="705"/><text x="9.4917%" y="623.50"></text></g><g><title>event_listener::Event::notify_additional (610 samples, 0.28%)</title><rect x="9.2857%" y="597" width="0.2823%" height="15" fill="rgb(213,116,27)" fg:x="20065" fg:w="610"/><text x="9.5357%" y="607.50"></text></g><g><title>event_listener::List::notify_additional (601 samples, 0.28%)</title><rect x="9.2899%" y="581" width="0.2781%" height="15" fill="rgb(241,95,50)" fg:x="20074" fg:w="601"/><text x="9.5399%" y="591.50"></text></g><g><title>core::task::wake::Waker::wake (592 samples, 0.27%)</title><rect x="9.2940%" y="565" width="0.2740%" height="15" fill="rgb(238,48,32)" fg:x="20083" fg:w="592"/><text x="9.5440%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (585 samples, 0.27%)</title><rect x="9.2973%" y="549" width="0.2707%" height="15" fill="rgb(235,113,49)" fg:x="20090" fg:w="585"/><text x="9.5473%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (565 samples, 0.26%)</title><rect x="9.3065%" y="533" width="0.2615%" height="15" fill="rgb(205,127,43)" fg:x="20110" fg:w="565"/><text x="9.5565%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (490 samples, 0.23%)</title><rect x="9.3412%" y="517" width="0.2268%" height="15" fill="rgb(250,162,2)" fg:x="20185" fg:w="490"/><text x="9.5912%" y="527.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (719 samples, 0.33%)</title><rect x="9.2408%" y="645" width="0.3327%" height="15" fill="rgb(220,13,41)" fg:x="19968" fg:w="719"/><text x="9.4908%" y="655.50"></text></g><g><title>async_channel::Send&lt;T&gt;::run_with_strategy (717 samples, 0.33%)</title><rect x="9.2417%" y="629" width="0.3318%" height="15" fill="rgb(249,221,25)" fg:x="19970" fg:w="717"/><text x="9.4917%" y="639.50"></text></g><g><title>recv (2,506 samples, 1.16%)</title><rect x="9.6175%" y="469" width="1.1597%" height="15" fill="rgb(215,208,19)" fg:x="20782" fg:w="2506"/><text x="9.8675%" y="479.50"></text></g><g><title>[unknown] (2,453 samples, 1.14%)</title><rect x="9.6420%" y="453" width="1.1352%" height="15" fill="rgb(236,175,2)" fg:x="20835" fg:w="2453"/><text x="9.8920%" y="463.50"></text></g><g><title>[unknown] (2,377 samples, 1.10%)</title><rect x="9.6772%" y="437" width="1.1000%" height="15" fill="rgb(241,52,2)" fg:x="20911" fg:w="2377"/><text x="9.9272%" y="447.50"></text></g><g><title>[unknown] (2,295 samples, 1.06%)</title><rect x="9.7152%" y="421" width="1.0621%" height="15" fill="rgb(248,140,14)" fg:x="20993" fg:w="2295"/><text x="9.9652%" y="431.50"></text></g><g><title>[unknown] (2,274 samples, 1.05%)</title><rect x="9.7249%" y="405" width="1.0524%" height="15" fill="rgb(253,22,42)" fg:x="21014" fg:w="2274"/><text x="9.9749%" y="415.50"></text></g><g><title>[unknown] (2,220 samples, 1.03%)</title><rect x="9.7499%" y="389" width="1.0274%" height="15" fill="rgb(234,61,47)" fg:x="21068" fg:w="2220"/><text x="9.9999%" y="399.50"></text></g><g><title>[unknown] (2,193 samples, 1.01%)</title><rect x="9.7624%" y="373" width="1.0149%" height="15" fill="rgb(208,226,15)" fg:x="21095" fg:w="2193"/><text x="10.0124%" y="383.50"></text></g><g><title>[unknown] (2,108 samples, 0.98%)</title><rect x="9.8017%" y="357" width="0.9755%" height="15" fill="rgb(217,221,4)" fg:x="21180" fg:w="2108"/><text x="10.0517%" y="367.50"></text></g><g><title>[unknown] (2,087 samples, 0.97%)</title><rect x="9.8114%" y="341" width="0.9658%" height="15" fill="rgb(212,174,34)" fg:x="21201" fg:w="2087"/><text x="10.0614%" y="351.50"></text></g><g><title>[unknown] (1,999 samples, 0.93%)</title><rect x="9.8521%" y="325" width="0.9251%" height="15" fill="rgb(253,83,4)" fg:x="21289" fg:w="1999"/><text x="10.1021%" y="335.50"></text></g><g><title>[unknown] (1,858 samples, 0.86%)</title><rect x="9.9174%" y="309" width="0.8598%" height="15" fill="rgb(250,195,49)" fg:x="21430" fg:w="1858"/><text x="10.1674%" y="319.50"></text></g><g><title>[unknown] (1,725 samples, 0.80%)</title><rect x="9.9789%" y="293" width="0.7983%" height="15" fill="rgb(241,192,25)" fg:x="21563" fg:w="1725"/><text x="10.2289%" y="303.50"></text></g><g><title>[unknown] (1,577 samples, 0.73%)</title><rect x="10.0474%" y="277" width="0.7298%" height="15" fill="rgb(208,124,10)" fg:x="21711" fg:w="1577"/><text x="10.2974%" y="287.50"></text></g><g><title>[unknown] (1,328 samples, 0.61%)</title><rect x="10.1627%" y="261" width="0.6146%" height="15" fill="rgb(222,33,0)" fg:x="21960" fg:w="1328"/><text x="10.4127%" y="271.50"></text></g><g><title>[unknown] (1,030 samples, 0.48%)</title><rect x="10.3006%" y="245" width="0.4767%" height="15" fill="rgb(234,209,28)" fg:x="22258" fg:w="1030"/><text x="10.5506%" y="255.50"></text></g><g><title>[unknown] (930 samples, 0.43%)</title><rect x="10.3469%" y="229" width="0.4304%" height="15" fill="rgb(224,11,23)" fg:x="22358" fg:w="930"/><text x="10.5969%" y="239.50"></text></g><g><title>[unknown] (814 samples, 0.38%)</title><rect x="10.4005%" y="213" width="0.3767%" height="15" fill="rgb(232,99,1)" fg:x="22474" fg:w="814"/><text x="10.6505%" y="223.50"></text></g><g><title>[unknown] (739 samples, 0.34%)</title><rect x="10.4352%" y="197" width="0.3420%" height="15" fill="rgb(237,95,45)" fg:x="22549" fg:w="739"/><text x="10.6852%" y="207.50"></text></g><g><title>[unknown] (675 samples, 0.31%)</title><rect x="10.4649%" y="181" width="0.3124%" height="15" fill="rgb(208,109,11)" fg:x="22613" fg:w="675"/><text x="10.7149%" y="191.50"></text></g><g><title>[unknown] (629 samples, 0.29%)</title><rect x="10.4862%" y="165" width="0.2911%" height="15" fill="rgb(216,190,48)" fg:x="22659" fg:w="629"/><text x="10.7362%" y="175.50"></text></g><g><title>[unknown] (545 samples, 0.25%)</title><rect x="10.5250%" y="149" width="0.2522%" height="15" fill="rgb(251,171,36)" fg:x="22743" fg:w="545"/><text x="10.7750%" y="159.50"></text></g><g><title>[unknown] (411 samples, 0.19%)</title><rect x="10.5870%" y="133" width="0.1902%" height="15" fill="rgb(230,62,22)" fg:x="22877" fg:w="411"/><text x="10.8370%" y="143.50"></text></g><g><title>[unknown] (310 samples, 0.14%)</title><rect x="10.6338%" y="117" width="0.1435%" height="15" fill="rgb(225,114,35)" fg:x="22978" fg:w="310"/><text x="10.8838%" y="127.50"></text></g><g><title>[unknown] (228 samples, 0.11%)</title><rect x="10.6717%" y="101" width="0.1055%" height="15" fill="rgb(215,118,42)" fg:x="23060" fg:w="228"/><text x="10.9217%" y="111.50"></text></g><g><title>[unknown] (185 samples, 0.09%)</title><rect x="10.6916%" y="85" width="0.0856%" height="15" fill="rgb(243,119,21)" fg:x="23103" fg:w="185"/><text x="10.9416%" y="95.50"></text></g><g><title>[unknown] (141 samples, 0.07%)</title><rect x="10.7120%" y="69" width="0.0653%" height="15" fill="rgb(252,177,53)" fg:x="23147" fg:w="141"/><text x="10.9620%" y="79.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="10.7425%" y="53" width="0.0347%" height="15" fill="rgb(237,209,29)" fg:x="23213" fg:w="75"/><text x="10.9925%" y="63.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="10.7661%" y="37" width="0.0111%" height="15" fill="rgb(212,65,23)" fg:x="23264" fg:w="24"/><text x="11.0161%" y="47.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,528 samples, 1.17%)</title><rect x="9.6170%" y="533" width="1.1699%" height="15" fill="rgb(230,222,46)" fg:x="20781" fg:w="2528"/><text x="9.8670%" y="543.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,528 samples, 1.17%)</title><rect x="9.6170%" y="517" width="1.1699%" height="15" fill="rgb(215,135,32)" fg:x="20781" fg:w="2528"/><text x="9.8670%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,528 samples, 1.17%)</title><rect x="9.6170%" y="501" width="1.1699%" height="15" fill="rgb(246,101,22)" fg:x="20781" fg:w="2528"/><text x="9.8670%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,527 samples, 1.17%)</title><rect x="9.6175%" y="485" width="1.1694%" height="15" fill="rgb(206,107,13)" fg:x="20782" fg:w="2527"/><text x="9.8675%" y="495.50"></text></g><g><title>polling::Poller::modify (137 samples, 0.06%)</title><rect x="10.8055%" y="501" width="0.0634%" height="15" fill="rgb(250,100,44)" fg:x="23349" fg:w="137"/><text x="11.0555%" y="511.50"></text></g><g><title>polling::Poller::modify_with_mode (137 samples, 0.06%)</title><rect x="10.8055%" y="485" width="0.0634%" height="15" fill="rgb(231,147,38)" fg:x="23349" fg:w="137"/><text x="11.0555%" y="495.50"></text></g><g><title>polling::epoll::Poller::modify (133 samples, 0.06%)</title><rect x="10.8073%" y="469" width="0.0615%" height="15" fill="rgb(229,8,40)" fg:x="23353" fg:w="133"/><text x="11.0573%" y="479.50"></text></g><g><title>polling::epoll::Poller::ctl (128 samples, 0.06%)</title><rect x="10.8096%" y="453" width="0.0592%" height="15" fill="rgb(221,135,30)" fg:x="23358" fg:w="128"/><text x="11.0596%" y="463.50"></text></g><g><title>epoll_ctl (124 samples, 0.06%)</title><rect x="10.8115%" y="437" width="0.0574%" height="15" fill="rgb(249,193,18)" fg:x="23362" fg:w="124"/><text x="11.0615%" y="447.50"></text></g><g><title>[unknown] (118 samples, 0.05%)</title><rect x="10.8143%" y="421" width="0.0546%" height="15" fill="rgb(209,133,39)" fg:x="23368" fg:w="118"/><text x="11.0643%" y="431.50"></text></g><g><title>[unknown] (107 samples, 0.05%)</title><rect x="10.8194%" y="405" width="0.0495%" height="15" fill="rgb(232,100,14)" fg:x="23379" fg:w="107"/><text x="11.0694%" y="415.50"></text></g><g><title>[unknown] (86 samples, 0.04%)</title><rect x="10.8291%" y="389" width="0.0398%" height="15" fill="rgb(224,185,1)" fg:x="23400" fg:w="86"/><text x="11.0791%" y="399.50"></text></g><g><title>[unknown] (80 samples, 0.04%)</title><rect x="10.8318%" y="373" width="0.0370%" height="15" fill="rgb(223,139,8)" fg:x="23406" fg:w="80"/><text x="11.0818%" y="383.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="10.8453%" y="357" width="0.0236%" height="15" fill="rgb(232,213,38)" fg:x="23435" fg:w="51"/><text x="11.0953%" y="367.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="10.8555%" y="341" width="0.0134%" height="15" fill="rgb(207,94,22)" fg:x="23457" fg:w="29"/><text x="11.1055%" y="351.50"></text></g><g><title>async_io::Async&lt;T&gt;::poll_readable (170 samples, 0.08%)</title><rect x="10.7916%" y="533" width="0.0787%" height="15" fill="rgb(219,183,54)" fg:x="23319" fg:w="170"/><text x="11.0416%" y="543.50"></text></g><g><title>async_io::reactor::Source::poll_ready (163 samples, 0.08%)</title><rect x="10.7948%" y="517" width="0.0754%" height="15" fill="rgb(216,185,54)" fg:x="23326" fg:w="163"/><text x="11.0448%" y="527.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (2,742 samples, 1.27%)</title><rect x="9.6064%" y="565" width="1.2689%" height="15" fill="rgb(254,217,39)" fg:x="20758" fg:w="2742"/><text x="9.8564%" y="575.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (2,742 samples, 1.27%)</title><rect x="9.6064%" y="549" width="1.2689%" height="15" fill="rgb(240,178,23)" fg:x="20758" fg:w="2742"/><text x="9.8564%" y="559.50"></text></g><g><title>&lt;async_std::io::buf_reader::BufReader&lt;R&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (2,766 samples, 1.28%)</title><rect x="9.5958%" y="597" width="1.2801%" height="15" fill="rgb(218,11,47)" fg:x="20735" fg:w="2766"/><text x="9.8458%" y="607.50"></text></g><g><title>&lt;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (2,754 samples, 1.27%)</title><rect x="9.6013%" y="581" width="1.2745%" height="15" fill="rgb(218,51,51)" fg:x="20747" fg:w="2754"/><text x="9.8513%" y="591.50"></text></g><g><title>recv (2,357 samples, 1.09%)</title><rect x="10.8906%" y="485" width="1.0908%" height="15" fill="rgb(238,126,27)" fg:x="23533" fg:w="2357"/><text x="11.1406%" y="495.50"></text></g><g><title>[unknown] (2,318 samples, 1.07%)</title><rect x="10.9087%" y="469" width="1.0727%" height="15" fill="rgb(249,202,22)" fg:x="23572" fg:w="2318"/><text x="11.1587%" y="479.50"></text></g><g><title>[unknown] (2,275 samples, 1.05%)</title><rect x="10.9286%" y="453" width="1.0528%" height="15" fill="rgb(254,195,49)" fg:x="23615" fg:w="2275"/><text x="11.1786%" y="463.50"></text></g><g><title>[unknown] (2,204 samples, 1.02%)</title><rect x="10.9614%" y="437" width="1.0200%" height="15" fill="rgb(208,123,14)" fg:x="23686" fg:w="2204"/><text x="11.2114%" y="447.50"></text></g><g><title>[unknown] (2,180 samples, 1.01%)</title><rect x="10.9725%" y="421" width="1.0089%" height="15" fill="rgb(224,200,8)" fg:x="23710" fg:w="2180"/><text x="11.2225%" y="431.50"></text></g><g><title>[unknown] (2,147 samples, 0.99%)</title><rect x="10.9878%" y="405" width="0.9936%" height="15" fill="rgb(217,61,36)" fg:x="23743" fg:w="2147"/><text x="11.2378%" y="415.50"></text></g><g><title>[unknown] (2,116 samples, 0.98%)</title><rect x="11.0022%" y="389" width="0.9792%" height="15" fill="rgb(206,35,45)" fg:x="23774" fg:w="2116"/><text x="11.2522%" y="399.50"></text></g><g><title>[unknown] (2,040 samples, 0.94%)</title><rect x="11.0373%" y="373" width="0.9441%" height="15" fill="rgb(217,65,33)" fg:x="23850" fg:w="2040"/><text x="11.2873%" y="383.50"></text></g><g><title>[unknown] (2,028 samples, 0.94%)</title><rect x="11.0429%" y="357" width="0.9385%" height="15" fill="rgb(222,158,48)" fg:x="23862" fg:w="2028"/><text x="11.2929%" y="367.50"></text></g><g><title>[unknown] (1,952 samples, 0.90%)</title><rect x="11.0780%" y="341" width="0.9033%" height="15" fill="rgb(254,2,54)" fg:x="23938" fg:w="1952"/><text x="11.3280%" y="351.50"></text></g><g><title>[unknown] (1,823 samples, 0.84%)</title><rect x="11.1377%" y="325" width="0.8436%" height="15" fill="rgb(250,143,38)" fg:x="24067" fg:w="1823"/><text x="11.3877%" y="335.50"></text></g><g><title>[unknown] (1,704 samples, 0.79%)</title><rect x="11.1928%" y="309" width="0.7886%" height="15" fill="rgb(248,25,0)" fg:x="24186" fg:w="1704"/><text x="11.4428%" y="319.50"></text></g><g><title>[unknown] (1,566 samples, 0.72%)</title><rect x="11.2567%" y="293" width="0.7247%" height="15" fill="rgb(206,152,27)" fg:x="24324" fg:w="1566"/><text x="11.5067%" y="303.50"></text></g><g><title>[unknown] (1,320 samples, 0.61%)</title><rect x="11.3705%" y="277" width="0.6109%" height="15" fill="rgb(240,77,30)" fg:x="24570" fg:w="1320"/><text x="11.6205%" y="287.50"></text></g><g><title>[unknown] (911 samples, 0.42%)</title><rect x="11.5598%" y="261" width="0.4216%" height="15" fill="rgb(231,5,3)" fg:x="24979" fg:w="911"/><text x="11.8098%" y="271.50"></text></g><g><title>[unknown] (821 samples, 0.38%)</title><rect x="11.6015%" y="245" width="0.3799%" height="15" fill="rgb(207,226,32)" fg:x="25069" fg:w="821"/><text x="11.8515%" y="255.50"></text></g><g><title>[unknown] (719 samples, 0.33%)</title><rect x="11.6487%" y="229" width="0.3327%" height="15" fill="rgb(222,207,47)" fg:x="25171" fg:w="719"/><text x="11.8987%" y="239.50"></text></g><g><title>[unknown] (661 samples, 0.31%)</title><rect x="11.6755%" y="213" width="0.3059%" height="15" fill="rgb(229,115,45)" fg:x="25229" fg:w="661"/><text x="11.9255%" y="223.50"></text></g><g><title>[unknown] (600 samples, 0.28%)</title><rect x="11.7037%" y="197" width="0.2777%" height="15" fill="rgb(224,191,6)" fg:x="25290" fg:w="600"/><text x="11.9537%" y="207.50"></text></g><g><title>[unknown] (552 samples, 0.26%)</title><rect x="11.7259%" y="181" width="0.2555%" height="15" fill="rgb(230,227,24)" fg:x="25338" fg:w="552"/><text x="11.9759%" y="191.50"></text></g><g><title>[unknown] (469 samples, 0.22%)</title><rect x="11.7644%" y="165" width="0.2170%" height="15" fill="rgb(228,80,19)" fg:x="25421" fg:w="469"/><text x="12.0144%" y="175.50"></text></g><g><title>[unknown] (338 samples, 0.16%)</title><rect x="11.8250%" y="149" width="0.1564%" height="15" fill="rgb(247,229,0)" fg:x="25552" fg:w="338"/><text x="12.0750%" y="159.50"></text></g><g><title>[unknown] (249 samples, 0.12%)</title><rect x="11.8662%" y="133" width="0.1152%" height="15" fill="rgb(237,194,15)" fg:x="25641" fg:w="249"/><text x="12.1162%" y="143.50"></text></g><g><title>[unknown] (180 samples, 0.08%)</title><rect x="11.8981%" y="117" width="0.0833%" height="15" fill="rgb(219,203,20)" fg:x="25710" fg:w="180"/><text x="12.1481%" y="127.50"></text></g><g><title>[unknown] (146 samples, 0.07%)</title><rect x="11.9138%" y="101" width="0.0676%" height="15" fill="rgb(234,128,8)" fg:x="25744" fg:w="146"/><text x="12.1638%" y="111.50"></text></g><g><title>[unknown] (105 samples, 0.05%)</title><rect x="11.9328%" y="85" width="0.0486%" height="15" fill="rgb(248,202,8)" fg:x="25785" fg:w="105"/><text x="12.1828%" y="95.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="11.9569%" y="69" width="0.0245%" height="15" fill="rgb(206,104,37)" fg:x="25837" fg:w="53"/><text x="12.2069%" y="79.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,370 samples, 1.10%)</title><rect x="10.8892%" y="549" width="1.0968%" height="15" fill="rgb(223,8,27)" fg:x="23530" fg:w="2370"/><text x="11.1392%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,369 samples, 1.10%)</title><rect x="10.8897%" y="533" width="1.0963%" height="15" fill="rgb(216,217,28)" fg:x="23531" fg:w="2369"/><text x="11.1397%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,369 samples, 1.10%)</title><rect x="10.8897%" y="517" width="1.0963%" height="15" fill="rgb(249,199,1)" fg:x="23531" fg:w="2369"/><text x="11.1397%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,367 samples, 1.10%)</title><rect x="10.8906%" y="501" width="1.0954%" height="15" fill="rgb(240,85,17)" fg:x="23533" fg:w="2367"/><text x="11.1406%" y="511.50"></text></g><g><title>polling::Poller::modify (115 samples, 0.05%)</title><rect x="12.0018%" y="517" width="0.0532%" height="15" fill="rgb(206,108,45)" fg:x="25934" fg:w="115"/><text x="12.2518%" y="527.50"></text></g><g><title>polling::Poller::modify_with_mode (115 samples, 0.05%)</title><rect x="12.0018%" y="501" width="0.0532%" height="15" fill="rgb(245,210,41)" fg:x="25934" fg:w="115"/><text x="12.2518%" y="511.50"></text></g><g><title>polling::epoll::Poller::modify (111 samples, 0.05%)</title><rect x="12.0036%" y="485" width="0.0514%" height="15" fill="rgb(206,13,37)" fg:x="25938" fg:w="111"/><text x="12.2536%" y="495.50"></text></g><g><title>polling::epoll::Poller::ctl (109 samples, 0.05%)</title><rect x="12.0045%" y="469" width="0.0504%" height="15" fill="rgb(250,61,18)" fg:x="25940" fg:w="109"/><text x="12.2545%" y="479.50"></text></g><g><title>epoll_ctl (103 samples, 0.05%)</title><rect x="12.0073%" y="453" width="0.0477%" height="15" fill="rgb(235,172,48)" fg:x="25946" fg:w="103"/><text x="12.2573%" y="463.50"></text></g><g><title>[unknown] (97 samples, 0.04%)</title><rect x="12.0101%" y="437" width="0.0449%" height="15" fill="rgb(249,201,17)" fg:x="25952" fg:w="97"/><text x="12.2601%" y="447.50"></text></g><g><title>[unknown] (86 samples, 0.04%)</title><rect x="12.0152%" y="421" width="0.0398%" height="15" fill="rgb(219,208,6)" fg:x="25963" fg:w="86"/><text x="12.2652%" y="431.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="12.0221%" y="405" width="0.0329%" height="15" fill="rgb(248,31,23)" fg:x="25978" fg:w="71"/><text x="12.2721%" y="415.50"></text></g><g><title>[unknown] (64 samples, 0.03%)</title><rect x="12.0254%" y="389" width="0.0296%" height="15" fill="rgb(245,15,42)" fg:x="25985" fg:w="64"/><text x="12.2754%" y="399.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="12.0360%" y="373" width="0.0190%" height="15" fill="rgb(222,217,39)" fg:x="26008" fg:w="41"/><text x="12.2860%" y="383.50"></text></g><g><title>async_io::Async&lt;T&gt;::poll_readable (149 samples, 0.07%)</title><rect x="11.9893%" y="549" width="0.0690%" height="15" fill="rgb(210,219,27)" fg:x="25907" fg:w="149"/><text x="12.2393%" y="559.50"></text></g><g><title>async_io::reactor::Source::poll_ready (144 samples, 0.07%)</title><rect x="11.9916%" y="533" width="0.0666%" height="15" fill="rgb(252,166,36)" fg:x="25912" fg:w="144"/><text x="12.2416%" y="543.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (2,554 samples, 1.18%)</title><rect x="10.8828%" y="581" width="1.1819%" height="15" fill="rgb(245,132,34)" fg:x="23516" fg:w="2554"/><text x="11.1328%" y="591.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (2,554 samples, 1.18%)</title><rect x="10.8828%" y="565" width="1.1819%" height="15" fill="rgb(236,54,3)" fg:x="23516" fg:w="2554"/><text x="11.1328%" y="575.50"></text></g><g><title>&lt;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (2,570 samples, 1.19%)</title><rect x="10.8758%" y="597" width="1.1893%" height="15" fill="rgb(241,173,43)" fg:x="23501" fg:w="2570"/><text x="11.1258%" y="607.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (5,444 samples, 2.52%)</title><rect x="9.5823%" y="629" width="2.5194%" height="15" fill="rgb(215,190,9)" fg:x="20706" fg:w="5444"/><text x="9.8323%" y="639.50">&lt;&amp;..</text></g><g><title>&lt;async_std::io::buf_reader::BufReader&lt;R&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (5,435 samples, 2.52%)</title><rect x="9.5865%" y="613" width="2.5152%" height="15" fill="rgb(242,101,16)" fg:x="20715" fg:w="5435"/><text x="9.8365%" y="623.50">&lt;a..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (77 samples, 0.04%)</title><rect x="12.0661%" y="597" width="0.0356%" height="15" fill="rgb(223,190,21)" fg:x="26073" fg:w="77"/><text x="12.3161%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (76 samples, 0.04%)</title><rect x="12.0665%" y="581" width="0.0352%" height="15" fill="rgb(215,228,25)" fg:x="26074" fg:w="76"/><text x="12.3165%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (76 samples, 0.04%)</title><rect x="12.0665%" y="565" width="0.0352%" height="15" fill="rgb(225,36,22)" fg:x="26074" fg:w="76"/><text x="12.3165%" y="575.50"></text></g><g><title>[libc.so.6] (73 samples, 0.03%)</title><rect x="12.0679%" y="549" width="0.0338%" height="15" fill="rgb(251,106,46)" fg:x="26077" fg:w="73"/><text x="12.3179%" y="559.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,470 samples, 2.53%)</title><rect x="9.5735%" y="645" width="2.5314%" height="15" fill="rgb(208,90,1)" fg:x="20687" fg:w="5470"/><text x="9.8235%" y="655.50">&lt;a..</text></g><g><title>[libc.so.6] (67 samples, 0.03%)</title><rect x="12.2077%" y="437" width="0.0310%" height="15" fill="rgb(243,10,4)" fg:x="26379" fg:w="67"/><text x="12.4577%" y="447.50"></text></g><g><title>[libc.so.6] (247 samples, 0.11%)</title><rect x="12.1253%" y="469" width="0.1143%" height="15" fill="rgb(212,137,27)" fg:x="26201" fg:w="247"/><text x="12.3753%" y="479.50"></text></g><g><title>[libc.so.6] (229 samples, 0.11%)</title><rect x="12.1337%" y="453" width="0.1060%" height="15" fill="rgb(231,220,49)" fg:x="26219" fg:w="229"/><text x="12.3837%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (279 samples, 0.13%)</title><rect x="12.1161%" y="533" width="0.1291%" height="15" fill="rgb(237,96,20)" fg:x="26181" fg:w="279"/><text x="12.3661%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (279 samples, 0.13%)</title><rect x="12.1161%" y="517" width="0.1291%" height="15" fill="rgb(239,229,30)" fg:x="26181" fg:w="279"/><text x="12.3661%" y="527.50"></text></g><g><title>alloc::alloc::realloc (279 samples, 0.13%)</title><rect x="12.1161%" y="501" width="0.1291%" height="15" fill="rgb(219,65,33)" fg:x="26181" fg:w="279"/><text x="12.3661%" y="511.50"></text></g><g><title>realloc (274 samples, 0.13%)</title><rect x="12.1184%" y="485" width="0.1268%" height="15" fill="rgb(243,134,7)" fg:x="26186" fg:w="274"/><text x="12.3684%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (286 samples, 0.13%)</title><rect x="12.1142%" y="549" width="0.1324%" height="15" fill="rgb(216,177,54)" fg:x="26177" fg:w="286"/><text x="12.3642%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (293 samples, 0.14%)</title><rect x="12.1142%" y="613" width="0.1356%" height="15" fill="rgb(211,160,20)" fg:x="26177" fg:w="293"/><text x="12.3642%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (293 samples, 0.14%)</title><rect x="12.1142%" y="597" width="0.1356%" height="15" fill="rgb(239,85,39)" fg:x="26177" fg:w="293"/><text x="12.3642%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (293 samples, 0.14%)</title><rect x="12.1142%" y="581" width="0.1356%" height="15" fill="rgb(232,125,22)" fg:x="26177" fg:w="293"/><text x="12.3642%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (293 samples, 0.14%)</title><rect x="12.1142%" y="565" width="0.1356%" height="15" fill="rgb(244,57,34)" fg:x="26177" fg:w="293"/><text x="12.3642%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (494 samples, 0.23%)</title><rect x="12.1142%" y="645" width="0.2286%" height="15" fill="rgb(214,203,32)" fg:x="26177" fg:w="494"/><text x="12.3642%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (494 samples, 0.23%)</title><rect x="12.1142%" y="629" width="0.2286%" height="15" fill="rgb(207,58,43)" fg:x="26177" fg:w="494"/><text x="12.3642%" y="639.50"></text></g><g><title>core::ptr::write (199 samples, 0.09%)</title><rect x="12.2507%" y="613" width="0.0921%" height="15" fill="rgb(215,193,15)" fg:x="26472" fg:w="199"/><text x="12.5007%" y="623.50"></text></g><g><title>[libc.so.6] (198 samples, 0.09%)</title><rect x="12.2512%" y="597" width="0.0916%" height="15" fill="rgb(232,15,44)" fg:x="26473" fg:w="198"/><text x="12.5012%" y="607.50"></text></g><g><title>[unknown] (64 samples, 0.03%)</title><rect x="12.3132%" y="581" width="0.0296%" height="15" fill="rgb(212,3,48)" fg:x="26607" fg:w="64"/><text x="12.5632%" y="591.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="12.3178%" y="565" width="0.0250%" height="15" fill="rgb(218,128,7)" fg:x="26617" fg:w="54"/><text x="12.5678%" y="575.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="12.3188%" y="549" width="0.0241%" height="15" fill="rgb(226,216,39)" fg:x="26619" fg:w="52"/><text x="12.5688%" y="559.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="12.3206%" y="533" width="0.0222%" height="15" fill="rgb(243,47,51)" fg:x="26623" fg:w="48"/><text x="12.5706%" y="543.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="12.3215%" y="517" width="0.0213%" height="15" fill="rgb(241,183,40)" fg:x="26625" fg:w="46"/><text x="12.5715%" y="527.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="12.3252%" y="501" width="0.0176%" height="15" fill="rgb(231,217,32)" fg:x="26633" fg:w="38"/><text x="12.5752%" y="511.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="12.3285%" y="485" width="0.0143%" height="15" fill="rgb(229,61,38)" fg:x="26640" fg:w="31"/><text x="12.5785%" y="495.50"></text></g><g><title>[libc.so.6] (62 samples, 0.03%)</title><rect x="12.3516%" y="517" width="0.0287%" height="15" fill="rgb(225,210,5)" fg:x="26690" fg:w="62"/><text x="12.6016%" y="527.50"></text></g><g><title>__libc_calloc (86 samples, 0.04%)</title><rect x="12.3428%" y="533" width="0.0398%" height="15" fill="rgb(231,79,45)" fg:x="26671" fg:w="86"/><text x="12.5928%" y="543.50"></text></g><g><title>alloc::vec::from_elem (87 samples, 0.04%)</title><rect x="12.3428%" y="645" width="0.0403%" height="15" fill="rgb(224,100,7)" fg:x="26671" fg:w="87"/><text x="12.5928%" y="655.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (87 samples, 0.04%)</title><rect x="12.3428%" y="629" width="0.0403%" height="15" fill="rgb(241,198,18)" fg:x="26671" fg:w="87"/><text x="12.5928%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (87 samples, 0.04%)</title><rect x="12.3428%" y="613" width="0.0403%" height="15" fill="rgb(252,97,53)" fg:x="26671" fg:w="87"/><text x="12.5928%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (87 samples, 0.04%)</title><rect x="12.3428%" y="597" width="0.0403%" height="15" fill="rgb(220,88,7)" fg:x="26671" fg:w="87"/><text x="12.5928%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (87 samples, 0.04%)</title><rect x="12.3428%" y="581" width="0.0403%" height="15" fill="rgb(213,176,14)" fg:x="26671" fg:w="87"/><text x="12.5928%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.04%)</title><rect x="12.3428%" y="565" width="0.0403%" height="15" fill="rgb(246,73,7)" fg:x="26671" fg:w="87"/><text x="12.5928%" y="575.50"></text></g><g><title>alloc::alloc::alloc_zeroed (87 samples, 0.04%)</title><rect x="12.3428%" y="549" width="0.0403%" height="15" fill="rgb(245,64,36)" fg:x="26671" fg:w="87"/><text x="12.5928%" y="559.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_slice (141 samples, 0.07%)</title><rect x="12.4095%" y="565" width="0.0653%" height="15" fill="rgb(245,80,10)" fg:x="26815" fg:w="141"/><text x="12.6595%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_exact (141 samples, 0.07%)</title><rect x="12.4095%" y="549" width="0.0653%" height="15" fill="rgb(232,107,50)" fg:x="26815" fg:w="141"/><text x="12.6595%" y="559.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read_exact (141 samples, 0.07%)</title><rect x="12.4095%" y="533" width="0.0653%" height="15" fill="rgb(253,3,0)" fg:x="26815" fg:w="141"/><text x="12.6595%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (135 samples, 0.06%)</title><rect x="12.4122%" y="517" width="0.0625%" height="15" fill="rgb(212,99,53)" fg:x="26821" fg:w="135"/><text x="12.6622%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (134 samples, 0.06%)</title><rect x="12.4127%" y="501" width="0.0620%" height="15" fill="rgb(249,111,54)" fg:x="26822" fg:w="134"/><text x="12.6627%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (134 samples, 0.06%)</title><rect x="12.4127%" y="485" width="0.0620%" height="15" fill="rgb(249,55,30)" fg:x="26822" fg:w="134"/><text x="12.6627%" y="495.50"></text></g><g><title>[libc.so.6] (134 samples, 0.06%)</title><rect x="12.4127%" y="469" width="0.0620%" height="15" fill="rgb(237,47,42)" fg:x="26822" fg:w="134"/><text x="12.6627%" y="479.50"></text></g><g><title>[libc.so.6] (353 samples, 0.16%)</title><rect x="12.4877%" y="437" width="0.1634%" height="15" fill="rgb(211,20,18)" fg:x="26984" fg:w="353"/><text x="12.7377%" y="447.50"></text></g><g><title>[libc.so.6] (211 samples, 0.10%)</title><rect x="12.5534%" y="421" width="0.0976%" height="15" fill="rgb(231,203,46)" fg:x="27126" fg:w="211"/><text x="12.8034%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (383 samples, 0.18%)</title><rect x="12.4761%" y="469" width="0.1772%" height="15" fill="rgb(237,142,3)" fg:x="26959" fg:w="383"/><text x="12.7261%" y="479.50"></text></g><g><title>malloc (376 samples, 0.17%)</title><rect x="12.4793%" y="453" width="0.1740%" height="15" fill="rgb(241,107,1)" fg:x="26966" fg:w="376"/><text x="12.7293%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (390 samples, 0.18%)</title><rect x="12.4752%" y="533" width="0.1805%" height="15" fill="rgb(229,83,13)" fg:x="26957" fg:w="390"/><text x="12.7252%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (390 samples, 0.18%)</title><rect x="12.4752%" y="517" width="0.1805%" height="15" fill="rgb(241,91,40)" fg:x="26957" fg:w="390"/><text x="12.7252%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (390 samples, 0.18%)</title><rect x="12.4752%" y="501" width="0.1805%" height="15" fill="rgb(225,3,45)" fg:x="26957" fg:w="390"/><text x="12.7252%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (388 samples, 0.18%)</title><rect x="12.4761%" y="485" width="0.1796%" height="15" fill="rgb(244,223,14)" fg:x="26959" fg:w="388"/><text x="12.7261%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (648 samples, 0.30%)</title><rect x="12.4747%" y="565" width="0.2999%" height="15" fill="rgb(224,124,37)" fg:x="26956" fg:w="648"/><text x="12.7247%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (647 samples, 0.30%)</title><rect x="12.4752%" y="549" width="0.2994%" height="15" fill="rgb(251,171,30)" fg:x="26957" fg:w="647"/><text x="12.7252%" y="559.50"></text></g><g><title>core::ptr::write (255 samples, 0.12%)</title><rect x="12.6566%" y="533" width="0.1180%" height="15" fill="rgb(236,46,54)" fg:x="27349" fg:w="255"/><text x="12.9066%" y="543.50"></text></g><g><title>[libc.so.6] (254 samples, 0.12%)</title><rect x="12.6571%" y="517" width="0.1175%" height="15" fill="rgb(245,213,5)" fg:x="27350" fg:w="254"/><text x="12.9071%" y="527.50"></text></g><g><title>[unknown] (108 samples, 0.05%)</title><rect x="12.7246%" y="501" width="0.0500%" height="15" fill="rgb(230,144,27)" fg:x="27496" fg:w="108"/><text x="12.9746%" y="511.50"></text></g><g><title>[unknown] (99 samples, 0.05%)</title><rect x="12.7288%" y="485" width="0.0458%" height="15" fill="rgb(220,86,6)" fg:x="27505" fg:w="99"/><text x="12.9788%" y="495.50"></text></g><g><title>[unknown] (93 samples, 0.04%)</title><rect x="12.7316%" y="469" width="0.0430%" height="15" fill="rgb(240,20,13)" fg:x="27511" fg:w="93"/><text x="12.9816%" y="479.50"></text></g><g><title>[unknown] (92 samples, 0.04%)</title><rect x="12.7320%" y="453" width="0.0426%" height="15" fill="rgb(217,89,34)" fg:x="27512" fg:w="92"/><text x="12.9820%" y="463.50"></text></g><g><title>[unknown] (87 samples, 0.04%)</title><rect x="12.7343%" y="437" width="0.0403%" height="15" fill="rgb(229,13,5)" fg:x="27517" fg:w="87"/><text x="12.9843%" y="447.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="12.7413%" y="421" width="0.0333%" height="15" fill="rgb(244,67,35)" fg:x="27532" fg:w="72"/><text x="12.9913%" y="431.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="12.7464%" y="405" width="0.0282%" height="15" fill="rgb(221,40,2)" fg:x="27543" fg:w="61"/><text x="12.9964%" y="415.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="12.7519%" y="389" width="0.0227%" height="15" fill="rgb(237,157,21)" fg:x="27555" fg:w="49"/><text x="13.0019%" y="399.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="12.7556%" y="373" width="0.0190%" height="15" fill="rgb(222,94,11)" fg:x="27563" fg:w="41"/><text x="13.0056%" y="383.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="12.7612%" y="357" width="0.0134%" height="15" fill="rgb(249,113,6)" fg:x="27575" fg:w="29"/><text x="13.0112%" y="367.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="12.7640%" y="341" width="0.0106%" height="15" fill="rgb(238,137,36)" fg:x="27581" fg:w="23"/><text x="13.0140%" y="351.50"></text></g><g><title>bitcoin::consensus::encode::read_bytes_from_finite_reader (791 samples, 0.37%)</title><rect x="12.4090%" y="581" width="0.3661%" height="15" fill="rgb(210,102,26)" fg:x="26814" fg:w="791"/><text x="12.6590%" y="591.50"></text></g><g><title>[unknown] (107 samples, 0.05%)</title><rect x="14.8432%" y="517" width="0.0495%" height="15" fill="rgb(218,30,30)" fg:x="32074" fg:w="107"/><text x="15.0932%" y="527.50"></text></g><g><title>[unknown] (107 samples, 0.05%)</title><rect x="14.8432%" y="501" width="0.0495%" height="15" fill="rgb(214,67,26)" fg:x="32074" fg:w="107"/><text x="15.0932%" y="511.50"></text></g><g><title>[unknown] (105 samples, 0.05%)</title><rect x="14.8442%" y="485" width="0.0486%" height="15" fill="rgb(251,9,53)" fg:x="32076" fg:w="105"/><text x="15.0942%" y="495.50"></text></g><g><title>[unknown] (102 samples, 0.05%)</title><rect x="14.8455%" y="469" width="0.0472%" height="15" fill="rgb(228,204,25)" fg:x="32079" fg:w="102"/><text x="15.0955%" y="479.50"></text></g><g><title>[unknown] (102 samples, 0.05%)</title><rect x="14.8455%" y="453" width="0.0472%" height="15" fill="rgb(207,153,8)" fg:x="32079" fg:w="102"/><text x="15.0955%" y="463.50"></text></g><g><title>[unknown] (97 samples, 0.04%)</title><rect x="14.8479%" y="437" width="0.0449%" height="15" fill="rgb(242,9,16)" fg:x="32084" fg:w="97"/><text x="15.0979%" y="447.50"></text></g><g><title>[unknown] (89 samples, 0.04%)</title><rect x="14.8516%" y="421" width="0.0412%" height="15" fill="rgb(217,211,10)" fg:x="32092" fg:w="89"/><text x="15.1016%" y="431.50"></text></g><g><title>[unknown] (83 samples, 0.04%)</title><rect x="14.8543%" y="405" width="0.0384%" height="15" fill="rgb(219,228,52)" fg:x="32098" fg:w="83"/><text x="15.1043%" y="415.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="14.8567%" y="389" width="0.0361%" height="15" fill="rgb(231,92,29)" fg:x="32103" fg:w="78"/><text x="15.1067%" y="399.50"></text></g><g><title>[unknown] (64 samples, 0.03%)</title><rect x="14.8631%" y="373" width="0.0296%" height="15" fill="rgb(232,8,23)" fg:x="32117" fg:w="64"/><text x="15.1131%" y="383.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="14.8664%" y="357" width="0.0264%" height="15" fill="rgb(216,211,34)" fg:x="32124" fg:w="57"/><text x="15.1164%" y="367.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="14.8701%" y="341" width="0.0227%" height="15" fill="rgb(236,151,0)" fg:x="32132" fg:w="49"/><text x="15.1201%" y="351.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="14.8738%" y="325" width="0.0190%" height="15" fill="rgb(209,168,3)" fg:x="32140" fg:w="41"/><text x="15.1238%" y="335.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="14.8779%" y="309" width="0.0148%" height="15" fill="rgb(208,129,28)" fg:x="32149" fg:w="32"/><text x="15.1279%" y="319.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="14.8803%" y="293" width="0.0125%" height="15" fill="rgb(229,78,22)" fg:x="32154" fg:w="27"/><text x="15.1303%" y="303.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (825 samples, 0.38%)</title><rect x="14.8928%" y="517" width="0.3818%" height="15" fill="rgb(228,187,13)" fg:x="32181" fg:w="825"/><text x="15.1428%" y="527.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="15.2639%" y="501" width="0.0106%" height="15" fill="rgb(240,119,24)" fg:x="32983" fg:w="23"/><text x="15.5139%" y="511.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="15.2639%" y="485" width="0.0106%" height="15" fill="rgb(209,194,42)" fg:x="32983" fg:w="23"/><text x="15.5139%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="15.2639%" y="469" width="0.0106%" height="15" fill="rgb(247,200,46)" fg:x="32983" fg:w="23"/><text x="15.5139%" y="479.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="15.2644%" y="453" width="0.0102%" height="15" fill="rgb(218,76,16)" fg:x="32984" fg:w="22"/><text x="15.5144%" y="463.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="15.2644%" y="437" width="0.0102%" height="15" fill="rgb(225,21,48)" fg:x="32984" fg:w="22"/><text x="15.5144%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (3,352 samples, 1.55%)</title><rect x="15.2745%" y="517" width="1.5512%" height="15" fill="rgb(239,223,50)" fg:x="33006" fg:w="3352"/><text x="15.5245%" y="527.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="16.8008%" y="501" width="0.0250%" height="15" fill="rgb(244,45,21)" fg:x="36304" fg:w="54"/><text x="17.0508%" y="511.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="16.8008%" y="485" width="0.0250%" height="15" fill="rgb(232,33,43)" fg:x="36304" fg:w="54"/><text x="17.0508%" y="495.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="16.8022%" y="469" width="0.0236%" height="15" fill="rgb(209,8,3)" fg:x="36307" fg:w="51"/><text x="17.0522%" y="479.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="16.8026%" y="453" width="0.0231%" height="15" fill="rgb(214,25,53)" fg:x="36308" fg:w="50"/><text x="17.0526%" y="463.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="16.8031%" y="437" width="0.0227%" height="15" fill="rgb(254,186,54)" fg:x="36309" fg:w="49"/><text x="17.0531%" y="447.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="16.8031%" y="421" width="0.0227%" height="15" fill="rgb(208,174,49)" fg:x="36309" fg:w="49"/><text x="17.0531%" y="431.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="16.8045%" y="405" width="0.0213%" height="15" fill="rgb(233,191,51)" fg:x="36312" fg:w="46"/><text x="17.0545%" y="415.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="16.8059%" y="389" width="0.0199%" height="15" fill="rgb(222,134,10)" fg:x="36315" fg:w="43"/><text x="17.0559%" y="399.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="16.8059%" y="373" width="0.0199%" height="15" fill="rgb(230,226,20)" fg:x="36315" fg:w="43"/><text x="17.0559%" y="383.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="16.8082%" y="357" width="0.0176%" height="15" fill="rgb(251,111,25)" fg:x="36320" fg:w="38"/><text x="17.0582%" y="367.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="16.8091%" y="341" width="0.0167%" height="15" fill="rgb(224,40,46)" fg:x="36322" fg:w="36"/><text x="17.0591%" y="351.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="16.8119%" y="325" width="0.0139%" height="15" fill="rgb(236,108,47)" fg:x="36328" fg:w="30"/><text x="17.0619%" y="335.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="16.8138%" y="309" width="0.0120%" height="15" fill="rgb(234,93,0)" fg:x="36332" fg:w="26"/><text x="17.0638%" y="319.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (13,135 samples, 6.08%)</title><rect x="12.8010%" y="533" width="6.0786%" height="15" fill="rgb(224,213,32)" fg:x="27661" fg:w="13135"/><text x="13.0510%" y="543.50">bitcoin_..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (4,438 samples, 2.05%)</title><rect x="16.8258%" y="517" width="2.0538%" height="15" fill="rgb(251,11,48)" fg:x="36358" fg:w="4438"/><text x="17.0758%" y="527.50">c..</text></g><g><title>[unknown] (94 samples, 0.04%)</title><rect x="18.8361%" y="501" width="0.0435%" height="15" fill="rgb(236,173,5)" fg:x="40702" fg:w="94"/><text x="19.0861%" y="511.50"></text></g><g><title>[unknown] (92 samples, 0.04%)</title><rect x="18.8370%" y="485" width="0.0426%" height="15" fill="rgb(230,95,12)" fg:x="40704" fg:w="92"/><text x="19.0870%" y="495.50"></text></g><g><title>[unknown] (90 samples, 0.04%)</title><rect x="18.8380%" y="469" width="0.0417%" height="15" fill="rgb(232,209,1)" fg:x="40706" fg:w="90"/><text x="19.0880%" y="479.50"></text></g><g><title>[unknown] (90 samples, 0.04%)</title><rect x="18.8380%" y="453" width="0.0417%" height="15" fill="rgb(232,6,1)" fg:x="40706" fg:w="90"/><text x="19.0880%" y="463.50"></text></g><g><title>[unknown] (90 samples, 0.04%)</title><rect x="18.8380%" y="437" width="0.0417%" height="15" fill="rgb(210,224,50)" fg:x="40706" fg:w="90"/><text x="19.0880%" y="447.50"></text></g><g><title>[unknown] (86 samples, 0.04%)</title><rect x="18.8398%" y="421" width="0.0398%" height="15" fill="rgb(228,127,35)" fg:x="40710" fg:w="86"/><text x="19.0898%" y="431.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="18.8435%" y="405" width="0.0361%" height="15" fill="rgb(245,102,45)" fg:x="40718" fg:w="78"/><text x="19.0935%" y="415.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="18.8454%" y="389" width="0.0342%" height="15" fill="rgb(214,1,49)" fg:x="40722" fg:w="74"/><text x="19.0954%" y="399.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="18.8481%" y="373" width="0.0315%" height="15" fill="rgb(226,163,40)" fg:x="40728" fg:w="68"/><text x="19.0981%" y="383.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="18.8532%" y="357" width="0.0264%" height="15" fill="rgb(239,212,28)" fg:x="40739" fg:w="57"/><text x="19.1032%" y="367.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="18.8574%" y="341" width="0.0222%" height="15" fill="rgb(220,20,13)" fg:x="40748" fg:w="48"/><text x="19.1074%" y="351.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="18.8629%" y="325" width="0.0167%" height="15" fill="rgb(210,164,35)" fg:x="40760" fg:w="36"/><text x="19.1129%" y="335.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="18.8657%" y="309" width="0.0139%" height="15" fill="rgb(248,109,41)" fg:x="40766" fg:w="30"/><text x="19.1157%" y="319.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="18.8676%" y="293" width="0.0120%" height="15" fill="rgb(238,23,50)" fg:x="40770" fg:w="26"/><text x="19.1176%" y="303.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (30 samples, 0.01%)</title><rect x="18.8796%" y="533" width="0.0139%" height="15" fill="rgb(211,48,49)" fg:x="40796" fg:w="30"/><text x="19.1296%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (30 samples, 0.01%)</title><rect x="18.8796%" y="517" width="0.0139%" height="15" fill="rgb(223,36,21)" fg:x="40796" fg:w="30"/><text x="19.1296%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (30 samples, 0.01%)</title><rect x="18.8796%" y="501" width="0.0139%" height="15" fill="rgb(207,123,46)" fg:x="40796" fg:w="30"/><text x="19.1296%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (142 samples, 0.07%)</title><rect x="18.9000%" y="533" width="0.0657%" height="15" fill="rgb(240,218,32)" fg:x="40840" fg:w="142"/><text x="19.1500%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (142 samples, 0.07%)</title><rect x="18.9000%" y="517" width="0.0657%" height="15" fill="rgb(252,5,43)" fg:x="40840" fg:w="142"/><text x="19.1500%" y="527.50"></text></g><g><title>[libc.so.6] (123 samples, 0.06%)</title><rect x="18.9088%" y="501" width="0.0569%" height="15" fill="rgb(252,84,19)" fg:x="40859" fg:w="123"/><text x="19.1588%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (13,368 samples, 6.19%)</title><rect x="12.7806%" y="549" width="6.1865%" height="15" fill="rgb(243,152,39)" fg:x="27617" fg:w="13368"/><text x="13.0306%" y="559.50">&lt;bitcoin..</text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (51 samples, 0.02%)</title><rect x="19.0189%" y="485" width="0.0236%" height="15" fill="rgb(234,160,15)" fg:x="41097" fg:w="51"/><text x="19.2689%" y="495.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (167 samples, 0.08%)</title><rect x="18.9828%" y="501" width="0.0773%" height="15" fill="rgb(237,34,20)" fg:x="41019" fg:w="167"/><text x="19.2328%" y="511.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (38 samples, 0.02%)</title><rect x="19.0425%" y="485" width="0.0176%" height="15" fill="rgb(229,97,13)" fg:x="41148" fg:w="38"/><text x="19.2925%" y="495.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (196 samples, 0.09%)</title><rect x="18.9800%" y="517" width="0.0907%" height="15" fill="rgb(234,71,50)" fg:x="41013" fg:w="196"/><text x="19.2300%" y="527.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (200 samples, 0.09%)</title><rect x="18.9786%" y="533" width="0.0926%" height="15" fill="rgb(253,155,4)" fg:x="41010" fg:w="200"/><text x="19.2286%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (35 samples, 0.02%)</title><rect x="19.1022%" y="469" width="0.0162%" height="15" fill="rgb(222,185,37)" fg:x="41277" fg:w="35"/><text x="19.3522%" y="479.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (145 samples, 0.07%)</title><rect x="19.0758%" y="485" width="0.0671%" height="15" fill="rgb(251,177,13)" fg:x="41220" fg:w="145"/><text x="19.3258%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (53 samples, 0.02%)</title><rect x="19.1184%" y="469" width="0.0245%" height="15" fill="rgb(250,179,40)" fg:x="41312" fg:w="53"/><text x="19.3684%" y="479.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (165 samples, 0.08%)</title><rect x="19.0726%" y="501" width="0.0764%" height="15" fill="rgb(242,44,2)" fg:x="41213" fg:w="165"/><text x="19.3226%" y="511.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (169 samples, 0.08%)</title><rect x="19.0717%" y="517" width="0.0782%" height="15" fill="rgb(216,177,13)" fg:x="41211" fg:w="169"/><text x="19.3217%" y="527.50"></text></g><g><title>&lt;bitcoin::consensus::encode::CheckedData as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (14,579 samples, 6.75%)</title><rect x="12.4058%" y="597" width="6.7469%" height="15" fill="rgb(216,106,43)" fg:x="26807" fg:w="14579"/><text x="12.6558%" y="607.50">&lt;bitcoin:..</text></g><g><title>bitcoin::consensus::encode::sha2_checksum (13,781 samples, 6.38%)</title><rect x="12.7751%" y="581" width="6.3776%" height="15" fill="rgb(216,183,2)" fg:x="27605" fg:w="13781"/><text x="13.0251%" y="591.50">bitcoin:..</text></g><g><title>bitcoin_hashes::Hash::hash (13,774 samples, 6.37%)</title><rect x="12.7783%" y="565" width="6.3743%" height="15" fill="rgb(249,75,3)" fg:x="27612" fg:w="13774"/><text x="13.0283%" y="575.50">bitcoin_..</text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (386 samples, 0.18%)</title><rect x="18.9740%" y="549" width="0.1786%" height="15" fill="rgb(219,67,39)" fg:x="41000" fg:w="386"/><text x="19.2240%" y="559.50"></text></g><g><title>bitcoin_hashes::Hash::hash (176 samples, 0.08%)</title><rect x="19.0712%" y="533" width="0.0814%" height="15" fill="rgb(253,228,2)" fg:x="41210" fg:w="176"/><text x="19.3212%" y="543.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (40 samples, 0.02%)</title><rect x="19.1531%" y="581" width="0.0185%" height="15" fill="rgb(235,138,27)" fg:x="41387" fg:w="40"/><text x="19.4031%" y="591.50"></text></g><g><title>&lt;bitcoin::network::message::HeaderDeserializationWrapper as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (52 samples, 0.02%)</title><rect x="19.1526%" y="597" width="0.0241%" height="15" fill="rgb(236,97,51)" fg:x="41386" fg:w="52"/><text x="19.4026%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.02%)</title><rect x="19.1989%" y="357" width="0.0180%" height="15" fill="rgb(240,80,30)" fg:x="41486" fg:w="39"/><text x="19.4489%" y="367.50"></text></g><g><title>malloc (25 samples, 0.01%)</title><rect x="19.2054%" y="341" width="0.0116%" height="15" fill="rgb(230,178,19)" fg:x="41500" fg:w="25"/><text x="19.4554%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (51 samples, 0.02%)</title><rect x="19.1975%" y="389" width="0.0236%" height="15" fill="rgb(210,190,27)" fg:x="41483" fg:w="51"/><text x="19.4475%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.02%)</title><rect x="19.1975%" y="373" width="0.0236%" height="15" fill="rgb(222,107,31)" fg:x="41483" fg:w="51"/><text x="19.4475%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (56 samples, 0.03%)</title><rect x="19.1961%" y="405" width="0.0259%" height="15" fill="rgb(216,127,34)" fg:x="41480" fg:w="56"/><text x="19.4461%" y="415.50"></text></g><g><title>&lt;bitcoin::network::message::CommandString as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (79 samples, 0.04%)</title><rect x="19.1860%" y="581" width="0.0366%" height="15" fill="rgb(234,116,52)" fg:x="41458" fg:w="79"/><text x="19.4360%" y="591.50"></text></g><g><title>alloc::string::&lt;impl core::iter::traits::collect::FromIterator&lt;char&gt; for alloc::borrow::Cow&lt;str&gt;&gt;::from_iter (78 samples, 0.04%)</title><rect x="19.1864%" y="565" width="0.0361%" height="15" fill="rgb(222,124,15)" fg:x="41459" fg:w="78"/><text x="19.4364%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (78 samples, 0.04%)</title><rect x="19.1864%" y="549" width="0.0361%" height="15" fill="rgb(231,179,28)" fg:x="41459" fg:w="78"/><text x="19.4364%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (67 samples, 0.03%)</title><rect x="19.1915%" y="533" width="0.0310%" height="15" fill="rgb(226,93,45)" fg:x="41470" fg:w="67"/><text x="19.4415%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (67 samples, 0.03%)</title><rect x="19.1915%" y="517" width="0.0310%" height="15" fill="rgb(215,8,51)" fg:x="41470" fg:w="67"/><text x="19.4415%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (67 samples, 0.03%)</title><rect x="19.1915%" y="501" width="0.0310%" height="15" fill="rgb(223,106,5)" fg:x="41470" fg:w="67"/><text x="19.4415%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (67 samples, 0.03%)</title><rect x="19.1915%" y="485" width="0.0310%" height="15" fill="rgb(250,191,5)" fg:x="41470" fg:w="67"/><text x="19.4415%" y="495.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (57 samples, 0.03%)</title><rect x="19.1961%" y="469" width="0.0264%" height="15" fill="rgb(242,132,44)" fg:x="41480" fg:w="57"/><text x="19.4461%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (57 samples, 0.03%)</title><rect x="19.1961%" y="453" width="0.0264%" height="15" fill="rgb(251,152,29)" fg:x="41480" fg:w="57"/><text x="19.4461%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (57 samples, 0.03%)</title><rect x="19.1961%" y="437" width="0.0264%" height="15" fill="rgb(218,179,5)" fg:x="41480" fg:w="57"/><text x="19.4461%" y="447.50"></text></g><g><title>alloc::string::String::push (57 samples, 0.03%)</title><rect x="19.1961%" y="421" width="0.0264%" height="15" fill="rgb(227,67,19)" fg:x="41480" fg:w="57"/><text x="19.4461%" y="431.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (23 samples, 0.01%)</title><rect x="19.2406%" y="517" width="0.0106%" height="15" fill="rgb(233,119,31)" fg:x="41576" fg:w="23"/><text x="19.4906%" y="527.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (52 samples, 0.02%)</title><rect x="19.2341%" y="533" width="0.0241%" height="15" fill="rgb(241,120,22)" fg:x="41562" fg:w="52"/><text x="19.4841%" y="543.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (36 samples, 0.02%)</title><rect x="19.2600%" y="533" width="0.0167%" height="15" fill="rgb(224,102,30)" fg:x="41618" fg:w="36"/><text x="19.5100%" y="543.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_i32 (36 samples, 0.02%)</title><rect x="19.2600%" y="517" width="0.0167%" height="15" fill="rgb(210,164,37)" fg:x="41618" fg:w="36"/><text x="19.5100%" y="527.50"></text></g><g><title>std::io::Read::read_exact (30 samples, 0.01%)</title><rect x="19.2628%" y="501" width="0.0139%" height="15" fill="rgb(226,191,16)" fg:x="41624" fg:w="30"/><text x="19.5128%" y="511.50"></text></g><g><title>std::io::default_read_exact (28 samples, 0.01%)</title><rect x="19.2637%" y="485" width="0.0130%" height="15" fill="rgb(214,40,45)" fg:x="41626" fg:w="28"/><text x="19.5137%" y="495.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (120 samples, 0.06%)</title><rect x="19.2336%" y="549" width="0.0555%" height="15" fill="rgb(244,29,26)" fg:x="41561" fg:w="120"/><text x="19.4836%" y="559.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (27 samples, 0.01%)</title><rect x="19.2767%" y="533" width="0.0125%" height="15" fill="rgb(216,16,5)" fg:x="41654" fg:w="27"/><text x="19.5267%" y="543.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u32 (27 samples, 0.01%)</title><rect x="19.2767%" y="517" width="0.0125%" height="15" fill="rgb(249,76,35)" fg:x="41654" fg:w="27"/><text x="19.5267%" y="527.50"></text></g><g><title>std::io::Read::read_exact (25 samples, 0.01%)</title><rect x="19.2776%" y="501" width="0.0116%" height="15" fill="rgb(207,11,44)" fg:x="41656" fg:w="25"/><text x="19.5276%" y="511.50"></text></g><g><title>std::io::default_read_exact (24 samples, 0.01%)</title><rect x="19.2781%" y="485" width="0.0111%" height="15" fill="rgb(228,190,49)" fg:x="41657" fg:w="24"/><text x="19.5281%" y="495.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (59 samples, 0.03%)</title><rect x="19.4687%" y="357" width="0.0273%" height="15" fill="rgb(214,173,12)" fg:x="42069" fg:w="59"/><text x="19.7187%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (35 samples, 0.02%)</title><rect x="19.4798%" y="341" width="0.0162%" height="15" fill="rgb(218,26,35)" fg:x="42093" fg:w="35"/><text x="19.7298%" y="351.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (35 samples, 0.02%)</title><rect x="19.4798%" y="325" width="0.0162%" height="15" fill="rgb(220,200,19)" fg:x="42093" fg:w="35"/><text x="19.7298%" y="335.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (26 samples, 0.01%)</title><rect x="19.4840%" y="309" width="0.0120%" height="15" fill="rgb(239,95,49)" fg:x="42102" fg:w="26"/><text x="19.7340%" y="319.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (26 samples, 0.01%)</title><rect x="19.4840%" y="293" width="0.0120%" height="15" fill="rgb(235,85,53)" fg:x="42102" fg:w="26"/><text x="19.7340%" y="303.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (122 samples, 0.06%)</title><rect x="19.4507%" y="421" width="0.0565%" height="15" fill="rgb(233,133,31)" fg:x="42030" fg:w="122"/><text x="19.7007%" y="431.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (113 samples, 0.05%)</title><rect x="19.4548%" y="405" width="0.0523%" height="15" fill="rgb(218,25,20)" fg:x="42039" fg:w="113"/><text x="19.7048%" y="415.50"></text></g><g><title>std::io::Read::read_exact (111 samples, 0.05%)</title><rect x="19.4558%" y="389" width="0.0514%" height="15" fill="rgb(252,210,38)" fg:x="42041" fg:w="111"/><text x="19.7058%" y="399.50"></text></g><g><title>std::io::default_read_exact (106 samples, 0.05%)</title><rect x="19.4581%" y="373" width="0.0491%" height="15" fill="rgb(242,134,21)" fg:x="42046" fg:w="106"/><text x="19.7081%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (24 samples, 0.01%)</title><rect x="19.5132%" y="405" width="0.0111%" height="15" fill="rgb(213,28,48)" fg:x="42165" fg:w="24"/><text x="19.7632%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (23 samples, 0.01%)</title><rect x="19.5136%" y="389" width="0.0106%" height="15" fill="rgb(250,196,2)" fg:x="42166" fg:w="23"/><text x="19.7636%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (170 samples, 0.08%)</title><rect x="19.4493%" y="437" width="0.0787%" height="15" fill="rgb(227,5,17)" fg:x="42027" fg:w="170"/><text x="19.6993%" y="447.50"></text></g><g><title>bitcoin::consensus::encode::read_bytes_from_finite_reader (38 samples, 0.02%)</title><rect x="19.5104%" y="421" width="0.0176%" height="15" fill="rgb(221,226,24)" fg:x="42159" fg:w="38"/><text x="19.7604%" y="431.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (256 samples, 0.12%)</title><rect x="19.4405%" y="469" width="0.1185%" height="15" fill="rgb(211,5,48)" fg:x="42008" fg:w="256"/><text x="19.6905%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (238 samples, 0.11%)</title><rect x="19.4488%" y="453" width="0.1101%" height="15" fill="rgb(219,150,6)" fg:x="42026" fg:w="238"/><text x="19.6988%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (67 samples, 0.03%)</title><rect x="19.5280%" y="437" width="0.0310%" height="15" fill="rgb(251,46,16)" fg:x="42197" fg:w="67"/><text x="19.7780%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (61 samples, 0.03%)</title><rect x="19.5307%" y="421" width="0.0282%" height="15" fill="rgb(220,204,40)" fg:x="42203" fg:w="61"/><text x="19.7807%" y="431.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (61 samples, 0.03%)</title><rect x="19.5307%" y="405" width="0.0282%" height="15" fill="rgb(211,85,2)" fg:x="42203" fg:w="61"/><text x="19.7807%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (61 samples, 0.03%)</title><rect x="19.5307%" y="389" width="0.0282%" height="15" fill="rgb(229,17,7)" fg:x="42203" fg:w="61"/><text x="19.7807%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (32 samples, 0.01%)</title><rect x="19.5442%" y="373" width="0.0148%" height="15" fill="rgb(239,72,28)" fg:x="42232" fg:w="32"/><text x="19.7942%" y="383.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (104 samples, 0.05%)</title><rect x="19.6251%" y="357" width="0.0481%" height="15" fill="rgb(230,47,54)" fg:x="42407" fg:w="104"/><text x="19.8751%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (57 samples, 0.03%)</title><rect x="19.6469%" y="341" width="0.0264%" height="15" fill="rgb(214,50,8)" fg:x="42454" fg:w="57"/><text x="19.8969%" y="351.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (57 samples, 0.03%)</title><rect x="19.6469%" y="325" width="0.0264%" height="15" fill="rgb(216,198,43)" fg:x="42454" fg:w="57"/><text x="19.8969%" y="335.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (50 samples, 0.02%)</title><rect x="19.6501%" y="309" width="0.0231%" height="15" fill="rgb(234,20,35)" fg:x="42461" fg:w="50"/><text x="19.9001%" y="319.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (50 samples, 0.02%)</title><rect x="19.6501%" y="293" width="0.0231%" height="15" fill="rgb(254,45,19)" fg:x="42461" fg:w="50"/><text x="19.9001%" y="303.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (40 samples, 0.02%)</title><rect x="19.6548%" y="277" width="0.0185%" height="15" fill="rgb(219,14,44)" fg:x="42471" fg:w="40"/><text x="19.9048%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (33 samples, 0.02%)</title><rect x="19.6580%" y="261" width="0.0153%" height="15" fill="rgb(217,220,26)" fg:x="42478" fg:w="33"/><text x="19.9080%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.02%)</title><rect x="19.6580%" y="245" width="0.0153%" height="15" fill="rgb(213,158,28)" fg:x="42478" fg:w="33"/><text x="19.9080%" y="255.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="19.6585%" y="229" width="0.0148%" height="15" fill="rgb(252,51,52)" fg:x="42479" fg:w="32"/><text x="19.9085%" y="239.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_slice (138 samples, 0.06%)</title><rect x="19.6131%" y="405" width="0.0639%" height="15" fill="rgb(246,89,16)" fg:x="42381" fg:w="138"/><text x="19.8631%" y="415.50"></text></g><g><title>std::io::Read::read_exact (135 samples, 0.06%)</title><rect x="19.6145%" y="389" width="0.0625%" height="15" fill="rgb(216,158,49)" fg:x="42384" fg:w="135"/><text x="19.8645%" y="399.50"></text></g><g><title>std::io::default_read_exact (130 samples, 0.06%)</title><rect x="19.6168%" y="373" width="0.0602%" height="15" fill="rgb(236,107,19)" fg:x="42389" fg:w="130"/><text x="19.8668%" y="383.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (195 samples, 0.09%)</title><rect x="19.5877%" y="421" width="0.0902%" height="15" fill="rgb(228,185,30)" fg:x="42326" fg:w="195"/><text x="19.8377%" y="431.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (307 samples, 0.14%)</title><rect x="19.5664%" y="437" width="0.1421%" height="15" fill="rgb(246,134,8)" fg:x="42280" fg:w="307"/><text x="19.8164%" y="447.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin_hashes::Hash&gt;::from_inner (66 samples, 0.03%)</title><rect x="19.6779%" y="421" width="0.0305%" height="15" fill="rgb(214,143,50)" fg:x="42521" fg:w="66"/><text x="19.9279%" y="431.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_inner (66 samples, 0.03%)</title><rect x="19.6779%" y="405" width="0.0305%" height="15" fill="rgb(228,75,8)" fg:x="42521" fg:w="66"/><text x="19.9279%" y="415.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (73 samples, 0.03%)</title><rect x="19.7149%" y="373" width="0.0338%" height="15" fill="rgb(207,175,4)" fg:x="42601" fg:w="73"/><text x="19.9649%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (35 samples, 0.02%)</title><rect x="19.7325%" y="357" width="0.0162%" height="15" fill="rgb(205,108,24)" fg:x="42639" fg:w="35"/><text x="19.9825%" y="367.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (35 samples, 0.02%)</title><rect x="19.7325%" y="341" width="0.0162%" height="15" fill="rgb(244,120,49)" fg:x="42639" fg:w="35"/><text x="19.9825%" y="351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (27 samples, 0.01%)</title><rect x="19.7362%" y="325" width="0.0125%" height="15" fill="rgb(223,47,38)" fg:x="42647" fg:w="27"/><text x="19.9862%" y="335.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (27 samples, 0.01%)</title><rect x="19.7362%" y="309" width="0.0125%" height="15" fill="rgb(229,179,11)" fg:x="42647" fg:w="27"/><text x="19.9862%" y="319.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (405 samples, 0.19%)</title><rect x="19.5664%" y="453" width="0.1874%" height="15" fill="rgb(231,122,1)" fg:x="42280" fg:w="405"/><text x="19.8164%" y="463.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (98 samples, 0.05%)</title><rect x="19.7084%" y="437" width="0.0454%" height="15" fill="rgb(245,119,9)" fg:x="42587" fg:w="98"/><text x="19.9584%" y="447.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u32 (98 samples, 0.05%)</title><rect x="19.7084%" y="421" width="0.0454%" height="15" fill="rgb(241,163,25)" fg:x="42587" fg:w="98"/><text x="19.9584%" y="431.50"></text></g><g><title>std::io::Read::read_exact (98 samples, 0.05%)</title><rect x="19.7084%" y="405" width="0.0454%" height="15" fill="rgb(217,214,3)" fg:x="42587" fg:w="98"/><text x="19.9584%" y="415.50"></text></g><g><title>std::io::default_read_exact (93 samples, 0.04%)</title><rect x="19.7108%" y="389" width="0.0430%" height="15" fill="rgb(240,86,28)" fg:x="42592" fg:w="93"/><text x="19.9608%" y="399.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (80 samples, 0.04%)</title><rect x="19.7626%" y="373" width="0.0370%" height="15" fill="rgb(215,47,9)" fg:x="42704" fg:w="80"/><text x="20.0126%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (60 samples, 0.03%)</title><rect x="19.7718%" y="357" width="0.0278%" height="15" fill="rgb(252,25,45)" fg:x="42724" fg:w="60"/><text x="20.0218%" y="367.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (60 samples, 0.03%)</title><rect x="19.7718%" y="341" width="0.0278%" height="15" fill="rgb(251,164,9)" fg:x="42724" fg:w="60"/><text x="20.0218%" y="351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (42 samples, 0.02%)</title><rect x="19.7802%" y="325" width="0.0194%" height="15" fill="rgb(233,194,0)" fg:x="42742" fg:w="42"/><text x="20.0302%" y="335.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (42 samples, 0.02%)</title><rect x="19.7802%" y="309" width="0.0194%" height="15" fill="rgb(249,111,24)" fg:x="42742" fg:w="42"/><text x="20.0302%" y="319.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (25 samples, 0.01%)</title><rect x="19.7880%" y="293" width="0.0116%" height="15" fill="rgb(250,223,3)" fg:x="42759" fg:w="25"/><text x="20.0380%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (22 samples, 0.01%)</title><rect x="19.7894%" y="277" width="0.0102%" height="15" fill="rgb(236,178,37)" fg:x="42762" fg:w="22"/><text x="20.0394%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.01%)</title><rect x="19.7894%" y="261" width="0.0102%" height="15" fill="rgb(241,158,50)" fg:x="42762" fg:w="22"/><text x="20.0394%" y="271.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (821 samples, 0.38%)</title><rect x="19.4308%" y="485" width="0.3799%" height="15" fill="rgb(213,121,41)" fg:x="41987" fg:w="821"/><text x="19.6808%" y="495.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (528 samples, 0.24%)</title><rect x="19.5664%" y="469" width="0.2443%" height="15" fill="rgb(240,92,3)" fg:x="42280" fg:w="528"/><text x="19.8164%" y="479.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Sequence as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (123 samples, 0.06%)</title><rect x="19.7538%" y="453" width="0.0569%" height="15" fill="rgb(205,123,3)" fg:x="42685" fg:w="123"/><text x="20.0038%" y="463.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (123 samples, 0.06%)</title><rect x="19.7538%" y="437" width="0.0569%" height="15" fill="rgb(205,97,47)" fg:x="42685" fg:w="123"/><text x="20.0038%" y="447.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u32 (123 samples, 0.06%)</title><rect x="19.7538%" y="421" width="0.0569%" height="15" fill="rgb(247,152,14)" fg:x="42685" fg:w="123"/><text x="20.0038%" y="431.50"></text></g><g><title>std::io::Read::read_exact (119 samples, 0.06%)</title><rect x="19.7557%" y="405" width="0.0551%" height="15" fill="rgb(248,195,53)" fg:x="42689" fg:w="119"/><text x="20.0057%" y="415.50"></text></g><g><title>std::io::default_read_exact (115 samples, 0.05%)</title><rect x="19.7575%" y="389" width="0.0532%" height="15" fill="rgb(226,201,16)" fg:x="42693" fg:w="115"/><text x="20.0075%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (94 samples, 0.04%)</title><rect x="19.8154%" y="485" width="0.0435%" height="15" fill="rgb(205,98,0)" fg:x="42818" fg:w="94"/><text x="20.0654%" y="495.50"></text></g><g><title>core::ptr::write (72 samples, 0.03%)</title><rect x="19.8255%" y="469" width="0.0333%" height="15" fill="rgb(214,191,48)" fg:x="42840" fg:w="72"/><text x="20.0755%" y="479.50"></text></g><g><title>[libc.so.6] (182 samples, 0.08%)</title><rect x="20.0268%" y="341" width="0.0842%" height="15" fill="rgb(237,112,39)" fg:x="43275" fg:w="182"/><text x="20.2768%" y="351.50"></text></g><g><title>[libc.so.6] (337 samples, 0.16%)</title><rect x="19.9579%" y="357" width="0.1560%" height="15" fill="rgb(247,203,27)" fg:x="43126" fg:w="337"/><text x="20.2079%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (583 samples, 0.27%)</title><rect x="19.8589%" y="485" width="0.2698%" height="15" fill="rgb(235,124,28)" fg:x="42912" fg:w="583"/><text x="20.1089%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (583 samples, 0.27%)</title><rect x="19.8589%" y="469" width="0.2698%" height="15" fill="rgb(208,207,46)" fg:x="42912" fg:w="583"/><text x="20.1089%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (582 samples, 0.27%)</title><rect x="19.8593%" y="453" width="0.2693%" height="15" fill="rgb(234,176,4)" fg:x="42913" fg:w="582"/><text x="20.1093%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (582 samples, 0.27%)</title><rect x="19.8593%" y="437" width="0.2693%" height="15" fill="rgb(230,133,28)" fg:x="42913" fg:w="582"/><text x="20.1093%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (576 samples, 0.27%)</title><rect x="19.8621%" y="421" width="0.2666%" height="15" fill="rgb(211,137,40)" fg:x="42919" fg:w="576"/><text x="20.1121%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (576 samples, 0.27%)</title><rect x="19.8621%" y="405" width="0.2666%" height="15" fill="rgb(254,35,13)" fg:x="42919" fg:w="576"/><text x="20.1121%" y="415.50"></text></g><g><title>alloc::alloc::alloc (576 samples, 0.27%)</title><rect x="19.8621%" y="389" width="0.2666%" height="15" fill="rgb(225,49,51)" fg:x="42919" fg:w="576"/><text x="20.1121%" y="399.50"></text></g><g><title>malloc (560 samples, 0.26%)</title><rect x="19.8695%" y="373" width="0.2592%" height="15" fill="rgb(251,10,15)" fg:x="42935" fg:w="560"/><text x="20.1195%" y="383.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (26 samples, 0.01%)</title><rect x="20.2045%" y="325" width="0.0120%" height="15" fill="rgb(228,207,15)" fg:x="43659" fg:w="26"/><text x="20.4545%" y="335.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (117 samples, 0.05%)</title><rect x="20.1717%" y="405" width="0.0541%" height="15" fill="rgb(241,99,19)" fg:x="43588" fg:w="117"/><text x="20.4217%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (65 samples, 0.03%)</title><rect x="20.1958%" y="389" width="0.0301%" height="15" fill="rgb(207,104,49)" fg:x="43640" fg:w="65"/><text x="20.4458%" y="399.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (65 samples, 0.03%)</title><rect x="20.1958%" y="373" width="0.0301%" height="15" fill="rgb(234,99,18)" fg:x="43640" fg:w="65"/><text x="20.4458%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (46 samples, 0.02%)</title><rect x="20.2045%" y="357" width="0.0213%" height="15" fill="rgb(213,191,49)" fg:x="43659" fg:w="46"/><text x="20.4545%" y="367.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (46 samples, 0.02%)</title><rect x="20.2045%" y="341" width="0.0213%" height="15" fill="rgb(210,226,19)" fg:x="43659" fg:w="46"/><text x="20.4545%" y="351.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (206 samples, 0.10%)</title><rect x="20.1416%" y="453" width="0.0953%" height="15" fill="rgb(229,97,18)" fg:x="43523" fg:w="206"/><text x="20.3916%" y="463.50"></text></g><g><title>std::io::Read::read_exact (196 samples, 0.09%)</title><rect x="20.1462%" y="437" width="0.0907%" height="15" fill="rgb(211,167,15)" fg:x="43533" fg:w="196"/><text x="20.3962%" y="447.50"></text></g><g><title>std::io::default_read_exact (192 samples, 0.09%)</title><rect x="20.1481%" y="421" width="0.0889%" height="15" fill="rgb(210,169,34)" fg:x="43537" fg:w="192"/><text x="20.3981%" y="431.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (230 samples, 0.11%)</title><rect x="20.1310%" y="469" width="0.1064%" height="15" fill="rgb(241,121,31)" fg:x="43500" fg:w="230"/><text x="20.3810%" y="479.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (236 samples, 0.11%)</title><rect x="20.1287%" y="485" width="0.1092%" height="15" fill="rgb(232,40,11)" fg:x="43495" fg:w="236"/><text x="20.3787%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,876 samples, 0.87%)</title><rect x="19.3766%" y="501" width="0.8682%" height="15" fill="rgb(205,86,26)" fg:x="41870" fg:w="1876"/><text x="19.6266%" y="511.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (24 samples, 0.01%)</title><rect x="20.3378%" y="277" width="0.0111%" height="15" fill="rgb(231,126,28)" fg:x="43947" fg:w="24"/><text x="20.5878%" y="287.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (114 samples, 0.05%)</title><rect x="20.3040%" y="357" width="0.0528%" height="15" fill="rgb(219,221,18)" fg:x="43874" fg:w="114"/><text x="20.5540%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (67 samples, 0.03%)</title><rect x="20.3258%" y="341" width="0.0310%" height="15" fill="rgb(211,40,0)" fg:x="43921" fg:w="67"/><text x="20.5758%" y="351.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (67 samples, 0.03%)</title><rect x="20.3258%" y="325" width="0.0310%" height="15" fill="rgb(239,85,43)" fg:x="43921" fg:w="67"/><text x="20.5758%" y="335.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (41 samples, 0.02%)</title><rect x="20.3378%" y="309" width="0.0190%" height="15" fill="rgb(231,55,21)" fg:x="43947" fg:w="41"/><text x="20.5878%" y="319.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (41 samples, 0.02%)</title><rect x="20.3378%" y="293" width="0.0190%" height="15" fill="rgb(225,184,43)" fg:x="43947" fg:w="41"/><text x="20.5878%" y="303.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (172 samples, 0.08%)</title><rect x="20.2869%" y="405" width="0.0796%" height="15" fill="rgb(251,158,41)" fg:x="43837" fg:w="172"/><text x="20.5369%" y="415.50"></text></g><g><title>std::io::Read::read_exact (167 samples, 0.08%)</title><rect x="20.2892%" y="389" width="0.0773%" height="15" fill="rgb(234,159,37)" fg:x="43842" fg:w="167"/><text x="20.5392%" y="399.50"></text></g><g><title>std::io::default_read_exact (159 samples, 0.07%)</title><rect x="20.2929%" y="373" width="0.0736%" height="15" fill="rgb(216,204,22)" fg:x="43850" fg:w="159"/><text x="20.5429%" y="383.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (197 samples, 0.09%)</title><rect x="20.2758%" y="421" width="0.0912%" height="15" fill="rgb(214,17,3)" fg:x="43813" fg:w="197"/><text x="20.5258%" y="431.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (124 samples, 0.06%)</title><rect x="20.3938%" y="341" width="0.0574%" height="15" fill="rgb(212,111,17)" fg:x="44068" fg:w="124"/><text x="20.6438%" y="351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (82 samples, 0.04%)</title><rect x="20.4133%" y="325" width="0.0379%" height="15" fill="rgb(221,157,24)" fg:x="44110" fg:w="82"/><text x="20.6633%" y="335.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (82 samples, 0.04%)</title><rect x="20.4133%" y="309" width="0.0379%" height="15" fill="rgb(252,16,13)" fg:x="44110" fg:w="82"/><text x="20.6633%" y="319.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (59 samples, 0.03%)</title><rect x="20.4239%" y="293" width="0.0273%" height="15" fill="rgb(221,62,2)" fg:x="44133" fg:w="59"/><text x="20.6739%" y="303.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (59 samples, 0.03%)</title><rect x="20.4239%" y="277" width="0.0273%" height="15" fill="rgb(247,87,22)" fg:x="44133" fg:w="59"/><text x="20.6739%" y="287.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (45 samples, 0.02%)</title><rect x="20.4304%" y="261" width="0.0208%" height="15" fill="rgb(215,73,9)" fg:x="44147" fg:w="45"/><text x="20.6804%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (34 samples, 0.02%)</title><rect x="20.4355%" y="245" width="0.0157%" height="15" fill="rgb(207,175,33)" fg:x="44158" fg:w="34"/><text x="20.6855%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.02%)</title><rect x="20.4355%" y="229" width="0.0157%" height="15" fill="rgb(243,129,54)" fg:x="44158" fg:w="34"/><text x="20.6855%" y="239.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="20.4378%" y="213" width="0.0134%" height="15" fill="rgb(227,119,45)" fg:x="44163" fg:w="29"/><text x="20.6878%" y="223.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_slice (176 samples, 0.08%)</title><rect x="20.3781%" y="405" width="0.0814%" height="15" fill="rgb(205,109,36)" fg:x="44034" fg:w="176"/><text x="20.6281%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_exact (176 samples, 0.08%)</title><rect x="20.3781%" y="389" width="0.0814%" height="15" fill="rgb(205,6,39)" fg:x="44034" fg:w="176"/><text x="20.6281%" y="399.50"></text></g><g><title>std::io::Read::read_exact (172 samples, 0.08%)</title><rect x="20.3799%" y="373" width="0.0796%" height="15" fill="rgb(221,32,16)" fg:x="44038" fg:w="172"/><text x="20.6299%" y="383.50"></text></g><g><title>std::io::default_read_exact (162 samples, 0.07%)</title><rect x="20.3846%" y="357" width="0.0750%" height="15" fill="rgb(228,144,50)" fg:x="44048" fg:w="162"/><text x="20.6346%" y="367.50"></text></g><g><title>__rdl_alloc (32 samples, 0.01%)</title><rect x="20.4892%" y="293" width="0.0148%" height="15" fill="rgb(229,201,53)" fg:x="44274" fg:w="32"/><text x="20.7392%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (25 samples, 0.01%)</title><rect x="20.4924%" y="277" width="0.0116%" height="15" fill="rgb(249,153,27)" fg:x="44281" fg:w="25"/><text x="20.7424%" y="287.50"></text></g><g><title>[libc.so.6] (85 samples, 0.04%)</title><rect x="20.8413%" y="261" width="0.0393%" height="15" fill="rgb(227,106,25)" fg:x="45035" fg:w="85"/><text x="21.0913%" y="271.50"></text></g><g><title>[libc.so.6] (504 samples, 0.23%)</title><rect x="20.6521%" y="277" width="0.2332%" height="15" fill="rgb(230,65,29)" fg:x="44626" fg:w="504"/><text x="20.9021%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (907 samples, 0.42%)</title><rect x="20.4822%" y="309" width="0.4197%" height="15" fill="rgb(221,57,46)" fg:x="44259" fg:w="907"/><text x="20.7322%" y="319.50"></text></g><g><title>malloc (835 samples, 0.39%)</title><rect x="20.5155%" y="293" width="0.3864%" height="15" fill="rgb(229,161,17)" fg:x="44331" fg:w="835"/><text x="20.7655%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (957 samples, 0.44%)</title><rect x="20.4693%" y="373" width="0.4429%" height="15" fill="rgb(222,213,11)" fg:x="44231" fg:w="957"/><text x="20.7193%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (957 samples, 0.44%)</title><rect x="20.4693%" y="357" width="0.4429%" height="15" fill="rgb(235,35,13)" fg:x="44231" fg:w="957"/><text x="20.7193%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (950 samples, 0.44%)</title><rect x="20.4725%" y="341" width="0.4396%" height="15" fill="rgb(233,158,34)" fg:x="44238" fg:w="950"/><text x="20.7225%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (942 samples, 0.44%)</title><rect x="20.4762%" y="325" width="0.4359%" height="15" fill="rgb(215,151,48)" fg:x="44246" fg:w="942"/><text x="20.7262%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1,032 samples, 0.48%)</title><rect x="20.4619%" y="405" width="0.4776%" height="15" fill="rgb(229,84,14)" fg:x="44215" fg:w="1032"/><text x="20.7119%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1,024 samples, 0.47%)</title><rect x="20.4656%" y="389" width="0.4739%" height="15" fill="rgb(229,68,14)" fg:x="44223" fg:w="1024"/><text x="20.7156%" y="399.50"></text></g><g><title>core::ptr::write (44 samples, 0.02%)</title><rect x="20.9191%" y="373" width="0.0204%" height="15" fill="rgb(243,106,26)" fg:x="45203" fg:w="44"/><text x="21.1691%" y="383.50"></text></g><g><title>[libc.so.6] (44 samples, 0.02%)</title><rect x="20.9191%" y="357" width="0.0204%" height="15" fill="rgb(206,45,38)" fg:x="45203" fg:w="44"/><text x="21.1691%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,455 samples, 0.67%)</title><rect x="20.2730%" y="437" width="0.6733%" height="15" fill="rgb(226,6,15)" fg:x="43807" fg:w="1455"/><text x="20.5230%" y="447.50"></text></g><g><title>bitcoin::consensus::encode::read_bytes_from_finite_reader (1,237 samples, 0.57%)</title><rect x="20.3739%" y="421" width="0.5725%" height="15" fill="rgb(232,22,54)" fg:x="44025" fg:w="1237"/><text x="20.6239%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,490 samples, 0.69%)</title><rect x="20.2730%" y="453" width="0.6895%" height="15" fill="rgb(229,222,32)" fg:x="43807" fg:w="1490"/><text x="20.5230%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (35 samples, 0.02%)</title><rect x="20.9464%" y="437" width="0.0162%" height="15" fill="rgb(228,62,29)" fg:x="45262" fg:w="35"/><text x="21.1964%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (33 samples, 0.02%)</title><rect x="20.9473%" y="421" width="0.0153%" height="15" fill="rgb(251,103,34)" fg:x="45264" fg:w="33"/><text x="21.1973%" y="431.50"></text></g><g><title>alloc::vec::&lt;impl core::convert::From&lt;alloc::vec::Vec&lt;T,A&gt;&gt; for alloc::boxed::Box&lt;[T],A&gt;&gt;::from (33 samples, 0.02%)</title><rect x="20.9473%" y="405" width="0.0153%" height="15" fill="rgb(233,12,30)" fg:x="45264" fg:w="33"/><text x="21.1973%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (33 samples, 0.02%)</title><rect x="20.9473%" y="389" width="0.0153%" height="15" fill="rgb(238,52,0)" fg:x="45264" fg:w="33"/><text x="21.1973%" y="399.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,516 samples, 0.70%)</title><rect x="20.2615%" y="469" width="0.7016%" height="15" fill="rgb(223,98,5)" fg:x="43782" fg:w="1516"/><text x="20.5115%" y="479.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (133 samples, 0.06%)</title><rect x="20.9894%" y="389" width="0.0615%" height="15" fill="rgb(228,75,37)" fg:x="45355" fg:w="133"/><text x="21.2394%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (89 samples, 0.04%)</title><rect x="21.0098%" y="373" width="0.0412%" height="15" fill="rgb(205,115,49)" fg:x="45399" fg:w="89"/><text x="21.2598%" y="383.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (89 samples, 0.04%)</title><rect x="21.0098%" y="357" width="0.0412%" height="15" fill="rgb(250,154,43)" fg:x="45399" fg:w="89"/><text x="21.2598%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (75 samples, 0.03%)</title><rect x="21.0163%" y="341" width="0.0347%" height="15" fill="rgb(226,43,29)" fg:x="45413" fg:w="75"/><text x="21.2663%" y="351.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (75 samples, 0.03%)</title><rect x="21.0163%" y="325" width="0.0347%" height="15" fill="rgb(249,228,39)" fg:x="45413" fg:w="75"/><text x="21.2663%" y="335.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (57 samples, 0.03%)</title><rect x="21.0246%" y="309" width="0.0264%" height="15" fill="rgb(216,79,43)" fg:x="45431" fg:w="57"/><text x="21.2746%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (43 samples, 0.02%)</title><rect x="21.0311%" y="293" width="0.0199%" height="15" fill="rgb(228,95,12)" fg:x="45445" fg:w="43"/><text x="21.2811%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.02%)</title><rect x="21.0311%" y="277" width="0.0199%" height="15" fill="rgb(249,221,15)" fg:x="45445" fg:w="43"/><text x="21.2811%" y="287.50"></text></g><g><title>[libc.so.6] (34 samples, 0.02%)</title><rect x="21.0352%" y="261" width="0.0157%" height="15" fill="rgb(233,34,13)" fg:x="45454" fg:w="34"/><text x="21.2852%" y="271.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (1,725 samples, 0.80%)</title><rect x="20.2605%" y="485" width="0.7983%" height="15" fill="rgb(214,103,39)" fg:x="43780" fg:w="1725"/><text x="20.5105%" y="495.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (196 samples, 0.09%)</title><rect x="20.9681%" y="469" width="0.0907%" height="15" fill="rgb(251,126,39)" fg:x="45309" fg:w="196"/><text x="21.2181%" y="479.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (196 samples, 0.09%)</title><rect x="20.9681%" y="453" width="0.0907%" height="15" fill="rgb(214,216,36)" fg:x="45309" fg:w="196"/><text x="21.2181%" y="463.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u64 (196 samples, 0.09%)</title><rect x="20.9681%" y="437" width="0.0907%" height="15" fill="rgb(220,221,8)" fg:x="45309" fg:w="196"/><text x="21.2181%" y="447.50"></text></g><g><title>std::io::Read::read_exact (179 samples, 0.08%)</title><rect x="20.9760%" y="421" width="0.0828%" height="15" fill="rgb(240,216,3)" fg:x="45326" fg:w="179"/><text x="21.2260%" y="431.50"></text></g><g><title>std::io::default_read_exact (174 samples, 0.08%)</title><rect x="20.9783%" y="405" width="0.0805%" height="15" fill="rgb(232,218,17)" fg:x="45331" fg:w="174"/><text x="21.2283%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (30 samples, 0.01%)</title><rect x="21.0612%" y="485" width="0.0139%" height="15" fill="rgb(229,163,45)" fg:x="45510" fg:w="30"/><text x="21.3112%" y="495.50"></text></g><g><title>[libc.so.6] (64 samples, 0.03%)</title><rect x="21.2509%" y="341" width="0.0296%" height="15" fill="rgb(231,110,42)" fg:x="45920" fg:w="64"/><text x="21.5009%" y="351.50"></text></g><g><title>[libc.so.6] (270 samples, 0.12%)</title><rect x="21.1579%" y="357" width="0.1250%" height="15" fill="rgb(208,170,48)" fg:x="45719" fg:w="270"/><text x="21.4079%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (457 samples, 0.21%)</title><rect x="21.0774%" y="421" width="0.2115%" height="15" fill="rgb(239,116,25)" fg:x="45545" fg:w="457"/><text x="21.3274%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (457 samples, 0.21%)</title><rect x="21.0774%" y="405" width="0.2115%" height="15" fill="rgb(219,200,50)" fg:x="45545" fg:w="457"/><text x="21.3274%" y="415.50"></text></g><g><title>alloc::alloc::alloc (457 samples, 0.21%)</title><rect x="21.0774%" y="389" width="0.2115%" height="15" fill="rgb(245,200,0)" fg:x="45545" fg:w="457"/><text x="21.3274%" y="399.50"></text></g><g><title>malloc (441 samples, 0.20%)</title><rect x="21.0848%" y="373" width="0.2041%" height="15" fill="rgb(245,119,33)" fg:x="45561" fg:w="441"/><text x="21.3348%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (466 samples, 0.22%)</title><rect x="21.0750%" y="485" width="0.2157%" height="15" fill="rgb(231,125,12)" fg:x="45540" fg:w="466"/><text x="21.3250%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (466 samples, 0.22%)</title><rect x="21.0750%" y="469" width="0.2157%" height="15" fill="rgb(216,96,41)" fg:x="45540" fg:w="466"/><text x="21.3250%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (466 samples, 0.22%)</title><rect x="21.0750%" y="453" width="0.2157%" height="15" fill="rgb(248,43,45)" fg:x="45540" fg:w="466"/><text x="21.3250%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (466 samples, 0.22%)</title><rect x="21.0750%" y="437" width="0.2157%" height="15" fill="rgb(217,222,7)" fg:x="45540" fg:w="466"/><text x="21.3250%" y="447.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (47 samples, 0.02%)</title><rect x="21.3023%" y="405" width="0.0218%" height="15" fill="rgb(233,28,6)" fg:x="46031" fg:w="47"/><text x="21.5523%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (23 samples, 0.01%)</title><rect x="21.3134%" y="389" width="0.0106%" height="15" fill="rgb(231,218,15)" fg:x="46055" fg:w="23"/><text x="21.5634%" y="399.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (23 samples, 0.01%)</title><rect x="21.3134%" y="373" width="0.0106%" height="15" fill="rgb(226,171,48)" fg:x="46055" fg:w="23"/><text x="21.5634%" y="383.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (82 samples, 0.04%)</title><rect x="21.2907%" y="485" width="0.0379%" height="15" fill="rgb(235,201,9)" fg:x="46006" fg:w="82"/><text x="21.5407%" y="495.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (81 samples, 0.04%)</title><rect x="21.2912%" y="469" width="0.0375%" height="15" fill="rgb(217,80,15)" fg:x="46007" fg:w="81"/><text x="21.5412%" y="479.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (76 samples, 0.04%)</title><rect x="21.2935%" y="453" width="0.0352%" height="15" fill="rgb(219,152,8)" fg:x="46012" fg:w="76"/><text x="21.5435%" y="463.50"></text></g><g><title>std::io::Read::read_exact (72 samples, 0.03%)</title><rect x="21.2953%" y="437" width="0.0333%" height="15" fill="rgb(243,107,38)" fg:x="46016" fg:w="72"/><text x="21.5453%" y="447.50"></text></g><g><title>std::io::default_read_exact (69 samples, 0.03%)</title><rect x="21.2967%" y="421" width="0.0319%" height="15" fill="rgb(231,17,5)" fg:x="46019" fg:w="69"/><text x="21.5467%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (2,349 samples, 1.09%)</title><rect x="20.2448%" y="501" width="1.0871%" height="15" fill="rgb(209,25,54)" fg:x="43746" fg:w="2349"/><text x="20.4948%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (79 samples, 0.04%)</title><rect x="21.3319%" y="501" width="0.0366%" height="15" fill="rgb(219,0,2)" fg:x="46095" fg:w="79"/><text x="21.5819%" y="511.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (66 samples, 0.03%)</title><rect x="21.3846%" y="405" width="0.0305%" height="15" fill="rgb(246,9,5)" fg:x="46209" fg:w="66"/><text x="21.6346%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (39 samples, 0.02%)</title><rect x="21.3971%" y="389" width="0.0180%" height="15" fill="rgb(226,159,4)" fg:x="46236" fg:w="39"/><text x="21.6471%" y="399.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (39 samples, 0.02%)</title><rect x="21.3971%" y="373" width="0.0180%" height="15" fill="rgb(219,175,34)" fg:x="46236" fg:w="39"/><text x="21.6471%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (27 samples, 0.01%)</title><rect x="21.4027%" y="357" width="0.0125%" height="15" fill="rgb(236,10,46)" fg:x="46248" fg:w="27"/><text x="21.6527%" y="367.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (27 samples, 0.01%)</title><rect x="21.4027%" y="341" width="0.0125%" height="15" fill="rgb(240,211,16)" fg:x="46248" fg:w="27"/><text x="21.6527%" y="351.50"></text></g><g><title>&lt;bitcoin::blockdata::locktime::PackedLockTime as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (85 samples, 0.04%)</title><rect x="21.3791%" y="485" width="0.0393%" height="15" fill="rgb(205,3,43)" fg:x="46197" fg:w="85"/><text x="21.6291%" y="495.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (85 samples, 0.04%)</title><rect x="21.3791%" y="469" width="0.0393%" height="15" fill="rgb(245,7,22)" fg:x="46197" fg:w="85"/><text x="21.6291%" y="479.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u32 (85 samples, 0.04%)</title><rect x="21.3791%" y="453" width="0.0393%" height="15" fill="rgb(239,132,32)" fg:x="46197" fg:w="85"/><text x="21.6291%" y="463.50"></text></g><g><title>std::io::Read::read_exact (85 samples, 0.04%)</title><rect x="21.3791%" y="437" width="0.0393%" height="15" fill="rgb(228,202,34)" fg:x="46197" fg:w="85"/><text x="21.6291%" y="447.50"></text></g><g><title>std::io::default_read_exact (81 samples, 0.04%)</title><rect x="21.3809%" y="421" width="0.0375%" height="15" fill="rgb(254,200,22)" fg:x="46201" fg:w="81"/><text x="21.6309%" y="431.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::remaining_slice (26 samples, 0.01%)</title><rect x="21.5623%" y="325" width="0.0120%" height="15" fill="rgb(219,10,39)" fg:x="46593" fg:w="26"/><text x="21.8123%" y="335.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (154 samples, 0.07%)</title><rect x="21.5179%" y="405" width="0.0713%" height="15" fill="rgb(226,210,39)" fg:x="46497" fg:w="154"/><text x="21.7679%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (85 samples, 0.04%)</title><rect x="21.5499%" y="389" width="0.0393%" height="15" fill="rgb(208,219,16)" fg:x="46566" fg:w="85"/><text x="21.7999%" y="399.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (85 samples, 0.04%)</title><rect x="21.5499%" y="373" width="0.0393%" height="15" fill="rgb(216,158,51)" fg:x="46566" fg:w="85"/><text x="21.7999%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (58 samples, 0.03%)</title><rect x="21.5623%" y="357" width="0.0268%" height="15" fill="rgb(233,14,44)" fg:x="46593" fg:w="58"/><text x="21.8123%" y="367.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (58 samples, 0.03%)</title><rect x="21.5623%" y="341" width="0.0268%" height="15" fill="rgb(237,97,39)" fg:x="46593" fg:w="58"/><text x="21.8123%" y="351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (32 samples, 0.01%)</title><rect x="21.5744%" y="325" width="0.0148%" height="15" fill="rgb(218,198,43)" fg:x="46619" fg:w="32"/><text x="21.8244%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (46 samples, 0.02%)</title><rect x="21.5901%" y="405" width="0.0213%" height="15" fill="rgb(231,104,20)" fg:x="46653" fg:w="46"/><text x="21.8401%" y="415.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (275 samples, 0.13%)</title><rect x="21.4874%" y="453" width="0.1273%" height="15" fill="rgb(254,36,13)" fg:x="46431" fg:w="275"/><text x="21.7374%" y="463.50"></text></g><g><title>std::io::Read::read_exact (264 samples, 0.12%)</title><rect x="21.4925%" y="437" width="0.1222%" height="15" fill="rgb(248,14,50)" fg:x="46442" fg:w="264"/><text x="21.7425%" y="447.50"></text></g><g><title>std::io::default_read_exact (251 samples, 0.12%)</title><rect x="21.4985%" y="421" width="0.1162%" height="15" fill="rgb(217,107,29)" fg:x="46455" fg:w="251"/><text x="21.7485%" y="431.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (302 samples, 0.14%)</title><rect x="21.4753%" y="469" width="0.1398%" height="15" fill="rgb(251,169,33)" fg:x="46405" fg:w="302"/><text x="21.7253%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.02%)</title><rect x="21.6193%" y="469" width="0.0208%" height="15" fill="rgb(217,108,32)" fg:x="46716" fg:w="45"/><text x="21.8693%" y="479.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="21.6438%" y="357" width="0.0134%" height="15" fill="rgb(219,66,42)" fg:x="46769" fg:w="29"/><text x="21.8938%" y="367.50"></text></g><g><title>[libc.so.6] (212 samples, 0.10%)</title><rect x="21.9154%" y="325" width="0.0981%" height="15" fill="rgb(206,180,7)" fg:x="47356" fg:w="212"/><text x="22.1654%" y="335.50"></text></g><g><title>__mprotect (34 samples, 0.02%)</title><rect x="21.9978%" y="309" width="0.0157%" height="15" fill="rgb(208,226,31)" fg:x="47534" fg:w="34"/><text x="22.2478%" y="319.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="21.9983%" y="293" width="0.0153%" height="15" fill="rgb(218,26,49)" fg:x="47535" fg:w="33"/><text x="22.2483%" y="303.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="21.9983%" y="277" width="0.0153%" height="15" fill="rgb(233,197,48)" fg:x="47535" fg:w="33"/><text x="22.2483%" y="287.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="21.9988%" y="261" width="0.0148%" height="15" fill="rgb(252,181,51)" fg:x="47536" fg:w="32"/><text x="22.2488%" y="271.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="21.9988%" y="245" width="0.0148%" height="15" fill="rgb(253,90,19)" fg:x="47536" fg:w="32"/><text x="22.2488%" y="255.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="21.9992%" y="229" width="0.0143%" height="15" fill="rgb(215,171,30)" fg:x="47537" fg:w="31"/><text x="22.2492%" y="239.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="22.0001%" y="213" width="0.0134%" height="15" fill="rgb(214,222,9)" fg:x="47539" fg:w="29"/><text x="22.2501%" y="223.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="22.0020%" y="197" width="0.0116%" height="15" fill="rgb(223,3,22)" fg:x="47543" fg:w="25"/><text x="22.2520%" y="207.50"></text></g><g><title>[libc.so.6] (568 samples, 0.26%)</title><rect x="21.7549%" y="341" width="0.2629%" height="15" fill="rgb(225,196,46)" fg:x="47009" fg:w="568"/><text x="22.0049%" y="351.50"></text></g><g><title>__libc_calloc (820 samples, 0.38%)</title><rect x="21.6572%" y="357" width="0.3795%" height="15" fill="rgb(209,110,37)" fg:x="46798" fg:w="820"/><text x="21.9072%" y="367.50"></text></g><g><title>alloc::vec::from_elem (878 samples, 0.41%)</title><rect x="21.6424%" y="469" width="0.4063%" height="15" fill="rgb(249,89,12)" fg:x="46766" fg:w="878"/><text x="21.8924%" y="479.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (878 samples, 0.41%)</title><rect x="21.6424%" y="453" width="0.4063%" height="15" fill="rgb(226,27,33)" fg:x="46766" fg:w="878"/><text x="21.8924%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (877 samples, 0.41%)</title><rect x="21.6429%" y="437" width="0.4059%" height="15" fill="rgb(213,82,22)" fg:x="46767" fg:w="877"/><text x="21.8929%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (877 samples, 0.41%)</title><rect x="21.6429%" y="421" width="0.4059%" height="15" fill="rgb(248,140,0)" fg:x="46767" fg:w="877"/><text x="21.8929%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (875 samples, 0.40%)</title><rect x="21.6438%" y="405" width="0.4049%" height="15" fill="rgb(228,106,3)" fg:x="46769" fg:w="875"/><text x="21.8938%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (875 samples, 0.40%)</title><rect x="21.6438%" y="389" width="0.4049%" height="15" fill="rgb(209,23,37)" fg:x="46769" fg:w="875"/><text x="21.8938%" y="399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (875 samples, 0.40%)</title><rect x="21.6438%" y="373" width="0.4049%" height="15" fill="rgb(241,93,50)" fg:x="46769" fg:w="875"/><text x="21.8938%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (33 samples, 0.02%)</title><rect x="22.0668%" y="453" width="0.0153%" height="15" fill="rgb(253,46,43)" fg:x="47683" fg:w="33"/><text x="22.3168%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (36 samples, 0.02%)</title><rect x="22.0821%" y="453" width="0.0167%" height="15" fill="rgb(226,206,43)" fg:x="47716" fg:w="36"/><text x="22.3321%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (36 samples, 0.02%)</title><rect x="22.0821%" y="437" width="0.0167%" height="15" fill="rgb(217,54,7)" fg:x="47716" fg:w="36"/><text x="22.3321%" y="447.50"></text></g><g><title>bitcoin::blockdata::witness::resize_if_needed (109 samples, 0.05%)</title><rect x="22.0487%" y="469" width="0.0504%" height="15" fill="rgb(223,5,52)" fg:x="47644" fg:w="109"/><text x="22.2987%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (101 samples, 0.05%)</title><rect x="22.0996%" y="469" width="0.0467%" height="15" fill="rgb(206,52,46)" fg:x="47754" fg:w="101"/><text x="22.3496%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::consensus::encode::Error&gt; (99 samples, 0.05%)</title><rect x="22.1006%" y="453" width="0.0458%" height="15" fill="rgb(253,136,11)" fg:x="47756" fg:w="99"/><text x="22.3506%" y="463.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (181 samples, 0.08%)</title><rect x="22.1654%" y="437" width="0.0838%" height="15" fill="rgb(208,106,33)" fg:x="47896" fg:w="181"/><text x="22.4154%" y="447.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (131 samples, 0.06%)</title><rect x="22.1885%" y="421" width="0.0606%" height="15" fill="rgb(206,54,4)" fg:x="47946" fg:w="131"/><text x="22.4385%" y="431.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (131 samples, 0.06%)</title><rect x="22.1885%" y="405" width="0.0606%" height="15" fill="rgb(213,3,15)" fg:x="47946" fg:w="131"/><text x="22.4385%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (110 samples, 0.05%)</title><rect x="22.1982%" y="389" width="0.0509%" height="15" fill="rgb(252,211,39)" fg:x="47967" fg:w="110"/><text x="22.4482%" y="399.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (110 samples, 0.05%)</title><rect x="22.1982%" y="373" width="0.0509%" height="15" fill="rgb(223,6,36)" fg:x="47967" fg:w="110"/><text x="22.4482%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (95 samples, 0.04%)</title><rect x="22.2052%" y="357" width="0.0440%" height="15" fill="rgb(252,169,45)" fg:x="47982" fg:w="95"/><text x="22.4552%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (83 samples, 0.04%)</title><rect x="22.2107%" y="341" width="0.0384%" height="15" fill="rgb(212,48,26)" fg:x="47994" fg:w="83"/><text x="22.4607%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (83 samples, 0.04%)</title><rect x="22.2107%" y="325" width="0.0384%" height="15" fill="rgb(251,102,48)" fg:x="47994" fg:w="83"/><text x="22.4607%" y="335.50"></text></g><g><title>[libc.so.6] (78 samples, 0.04%)</title><rect x="22.2130%" y="309" width="0.0361%" height="15" fill="rgb(243,208,16)" fg:x="47999" fg:w="78"/><text x="22.4630%" y="319.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (1,808 samples, 0.84%)</title><rect x="21.4184%" y="485" width="0.8367%" height="15" fill="rgb(219,96,24)" fg:x="46282" fg:w="1808"/><text x="21.6684%" y="495.50"></text></g><g><title>std::io::Read::read_exact (235 samples, 0.11%)</title><rect x="22.1464%" y="469" width="0.1088%" height="15" fill="rgb(219,33,29)" fg:x="47855" fg:w="235"/><text x="22.3964%" y="479.50"></text></g><g><title>std::io::default_read_exact (227 samples, 0.11%)</title><rect x="22.1501%" y="453" width="0.1051%" height="15" fill="rgb(223,176,5)" fg:x="47863" fg:w="227"/><text x="22.4001%" y="463.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (81 samples, 0.04%)</title><rect x="22.2644%" y="421" width="0.0375%" height="15" fill="rgb(228,140,14)" fg:x="48110" fg:w="81"/><text x="22.5144%" y="431.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (36 samples, 0.02%)</title><rect x="22.2852%" y="405" width="0.0167%" height="15" fill="rgb(217,179,31)" fg:x="48155" fg:w="36"/><text x="22.5352%" y="415.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (36 samples, 0.02%)</title><rect x="22.2852%" y="389" width="0.0167%" height="15" fill="rgb(230,9,30)" fg:x="48155" fg:w="36"/><text x="22.5352%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (27 samples, 0.01%)</title><rect x="22.2894%" y="373" width="0.0125%" height="15" fill="rgb(230,136,20)" fg:x="48164" fg:w="27"/><text x="22.5394%" y="383.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (27 samples, 0.01%)</title><rect x="22.2894%" y="357" width="0.0125%" height="15" fill="rgb(215,210,22)" fg:x="48164" fg:w="27"/><text x="22.5394%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (22 samples, 0.01%)</title><rect x="22.2917%" y="341" width="0.0102%" height="15" fill="rgb(218,43,5)" fg:x="48169" fg:w="22"/><text x="22.5417%" y="351.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (107 samples, 0.05%)</title><rect x="22.2551%" y="485" width="0.0495%" height="15" fill="rgb(216,11,5)" fg:x="48090" fg:w="107"/><text x="22.5051%" y="495.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_i32 (107 samples, 0.05%)</title><rect x="22.2551%" y="469" width="0.0495%" height="15" fill="rgb(209,82,29)" fg:x="48090" fg:w="107"/><text x="22.5051%" y="479.50"></text></g><g><title>std::io::Read::read_exact (104 samples, 0.05%)</title><rect x="22.2565%" y="453" width="0.0481%" height="15" fill="rgb(244,115,12)" fg:x="48093" fg:w="104"/><text x="22.5065%" y="463.50"></text></g><g><title>std::io::default_read_exact (99 samples, 0.05%)</title><rect x="22.2588%" y="437" width="0.0458%" height="15" fill="rgb(222,82,18)" fg:x="48098" fg:w="99"/><text x="22.5088%" y="447.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (51 samples, 0.02%)</title><rect x="22.3167%" y="421" width="0.0236%" height="15" fill="rgb(249,227,8)" fg:x="48223" fg:w="51"/><text x="22.5667%" y="431.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (26 samples, 0.01%)</title><rect x="22.3283%" y="405" width="0.0120%" height="15" fill="rgb(253,141,45)" fg:x="48248" fg:w="26"/><text x="22.5783%" y="415.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (26 samples, 0.01%)</title><rect x="22.3283%" y="389" width="0.0120%" height="15" fill="rgb(234,184,4)" fg:x="48248" fg:w="26"/><text x="22.5783%" y="399.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (2,085 samples, 0.96%)</title><rect x="21.3786%" y="501" width="0.9649%" height="15" fill="rgb(218,194,23)" fg:x="46196" fg:w="2085"/><text x="21.6286%" y="511.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (84 samples, 0.04%)</title><rect x="22.3046%" y="485" width="0.0389%" height="15" fill="rgb(235,66,41)" fg:x="48197" fg:w="84"/><text x="22.5546%" y="495.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (84 samples, 0.04%)</title><rect x="22.3046%" y="469" width="0.0389%" height="15" fill="rgb(245,217,1)" fg:x="48197" fg:w="84"/><text x="22.5546%" y="479.50"></text></g><g><title>std::io::Read::read_exact (83 samples, 0.04%)</title><rect x="22.3051%" y="453" width="0.0384%" height="15" fill="rgb(229,91,1)" fg:x="48198" fg:w="83"/><text x="22.5551%" y="463.50"></text></g><g><title>std::io::default_read_exact (74 samples, 0.03%)</title><rect x="22.3093%" y="437" width="0.0342%" height="15" fill="rgb(207,101,30)" fg:x="48207" fg:w="74"/><text x="22.5593%" y="447.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (6,579 samples, 3.04%)</title><rect x="19.3003%" y="517" width="3.0446%" height="15" fill="rgb(223,82,49)" fg:x="41705" fg:w="6579"/><text x="19.5503%" y="527.50">&lt;bi..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.02%)</title><rect x="22.3449%" y="517" width="0.0208%" height="15" fill="rgb(218,167,17)" fg:x="48284" fg:w="45"/><text x="22.5949%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43 samples, 0.02%)</title><rect x="22.3662%" y="517" width="0.0199%" height="15" fill="rgb(208,103,14)" fg:x="48330" fg:w="43"/><text x="22.6162%" y="527.50"></text></g><g><title>core::ptr::write (41 samples, 0.02%)</title><rect x="22.3671%" y="501" width="0.0190%" height="15" fill="rgb(238,20,8)" fg:x="48332" fg:w="41"/><text x="22.6171%" y="511.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="22.4217%" y="373" width="0.0102%" height="15" fill="rgb(218,80,54)" fg:x="48450" fg:w="22"/><text x="22.6717%" y="383.50"></text></g><g><title>[libc.so.6] (68 samples, 0.03%)</title><rect x="22.4009%" y="389" width="0.0315%" height="15" fill="rgb(240,144,17)" fg:x="48405" fg:w="68"/><text x="22.6509%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (102 samples, 0.05%)</title><rect x="22.3861%" y="517" width="0.0472%" height="15" fill="rgb(245,27,50)" fg:x="48373" fg:w="102"/><text x="22.6361%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (102 samples, 0.05%)</title><rect x="22.3861%" y="501" width="0.0472%" height="15" fill="rgb(251,51,7)" fg:x="48373" fg:w="102"/><text x="22.6361%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (101 samples, 0.05%)</title><rect x="22.3866%" y="485" width="0.0467%" height="15" fill="rgb(245,217,29)" fg:x="48374" fg:w="101"/><text x="22.6366%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 0.05%)</title><rect x="22.3866%" y="469" width="0.0467%" height="15" fill="rgb(221,176,29)" fg:x="48374" fg:w="101"/><text x="22.6366%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.05%)</title><rect x="22.3879%" y="453" width="0.0454%" height="15" fill="rgb(212,180,24)" fg:x="48377" fg:w="98"/><text x="22.6379%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.05%)</title><rect x="22.3879%" y="437" width="0.0454%" height="15" fill="rgb(254,24,2)" fg:x="48377" fg:w="98"/><text x="22.6379%" y="447.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.05%)</title><rect x="22.3879%" y="421" width="0.0454%" height="15" fill="rgb(230,100,2)" fg:x="48377" fg:w="98"/><text x="22.6379%" y="431.50"></text></g><g><title>malloc (91 samples, 0.04%)</title><rect x="22.3912%" y="405" width="0.0421%" height="15" fill="rgb(219,142,25)" fg:x="48384" fg:w="91"/><text x="22.6412%" y="415.50"></text></g><g><title>&lt;bitcoin::blockdata::block::Block as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (6,939 samples, 3.21%)</title><rect x="19.2322%" y="565" width="3.2112%" height="15" fill="rgb(240,73,43)" fg:x="41558" fg:w="6939"/><text x="19.4822%" y="575.50">&lt;bi..</text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode (6,814 samples, 3.15%)</title><rect x="19.2901%" y="549" width="3.1534%" height="15" fill="rgb(214,114,15)" fg:x="41683" fg:w="6814"/><text x="19.5401%" y="559.50">bit..</text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::Transaction&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (6,813 samples, 3.15%)</title><rect x="19.2906%" y="533" width="3.1529%" height="15" fill="rgb(207,130,4)" fg:x="41684" fg:w="6813"/><text x="19.5406%" y="543.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (31 samples, 0.01%)</title><rect x="22.4495%" y="501" width="0.0143%" height="15" fill="rgb(221,25,40)" fg:x="48510" fg:w="31"/><text x="22.6995%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.01%)</title><rect x="22.4495%" y="485" width="0.0143%" height="15" fill="rgb(241,184,7)" fg:x="48510" fg:w="31"/><text x="22.6995%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.01%)</title><rect x="22.4495%" y="469" width="0.0143%" height="15" fill="rgb(235,159,4)" fg:x="48510" fg:w="31"/><text x="22.6995%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.01%)</title><rect x="22.4500%" y="453" width="0.0139%" height="15" fill="rgb(214,87,48)" fg:x="48511" fg:w="30"/><text x="22.7000%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.01%)</title><rect x="22.4504%" y="437" width="0.0134%" height="15" fill="rgb(246,198,24)" fg:x="48512" fg:w="29"/><text x="22.7004%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.01%)</title><rect x="22.4504%" y="421" width="0.0134%" height="15" fill="rgb(209,66,40)" fg:x="48512" fg:w="29"/><text x="22.7004%" y="431.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.01%)</title><rect x="22.4504%" y="405" width="0.0134%" height="15" fill="rgb(233,147,39)" fg:x="48512" fg:w="29"/><text x="22.7004%" y="415.50"></text></g><g><title>malloc (26 samples, 0.01%)</title><rect x="22.4518%" y="389" width="0.0120%" height="15" fill="rgb(231,145,52)" fg:x="48515" fg:w="26"/><text x="22.7018%" y="399.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (52 samples, 0.02%)</title><rect x="22.4791%" y="389" width="0.0241%" height="15" fill="rgb(206,20,26)" fg:x="48574" fg:w="52"/><text x="22.7291%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (40 samples, 0.02%)</title><rect x="22.4847%" y="373" width="0.0185%" height="15" fill="rgb(238,220,4)" fg:x="48586" fg:w="40"/><text x="22.7347%" y="383.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (40 samples, 0.02%)</title><rect x="22.4847%" y="357" width="0.0185%" height="15" fill="rgb(252,195,42)" fg:x="48586" fg:w="40"/><text x="22.7347%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (35 samples, 0.02%)</title><rect x="22.4870%" y="341" width="0.0162%" height="15" fill="rgb(209,10,6)" fg:x="48591" fg:w="35"/><text x="22.7370%" y="351.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (35 samples, 0.02%)</title><rect x="22.4870%" y="325" width="0.0162%" height="15" fill="rgb(229,3,52)" fg:x="48591" fg:w="35"/><text x="22.7370%" y="335.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (63 samples, 0.03%)</title><rect x="22.4745%" y="421" width="0.0292%" height="15" fill="rgb(253,49,37)" fg:x="48564" fg:w="63"/><text x="22.7245%" y="431.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (56 samples, 0.03%)</title><rect x="22.4777%" y="405" width="0.0259%" height="15" fill="rgb(240,103,49)" fg:x="48571" fg:w="56"/><text x="22.7277%" y="415.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u32 (81 samples, 0.04%)</title><rect x="22.4694%" y="469" width="0.0375%" height="15" fill="rgb(250,182,30)" fg:x="48553" fg:w="81"/><text x="22.7194%" y="479.50"></text></g><g><title>std::io::Read::read_exact (78 samples, 0.04%)</title><rect x="22.4708%" y="453" width="0.0361%" height="15" fill="rgb(248,8,30)" fg:x="48556" fg:w="78"/><text x="22.7208%" y="463.50"></text></g><g><title>std::io::default_read_exact (76 samples, 0.04%)</title><rect x="22.4717%" y="437" width="0.0352%" height="15" fill="rgb(237,120,30)" fg:x="48558" fg:w="76"/><text x="22.7217%" y="447.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (66 samples, 0.03%)</title><rect x="22.5185%" y="421" width="0.0305%" height="15" fill="rgb(221,146,34)" fg:x="48659" fg:w="66"/><text x="22.7685%" y="431.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (57 samples, 0.03%)</title><rect x="22.5226%" y="405" width="0.0264%" height="15" fill="rgb(242,55,13)" fg:x="48668" fg:w="57"/><text x="22.7726%" y="415.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (49 samples, 0.02%)</title><rect x="22.5263%" y="389" width="0.0227%" height="15" fill="rgb(242,112,31)" fg:x="48676" fg:w="49"/><text x="22.7763%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (35 samples, 0.02%)</title><rect x="22.5328%" y="373" width="0.0162%" height="15" fill="rgb(249,192,27)" fg:x="48690" fg:w="35"/><text x="22.7828%" y="383.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (35 samples, 0.02%)</title><rect x="22.5328%" y="357" width="0.0162%" height="15" fill="rgb(208,204,44)" fg:x="48690" fg:w="35"/><text x="22.7828%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (26 samples, 0.01%)</title><rect x="22.5370%" y="341" width="0.0120%" height="15" fill="rgb(208,93,54)" fg:x="48699" fg:w="26"/><text x="22.7870%" y="351.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (26 samples, 0.01%)</title><rect x="22.5370%" y="325" width="0.0120%" height="15" fill="rgb(242,1,31)" fg:x="48699" fg:w="26"/><text x="22.7870%" y="335.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (203 samples, 0.09%)</title><rect x="22.4638%" y="501" width="0.0939%" height="15" fill="rgb(241,83,25)" fg:x="48541" fg:w="203"/><text x="22.7138%" y="511.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (203 samples, 0.09%)</title><rect x="22.4638%" y="485" width="0.0939%" height="15" fill="rgb(205,169,50)" fg:x="48541" fg:w="203"/><text x="22.7138%" y="495.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (110 samples, 0.05%)</title><rect x="22.5069%" y="469" width="0.0509%" height="15" fill="rgb(239,186,37)" fg:x="48634" fg:w="110"/><text x="22.7569%" y="479.50"></text></g><g><title>std::io::Read::read_exact (103 samples, 0.05%)</title><rect x="22.5101%" y="453" width="0.0477%" height="15" fill="rgb(205,221,10)" fg:x="48641" fg:w="103"/><text x="22.7601%" y="463.50"></text></g><g><title>std::io::default_read_exact (95 samples, 0.04%)</title><rect x="22.5138%" y="437" width="0.0440%" height="15" fill="rgb(218,196,15)" fg:x="48649" fg:w="95"/><text x="22.7638%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::consensus::encode::VarInt&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (244 samples, 0.11%)</title><rect x="22.4453%" y="517" width="0.1129%" height="15" fill="rgb(218,196,35)" fg:x="48501" fg:w="244"/><text x="22.6953%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (104 samples, 0.05%)</title><rect x="22.5587%" y="501" width="0.0481%" height="15" fill="rgb(233,63,24)" fg:x="48746" fg:w="104"/><text x="22.8087%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48 samples, 0.02%)</title><rect x="22.6068%" y="501" width="0.0222%" height="15" fill="rgb(225,8,4)" fg:x="48850" fg:w="48"/><text x="22.8568%" y="511.50"></text></g><g><title>core::ptr::write (44 samples, 0.02%)</title><rect x="22.6087%" y="485" width="0.0204%" height="15" fill="rgb(234,105,35)" fg:x="48854" fg:w="44"/><text x="22.8587%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (68 samples, 0.03%)</title><rect x="22.6291%" y="501" width="0.0315%" height="15" fill="rgb(236,21,32)" fg:x="48898" fg:w="68"/><text x="22.8791%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (68 samples, 0.03%)</title><rect x="22.6291%" y="485" width="0.0315%" height="15" fill="rgb(228,109,6)" fg:x="48898" fg:w="68"/><text x="22.8791%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (68 samples, 0.03%)</title><rect x="22.6291%" y="469" width="0.0315%" height="15" fill="rgb(229,215,31)" fg:x="48898" fg:w="68"/><text x="22.8791%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (68 samples, 0.03%)</title><rect x="22.6291%" y="453" width="0.0315%" height="15" fill="rgb(221,52,54)" fg:x="48898" fg:w="68"/><text x="22.8791%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.03%)</title><rect x="22.6295%" y="437" width="0.0310%" height="15" fill="rgb(252,129,43)" fg:x="48899" fg:w="67"/><text x="22.8795%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.03%)</title><rect x="22.6295%" y="421" width="0.0310%" height="15" fill="rgb(248,183,27)" fg:x="48899" fg:w="67"/><text x="22.8795%" y="431.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.03%)</title><rect x="22.6304%" y="405" width="0.0301%" height="15" fill="rgb(250,0,22)" fg:x="48901" fg:w="65"/><text x="22.8804%" y="415.50"></text></g><g><title>malloc (62 samples, 0.03%)</title><rect x="22.6318%" y="389" width="0.0287%" height="15" fill="rgb(213,166,10)" fg:x="48904" fg:w="62"/><text x="22.8818%" y="399.50"></text></g><g><title>[libc.so.6] (52 samples, 0.02%)</title><rect x="22.6365%" y="373" width="0.0241%" height="15" fill="rgb(207,163,36)" fg:x="48914" fg:w="52"/><text x="22.8865%" y="383.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (118 samples, 0.05%)</title><rect x="22.7267%" y="373" width="0.0546%" height="15" fill="rgb(208,122,22)" fg:x="49109" fg:w="118"/><text x="22.9767%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (82 samples, 0.04%)</title><rect x="22.7434%" y="357" width="0.0379%" height="15" fill="rgb(207,104,49)" fg:x="49145" fg:w="82"/><text x="22.9934%" y="367.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (82 samples, 0.04%)</title><rect x="22.7434%" y="341" width="0.0379%" height="15" fill="rgb(248,211,50)" fg:x="49145" fg:w="82"/><text x="22.9934%" y="351.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (64 samples, 0.03%)</title><rect x="22.7517%" y="325" width="0.0296%" height="15" fill="rgb(217,13,45)" fg:x="49163" fg:w="64"/><text x="23.0017%" y="335.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (64 samples, 0.03%)</title><rect x="22.7517%" y="309" width="0.0296%" height="15" fill="rgb(211,216,49)" fg:x="49163" fg:w="64"/><text x="23.0017%" y="319.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (48 samples, 0.02%)</title><rect x="22.7591%" y="293" width="0.0222%" height="15" fill="rgb(221,58,53)" fg:x="49179" fg:w="48"/><text x="23.0091%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (38 samples, 0.02%)</title><rect x="22.7637%" y="277" width="0.0176%" height="15" fill="rgb(220,112,41)" fg:x="49189" fg:w="38"/><text x="23.0137%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.02%)</title><rect x="22.7637%" y="261" width="0.0176%" height="15" fill="rgb(236,38,28)" fg:x="49189" fg:w="38"/><text x="23.0137%" y="271.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="22.7651%" y="245" width="0.0162%" height="15" fill="rgb(227,195,22)" fg:x="49192" fg:w="35"/><text x="23.0151%" y="255.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (167 samples, 0.08%)</title><rect x="22.7050%" y="405" width="0.0773%" height="15" fill="rgb(214,55,33)" fg:x="49062" fg:w="167"/><text x="22.9550%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (159 samples, 0.07%)</title><rect x="22.7087%" y="389" width="0.0736%" height="15" fill="rgb(248,80,13)" fg:x="49070" fg:w="159"/><text x="22.9587%" y="399.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (214 samples, 0.10%)</title><rect x="22.6883%" y="469" width="0.0990%" height="15" fill="rgb(238,52,6)" fg:x="49026" fg:w="214"/><text x="22.9383%" y="479.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_slice (206 samples, 0.10%)</title><rect x="22.6920%" y="453" width="0.0953%" height="15" fill="rgb(224,198,47)" fg:x="49034" fg:w="206"/><text x="22.9420%" y="463.50"></text></g><g><title>std::io::Read::read_exact (202 samples, 0.09%)</title><rect x="22.6938%" y="437" width="0.0935%" height="15" fill="rgb(233,171,20)" fg:x="49038" fg:w="202"/><text x="22.9438%" y="447.50"></text></g><g><title>std::io::default_read_exact (196 samples, 0.09%)</title><rect x="22.6966%" y="421" width="0.0907%" height="15" fill="rgb(241,30,25)" fg:x="49044" fg:w="196"/><text x="22.9466%" y="431.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_inner (92 samples, 0.04%)</title><rect x="22.7873%" y="453" width="0.0426%" height="15" fill="rgb(207,171,38)" fg:x="49240" fg:w="92"/><text x="23.0373%" y="463.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_inner (93 samples, 0.04%)</title><rect x="22.7873%" y="469" width="0.0430%" height="15" fill="rgb(234,70,1)" fg:x="49240" fg:w="93"/><text x="23.0373%" y="479.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (448 samples, 0.21%)</title><rect x="22.6605%" y="501" width="0.2073%" height="15" fill="rgb(232,178,18)" fg:x="48966" fg:w="448"/><text x="22.9105%" y="511.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (431 samples, 0.20%)</title><rect x="22.6684%" y="485" width="0.1995%" height="15" fill="rgb(241,78,40)" fg:x="48983" fg:w="431"/><text x="22.9184%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (81 samples, 0.04%)</title><rect x="22.8304%" y="469" width="0.0375%" height="15" fill="rgb(222,35,25)" fg:x="49333" fg:w="81"/><text x="23.0804%" y="479.50"></text></g><g><title>&lt;bitcoin::network::utreexo::BatchProof as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (916 samples, 0.42%)</title><rect x="22.4444%" y="549" width="0.4239%" height="15" fill="rgb(207,92,16)" fg:x="48499" fg:w="916"/><text x="22.6944%" y="559.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode (915 samples, 0.42%)</title><rect x="22.4449%" y="533" width="0.4234%" height="15" fill="rgb(216,59,51)" fg:x="48500" fg:w="915"/><text x="22.6949%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::hash_types::newtypes::BlockHash&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (670 samples, 0.31%)</title><rect x="22.5583%" y="517" width="0.3101%" height="15" fill="rgb(213,80,28)" fg:x="48745" fg:w="670"/><text x="22.8083%" y="527.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (54 samples, 0.02%)</title><rect x="22.8836%" y="405" width="0.0250%" height="15" fill="rgb(220,93,7)" fg:x="49448" fg:w="54"/><text x="23.1336%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (37 samples, 0.02%)</title><rect x="22.8915%" y="389" width="0.0171%" height="15" fill="rgb(225,24,44)" fg:x="49465" fg:w="37"/><text x="23.1415%" y="399.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="22.8915%" y="373" width="0.0171%" height="15" fill="rgb(243,74,40)" fg:x="49465" fg:w="37"/><text x="23.1415%" y="383.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (28 samples, 0.01%)</title><rect x="22.8956%" y="357" width="0.0130%" height="15" fill="rgb(228,39,7)" fg:x="49474" fg:w="28"/><text x="23.1456%" y="367.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (28 samples, 0.01%)</title><rect x="22.8956%" y="341" width="0.0130%" height="15" fill="rgb(227,79,8)" fg:x="49474" fg:w="28"/><text x="23.1456%" y="351.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (83 samples, 0.04%)</title><rect x="22.8762%" y="469" width="0.0384%" height="15" fill="rgb(236,58,11)" fg:x="49432" fg:w="83"/><text x="23.1262%" y="479.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (83 samples, 0.04%)</title><rect x="22.8762%" y="453" width="0.0384%" height="15" fill="rgb(249,63,35)" fg:x="49432" fg:w="83"/><text x="23.1262%" y="463.50"></text></g><g><title>std::io::Read::read_exact (82 samples, 0.04%)</title><rect x="22.8766%" y="437" width="0.0379%" height="15" fill="rgb(252,114,16)" fg:x="49433" fg:w="82"/><text x="23.1266%" y="447.50"></text></g><g><title>std::io::default_read_exact (79 samples, 0.04%)</title><rect x="22.8780%" y="421" width="0.0366%" height="15" fill="rgb(254,151,24)" fg:x="49436" fg:w="79"/><text x="23.1280%" y="431.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (27 samples, 0.01%)</title><rect x="22.9146%" y="421" width="0.0125%" height="15" fill="rgb(253,54,39)" fg:x="49515" fg:w="27"/><text x="23.1646%" y="431.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (22 samples, 0.01%)</title><rect x="22.9169%" y="405" width="0.0102%" height="15" fill="rgb(243,25,45)" fg:x="49520" fg:w="22"/><text x="23.1669%" y="415.50"></text></g><g><title>std::io::Read::read_exact (22 samples, 0.01%)</title><rect x="22.9169%" y="389" width="0.0102%" height="15" fill="rgb(234,134,9)" fg:x="49520" fg:w="22"/><text x="23.1669%" y="399.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_slice (26 samples, 0.01%)</title><rect x="22.9276%" y="405" width="0.0120%" height="15" fill="rgb(227,166,31)" fg:x="49543" fg:w="26"/><text x="23.1776%" y="415.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_exact (25 samples, 0.01%)</title><rect x="22.9280%" y="389" width="0.0116%" height="15" fill="rgb(245,143,41)" fg:x="49544" fg:w="25"/><text x="23.1780%" y="399.50"></text></g><g><title>std::io::Read::read_exact (25 samples, 0.01%)</title><rect x="22.9280%" y="373" width="0.0116%" height="15" fill="rgb(238,181,32)" fg:x="49544" fg:w="25"/><text x="23.1780%" y="383.50"></text></g><g><title>std::io::default_read_exact (25 samples, 0.01%)</title><rect x="22.9280%" y="357" width="0.0116%" height="15" fill="rgb(224,113,18)" fg:x="49544" fg:w="25"/><text x="23.1780%" y="367.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="22.9613%" y="277" width="0.0236%" height="15" fill="rgb(240,229,28)" fg:x="49616" fg:w="51"/><text x="23.2113%" y="287.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="22.9729%" y="261" width="0.0120%" height="15" fill="rgb(250,185,3)" fg:x="49641" fg:w="26"/><text x="23.2229%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (94 samples, 0.04%)</title><rect x="22.9437%" y="309" width="0.0435%" height="15" fill="rgb(212,59,25)" fg:x="49578" fg:w="94"/><text x="23.1937%" y="319.50"></text></g><g><title>malloc (89 samples, 0.04%)</title><rect x="22.9461%" y="293" width="0.0412%" height="15" fill="rgb(221,87,20)" fg:x="49583" fg:w="89"/><text x="23.1961%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (103 samples, 0.05%)</title><rect x="22.9419%" y="373" width="0.0477%" height="15" fill="rgb(213,74,28)" fg:x="49574" fg:w="103"/><text x="23.1919%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (103 samples, 0.05%)</title><rect x="22.9419%" y="357" width="0.0477%" height="15" fill="rgb(224,132,34)" fg:x="49574" fg:w="103"/><text x="23.1919%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (102 samples, 0.05%)</title><rect x="22.9424%" y="341" width="0.0472%" height="15" fill="rgb(222,101,24)" fg:x="49575" fg:w="102"/><text x="23.1924%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (102 samples, 0.05%)</title><rect x="22.9424%" y="325" width="0.0472%" height="15" fill="rgb(254,142,4)" fg:x="49575" fg:w="102"/><text x="23.1924%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (164 samples, 0.08%)</title><rect x="22.9146%" y="437" width="0.0759%" height="15" fill="rgb(230,229,49)" fg:x="49515" fg:w="164"/><text x="23.1646%" y="447.50"></text></g><g><title>bitcoin::consensus::encode::read_bytes_from_finite_reader (137 samples, 0.06%)</title><rect x="22.9271%" y="421" width="0.0634%" height="15" fill="rgb(238,70,47)" fg:x="49542" fg:w="137"/><text x="23.1771%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (107 samples, 0.05%)</title><rect x="22.9410%" y="405" width="0.0495%" height="15" fill="rgb(231,160,17)" fg:x="49572" fg:w="107"/><text x="23.1910%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (105 samples, 0.05%)</title><rect x="22.9419%" y="389" width="0.0486%" height="15" fill="rgb(218,68,53)" fg:x="49574" fg:w="105"/><text x="23.1919%" y="399.50"></text></g><g><title>&lt;bitcoin::network::utreexo::ScriptPubkeyType as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (259 samples, 0.12%)</title><rect x="22.8716%" y="485" width="0.1199%" height="15" fill="rgb(236,111,10)" fg:x="49422" fg:w="259"/><text x="23.1216%" y="495.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode (166 samples, 0.08%)</title><rect x="22.9146%" y="469" width="0.0768%" height="15" fill="rgb(224,34,41)" fg:x="49515" fg:w="166"/><text x="23.1646%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (166 samples, 0.08%)</title><rect x="22.9146%" y="453" width="0.0768%" height="15" fill="rgb(241,118,19)" fg:x="49515" fg:w="166"/><text x="23.1646%" y="463.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (56 samples, 0.03%)</title><rect x="22.9979%" y="421" width="0.0259%" height="15" fill="rgb(238,129,25)" fg:x="49695" fg:w="56"/><text x="23.2479%" y="431.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (35 samples, 0.02%)</title><rect x="23.0076%" y="405" width="0.0162%" height="15" fill="rgb(238,22,31)" fg:x="49716" fg:w="35"/><text x="23.2576%" y="415.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (35 samples, 0.02%)</title><rect x="23.0076%" y="389" width="0.0162%" height="15" fill="rgb(222,174,48)" fg:x="49716" fg:w="35"/><text x="23.2576%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (27 samples, 0.01%)</title><rect x="23.0113%" y="373" width="0.0125%" height="15" fill="rgb(206,152,40)" fg:x="49724" fg:w="27"/><text x="23.2613%" y="383.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (27 samples, 0.01%)</title><rect x="23.0113%" y="357" width="0.0125%" height="15" fill="rgb(218,99,54)" fg:x="49724" fg:w="27"/><text x="23.2613%" y="367.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (77 samples, 0.04%)</title><rect x="22.9914%" y="485" width="0.0356%" height="15" fill="rgb(220,174,26)" fg:x="49681" fg:w="77"/><text x="23.2414%" y="495.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u32 (77 samples, 0.04%)</title><rect x="22.9914%" y="469" width="0.0356%" height="15" fill="rgb(245,116,9)" fg:x="49681" fg:w="77"/><text x="23.2414%" y="479.50"></text></g><g><title>std::io::Read::read_exact (77 samples, 0.04%)</title><rect x="22.9914%" y="453" width="0.0356%" height="15" fill="rgb(209,72,35)" fg:x="49681" fg:w="77"/><text x="23.2414%" y="463.50"></text></g><g><title>std::io::default_read_exact (74 samples, 0.03%)</title><rect x="22.9928%" y="437" width="0.0342%" height="15" fill="rgb(226,126,21)" fg:x="49684" fg:w="74"/><text x="23.2428%" y="447.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (70 samples, 0.03%)</title><rect x="23.0368%" y="421" width="0.0324%" height="15" fill="rgb(227,192,1)" fg:x="49779" fg:w="70"/><text x="23.2868%" y="431.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (45 samples, 0.02%)</title><rect x="23.0483%" y="405" width="0.0208%" height="15" fill="rgb(237,180,29)" fg:x="49804" fg:w="45"/><text x="23.2983%" y="415.50"></text></g><g><title>&lt;std::io::Take&lt;T&gt; as std::io::Read&gt;::read (45 samples, 0.02%)</title><rect x="23.0483%" y="389" width="0.0208%" height="15" fill="rgb(230,197,35)" fg:x="49804" fg:w="45"/><text x="23.2983%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read (34 samples, 0.02%)</title><rect x="23.0534%" y="373" width="0.0157%" height="15" fill="rgb(246,193,31)" fg:x="49815" fg:w="34"/><text x="23.3034%" y="383.50"></text></g><g><title>&lt;std::io::cursor::Cursor&lt;T&gt; as std::io::Read&gt;::read (34 samples, 0.02%)</title><rect x="23.0534%" y="357" width="0.0157%" height="15" fill="rgb(241,36,4)" fg:x="49815" fg:w="34"/><text x="23.3034%" y="367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (23 samples, 0.01%)</title><rect x="23.0585%" y="341" width="0.0106%" height="15" fill="rgb(241,130,17)" fg:x="49826" fg:w="23"/><text x="23.3085%" y="351.50"></text></g><g><title>&lt;bitcoin::network::utreexo::CompactLeafData as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (435 samples, 0.20%)</title><rect x="22.8702%" y="517" width="0.2013%" height="15" fill="rgb(206,137,32)" fg:x="49419" fg:w="435"/><text x="23.1202%" y="527.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (432 samples, 0.20%)</title><rect x="22.8716%" y="501" width="0.1999%" height="15" fill="rgb(237,228,51)" fg:x="49422" fg:w="432"/><text x="23.1216%" y="511.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (96 samples, 0.04%)</title><rect x="23.0270%" y="485" width="0.0444%" height="15" fill="rgb(243,6,42)" fg:x="49758" fg:w="96"/><text x="23.2770%" y="495.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u64 (96 samples, 0.04%)</title><rect x="23.0270%" y="469" width="0.0444%" height="15" fill="rgb(251,74,28)" fg:x="49758" fg:w="96"/><text x="23.2770%" y="479.50"></text></g><g><title>std::io::Read::read_exact (91 samples, 0.04%)</title><rect x="23.0294%" y="453" width="0.0421%" height="15" fill="rgb(218,20,49)" fg:x="49763" fg:w="91"/><text x="23.2794%" y="463.50"></text></g><g><title>std::io::default_read_exact (89 samples, 0.04%)</title><rect x="23.0303%" y="437" width="0.0412%" height="15" fill="rgb(238,28,14)" fg:x="49765" fg:w="89"/><text x="23.2803%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (57 samples, 0.03%)</title><rect x="23.0715%" y="517" width="0.0264%" height="15" fill="rgb(229,40,46)" fg:x="49854" fg:w="57"/><text x="23.3215%" y="527.50"></text></g><g><title>core::ptr::write (52 samples, 0.02%)</title><rect x="23.0738%" y="501" width="0.0241%" height="15" fill="rgb(244,195,20)" fg:x="49859" fg:w="52"/><text x="23.3238%" y="511.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="23.1048%" y="389" width="0.0185%" height="15" fill="rgb(253,56,35)" fg:x="49926" fg:w="40"/><text x="23.3548%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (58 samples, 0.03%)</title><rect x="23.0979%" y="517" width="0.0268%" height="15" fill="rgb(210,149,44)" fg:x="49911" fg:w="58"/><text x="23.3479%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.03%)</title><rect x="23.0979%" y="501" width="0.0268%" height="15" fill="rgb(240,135,12)" fg:x="49911" fg:w="58"/><text x="23.3479%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57 samples, 0.03%)</title><rect x="23.0983%" y="485" width="0.0264%" height="15" fill="rgb(251,24,50)" fg:x="49912" fg:w="57"/><text x="23.3483%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (57 samples, 0.03%)</title><rect x="23.0983%" y="469" width="0.0264%" height="15" fill="rgb(243,200,47)" fg:x="49912" fg:w="57"/><text x="23.3483%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.03%)</title><rect x="23.0988%" y="453" width="0.0259%" height="15" fill="rgb(224,166,26)" fg:x="49913" fg:w="56"/><text x="23.3488%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.03%)</title><rect x="23.0988%" y="437" width="0.0259%" height="15" fill="rgb(233,0,47)" fg:x="49913" fg:w="56"/><text x="23.3488%" y="447.50"></text></g><g><title>alloc::alloc::alloc (55 samples, 0.03%)</title><rect x="23.0992%" y="421" width="0.0255%" height="15" fill="rgb(253,80,5)" fg:x="49914" fg:w="55"/><text x="23.3492%" y="431.50"></text></g><g><title>malloc (54 samples, 0.02%)</title><rect x="23.0997%" y="405" width="0.0250%" height="15" fill="rgb(214,133,25)" fg:x="49915" fg:w="54"/><text x="23.3497%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::network::utreexo::CompactLeafData&gt; as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (567 samples, 0.26%)</title><rect x="22.8683%" y="533" width="0.2624%" height="15" fill="rgb(209,27,14)" fg:x="49415" fg:w="567"/><text x="23.1183%" y="543.50"></text></g><g><title>&lt;bitcoin::network::utreexo::UData as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (1,499 samples, 0.69%)</title><rect x="22.4435%" y="565" width="0.6937%" height="15" fill="rgb(219,102,51)" fg:x="48497" fg:w="1499"/><text x="22.6935%" y="575.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode (581 samples, 0.27%)</title><rect x="22.8683%" y="549" width="0.2689%" height="15" fill="rgb(237,18,16)" fg:x="49415" fg:w="581"/><text x="23.1183%" y="559.50"></text></g><g><title>&lt;bitcoin::network::utreexo::UtreexoBlock as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (8,460 samples, 3.92%)</title><rect x="19.2225%" y="581" width="3.9151%" height="15" fill="rgb(241,85,17)" fg:x="41537" fg:w="8460"/><text x="19.4725%" y="591.50">&lt;bit..</text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (8,550 samples, 3.96%)</title><rect x="19.1860%" y="597" width="3.9568%" height="15" fill="rgb(236,90,42)" fg:x="41458" fg:w="8550"/><text x="19.4360%" y="607.50">bitc..</text></g><g><title>cfree (39 samples, 0.02%)</title><rect x="23.1427%" y="597" width="0.0180%" height="15" fill="rgb(249,57,21)" fg:x="50008" fg:w="39"/><text x="23.3927%" y="607.50"></text></g><g><title>&lt;bitcoin::network::message::RawNetworkMessage as bitcoin::consensus::encode::Decodable&gt;::consensus_decode_from_finite_reader (23,277 samples, 10.77%)</title><rect x="12.3896%" y="613" width="10.7721%" height="15" fill="rgb(243,12,36)" fg:x="26772" fg:w="23277"/><text x="12.6396%" y="623.50">&lt;bitcoin::networ..</text></g><g><title>bitcoin::consensus::encode::deserialize (23,303 samples, 10.78%)</title><rect x="12.3831%" y="645" width="10.7842%" height="15" fill="rgb(253,128,47)" fg:x="26758" fg:w="23303"/><text x="12.6331%" y="655.50">bitcoin::consens..</text></g><g><title>bitcoin::consensus::encode::deserialize_partial (23,289 samples, 10.78%)</title><rect x="12.3896%" y="629" width="10.7777%" height="15" fill="rgb(207,33,20)" fg:x="26772" fg:w="23289"/><text x="12.6396%" y="639.50">bitcoin::consens..</text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="23.1886%" y="517" width="0.0139%" height="15" fill="rgb(233,215,35)" fg:x="50107" fg:w="30"/><text x="23.4386%" y="527.50"></text></g><g><title>[libc.so.6] (42 samples, 0.02%)</title><rect x="23.1858%" y="533" width="0.0194%" height="15" fill="rgb(249,188,52)" fg:x="50101" fg:w="42"/><text x="23.4358%" y="543.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="23.1839%" y="549" width="0.0222%" height="15" fill="rgb(225,12,32)" fg:x="50097" fg:w="48"/><text x="23.4339%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (75 samples, 0.03%)</title><rect x="23.1733%" y="645" width="0.0347%" height="15" fill="rgb(247,98,14)" fg:x="50074" fg:w="75"/><text x="23.4233%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (75 samples, 0.03%)</title><rect x="23.1733%" y="629" width="0.0347%" height="15" fill="rgb(247,219,48)" fg:x="50074" fg:w="75"/><text x="23.4233%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.03%)</title><rect x="23.1733%" y="613" width="0.0347%" height="15" fill="rgb(253,60,48)" fg:x="50074" fg:w="75"/><text x="23.4233%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (74 samples, 0.03%)</title><rect x="23.1738%" y="597" width="0.0342%" height="15" fill="rgb(245,15,52)" fg:x="50075" fg:w="74"/><text x="23.4238%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (74 samples, 0.03%)</title><rect x="23.1738%" y="581" width="0.0342%" height="15" fill="rgb(220,133,28)" fg:x="50075" fg:w="74"/><text x="23.4238%" y="591.50"></text></g><g><title>cfree (70 samples, 0.03%)</title><rect x="23.1756%" y="565" width="0.0324%" height="15" fill="rgb(217,180,4)" fg:x="50079" fg:w="70"/><text x="23.4256%" y="575.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (30,258 samples, 14.00%)</title><rect x="9.2107%" y="789" width="14.0028%" height="15" fill="rgb(251,24,1)" fg:x="19903" fg:w="30258"/><text x="9.4607%" y="799.50">async_executor::Execu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (30,229 samples, 13.99%)</title><rect x="9.2241%" y="773" width="13.9894%" height="15" fill="rgb(212,185,49)" fg:x="19932" fg:w="30229"/><text x="9.4741%" y="783.50">&lt;async_std::task::bui..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (30,229 samples, 13.99%)</title><rect x="9.2241%" y="757" width="13.9894%" height="15" fill="rgb(215,175,22)" fg:x="19932" fg:w="30229"/><text x="9.4741%" y="767.50">async_std::task::task..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (30,229 samples, 13.99%)</title><rect x="9.2241%" y="741" width="13.9894%" height="15" fill="rgb(250,205,14)" fg:x="19932" fg:w="30229"/><text x="9.4741%" y="751.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (30,224 samples, 13.99%)</title><rect x="9.2265%" y="725" width="13.9871%" height="15" fill="rgb(225,211,22)" fg:x="19937" fg:w="30224"/><text x="9.4765%" y="735.50">std::thread::local::L..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (30,208 samples, 13.98%)</title><rect x="9.2339%" y="709" width="13.9797%" height="15" fill="rgb(251,179,42)" fg:x="19953" fg:w="30208"/><text x="9.4839%" y="719.50">async_std::task::task..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (30,208 samples, 13.98%)</title><rect x="9.2339%" y="693" width="13.9797%" height="15" fill="rgb(208,216,51)" fg:x="19953" fg:w="30208"/><text x="9.4839%" y="703.50">&lt;async_std::task::bui..</text></g><g><title>floresta_wire::p2p_wire::stream_reader::StreamReader&lt;Source,Item&gt;::read_loop::{{closure}} (30,208 samples, 13.98%)</title><rect x="9.2339%" y="677" width="13.9797%" height="15" fill="rgb(235,36,11)" fg:x="19953" fg:w="30208"/><text x="9.4839%" y="687.50">floresta_wire::p2p_wi..</text></g><g><title>floresta_wire::p2p_wire::stream_reader::StreamReader&lt;Source,Item&gt;::read_loop_inner::{{closure}} (30,204 samples, 13.98%)</title><rect x="9.2357%" y="661" width="13.9778%" height="15" fill="rgb(213,189,28)" fg:x="19957" fg:w="30204"/><text x="9.4857%" y="671.50">floresta_wire::p2p_wi..</text></g><g><title>async_task::runnable::Runnable&lt;M&gt;::run (38,646 samples, 17.88%)</title><rect x="5.3507%" y="821" width="17.8846%" height="15" fill="rgb(227,203,42)" fg:x="11562" fg:w="38646"/><text x="5.6007%" y="831.50">async_task::runnable::Runnab..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::run (38,598 samples, 17.86%)</title><rect x="5.3729%" y="805" width="17.8624%" height="15" fill="rgb(244,72,36)" fg:x="11610" fg:w="38598"/><text x="5.6229%" y="815.50">async_task::raw::RawTask&lt;F,T..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (42,825 samples, 19.82%)</title><rect x="3.4297%" y="853" width="19.8186%" height="15" fill="rgb(213,53,17)" fg:x="7411" fg:w="42825"/><text x="3.6797%" y="863.50">&lt;futures_lite::future::Or&lt;F1,F2..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (42,825 samples, 19.82%)</title><rect x="3.4297%" y="837" width="19.8186%" height="15" fill="rgb(207,167,3)" fg:x="7411" fg:w="42825"/><text x="3.6797%" y="847.50">async_executor::Executor::run::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (28 samples, 0.01%)</title><rect x="23.2353%" y="821" width="0.0130%" height="15" fill="rgb(216,98,30)" fg:x="50208" fg:w="28"/><text x="23.4853%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (28 samples, 0.01%)</title><rect x="23.2353%" y="805" width="0.0130%" height="15" fill="rgb(236,123,15)" fg:x="50208" fg:w="28"/><text x="23.4853%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (42,832 samples, 19.82%)</title><rect x="3.4269%" y="869" width="19.8218%" height="15" fill="rgb(248,81,50)" fg:x="7405" fg:w="42832"/><text x="3.6769%" y="879.50">async_executor::Executor::run::..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="23.3362%" y="725" width="0.0120%" height="15" fill="rgb(214,120,4)" fg:x="50426" fg:w="26"/><text x="23.5862%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (26 samples, 0.01%)</title><rect x="23.3362%" y="709" width="0.0120%" height="15" fill="rgb(208,179,34)" fg:x="50426" fg:w="26"/><text x="23.5862%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.01%)</title><rect x="23.3362%" y="693" width="0.0120%" height="15" fill="rgb(227,140,7)" fg:x="50426" fg:w="26"/><text x="23.5862%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.01%)</title><rect x="23.3366%" y="677" width="0.0116%" height="15" fill="rgb(214,22,6)" fg:x="50427" fg:w="25"/><text x="23.5866%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.01%)</title><rect x="23.3366%" y="661" width="0.0116%" height="15" fill="rgb(207,137,27)" fg:x="50427" fg:w="25"/><text x="23.5866%" y="671.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (83 samples, 0.04%)</title><rect x="23.3695%" y="709" width="0.0384%" height="15" fill="rgb(210,8,46)" fg:x="50498" fg:w="83"/><text x="23.6195%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (178 samples, 0.08%)</title><rect x="23.3487%" y="725" width="0.0824%" height="15" fill="rgb(240,16,54)" fg:x="50453" fg:w="178"/><text x="23.5987%" y="735.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (50 samples, 0.02%)</title><rect x="23.4079%" y="709" width="0.0231%" height="15" fill="rgb(211,209,29)" fg:x="50581" fg:w="50"/><text x="23.6579%" y="719.50"></text></g><g><title>fastrand::RNG::__getit (54 samples, 0.02%)</title><rect x="23.4445%" y="677" width="0.0250%" height="15" fill="rgb(226,228,24)" fg:x="50660" fg:w="54"/><text x="23.6945%" y="687.50"></text></g><g><title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::get (35 samples, 0.02%)</title><rect x="23.4533%" y="661" width="0.0162%" height="15" fill="rgb(222,84,9)" fg:x="50679" fg:w="35"/><text x="23.7033%" y="671.50"></text></g><g><title>fastrand::usize (87 samples, 0.04%)</title><rect x="23.4361%" y="725" width="0.0403%" height="15" fill="rgb(234,203,30)" fg:x="50642" fg:w="87"/><text x="23.6861%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (86 samples, 0.04%)</title><rect x="23.4366%" y="709" width="0.0398%" height="15" fill="rgb(238,109,14)" fg:x="50643" fg:w="86"/><text x="23.6866%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (69 samples, 0.03%)</title><rect x="23.4445%" y="693" width="0.0319%" height="15" fill="rgb(233,206,34)" fg:x="50660" fg:w="69"/><text x="23.6945%" y="703.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (334 samples, 0.15%)</title><rect x="23.3292%" y="741" width="0.1546%" height="15" fill="rgb(220,167,47)" fg:x="50411" fg:w="334"/><text x="23.5792%" y="751.50"></text></g><g><title>async_executor::Sleepers::update (27 samples, 0.01%)</title><rect x="23.4894%" y="725" width="0.0125%" height="15" fill="rgb(238,105,10)" fg:x="50757" fg:w="27"/><text x="23.7394%" y="735.50"></text></g><g><title>core::task::wake::Waker::will_wake (24 samples, 0.01%)</title><rect x="23.4908%" y="709" width="0.0111%" height="15" fill="rgb(213,227,17)" fg:x="50760" fg:w="24"/><text x="23.7408%" y="719.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (24 samples, 0.01%)</title><rect x="23.4908%" y="693" width="0.0111%" height="15" fill="rgb(217,132,38)" fg:x="50760" fg:w="24"/><text x="23.7408%" y="703.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (414 samples, 0.19%)</title><rect x="23.3242%" y="773" width="0.1916%" height="15" fill="rgb(242,146,4)" fg:x="50400" fg:w="414"/><text x="23.5742%" y="783.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (414 samples, 0.19%)</title><rect x="23.3242%" y="757" width="0.1916%" height="15" fill="rgb(212,61,9)" fg:x="50400" fg:w="414"/><text x="23.5742%" y="767.50"></text></g><g><title>async_executor::Ticker::sleep (69 samples, 0.03%)</title><rect x="23.4838%" y="741" width="0.0319%" height="15" fill="rgb(247,126,22)" fg:x="50745" fg:w="69"/><text x="23.7338%" y="751.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (496 samples, 0.23%)</title><rect x="23.2867%" y="821" width="0.2295%" height="15" fill="rgb(220,196,2)" fg:x="50319" fg:w="496"/><text x="23.5367%" y="831.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (473 samples, 0.22%)</title><rect x="23.2973%" y="805" width="0.2189%" height="15" fill="rgb(208,46,4)" fg:x="50342" fg:w="473"/><text x="23.5473%" y="815.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (437 samples, 0.20%)</title><rect x="23.3140%" y="789" width="0.2022%" height="15" fill="rgb(252,104,46)" fg:x="50378" fg:w="437"/><text x="23.5640%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (33 samples, 0.02%)</title><rect x="23.5856%" y="741" width="0.0153%" height="15" fill="rgb(237,152,48)" fg:x="50965" fg:w="33"/><text x="23.8356%" y="751.50"></text></g><g><title>core::mem::replace (33 samples, 0.02%)</title><rect x="23.5856%" y="725" width="0.0153%" height="15" fill="rgb(221,59,37)" fg:x="50965" fg:w="33"/><text x="23.8356%" y="735.50"></text></g><g><title>core::ptr::read (33 samples, 0.02%)</title><rect x="23.5856%" y="709" width="0.0153%" height="15" fill="rgb(209,202,51)" fg:x="50965" fg:w="33"/><text x="23.8356%" y="719.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (190 samples, 0.09%)</title><rect x="23.5523%" y="757" width="0.0879%" height="15" fill="rgb(228,81,30)" fg:x="50893" fg:w="190"/><text x="23.8023%" y="767.50"></text></g><g><title>event_listener::Inner::lock (53 samples, 0.02%)</title><rect x="23.6157%" y="741" width="0.0245%" height="15" fill="rgb(227,42,39)" fg:x="51030" fg:w="53"/><text x="23.8657%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.02%)</title><rect x="23.6171%" y="725" width="0.0231%" height="15" fill="rgb(221,26,2)" fg:x="51033" fg:w="50"/><text x="23.8671%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (49 samples, 0.02%)</title><rect x="23.6176%" y="709" width="0.0227%" height="15" fill="rgb(254,61,31)" fg:x="51034" fg:w="49"/><text x="23.8676%" y="719.50"></text></g><g><title>&lt;async_channel::NonBlocking as async_channel::Strategy&gt;::poll (203 samples, 0.09%)</title><rect x="23.5468%" y="773" width="0.0939%" height="15" fill="rgb(222,173,38)" fg:x="50881" fg:w="203"/><text x="23.7968%" y="783.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (47 samples, 0.02%)</title><rect x="23.6412%" y="773" width="0.0218%" height="15" fill="rgb(218,50,12)" fg:x="51085" fg:w="47"/><text x="23.8912%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (43 samples, 0.02%)</title><rect x="23.6430%" y="757" width="0.0199%" height="15" fill="rgb(223,88,40)" fg:x="51089" fg:w="43"/><text x="23.8930%" y="767.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (37 samples, 0.02%)</title><rect x="23.6458%" y="741" width="0.0171%" height="15" fill="rgb(237,54,19)" fg:x="51095" fg:w="37"/><text x="23.8958%" y="751.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (293 samples, 0.14%)</title><rect x="23.5278%" y="805" width="0.1356%" height="15" fill="rgb(251,129,25)" fg:x="50840" fg:w="293"/><text x="23.7778%" y="815.50"></text></g><g><title>async_channel::Recv&lt;T&gt;::run_with_strategy (264 samples, 0.12%)</title><rect x="23.5412%" y="789" width="0.1222%" height="15" fill="rgb(238,97,19)" fg:x="50869" fg:w="264"/><text x="23.7912%" y="799.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (319 samples, 0.15%)</title><rect x="23.5162%" y="821" width="0.1476%" height="15" fill="rgb(240,169,18)" fg:x="50815" fg:w="319"/><text x="23.7662%" y="831.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (818 samples, 0.38%)</title><rect x="23.2867%" y="837" width="0.3786%" height="15" fill="rgb(230,187,49)" fg:x="50319" fg:w="818"/><text x="23.5367%" y="847.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (43,761 samples, 20.25%)</title><rect x="3.4144%" y="885" width="20.2518%" height="15" fill="rgb(209,44,26)" fg:x="7378" fg:w="43761"/><text x="3.6644%" y="895.50">&lt;futures_lite::future::Or&lt;F1,F2&gt;..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (902 samples, 0.42%)</title><rect x="23.2487%" y="869" width="0.4174%" height="15" fill="rgb(244,0,6)" fg:x="50237" fg:w="902"/><text x="23.4987%" y="879.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (844 samples, 0.39%)</title><rect x="23.2756%" y="853" width="0.3906%" height="15" fill="rgb(248,18,21)" fg:x="50295" fg:w="844"/><text x="23.5256%" y="863.50"></text></g><g><title>async_io::reactor::Reactor::get (40 samples, 0.02%)</title><rect x="23.6685%" y="885" width="0.0185%" height="15" fill="rgb(245,180,19)" fg:x="51144" fg:w="40"/><text x="23.9185%" y="895.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (65 samples, 0.03%)</title><rect x="23.6870%" y="885" width="0.0301%" height="15" fill="rgb(252,118,36)" fg:x="51184" fg:w="65"/><text x="23.9370%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (27 samples, 0.01%)</title><rect x="23.7046%" y="869" width="0.0125%" height="15" fill="rgb(210,224,19)" fg:x="51222" fg:w="27"/><text x="23.9546%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (52 samples, 0.02%)</title><rect x="23.7430%" y="837" width="0.0241%" height="15" fill="rgb(218,30,24)" fg:x="51305" fg:w="52"/><text x="23.9930%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52 samples, 0.02%)</title><rect x="23.7430%" y="821" width="0.0241%" height="15" fill="rgb(219,75,50)" fg:x="51305" fg:w="52"/><text x="23.9930%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.02%)</title><rect x="23.7430%" y="805" width="0.0241%" height="15" fill="rgb(234,72,50)" fg:x="51305" fg:w="52"/><text x="23.9930%" y="815.50"></text></g><g><title>malloc (37 samples, 0.02%)</title><rect x="23.7499%" y="789" width="0.0171%" height="15" fill="rgb(219,100,48)" fg:x="51320" fg:w="37"/><text x="23.9999%" y="799.50"></text></g><g><title>async_io::reactor::Direction::drain_into (53 samples, 0.02%)</title><rect x="23.7430%" y="869" width="0.0245%" height="15" fill="rgb(253,5,41)" fg:x="51305" fg:w="53"/><text x="23.9930%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (53 samples, 0.02%)</title><rect x="23.7430%" y="853" width="0.0245%" height="15" fill="rgb(247,181,11)" fg:x="51305" fg:w="53"/><text x="23.9930%" y="863.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (50 samples, 0.02%)</title><rect x="23.7971%" y="805" width="0.0231%" height="15" fill="rgb(222,223,25)" fg:x="51422" fg:w="50"/><text x="24.0471%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (50 samples, 0.02%)</title><rect x="23.7971%" y="789" width="0.0231%" height="15" fill="rgb(214,198,28)" fg:x="51422" fg:w="50"/><text x="24.0471%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.02%)</title><rect x="23.7976%" y="773" width="0.0227%" height="15" fill="rgb(230,46,43)" fg:x="51423" fg:w="49"/><text x="24.0476%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.02%)</title><rect x="23.7976%" y="757" width="0.0227%" height="15" fill="rgb(233,65,53)" fg:x="51423" fg:w="49"/><text x="24.0476%" y="767.50"></text></g><g><title>cfree (48 samples, 0.02%)</title><rect x="23.7980%" y="741" width="0.0222%" height="15" fill="rgb(221,121,27)" fg:x="51424" fg:w="48"/><text x="24.0480%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 0.04%)</title><rect x="23.7869%" y="853" width="0.0366%" height="15" fill="rgb(247,70,47)" fg:x="51400" fg:w="79"/><text x="24.0369%" y="863.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (62 samples, 0.03%)</title><rect x="23.7948%" y="837" width="0.0287%" height="15" fill="rgb(228,85,35)" fg:x="51417" fg:w="62"/><text x="24.0448%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (62 samples, 0.03%)</title><rect x="23.7948%" y="821" width="0.0287%" height="15" fill="rgb(209,50,18)" fg:x="51417" fg:w="62"/><text x="24.0448%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.01%)</title><rect x="23.8235%" y="853" width="0.0102%" height="15" fill="rgb(250,19,35)" fg:x="51479" fg:w="22"/><text x="24.0735%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.01%)</title><rect x="23.8235%" y="837" width="0.0102%" height="15" fill="rgb(253,107,29)" fg:x="51479" fg:w="22"/><text x="24.0735%" y="847.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (22 samples, 0.01%)</title><rect x="23.8235%" y="821" width="0.0102%" height="15" fill="rgb(252,179,29)" fg:x="51479" fg:w="22"/><text x="24.0735%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (50 samples, 0.02%)</title><rect x="23.8550%" y="821" width="0.0231%" height="15" fill="rgb(238,194,6)" fg:x="51547" fg:w="50"/><text x="24.1050%" y="831.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (49 samples, 0.02%)</title><rect x="23.8554%" y="805" width="0.0227%" height="15" fill="rgb(238,164,29)" fg:x="51548" fg:w="49"/><text x="24.1054%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.02%)</title><rect x="23.8554%" y="789" width="0.0227%" height="15" fill="rgb(224,25,9)" fg:x="51548" fg:w="49"/><text x="24.1054%" y="799.50"></text></g><g><title>[libc.so.6] (49 samples, 0.02%)</title><rect x="23.8554%" y="773" width="0.0227%" height="15" fill="rgb(244,153,23)" fg:x="51548" fg:w="49"/><text x="24.1054%" y="783.50"></text></g><g><title>__rdl_alloc (24 samples, 0.01%)</title><rect x="23.8813%" y="677" width="0.0111%" height="15" fill="rgb(212,203,14)" fg:x="51604" fg:w="24"/><text x="24.1313%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (130 samples, 0.06%)</title><rect x="23.8813%" y="805" width="0.0602%" height="15" fill="rgb(220,164,20)" fg:x="51604" fg:w="130"/><text x="24.1313%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (130 samples, 0.06%)</title><rect x="23.8813%" y="789" width="0.0602%" height="15" fill="rgb(222,203,48)" fg:x="51604" fg:w="130"/><text x="24.1313%" y="799.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (130 samples, 0.06%)</title><rect x="23.8813%" y="773" width="0.0602%" height="15" fill="rgb(215,159,22)" fg:x="51604" fg:w="130"/><text x="24.1313%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (130 samples, 0.06%)</title><rect x="23.8813%" y="757" width="0.0602%" height="15" fill="rgb(216,183,47)" fg:x="51604" fg:w="130"/><text x="24.1313%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (130 samples, 0.06%)</title><rect x="23.8813%" y="741" width="0.0602%" height="15" fill="rgb(229,195,25)" fg:x="51604" fg:w="130"/><text x="24.1313%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (130 samples, 0.06%)</title><rect x="23.8813%" y="725" width="0.0602%" height="15" fill="rgb(224,132,51)" fg:x="51604" fg:w="130"/><text x="24.1313%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (130 samples, 0.06%)</title><rect x="23.8813%" y="709" width="0.0602%" height="15" fill="rgb(240,63,7)" fg:x="51604" fg:w="130"/><text x="24.1313%" y="719.50"></text></g><g><title>alloc::alloc::alloc (130 samples, 0.06%)</title><rect x="23.8813%" y="693" width="0.0602%" height="15" fill="rgb(249,182,41)" fg:x="51604" fg:w="130"/><text x="24.1313%" y="703.50"></text></g><g><title>malloc (101 samples, 0.05%)</title><rect x="23.8948%" y="677" width="0.0467%" height="15" fill="rgb(243,47,26)" fg:x="51633" fg:w="101"/><text x="24.1448%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::split_off (228 samples, 0.11%)</title><rect x="23.8369%" y="853" width="0.1055%" height="15" fill="rgb(233,48,2)" fg:x="51508" fg:w="228"/><text x="24.0869%" y="863.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (203 samples, 0.09%)</title><rect x="23.8485%" y="837" width="0.0939%" height="15" fill="rgb(244,165,34)" fg:x="51533" fg:w="203"/><text x="24.0985%" y="847.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (132 samples, 0.06%)</title><rect x="23.8813%" y="821" width="0.0611%" height="15" fill="rgb(207,89,7)" fg:x="51604" fg:w="132"/><text x="24.1313%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (43 samples, 0.02%)</title><rect x="23.9508%" y="837" width="0.0199%" height="15" fill="rgb(244,117,36)" fg:x="51754" fg:w="43"/><text x="24.2008%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (22 samples, 0.01%)</title><rect x="23.9605%" y="821" width="0.0102%" height="15" fill="rgb(226,144,34)" fg:x="51775" fg:w="22"/><text x="24.2105%" y="831.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (41 samples, 0.02%)</title><rect x="23.9725%" y="805" width="0.0190%" height="15" fill="rgb(213,23,19)" fg:x="51801" fg:w="41"/><text x="24.2225%" y="815.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (41 samples, 0.02%)</title><rect x="23.9725%" y="789" width="0.0190%" height="15" fill="rgb(217,75,12)" fg:x="51801" fg:w="41"/><text x="24.2225%" y="799.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (35 samples, 0.02%)</title><rect x="23.9753%" y="773" width="0.0162%" height="15" fill="rgb(224,159,17)" fg:x="51807" fg:w="35"/><text x="24.2253%" y="783.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (24 samples, 0.01%)</title><rect x="23.9804%" y="757" width="0.0111%" height="15" fill="rgb(217,118,1)" fg:x="51818" fg:w="24"/><text x="24.2304%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (84 samples, 0.04%)</title><rect x="23.9707%" y="821" width="0.0389%" height="15" fill="rgb(232,180,48)" fg:x="51797" fg:w="84"/><text x="24.2207%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (39 samples, 0.02%)</title><rect x="23.9915%" y="805" width="0.0180%" height="15" fill="rgb(230,27,33)" fg:x="51842" fg:w="39"/><text x="24.2415%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (28 samples, 0.01%)</title><rect x="23.9966%" y="789" width="0.0130%" height="15" fill="rgb(205,31,21)" fg:x="51853" fg:w="28"/><text x="24.2466%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (28 samples, 0.01%)</title><rect x="23.9966%" y="773" width="0.0130%" height="15" fill="rgb(253,59,4)" fg:x="51853" fg:w="28"/><text x="24.2466%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (85 samples, 0.04%)</title><rect x="23.9707%" y="837" width="0.0393%" height="15" fill="rgb(224,201,9)" fg:x="51797" fg:w="85"/><text x="24.2207%" y="847.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (65 samples, 0.03%)</title><rect x="24.0128%" y="837" width="0.0301%" height="15" fill="rgb(229,206,30)" fg:x="51888" fg:w="65"/><text x="24.2628%" y="847.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (63 samples, 0.03%)</title><rect x="24.0137%" y="821" width="0.0292%" height="15" fill="rgb(212,67,47)" fg:x="51890" fg:w="63"/><text x="24.2637%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::drop_waker (24 samples, 0.01%)</title><rect x="24.0503%" y="789" width="0.0111%" height="15" fill="rgb(211,96,50)" fg:x="51969" fg:w="24"/><text x="24.3003%" y="799.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (254 samples, 0.12%)</title><rect x="23.9443%" y="853" width="0.1175%" height="15" fill="rgb(252,114,18)" fg:x="51740" fg:w="254"/><text x="24.1943%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (25 samples, 0.01%)</title><rect x="24.0503%" y="837" width="0.0116%" height="15" fill="rgb(223,58,37)" fg:x="51969" fg:w="25"/><text x="24.3003%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (25 samples, 0.01%)</title><rect x="24.0503%" y="821" width="0.0116%" height="15" fill="rgb(237,70,4)" fg:x="51969" fg:w="25"/><text x="24.3003%" y="831.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="24.0503%" y="805" width="0.0116%" height="15" fill="rgb(244,85,46)" fg:x="51969" fg:w="25"/><text x="24.3003%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.01%)</title><rect x="24.0665%" y="853" width="0.0102%" height="15" fill="rgb(223,39,52)" fg:x="52004" fg:w="22"/><text x="24.3165%" y="863.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (22 samples, 0.01%)</title><rect x="24.0665%" y="837" width="0.0102%" height="15" fill="rgb(218,200,14)" fg:x="52004" fg:w="22"/><text x="24.3165%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (87 samples, 0.04%)</title><rect x="24.0905%" y="853" width="0.0403%" height="15" fill="rgb(208,171,16)" fg:x="52056" fg:w="87"/><text x="24.3405%" y="863.50"></text></g><g><title>clock_gettime (76 samples, 0.04%)</title><rect x="24.0956%" y="837" width="0.0352%" height="15" fill="rgb(234,200,18)" fg:x="52067" fg:w="76"/><text x="24.3456%" y="847.50"></text></g><g><title>__vdso_clock_gettime (45 samples, 0.02%)</title><rect x="24.1100%" y="821" width="0.0208%" height="15" fill="rgb(228,45,11)" fg:x="52098" fg:w="45"/><text x="24.3600%" y="831.50"></text></g><g><title>[[vdso]] (24 samples, 0.01%)</title><rect x="24.1197%" y="805" width="0.0111%" height="15" fill="rgb(237,182,11)" fg:x="52119" fg:w="24"/><text x="24.3697%" y="815.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (796 samples, 0.37%)</title><rect x="23.7675%" y="869" width="0.3684%" height="15" fill="rgb(241,175,49)" fg:x="51358" fg:w="796"/><text x="24.0175%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;core::task::wake::Waker&gt;&gt; (36 samples, 0.02%)</title><rect x="24.1377%" y="869" width="0.0167%" height="15" fill="rgb(247,38,35)" fg:x="52158" fg:w="36"/><text x="24.3877%" y="879.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="24.3015%" y="821" width="0.0236%" height="15" fill="rgb(228,39,49)" fg:x="52512" fg:w="51"/><text x="24.5515%" y="831.50"></text></g><g><title>epoll_wait (3,386 samples, 1.57%)</title><rect x="24.2738%" y="837" width="1.5670%" height="15" fill="rgb(226,101,26)" fg:x="52452" fg:w="3386"/><text x="24.5238%" y="847.50"></text></g><g><title>[unknown] (3,275 samples, 1.52%)</title><rect x="24.3251%" y="821" width="1.5156%" height="15" fill="rgb(206,141,19)" fg:x="52563" fg:w="3275"/><text x="24.5751%" y="831.50"></text></g><g><title>[unknown] (3,102 samples, 1.44%)</title><rect x="24.4052%" y="805" width="1.4355%" height="15" fill="rgb(211,200,13)" fg:x="52736" fg:w="3102"/><text x="24.6552%" y="815.50"></text></g><g><title>[unknown] (2,971 samples, 1.37%)</title><rect x="24.4658%" y="789" width="1.3749%" height="15" fill="rgb(241,121,6)" fg:x="52867" fg:w="2971"/><text x="24.7158%" y="799.50"></text></g><g><title>[unknown] (2,918 samples, 1.35%)</title><rect x="24.4904%" y="773" width="1.3504%" height="15" fill="rgb(234,221,29)" fg:x="52920" fg:w="2918"/><text x="24.7404%" y="783.50"></text></g><g><title>[unknown] (2,681 samples, 1.24%)</title><rect x="24.6000%" y="757" width="1.2407%" height="15" fill="rgb(229,136,5)" fg:x="53157" fg:w="2681"/><text x="24.8500%" y="767.50"></text></g><g><title>[unknown] (2,285 samples, 1.06%)</title><rect x="24.7833%" y="741" width="1.0575%" height="15" fill="rgb(238,36,11)" fg:x="53553" fg:w="2285"/><text x="25.0333%" y="751.50"></text></g><g><title>[unknown] (2,074 samples, 0.96%)</title><rect x="24.8809%" y="725" width="0.9598%" height="15" fill="rgb(251,55,41)" fg:x="53764" fg:w="2074"/><text x="25.1309%" y="735.50"></text></g><g><title>[unknown] (1,925 samples, 0.89%)</title><rect x="24.9499%" y="709" width="0.8909%" height="15" fill="rgb(242,34,40)" fg:x="53913" fg:w="1925"/><text x="25.1999%" y="719.50"></text></g><g><title>[unknown] (1,629 samples, 0.75%)</title><rect x="25.0869%" y="693" width="0.7539%" height="15" fill="rgb(215,42,17)" fg:x="54209" fg:w="1629"/><text x="25.3369%" y="703.50"></text></g><g><title>[unknown] (1,112 samples, 0.51%)</title><rect x="25.3261%" y="677" width="0.5146%" height="15" fill="rgb(207,44,46)" fg:x="54726" fg:w="1112"/><text x="25.5761%" y="687.50"></text></g><g><title>[unknown] (704 samples, 0.33%)</title><rect x="25.5150%" y="661" width="0.3258%" height="15" fill="rgb(211,206,28)" fg:x="55134" fg:w="704"/><text x="25.7650%" y="671.50"></text></g><g><title>[unknown] (434 samples, 0.20%)</title><rect x="25.6399%" y="645" width="0.2008%" height="15" fill="rgb(237,167,16)" fg:x="55404" fg:w="434"/><text x="25.8899%" y="655.50"></text></g><g><title>[unknown] (128 samples, 0.06%)</title><rect x="25.7815%" y="629" width="0.0592%" height="15" fill="rgb(233,66,6)" fg:x="55710" fg:w="128"/><text x="26.0315%" y="639.50"></text></g><g><title>[unknown] (100 samples, 0.05%)</title><rect x="25.7945%" y="613" width="0.0463%" height="15" fill="rgb(246,123,29)" fg:x="55738" fg:w="100"/><text x="26.0445%" y="623.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="25.8065%" y="597" width="0.0342%" height="15" fill="rgb(209,62,40)" fg:x="55764" fg:w="74"/><text x="26.0565%" y="607.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="25.8093%" y="581" width="0.0315%" height="15" fill="rgb(218,4,25)" fg:x="55770" fg:w="68"/><text x="26.0593%" y="591.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="25.8130%" y="565" width="0.0278%" height="15" fill="rgb(253,91,49)" fg:x="55778" fg:w="60"/><text x="26.0630%" y="575.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="25.8190%" y="549" width="0.0218%" height="15" fill="rgb(228,155,29)" fg:x="55791" fg:w="47"/><text x="26.0690%" y="559.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="25.8236%" y="533" width="0.0171%" height="15" fill="rgb(243,57,37)" fg:x="55801" fg:w="37"/><text x="26.0736%" y="543.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="25.8269%" y="517" width="0.0139%" height="15" fill="rgb(244,167,17)" fg:x="55808" fg:w="30"/><text x="26.0769%" y="527.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="25.8283%" y="501" width="0.0125%" height="15" fill="rgb(207,181,38)" fg:x="55811" fg:w="27"/><text x="26.0783%" y="511.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="25.8297%" y="485" width="0.0111%" height="15" fill="rgb(211,8,23)" fg:x="55814" fg:w="24"/><text x="26.0797%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (33 samples, 0.02%)</title><rect x="25.8958%" y="805" width="0.0153%" height="15" fill="rgb(235,11,44)" fg:x="55957" fg:w="33"/><text x="26.1458%" y="815.50"></text></g><g><title>polling::epoll::Poller::ctl::{{closure}} (31 samples, 0.01%)</title><rect x="25.8968%" y="789" width="0.0143%" height="15" fill="rgb(248,18,52)" fg:x="55959" fg:w="31"/><text x="26.1468%" y="799.50"></text></g><g><title>polling::epoll::Poller::modify (1,448 samples, 0.67%)</title><rect x="25.8449%" y="837" width="0.6701%" height="15" fill="rgb(208,4,7)" fg:x="55847" fg:w="1448"/><text x="26.0949%" y="847.50"></text></g><g><title>polling::epoll::Poller::ctl (1,395 samples, 0.65%)</title><rect x="25.8694%" y="821" width="0.6456%" height="15" fill="rgb(240,17,39)" fg:x="55900" fg:w="1395"/><text x="26.1194%" y="831.50"></text></g><g><title>epoll_ctl (1,305 samples, 0.60%)</title><rect x="25.9111%" y="805" width="0.6039%" height="15" fill="rgb(207,170,3)" fg:x="55990" fg:w="1305"/><text x="26.1611%" y="815.50"></text></g><g><title>[unknown] (1,242 samples, 0.57%)</title><rect x="25.9403%" y="789" width="0.5748%" height="15" fill="rgb(236,100,52)" fg:x="56053" fg:w="1242"/><text x="26.1903%" y="799.50"></text></g><g><title>[unknown] (1,011 samples, 0.47%)</title><rect x="26.0472%" y="773" width="0.4679%" height="15" fill="rgb(246,78,51)" fg:x="56284" fg:w="1011"/><text x="26.2972%" y="783.50"></text></g><g><title>[unknown] (801 samples, 0.37%)</title><rect x="26.1443%" y="757" width="0.3707%" height="15" fill="rgb(211,17,15)" fg:x="56494" fg:w="801"/><text x="26.3943%" y="767.50"></text></g><g><title>[unknown] (682 samples, 0.32%)</title><rect x="26.1994%" y="741" width="0.3156%" height="15" fill="rgb(209,59,46)" fg:x="56613" fg:w="682"/><text x="26.4494%" y="751.50"></text></g><g><title>[unknown] (392 samples, 0.18%)</title><rect x="26.3336%" y="725" width="0.1814%" height="15" fill="rgb(210,92,25)" fg:x="56903" fg:w="392"/><text x="26.5836%" y="735.50"></text></g><g><title>[unknown] (123 samples, 0.06%)</title><rect x="26.4581%" y="709" width="0.0569%" height="15" fill="rgb(238,174,52)" fg:x="57172" fg:w="123"/><text x="26.7081%" y="719.50"></text></g><g><title>[unknown] (80 samples, 0.04%)</title><rect x="26.4780%" y="693" width="0.0370%" height="15" fill="rgb(230,73,7)" fg:x="57215" fg:w="80"/><text x="26.7280%" y="703.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="26.4910%" y="677" width="0.0241%" height="15" fill="rgb(243,124,40)" fg:x="57243" fg:w="52"/><text x="26.7410%" y="687.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="26.4993%" y="661" width="0.0157%" height="15" fill="rgb(244,170,11)" fg:x="57261" fg:w="34"/><text x="26.7493%" y="671.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="26.5025%" y="645" width="0.0125%" height="15" fill="rgb(207,114,54)" fg:x="57268" fg:w="27"/><text x="26.7525%" y="655.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="26.5039%" y="629" width="0.0111%" height="15" fill="rgb(205,42,20)" fg:x="57271" fg:w="24"/><text x="26.7539%" y="639.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="26.5507%" y="821" width="0.0102%" height="15" fill="rgb(230,30,28)" fg:x="57372" fg:w="22"/><text x="26.8007%" y="831.50"></text></g><g><title>read (1,027 samples, 0.48%)</title><rect x="26.5150%" y="837" width="0.4753%" height="15" fill="rgb(205,73,54)" fg:x="57295" fg:w="1027"/><text x="26.7650%" y="847.50"></text></g><g><title>[unknown] (928 samples, 0.43%)</title><rect x="26.5608%" y="821" width="0.4295%" height="15" fill="rgb(254,227,23)" fg:x="57394" fg:w="928"/><text x="26.8108%" y="831.50"></text></g><g><title>[unknown] (768 samples, 0.36%)</title><rect x="26.6349%" y="805" width="0.3554%" height="15" fill="rgb(228,202,34)" fg:x="57554" fg:w="768"/><text x="26.8849%" y="815.50"></text></g><g><title>[unknown] (628 samples, 0.29%)</title><rect x="26.6997%" y="789" width="0.2906%" height="15" fill="rgb(222,225,37)" fg:x="57694" fg:w="628"/><text x="26.9497%" y="799.50"></text></g><g><title>[unknown] (544 samples, 0.25%)</title><rect x="26.7386%" y="773" width="0.2518%" height="15" fill="rgb(221,14,54)" fg:x="57778" fg:w="544"/><text x="26.9886%" y="783.50"></text></g><g><title>[unknown] (455 samples, 0.21%)</title><rect x="26.7797%" y="757" width="0.2106%" height="15" fill="rgb(254,102,2)" fg:x="57867" fg:w="455"/><text x="27.0297%" y="767.50"></text></g><g><title>[unknown] (215 samples, 0.10%)</title><rect x="26.8908%" y="741" width="0.0995%" height="15" fill="rgb(232,104,17)" fg:x="58107" fg:w="215"/><text x="27.1408%" y="751.50"></text></g><g><title>[unknown] (125 samples, 0.06%)</title><rect x="26.9325%" y="725" width="0.0578%" height="15" fill="rgb(250,220,14)" fg:x="58197" fg:w="125"/><text x="27.1825%" y="735.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="26.9602%" y="709" width="0.0301%" height="15" fill="rgb(241,158,9)" fg:x="58257" fg:w="65"/><text x="27.2102%" y="719.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="26.9801%" y="693" width="0.0102%" height="15" fill="rgb(246,9,43)" fg:x="58300" fg:w="22"/><text x="27.2301%" y="703.50"></text></g><g><title>polling::epoll::Poller::wait (7,359 samples, 3.41%)</title><rect x="24.2021%" y="853" width="3.4056%" height="15" fill="rgb(206,73,33)" fg:x="52297" fg:w="7359"/><text x="24.4521%" y="863.50">pol..</text></g><g><title>timerfd_settime (1,318 samples, 0.61%)</title><rect x="26.9977%" y="837" width="0.6099%" height="15" fill="rgb(222,79,8)" fg:x="58338" fg:w="1318"/><text x="27.2477%" y="847.50"></text></g><g><title>[unknown] (1,282 samples, 0.59%)</title><rect x="27.0144%" y="821" width="0.5933%" height="15" fill="rgb(234,8,54)" fg:x="58374" fg:w="1282"/><text x="27.2644%" y="831.50"></text></g><g><title>[unknown] (1,142 samples, 0.53%)</title><rect x="27.0792%" y="805" width="0.5285%" height="15" fill="rgb(209,134,38)" fg:x="58514" fg:w="1142"/><text x="27.3292%" y="815.50"></text></g><g><title>[unknown] (1,018 samples, 0.47%)</title><rect x="27.1365%" y="789" width="0.4711%" height="15" fill="rgb(230,127,29)" fg:x="58638" fg:w="1018"/><text x="27.3865%" y="799.50"></text></g><g><title>[unknown] (966 samples, 0.45%)</title><rect x="27.1606%" y="773" width="0.4470%" height="15" fill="rgb(242,44,41)" fg:x="58690" fg:w="966"/><text x="27.4106%" y="783.50"></text></g><g><title>[unknown] (824 samples, 0.38%)</title><rect x="27.2263%" y="757" width="0.3813%" height="15" fill="rgb(222,56,43)" fg:x="58832" fg:w="824"/><text x="27.4763%" y="767.50"></text></g><g><title>[unknown] (443 samples, 0.21%)</title><rect x="27.4026%" y="741" width="0.2050%" height="15" fill="rgb(238,39,47)" fg:x="59213" fg:w="443"/><text x="27.6526%" y="751.50"></text></g><g><title>[unknown] (258 samples, 0.12%)</title><rect x="27.4883%" y="725" width="0.1194%" height="15" fill="rgb(226,79,43)" fg:x="59398" fg:w="258"/><text x="27.7383%" y="735.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="27.5720%" y="709" width="0.0356%" height="15" fill="rgb(242,105,53)" fg:x="59579" fg:w="77"/><text x="27.8220%" y="719.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="27.5970%" y="693" width="0.0106%" height="15" fill="rgb(251,132,46)" fg:x="59633" fg:w="23"/><text x="27.8470%" y="703.50"></text></g><g><title>polling::Poller::wait (7,452 samples, 3.45%)</title><rect x="24.1623%" y="869" width="3.4486%" height="15" fill="rgb(231,77,14)" fg:x="52211" fg:w="7452"/><text x="24.4123%" y="879.50">pol..</text></g><g><title>&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (39 samples, 0.02%)</title><rect x="27.6368%" y="757" width="0.0180%" height="15" fill="rgb(240,135,9)" fg:x="59719" fg:w="39"/><text x="27.8868%" y="767.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (38 samples, 0.02%)</title><rect x="27.6373%" y="741" width="0.0176%" height="15" fill="rgb(248,109,14)" fg:x="59720" fg:w="38"/><text x="27.8873%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (24 samples, 0.01%)</title><rect x="27.6438%" y="725" width="0.0111%" height="15" fill="rgb(227,146,52)" fg:x="59734" fg:w="24"/><text x="27.8938%" y="735.50"></text></g><g><title>parking::Unparker::unpark (245 samples, 0.11%)</title><rect x="27.6678%" y="725" width="0.1134%" height="15" fill="rgb(232,54,3)" fg:x="59786" fg:w="245"/><text x="27.9178%" y="735.50"></text></g><g><title>parking::Inner::unpark (233 samples, 0.11%)</title><rect x="27.6734%" y="709" width="0.1078%" height="15" fill="rgb(229,201,43)" fg:x="59798" fg:w="233"/><text x="27.9234%" y="719.50"></text></g><g><title>syscall (219 samples, 0.10%)</title><rect x="27.6798%" y="693" width="0.1013%" height="15" fill="rgb(252,161,33)" fg:x="59812" fg:w="219"/><text x="27.9298%" y="703.50"></text></g><g><title>[unknown] (209 samples, 0.10%)</title><rect x="27.6845%" y="677" width="0.0967%" height="15" fill="rgb(226,146,40)" fg:x="59822" fg:w="209"/><text x="27.9345%" y="687.50"></text></g><g><title>[unknown] (200 samples, 0.09%)</title><rect x="27.6886%" y="661" width="0.0926%" height="15" fill="rgb(219,47,25)" fg:x="59831" fg:w="200"/><text x="27.9386%" y="671.50"></text></g><g><title>[unknown] (184 samples, 0.09%)</title><rect x="27.6960%" y="645" width="0.0852%" height="15" fill="rgb(250,135,13)" fg:x="59847" fg:w="184"/><text x="27.9460%" y="655.50"></text></g><g><title>[unknown] (176 samples, 0.08%)</title><rect x="27.6997%" y="629" width="0.0814%" height="15" fill="rgb(219,229,18)" fg:x="59855" fg:w="176"/><text x="27.9497%" y="639.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="27.7035%" y="613" width="0.0777%" height="15" fill="rgb(217,152,27)" fg:x="59863" fg:w="168"/><text x="27.9535%" y="623.50"></text></g><g><title>[unknown] (153 samples, 0.07%)</title><rect x="27.7104%" y="597" width="0.0708%" height="15" fill="rgb(225,71,47)" fg:x="59878" fg:w="153"/><text x="27.9604%" y="607.50"></text></g><g><title>[unknown] (125 samples, 0.06%)</title><rect x="27.7233%" y="581" width="0.0578%" height="15" fill="rgb(220,139,14)" fg:x="59906" fg:w="125"/><text x="27.9733%" y="591.50"></text></g><g><title>[unknown] (101 samples, 0.05%)</title><rect x="27.7345%" y="565" width="0.0467%" height="15" fill="rgb(247,54,32)" fg:x="59930" fg:w="101"/><text x="27.9845%" y="575.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="27.7557%" y="549" width="0.0255%" height="15" fill="rgb(252,131,39)" fg:x="59976" fg:w="55"/><text x="28.0057%" y="559.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="27.7696%" y="533" width="0.0116%" height="15" fill="rgb(210,108,39)" fg:x="60006" fg:w="25"/><text x="28.0196%" y="543.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (253 samples, 0.12%)</title><rect x="27.6660%" y="741" width="0.1171%" height="15" fill="rgb(205,23,29)" fg:x="59782" fg:w="253"/><text x="27.9160%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (356 samples, 0.16%)</title><rect x="27.6197%" y="789" width="0.1647%" height="15" fill="rgb(246,139,46)" fg:x="59682" fg:w="356"/><text x="27.8697%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (336 samples, 0.16%)</title><rect x="27.6289%" y="773" width="0.1555%" height="15" fill="rgb(250,81,26)" fg:x="59702" fg:w="336"/><text x="27.8789%" y="783.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (265 samples, 0.12%)</title><rect x="27.6618%" y="757" width="0.1226%" height="15" fill="rgb(214,104,7)" fg:x="59773" fg:w="265"/><text x="27.9118%" y="767.50"></text></g><g><title>std::panic::catch_unwind (424 samples, 0.20%)</title><rect x="27.6169%" y="869" width="0.1962%" height="15" fill="rgb(233,189,8)" fg:x="59676" fg:w="424"/><text x="27.8669%" y="879.50"></text></g><g><title>std::panicking::try (424 samples, 0.20%)</title><rect x="27.6169%" y="853" width="0.1962%" height="15" fill="rgb(228,141,17)" fg:x="59676" fg:w="424"/><text x="27.8669%" y="863.50"></text></g><g><title>std::panicking::try::do_call (424 samples, 0.20%)</title><rect x="27.6169%" y="837" width="0.1962%" height="15" fill="rgb(247,157,1)" fg:x="59676" fg:w="424"/><text x="27.8669%" y="847.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (424 samples, 0.20%)</title><rect x="27.6169%" y="821" width="0.1962%" height="15" fill="rgb(249,225,5)" fg:x="59676" fg:w="424"/><text x="27.8669%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (424 samples, 0.20%)</title><rect x="27.6169%" y="805" width="0.1962%" height="15" fill="rgb(242,55,13)" fg:x="59676" fg:w="424"/><text x="27.8669%" y="815.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (48 samples, 0.02%)</title><rect x="27.7909%" y="789" width="0.0222%" height="15" fill="rgb(230,49,50)" fg:x="60052" fg:w="48"/><text x="28.0409%" y="799.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (46 samples, 0.02%)</title><rect x="27.7918%" y="773" width="0.0213%" height="15" fill="rgb(241,111,38)" fg:x="60054" fg:w="46"/><text x="28.0418%" y="783.50"></text></g><g><title>parking::Unparker::unpark (46 samples, 0.02%)</title><rect x="27.7918%" y="757" width="0.0213%" height="15" fill="rgb(252,155,4)" fg:x="60054" fg:w="46"/><text x="28.0418%" y="767.50"></text></g><g><title>parking::Inner::unpark (41 samples, 0.02%)</title><rect x="27.7942%" y="741" width="0.0190%" height="15" fill="rgb(212,69,32)" fg:x="60059" fg:w="41"/><text x="28.0442%" y="751.50"></text></g><g><title>syscall (33 samples, 0.02%)</title><rect x="27.7979%" y="725" width="0.0153%" height="15" fill="rgb(243,107,47)" fg:x="60067" fg:w="33"/><text x="28.0479%" y="735.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="27.7983%" y="709" width="0.0148%" height="15" fill="rgb(247,130,12)" fg:x="60068" fg:w="32"/><text x="28.0483%" y="719.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="27.7983%" y="693" width="0.0148%" height="15" fill="rgb(233,74,16)" fg:x="60068" fg:w="32"/><text x="28.0483%" y="703.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="27.7992%" y="677" width="0.0139%" height="15" fill="rgb(208,58,18)" fg:x="60070" fg:w="30"/><text x="28.0492%" y="687.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="27.7992%" y="661" width="0.0139%" height="15" fill="rgb(242,225,1)" fg:x="60070" fg:w="30"/><text x="28.0492%" y="671.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="27.8002%" y="645" width="0.0130%" height="15" fill="rgb(249,39,40)" fg:x="60072" fg:w="28"/><text x="28.0502%" y="655.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="27.8020%" y="629" width="0.0111%" height="15" fill="rgb(207,72,44)" fg:x="60076" fg:w="24"/><text x="28.0520%" y="639.50"></text></g><g><title>async_io::reactor::ReactorLock::react (8,891 samples, 4.11%)</title><rect x="23.7171%" y="885" width="4.1146%" height="15" fill="rgb(215,193,12)" fg:x="51249" fg:w="8891"/><text x="23.9671%" y="895.50">asyn..</text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get (38 samples, 0.02%)</title><rect x="27.8483%" y="853" width="0.0176%" height="15" fill="rgb(248,41,39)" fg:x="60176" fg:w="38"/><text x="28.0983%" y="863.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::is_initialized (38 samples, 0.02%)</title><rect x="27.8483%" y="837" width="0.0176%" height="15" fill="rgb(253,85,4)" fg:x="60176" fg:w="38"/><text x="28.0983%" y="847.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_init_blocking (85 samples, 0.04%)</title><rect x="27.8316%" y="885" width="0.0393%" height="15" fill="rgb(243,70,31)" fg:x="60140" fg:w="85"/><text x="28.0816%" y="895.50"></text></g><g><title>async_lock::once_cell::OnceCell&lt;T&gt;::get_or_try_init_blocking (49 samples, 0.02%)</title><rect x="27.8483%" y="869" width="0.0227%" height="15" fill="rgb(253,195,26)" fg:x="60176" fg:w="49"/><text x="28.0983%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (27 samples, 0.01%)</title><rect x="27.8876%" y="885" width="0.0125%" height="15" fill="rgb(243,42,11)" fg:x="60261" fg:w="27"/><text x="28.1376%" y="895.50"></text></g><g><title>std::sync::poison::Flag::done (38 samples, 0.02%)</title><rect x="27.9177%" y="837" width="0.0176%" height="15" fill="rgb(239,66,17)" fg:x="60326" fg:w="38"/><text x="28.1677%" y="847.50"></text></g><g><title>std::thread::panicking (38 samples, 0.02%)</title><rect x="27.9177%" y="821" width="0.0176%" height="15" fill="rgb(217,132,21)" fg:x="60326" fg:w="38"/><text x="28.1677%" y="831.50"></text></g><g><title>std::panicking::panicking (38 samples, 0.02%)</title><rect x="27.9177%" y="805" width="0.0176%" height="15" fill="rgb(252,202,21)" fg:x="60326" fg:w="38"/><text x="28.1677%" y="815.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (38 samples, 0.02%)</title><rect x="27.9177%" y="789" width="0.0176%" height="15" fill="rgb(233,98,36)" fg:x="60326" fg:w="38"/><text x="28.1677%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24 samples, 0.01%)</title><rect x="27.9242%" y="773" width="0.0111%" height="15" fill="rgb(216,153,54)" fg:x="60340" fg:w="24"/><text x="28.1742%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.01%)</title><rect x="27.9242%" y="757" width="0.0111%" height="15" fill="rgb(250,99,7)" fg:x="60340" fg:w="24"/><text x="28.1742%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (45 samples, 0.02%)</title><rect x="27.9177%" y="869" width="0.0208%" height="15" fill="rgb(207,56,50)" fg:x="60326" fg:w="45"/><text x="28.1677%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.02%)</title><rect x="27.9177%" y="853" width="0.0208%" height="15" fill="rgb(244,61,34)" fg:x="60326" fg:w="45"/><text x="28.1677%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (70 samples, 0.03%)</title><rect x="27.9385%" y="869" width="0.0324%" height="15" fill="rgb(241,50,38)" fg:x="60371" fg:w="70"/><text x="28.1885%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (70 samples, 0.03%)</title><rect x="27.9385%" y="853" width="0.0324%" height="15" fill="rgb(212,166,30)" fg:x="60371" fg:w="70"/><text x="28.1885%" y="863.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (59 samples, 0.03%)</title><rect x="28.0001%" y="805" width="0.0273%" height="15" fill="rgb(249,127,32)" fg:x="60504" fg:w="59"/><text x="28.2501%" y="815.50"></text></g><g><title>std::sys::unix::futex::futex_wait (6,612 samples, 3.06%)</title><rect x="27.9871%" y="821" width="3.0599%" height="15" fill="rgb(209,103,0)" fg:x="60476" fg:w="6612"/><text x="28.2371%" y="831.50">std..</text></g><g><title>syscall (6,516 samples, 3.02%)</title><rect x="28.0316%" y="805" width="3.0155%" height="15" fill="rgb(238,209,51)" fg:x="60572" fg:w="6516"/><text x="28.2816%" y="815.50">sys..</text></g><g><title>[unknown] (6,449 samples, 2.98%)</title><rect x="28.0626%" y="789" width="2.9845%" height="15" fill="rgb(237,56,23)" fg:x="60639" fg:w="6449"/><text x="28.3126%" y="799.50">[un..</text></g><g><title>[unknown] (6,154 samples, 2.85%)</title><rect x="28.1991%" y="773" width="2.8480%" height="15" fill="rgb(215,153,46)" fg:x="60934" fg:w="6154"/><text x="28.4491%" y="783.50">[u..</text></g><g><title>[unknown] (5,895 samples, 2.73%)</title><rect x="28.3189%" y="757" width="2.7281%" height="15" fill="rgb(224,49,31)" fg:x="61193" fg:w="5895"/><text x="28.5689%" y="767.50">[u..</text></g><g><title>[unknown] (5,799 samples, 2.68%)</title><rect x="28.3634%" y="741" width="2.6837%" height="15" fill="rgb(250,18,42)" fg:x="61289" fg:w="5799"/><text x="28.6134%" y="751.50">[u..</text></g><g><title>[unknown] (5,693 samples, 2.63%)</title><rect x="28.4124%" y="725" width="2.6346%" height="15" fill="rgb(215,176,39)" fg:x="61395" fg:w="5693"/><text x="28.6624%" y="735.50">[u..</text></g><g><title>[unknown] (5,417 samples, 2.51%)</title><rect x="28.5402%" y="709" width="2.5069%" height="15" fill="rgb(223,77,29)" fg:x="61671" fg:w="5417"/><text x="28.7902%" y="719.50">[u..</text></g><g><title>[unknown] (5,044 samples, 2.33%)</title><rect x="28.7128%" y="693" width="2.3343%" height="15" fill="rgb(234,94,52)" fg:x="62044" fg:w="5044"/><text x="28.9628%" y="703.50">[..</text></g><g><title>[unknown] (4,840 samples, 2.24%)</title><rect x="28.8072%" y="677" width="2.2399%" height="15" fill="rgb(220,154,50)" fg:x="62248" fg:w="4840"/><text x="29.0572%" y="687.50">[..</text></g><g><title>[unknown] (4,448 samples, 2.06%)</title><rect x="28.9886%" y="661" width="2.0584%" height="15" fill="rgb(212,11,10)" fg:x="62640" fg:w="4448"/><text x="29.2386%" y="671.50">[..</text></g><g><title>[unknown] (3,813 samples, 1.76%)</title><rect x="29.2825%" y="645" width="1.7646%" height="15" fill="rgb(205,166,19)" fg:x="63275" fg:w="3813"/><text x="29.5325%" y="655.50"></text></g><g><title>[unknown] (2,538 samples, 1.17%)</title><rect x="29.8725%" y="629" width="1.1745%" height="15" fill="rgb(244,198,16)" fg:x="64550" fg:w="2538"/><text x="30.1225%" y="639.50"></text></g><g><title>[unknown] (1,538 samples, 0.71%)</title><rect x="30.3353%" y="613" width="0.7118%" height="15" fill="rgb(219,69,12)" fg:x="65550" fg:w="1538"/><text x="30.5853%" y="623.50"></text></g><g><title>[unknown] (961 samples, 0.44%)</title><rect x="30.6023%" y="597" width="0.4447%" height="15" fill="rgb(245,30,7)" fg:x="66127" fg:w="961"/><text x="30.8523%" y="607.50"></text></g><g><title>[unknown] (284 samples, 0.13%)</title><rect x="30.9156%" y="581" width="0.1314%" height="15" fill="rgb(218,221,48)" fg:x="66804" fg:w="284"/><text x="31.1656%" y="591.50"></text></g><g><title>[unknown] (225 samples, 0.10%)</title><rect x="30.9429%" y="565" width="0.1041%" height="15" fill="rgb(216,66,15)" fg:x="66863" fg:w="225"/><text x="31.1929%" y="575.50"></text></g><g><title>[unknown] (181 samples, 0.08%)</title><rect x="30.9633%" y="549" width="0.0838%" height="15" fill="rgb(226,122,50)" fg:x="66907" fg:w="181"/><text x="31.2133%" y="559.50"></text></g><g><title>[unknown] (164 samples, 0.08%)</title><rect x="30.9711%" y="533" width="0.0759%" height="15" fill="rgb(239,156,16)" fg:x="66924" fg:w="164"/><text x="31.2211%" y="543.50"></text></g><g><title>[unknown] (154 samples, 0.07%)</title><rect x="30.9758%" y="517" width="0.0713%" height="15" fill="rgb(224,27,38)" fg:x="66934" fg:w="154"/><text x="31.2258%" y="527.50"></text></g><g><title>[unknown] (119 samples, 0.06%)</title><rect x="30.9920%" y="501" width="0.0551%" height="15" fill="rgb(224,39,27)" fg:x="66969" fg:w="119"/><text x="31.2420%" y="511.50"></text></g><g><title>[unknown] (108 samples, 0.05%)</title><rect x="30.9971%" y="485" width="0.0500%" height="15" fill="rgb(215,92,29)" fg:x="66980" fg:w="108"/><text x="31.2471%" y="495.50"></text></g><g><title>[unknown] (88 samples, 0.04%)</title><rect x="31.0063%" y="469" width="0.0407%" height="15" fill="rgb(207,159,16)" fg:x="67000" fg:w="88"/><text x="31.2563%" y="479.50"></text></g><g><title>[unknown] (82 samples, 0.04%)</title><rect x="31.0091%" y="453" width="0.0379%" height="15" fill="rgb(238,163,47)" fg:x="67006" fg:w="82"/><text x="31.2591%" y="463.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="31.0151%" y="437" width="0.0319%" height="15" fill="rgb(219,91,49)" fg:x="67019" fg:w="69"/><text x="31.2651%" y="447.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="31.0197%" y="421" width="0.0273%" height="15" fill="rgb(227,167,31)" fg:x="67029" fg:w="59"/><text x="31.2697%" y="431.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="31.0299%" y="405" width="0.0171%" height="15" fill="rgb(234,80,54)" fg:x="67051" fg:w="37"/><text x="31.2799%" y="415.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="31.0355%" y="389" width="0.0116%" height="15" fill="rgb(212,114,2)" fg:x="67063" fg:w="25"/><text x="31.2855%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (62 samples, 0.03%)</title><rect x="31.0470%" y="821" width="0.0287%" height="15" fill="rgb(234,50,24)" fg:x="67088" fg:w="62"/><text x="31.2970%" y="831.50"></text></g><g><title>std::sync::condvar::Condvar::wait (6,717 samples, 3.11%)</title><rect x="27.9709%" y="869" width="3.1085%" height="15" fill="rgb(221,68,8)" fg:x="60441" fg:w="6717"/><text x="28.2209%" y="879.50">std..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (6,703 samples, 3.10%)</title><rect x="27.9774%" y="853" width="3.1020%" height="15" fill="rgb(254,180,31)" fg:x="60455" fg:w="6703"/><text x="28.2274%" y="863.50">std..</text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (6,684 samples, 3.09%)</title><rect x="27.9862%" y="837" width="3.0932%" height="15" fill="rgb(247,130,50)" fg:x="60474" fg:w="6684"/><text x="28.2362%" y="847.50">std..</text></g><g><title>parking::Inner::park (6,876 samples, 3.18%)</title><rect x="27.9011%" y="885" width="3.1821%" height="15" fill="rgb(211,109,4)" fg:x="60290" fg:w="6876"/><text x="28.1511%" y="895.50">par..</text></g><g><title>parking::Parker::park_timeout (27 samples, 0.01%)</title><rect x="31.0896%" y="885" width="0.0125%" height="15" fill="rgb(238,50,21)" fg:x="67180" fg:w="27"/><text x="31.3396%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.01%)</title><rect x="31.0896%" y="869" width="0.0125%" height="15" fill="rgb(225,57,45)" fg:x="67180" fg:w="27"/><text x="31.3396%" y="879.50"></text></g><g><title>parking::Unparker::unpark (200 samples, 0.09%)</title><rect x="31.1021%" y="885" width="0.0926%" height="15" fill="rgb(209,196,50)" fg:x="67207" fg:w="200"/><text x="31.3521%" y="895.50"></text></g><g><title>parking::Inner::unpark (191 samples, 0.09%)</title><rect x="31.1063%" y="869" width="0.0884%" height="15" fill="rgb(242,140,13)" fg:x="67216" fg:w="191"/><text x="31.3563%" y="879.50"></text></g><g><title>syscall (185 samples, 0.09%)</title><rect x="31.1091%" y="853" width="0.0856%" height="15" fill="rgb(217,111,7)" fg:x="67222" fg:w="185"/><text x="31.3591%" y="863.50"></text></g><g><title>[unknown] (180 samples, 0.08%)</title><rect x="31.1114%" y="837" width="0.0833%" height="15" fill="rgb(253,193,51)" fg:x="67227" fg:w="180"/><text x="31.3614%" y="847.50"></text></g><g><title>[unknown] (157 samples, 0.07%)</title><rect x="31.1220%" y="821" width="0.0727%" height="15" fill="rgb(252,70,29)" fg:x="67250" fg:w="157"/><text x="31.3720%" y="831.50"></text></g><g><title>[unknown] (136 samples, 0.06%)</title><rect x="31.1317%" y="805" width="0.0629%" height="15" fill="rgb(232,127,12)" fg:x="67271" fg:w="136"/><text x="31.3817%" y="815.50"></text></g><g><title>[unknown] (128 samples, 0.06%)</title><rect x="31.1354%" y="789" width="0.0592%" height="15" fill="rgb(211,180,21)" fg:x="67279" fg:w="128"/><text x="31.3854%" y="799.50"></text></g><g><title>[unknown] (123 samples, 0.06%)</title><rect x="31.1377%" y="773" width="0.0569%" height="15" fill="rgb(229,72,13)" fg:x="67284" fg:w="123"/><text x="31.3877%" y="783.50"></text></g><g><title>[unknown] (91 samples, 0.04%)</title><rect x="31.1526%" y="757" width="0.0421%" height="15" fill="rgb(240,211,49)" fg:x="67316" fg:w="91"/><text x="31.4026%" y="767.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="31.1618%" y="741" width="0.0329%" height="15" fill="rgb(219,149,40)" fg:x="67336" fg:w="71"/><text x="31.4118%" y="751.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="31.1664%" y="725" width="0.0282%" height="15" fill="rgb(210,127,46)" fg:x="67346" fg:w="61"/><text x="31.4164%" y="735.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="31.1836%" y="709" width="0.0111%" height="15" fill="rgb(220,106,7)" fg:x="67383" fg:w="24"/><text x="31.4336%" y="719.50"></text></g><g><title>clock_gettime (49 samples, 0.02%)</title><rect x="31.1970%" y="869" width="0.0227%" height="15" fill="rgb(249,31,22)" fg:x="67412" fg:w="49"/><text x="31.4470%" y="879.50"></text></g><g><title>__vdso_clock_gettime (31 samples, 0.01%)</title><rect x="31.2053%" y="853" width="0.0143%" height="15" fill="rgb(253,1,49)" fg:x="67430" fg:w="31"/><text x="31.4553%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (58 samples, 0.03%)</title><rect x="31.1947%" y="885" width="0.0268%" height="15" fill="rgb(227,144,33)" fg:x="67407" fg:w="58"/><text x="31.4447%" y="895.50"></text></g><g><title>std::time::Instant::elapsed (33 samples, 0.02%)</title><rect x="31.2234%" y="885" width="0.0153%" height="15" fill="rgb(249,163,44)" fg:x="67469" fg:w="33"/><text x="31.4734%" y="895.50"></text></g><g><title>std::time::Instant::now (27 samples, 0.01%)</title><rect x="31.2261%" y="869" width="0.0125%" height="15" fill="rgb(234,15,39)" fg:x="67475" fg:w="27"/><text x="31.4761%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (27 samples, 0.01%)</title><rect x="31.2261%" y="853" width="0.0125%" height="15" fill="rgb(207,66,16)" fg:x="67475" fg:w="27"/><text x="31.4761%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (27 samples, 0.01%)</title><rect x="31.2261%" y="837" width="0.0125%" height="15" fill="rgb(233,112,24)" fg:x="67475" fg:w="27"/><text x="31.4761%" y="847.50"></text></g><g><title>std::panic::catch_unwind (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1173" width="27.8608%" height="15" fill="rgb(230,90,22)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1183.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1157" width="27.8608%" height="15" fill="rgb(229,61,13)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1167.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1141" width="27.8608%" height="15" fill="rgb(225,57,24)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1151.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1125" width="27.8608%" height="15" fill="rgb(208,169,48)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1135.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1109" width="27.8608%" height="15" fill="rgb(244,218,51)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1119.50">std::thread::Builder::spawn_unchecked_::{{clo..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1093" width="27.8608%" height="15" fill="rgb(214,148,10)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1103.50">std::sys_common::backtrace::__rust_begin_shor..</text></g><g><title>core::ops::function::FnOnce::call_once (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1077" width="27.8608%" height="15" fill="rgb(225,174,27)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1087.50">core::ops::function::FnOnce::call_once</text></g><g><title>async_global_executor::threading::thread_main_loop (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1061" width="27.8608%" height="15" fill="rgb(230,96,26)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1071.50">async_global_executor::threading::thread_main..</text></g><g><title>std::panic::catch_unwind (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1045" width="27.8608%" height="15" fill="rgb(232,10,30)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1029" width="27.8608%" height="15" fill="rgb(222,8,50)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (60,203 samples, 27.86%)</title><rect x="3.3797%" y="1013" width="27.8608%" height="15" fill="rgb(213,81,27)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1023.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (60,203 samples, 27.86%)</title><rect x="3.3797%" y="997" width="27.8608%" height="15" fill="rgb(245,50,10)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="1007.50">async_global_executor::threading::thread_main..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (60,203 samples, 27.86%)</title><rect x="3.3797%" y="981" width="27.8608%" height="15" fill="rgb(216,100,18)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="991.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (60,203 samples, 27.86%)</title><rect x="3.3797%" y="965" width="27.8608%" height="15" fill="rgb(236,147,54)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="975.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (60,203 samples, 27.86%)</title><rect x="3.3797%" y="949" width="27.8608%" height="15" fill="rgb(205,143,26)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="959.50">async_global_executor::threading::thread_main..</text></g><g><title>async_global_executor::reactor::block_on (60,203 samples, 27.86%)</title><rect x="3.3797%" y="933" width="27.8608%" height="15" fill="rgb(236,26,9)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="943.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (60,203 samples, 27.86%)</title><rect x="3.3797%" y="917" width="27.8608%" height="15" fill="rgb(221,165,53)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="927.50">async_global_executor::reactor::block_on::{{c..</text></g><g><title>async_io::driver::block_on (60,203 samples, 27.86%)</title><rect x="3.3797%" y="901" width="27.8608%" height="15" fill="rgb(214,110,17)" fg:x="7303" fg:w="60203"/><text x="3.6297%" y="911.50">async_io::driver::block_on</text></g><g><title>[libc.so.6] (60,222 samples, 27.87%)</title><rect x="3.3797%" y="1285" width="27.8696%" height="15" fill="rgb(237,197,12)" fg:x="7303" fg:w="60222"/><text x="3.6297%" y="1295.50">[libc.so.6]</text></g><g><title>[libc.so.6] (60,222 samples, 27.87%)</title><rect x="3.3797%" y="1269" width="27.8696%" height="15" fill="rgb(205,84,17)" fg:x="7303" fg:w="60222"/><text x="3.6297%" y="1279.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (60,222 samples, 27.87%)</title><rect x="3.3797%" y="1253" width="27.8696%" height="15" fill="rgb(237,18,45)" fg:x="7303" fg:w="60222"/><text x="3.6297%" y="1263.50">std::sys::unix::thread::Thread::new::thread_s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (60,222 samples, 27.87%)</title><rect x="3.3797%" y="1237" width="27.8696%" height="15" fill="rgb(221,87,14)" fg:x="7303" fg:w="60222"/><text x="3.6297%" y="1247.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::functio..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (60,222 samples, 27.87%)</title><rect x="3.3797%" y="1221" width="27.8696%" height="15" fill="rgb(238,186,15)" fg:x="7303" fg:w="60222"/><text x="3.6297%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::functio..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (60,222 samples, 27.87%)</title><rect x="3.3797%" y="1205" width="27.8696%" height="15" fill="rgb(208,115,11)" fg:x="7303" fg:w="60222"/><text x="3.6297%" y="1215.50">core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (60,222 samples, 27.87%)</title><rect x="3.3797%" y="1189" width="27.8696%" height="15" fill="rgb(254,175,0)" fg:x="7303" fg:w="60222"/><text x="3.6297%" y="1199.50">std::thread::Builder::spawn_unchecked_::{{clo..</text></g><g><title>[unknown] (496 samples, 0.23%)</title><rect x="31.2493%" y="1285" width="0.2295%" height="15" fill="rgb(227,24,42)" fg:x="67525" fg:w="496"/><text x="31.4993%" y="1295.50"></text></g><g><title>epoll_ctl (52 samples, 0.02%)</title><rect x="31.4793%" y="1269" width="0.0241%" height="15" fill="rgb(223,211,37)" fg:x="68022" fg:w="52"/><text x="31.7293%" y="1279.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="31.4793%" y="1253" width="0.0241%" height="15" fill="rgb(235,49,27)" fg:x="68022" fg:w="52"/><text x="31.7293%" y="1263.50"></text></g><g><title>async_io::reactor::Reactor::get::REACTOR (54 samples, 0.02%)</title><rect x="31.4788%" y="1285" width="0.0250%" height="15" fill="rgb(254,97,51)" fg:x="68021" fg:w="54"/><text x="31.7288%" y="1295.50"></text></g><g><title>async-std/runti (60,845 samples, 28.16%)</title><rect x="3.3464%" y="1301" width="28.1579%" height="15" fill="rgb(249,51,40)" fg:x="7231" fg:w="60845"/><text x="3.5964%" y="1311.50">async-std/runti</text></g><g><title>[[stack]] (27 samples, 0.01%)</title><rect x="31.5246%" y="1285" width="0.0125%" height="15" fill="rgb(210,128,45)" fg:x="68120" fg:w="27"/><text x="31.7746%" y="1295.50"></text></g><g><title>[unknown] (104 samples, 0.05%)</title><rect x="31.5853%" y="1269" width="0.0481%" height="15" fill="rgb(224,137,50)" fg:x="68251" fg:w="104"/><text x="31.8353%" y="1279.50"></text></g><g><title>[unknown] (104 samples, 0.05%)</title><rect x="31.5853%" y="1253" width="0.0481%" height="15" fill="rgb(242,15,9)" fg:x="68251" fg:w="104"/><text x="31.8353%" y="1263.50"></text></g><g><title>[unknown] (104 samples, 0.05%)</title><rect x="31.5853%" y="1237" width="0.0481%" height="15" fill="rgb(233,187,41)" fg:x="68251" fg:w="104"/><text x="31.8353%" y="1247.50"></text></g><g><title>[unknown] (97 samples, 0.04%)</title><rect x="31.5885%" y="1221" width="0.0449%" height="15" fill="rgb(227,2,29)" fg:x="68258" fg:w="97"/><text x="31.8385%" y="1231.50"></text></g><g><title>[unknown] (63 samples, 0.03%)</title><rect x="31.6042%" y="1205" width="0.0292%" height="15" fill="rgb(222,70,3)" fg:x="68292" fg:w="63"/><text x="31.8542%" y="1215.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="31.6227%" y="1189" width="0.0106%" height="15" fill="rgb(213,11,42)" fg:x="68332" fg:w="23"/><text x="31.8727%" y="1199.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (63 samples, 0.03%)</title><rect x="31.7153%" y="997" width="0.0292%" height="15" fill="rgb(225,150,9)" fg:x="68532" fg:w="63"/><text x="31.9653%" y="1007.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (56 samples, 0.03%)</title><rect x="31.7185%" y="981" width="0.0259%" height="15" fill="rgb(230,162,45)" fg:x="68539" fg:w="56"/><text x="31.9685%" y="991.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (86 samples, 0.04%)</title><rect x="31.7102%" y="1013" width="0.0398%" height="15" fill="rgb(222,14,52)" fg:x="68521" fg:w="86"/><text x="31.9602%" y="1023.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (120 samples, 0.06%)</title><rect x="31.6982%" y="1045" width="0.0555%" height="15" fill="rgb(254,198,14)" fg:x="68495" fg:w="120"/><text x="31.9482%" y="1055.50"></text></g><g><title>async_channel::Recv&lt;T&gt;::run_with_strategy (118 samples, 0.05%)</title><rect x="31.6991%" y="1029" width="0.0546%" height="15" fill="rgb(220,217,30)" fg:x="68497" fg:w="118"/><text x="31.9491%" y="1039.50"></text></g><g><title>async_io::reactor::Reactor::notify (113 samples, 0.05%)</title><rect x="31.7634%" y="997" width="0.0523%" height="15" fill="rgb(215,146,41)" fg:x="68636" fg:w="113"/><text x="32.0134%" y="1007.50"></text></g><g><title>polling::Poller::notify (110 samples, 0.05%)</title><rect x="31.7648%" y="981" width="0.0509%" height="15" fill="rgb(217,27,36)" fg:x="68639" fg:w="110"/><text x="32.0148%" y="991.50"></text></g><g><title>polling::epoll::Poller::notify (106 samples, 0.05%)</title><rect x="31.7667%" y="965" width="0.0491%" height="15" fill="rgb(219,218,39)" fg:x="68643" fg:w="106"/><text x="32.0167%" y="975.50"></text></g><g><title>write (104 samples, 0.05%)</title><rect x="31.7676%" y="949" width="0.0481%" height="15" fill="rgb(219,4,42)" fg:x="68645" fg:w="104"/><text x="32.0176%" y="959.50"></text></g><g><title>[unknown] (96 samples, 0.04%)</title><rect x="31.7713%" y="933" width="0.0444%" height="15" fill="rgb(249,119,36)" fg:x="68653" fg:w="96"/><text x="32.0213%" y="943.50"></text></g><g><title>[unknown] (91 samples, 0.04%)</title><rect x="31.7736%" y="917" width="0.0421%" height="15" fill="rgb(209,23,33)" fg:x="68658" fg:w="91"/><text x="32.0236%" y="927.50"></text></g><g><title>[unknown] (84 samples, 0.04%)</title><rect x="31.7768%" y="901" width="0.0389%" height="15" fill="rgb(211,10,0)" fg:x="68665" fg:w="84"/><text x="32.0268%" y="911.50"></text></g><g><title>[unknown] (82 samples, 0.04%)</title><rect x="31.7778%" y="885" width="0.0379%" height="15" fill="rgb(208,99,37)" fg:x="68667" fg:w="82"/><text x="32.0278%" y="895.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="31.7829%" y="869" width="0.0329%" height="15" fill="rgb(213,132,31)" fg:x="68678" fg:w="71"/><text x="32.0329%" y="879.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="31.7880%" y="853" width="0.0278%" height="15" fill="rgb(243,129,40)" fg:x="68689" fg:w="60"/><text x="32.0380%" y="863.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="31.7926%" y="837" width="0.0231%" height="15" fill="rgb(210,66,33)" fg:x="68699" fg:w="50"/><text x="32.0426%" y="847.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="31.7981%" y="821" width="0.0176%" height="15" fill="rgb(209,189,4)" fg:x="68711" fg:w="38"/><text x="32.0481%" y="831.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="31.8018%" y="805" width="0.0139%" height="15" fill="rgb(214,107,37)" fg:x="68719" fg:w="30"/><text x="32.0518%" y="815.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="31.8037%" y="789" width="0.0120%" height="15" fill="rgb(245,88,54)" fg:x="68723" fg:w="26"/><text x="32.0537%" y="799.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="31.8046%" y="773" width="0.0111%" height="15" fill="rgb(205,146,20)" fg:x="68725" fg:w="24"/><text x="32.0546%" y="783.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (122 samples, 0.06%)</title><rect x="31.7620%" y="1013" width="0.0565%" height="15" fill="rgb(220,161,25)" fg:x="68633" fg:w="122"/><text x="32.0120%" y="1023.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (151 samples, 0.07%)</title><rect x="31.7537%" y="1045" width="0.0699%" height="15" fill="rgb(215,152,15)" fg:x="68615" fg:w="151"/><text x="32.0037%" y="1055.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (143 samples, 0.07%)</title><rect x="31.7574%" y="1029" width="0.0662%" height="15" fill="rgb(233,192,44)" fg:x="68623" fg:w="143"/><text x="32.0074%" y="1039.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (283 samples, 0.13%)</title><rect x="31.6954%" y="1061" width="0.1310%" height="15" fill="rgb(240,170,46)" fg:x="68489" fg:w="283"/><text x="31.9454%" y="1071.50"></text></g><g><title>clock_gettime (34 samples, 0.02%)</title><rect x="31.8352%" y="997" width="0.0157%" height="15" fill="rgb(207,104,33)" fg:x="68791" fg:w="34"/><text x="32.0852%" y="1007.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.01%)</title><rect x="31.8389%" y="981" width="0.0120%" height="15" fill="rgb(219,21,39)" fg:x="68799" fg:w="26"/><text x="32.0889%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (41 samples, 0.02%)</title><rect x="31.8328%" y="1013" width="0.0190%" height="15" fill="rgb(214,133,29)" fg:x="68786" fg:w="41"/><text x="32.0828%" y="1023.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (62 samples, 0.03%)</title><rect x="31.8291%" y="1061" width="0.0287%" height="15" fill="rgb(226,93,6)" fg:x="68778" fg:w="62"/><text x="32.0791%" y="1071.50"></text></g><g><title>async_std::utils::timer_after (61 samples, 0.03%)</title><rect x="31.8296%" y="1045" width="0.0282%" height="15" fill="rgb(252,222,34)" fg:x="68779" fg:w="61"/><text x="32.0796%" y="1055.50"></text></g><g><title>async_io::Timer::after (59 samples, 0.03%)</title><rect x="31.8305%" y="1029" width="0.0273%" height="15" fill="rgb(252,92,48)" fg:x="68781" fg:w="59"/><text x="32.0805%" y="1039.50"></text></g><g><title>async_std::future::timeout::timeout::{{closure}} (408 samples, 0.19%)</title><rect x="31.6875%" y="1077" width="0.1888%" height="15" fill="rgb(245,223,24)" fg:x="68472" fg:w="408"/><text x="31.9375%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;async_channel::Recv&lt;floresta_wire::p2p_wire::node::NodeNotification&gt;&gt;&gt; (40 samples, 0.02%)</title><rect x="31.8578%" y="1061" width="0.0185%" height="15" fill="rgb(205,176,3)" fg:x="68840" fg:w="40"/><text x="32.1078%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (24 samples, 0.01%)</title><rect x="31.8652%" y="1045" width="0.0111%" height="15" fill="rgb(235,151,15)" fg:x="68856" fg:w="24"/><text x="32.1152%" y="1055.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (71 samples, 0.03%)</title><rect x="31.9268%" y="885" width="0.0329%" height="15" fill="rgb(237,209,11)" fg:x="68989" fg:w="71"/><text x="32.1768%" y="895.50"></text></g><g><title>parking::Unparker::unpark (64 samples, 0.03%)</title><rect x="31.9300%" y="869" width="0.0296%" height="15" fill="rgb(243,227,24)" fg:x="68996" fg:w="64"/><text x="32.1800%" y="879.50"></text></g><g><title>parking::Inner::unpark (59 samples, 0.03%)</title><rect x="31.9323%" y="853" width="0.0273%" height="15" fill="rgb(239,193,16)" fg:x="69001" fg:w="59"/><text x="32.1823%" y="863.50"></text></g><g><title>syscall (57 samples, 0.03%)</title><rect x="31.9333%" y="837" width="0.0264%" height="15" fill="rgb(231,27,9)" fg:x="69003" fg:w="57"/><text x="32.1833%" y="847.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="31.9333%" y="821" width="0.0264%" height="15" fill="rgb(219,169,10)" fg:x="69003" fg:w="57"/><text x="32.1833%" y="831.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="31.9347%" y="805" width="0.0250%" height="15" fill="rgb(244,229,43)" fg:x="69006" fg:w="54"/><text x="32.1847%" y="815.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="31.9365%" y="789" width="0.0231%" height="15" fill="rgb(254,38,20)" fg:x="69010" fg:w="50"/><text x="32.1865%" y="799.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="31.9370%" y="773" width="0.0227%" height="15" fill="rgb(250,47,30)" fg:x="69011" fg:w="49"/><text x="32.1870%" y="783.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="31.9374%" y="757" width="0.0222%" height="15" fill="rgb(224,124,36)" fg:x="69012" fg:w="48"/><text x="32.1874%" y="767.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="31.9416%" y="741" width="0.0180%" height="15" fill="rgb(246,68,51)" fg:x="69021" fg:w="39"/><text x="32.1916%" y="751.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="31.9462%" y="725" width="0.0134%" height="15" fill="rgb(253,43,49)" fg:x="69031" fg:w="29"/><text x="32.1962%" y="735.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="31.9472%" y="709" width="0.0125%" height="15" fill="rgb(219,54,36)" fg:x="69033" fg:w="27"/><text x="32.1972%" y="719.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (118 samples, 0.05%)</title><rect x="31.9060%" y="1029" width="0.0546%" height="15" fill="rgb(227,133,34)" fg:x="68944" fg:w="118"/><text x="32.1560%" y="1039.50"></text></g><g><title>async_channel::Send&lt;T&gt;::run_with_strategy (118 samples, 0.05%)</title><rect x="31.9060%" y="1013" width="0.0546%" height="15" fill="rgb(247,227,15)" fg:x="68944" fg:w="118"/><text x="32.1560%" y="1023.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (118 samples, 0.05%)</title><rect x="31.9060%" y="997" width="0.0546%" height="15" fill="rgb(229,96,14)" fg:x="68944" fg:w="118"/><text x="32.1560%" y="1007.50"></text></g><g><title>event_listener::Event::notify_additional (113 samples, 0.05%)</title><rect x="31.9083%" y="981" width="0.0523%" height="15" fill="rgb(220,79,17)" fg:x="68949" fg:w="113"/><text x="32.1583%" y="991.50"></text></g><g><title>event_listener::List::notify_additional (108 samples, 0.05%)</title><rect x="31.9106%" y="965" width="0.0500%" height="15" fill="rgb(205,131,53)" fg:x="68954" fg:w="108"/><text x="32.1606%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (107 samples, 0.05%)</title><rect x="31.9111%" y="949" width="0.0495%" height="15" fill="rgb(209,50,29)" fg:x="68955" fg:w="107"/><text x="32.1611%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (107 samples, 0.05%)</title><rect x="31.9111%" y="933" width="0.0495%" height="15" fill="rgb(245,86,46)" fg:x="68955" fg:w="107"/><text x="32.1611%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (102 samples, 0.05%)</title><rect x="31.9134%" y="917" width="0.0472%" height="15" fill="rgb(235,66,46)" fg:x="68960" fg:w="102"/><text x="32.1634%" y="927.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (80 samples, 0.04%)</title><rect x="31.9235%" y="901" width="0.0370%" height="15" fill="rgb(232,148,31)" fg:x="68982" fg:w="80"/><text x="32.1735%" y="911.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::request_blocks::{{closure}} (175 samples, 0.08%)</title><rect x="31.8967%" y="1061" width="0.0810%" height="15" fill="rgb(217,149,8)" fg:x="68924" fg:w="175"/><text x="32.1467%" y="1071.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::send_to_random_peer::{{closure}} (164 samples, 0.08%)</title><rect x="31.9018%" y="1045" width="0.0759%" height="15" fill="rgb(209,183,11)" fg:x="68935" fg:w="164"/><text x="32.1518%" y="1055.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (26 samples, 0.01%)</title><rect x="32.0045%" y="917" width="0.0120%" height="15" fill="rgb(208,55,20)" fg:x="69157" fg:w="26"/><text x="32.2545%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (82 samples, 0.04%)</title><rect x="31.9814%" y="981" width="0.0379%" height="15" fill="rgb(218,39,14)" fg:x="69107" fg:w="82"/><text x="32.2314%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (82 samples, 0.04%)</title><rect x="31.9814%" y="965" width="0.0379%" height="15" fill="rgb(216,169,33)" fg:x="69107" fg:w="82"/><text x="32.2314%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (82 samples, 0.04%)</title><rect x="31.9814%" y="949" width="0.0379%" height="15" fill="rgb(233,80,24)" fg:x="69107" fg:w="82"/><text x="32.2314%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (34 samples, 0.02%)</title><rect x="32.0036%" y="933" width="0.0157%" height="15" fill="rgb(213,179,31)" fg:x="69155" fg:w="34"/><text x="32.2536%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (24 samples, 0.01%)</title><rect x="32.0346%" y="949" width="0.0111%" height="15" fill="rgb(209,19,5)" fg:x="69222" fg:w="24"/><text x="32.2846%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (24 samples, 0.01%)</title><rect x="32.0346%" y="933" width="0.0111%" height="15" fill="rgb(219,18,35)" fg:x="69222" fg:w="24"/><text x="32.2846%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (24 samples, 0.01%)</title><rect x="32.0346%" y="917" width="0.0111%" height="15" fill="rgb(209,169,16)" fg:x="69222" fg:w="24"/><text x="32.2846%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (36 samples, 0.02%)</title><rect x="32.0466%" y="901" width="0.0167%" height="15" fill="rgb(245,90,51)" fg:x="69248" fg:w="36"/><text x="32.2966%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (32 samples, 0.01%)</title><rect x="32.0485%" y="885" width="0.0148%" height="15" fill="rgb(220,99,45)" fg:x="69252" fg:w="32"/><text x="32.2985%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.01%)</title><rect x="32.0485%" y="869" width="0.0148%" height="15" fill="rgb(249,89,25)" fg:x="69252" fg:w="32"/><text x="32.2985%" y="879.50"></text></g><g><title>&lt;floresta_wire::p2p_wire::node::InflightRequests as core::hash::Hash&gt;::hash (288 samples, 0.13%)</title><rect x="32.0235%" y="965" width="0.1333%" height="15" fill="rgb(239,193,0)" fg:x="69198" fg:w="288"/><text x="32.2735%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (239 samples, 0.11%)</title><rect x="32.0462%" y="949" width="0.1106%" height="15" fill="rgb(231,126,1)" fg:x="69247" fg:w="239"/><text x="32.2962%" y="959.50"></text></g><g><title>core::hash::Hasher::write_isize (239 samples, 0.11%)</title><rect x="32.0462%" y="933" width="0.1106%" height="15" fill="rgb(243,166,3)" fg:x="69247" fg:w="239"/><text x="32.2962%" y="943.50"></text></g><g><title>core::hash::Hasher::write_usize (239 samples, 0.11%)</title><rect x="32.0462%" y="917" width="0.1106%" height="15" fill="rgb(223,22,34)" fg:x="69247" fg:w="239"/><text x="32.2962%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (202 samples, 0.09%)</title><rect x="32.0633%" y="901" width="0.0935%" height="15" fill="rgb(251,52,51)" fg:x="69284" fg:w="202"/><text x="32.3133%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (38 samples, 0.02%)</title><rect x="32.1748%" y="901" width="0.0176%" height="15" fill="rgb(221,165,28)" fg:x="69525" fg:w="38"/><text x="32.4248%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (102 samples, 0.05%)</title><rect x="32.1568%" y="949" width="0.0472%" height="15" fill="rgb(218,121,47)" fg:x="69486" fg:w="102"/><text x="32.4068%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (102 samples, 0.05%)</title><rect x="32.1568%" y="933" width="0.0472%" height="15" fill="rgb(209,120,9)" fg:x="69486" fg:w="102"/><text x="32.4068%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (76 samples, 0.04%)</title><rect x="32.1688%" y="917" width="0.0352%" height="15" fill="rgb(236,68,12)" fg:x="69512" fg:w="76"/><text x="32.4188%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25 samples, 0.01%)</title><rect x="32.1924%" y="901" width="0.0116%" height="15" fill="rgb(225,194,26)" fg:x="69563" fg:w="25"/><text x="32.4424%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (488 samples, 0.23%)</title><rect x="31.9786%" y="1013" width="0.2258%" height="15" fill="rgb(231,84,39)" fg:x="69101" fg:w="488"/><text x="32.2286%" y="1023.50"></text></g><g><title>core::hash::BuildHasher::hash_one (488 samples, 0.23%)</title><rect x="31.9786%" y="997" width="0.2258%" height="15" fill="rgb(210,11,45)" fg:x="69101" fg:w="488"/><text x="32.2286%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (392 samples, 0.18%)</title><rect x="32.0230%" y="981" width="0.1814%" height="15" fill="rgb(224,54,52)" fg:x="69197" fg:w="392"/><text x="32.2730%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (103 samples, 0.05%)</title><rect x="32.1568%" y="965" width="0.0477%" height="15" fill="rgb(238,102,14)" fg:x="69486" fg:w="103"/><text x="32.4068%" y="975.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (41 samples, 0.02%)</title><rect x="32.2179%" y="949" width="0.0190%" height="15" fill="rgb(243,160,52)" fg:x="69618" fg:w="41"/><text x="32.4679%" y="959.50"></text></g><g><title>&lt;floresta_wire::p2p_wire::node::InflightRequests as core::cmp::PartialEq&gt;::eq (41 samples, 0.02%)</title><rect x="32.2179%" y="933" width="0.0190%" height="15" fill="rgb(216,114,19)" fg:x="69618" fg:w="41"/><text x="32.4679%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (44 samples, 0.02%)</title><rect x="32.2174%" y="965" width="0.0204%" height="15" fill="rgb(244,166,37)" fg:x="69617" fg:w="44"/><text x="32.4674%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (576 samples, 0.27%)</title><rect x="31.9777%" y="1061" width="0.2666%" height="15" fill="rgb(246,29,44)" fg:x="69099" fg:w="576"/><text x="32.2277%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (576 samples, 0.27%)</title><rect x="31.9777%" y="1045" width="0.2666%" height="15" fill="rgb(215,56,53)" fg:x="69099" fg:w="576"/><text x="32.2277%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (576 samples, 0.27%)</title><rect x="31.9777%" y="1029" width="0.2666%" height="15" fill="rgb(217,60,2)" fg:x="69099" fg:w="576"/><text x="32.2277%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (86 samples, 0.04%)</title><rect x="32.2045%" y="1013" width="0.0398%" height="15" fill="rgb(207,26,24)" fg:x="69589" fg:w="86"/><text x="32.4545%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (86 samples, 0.04%)</title><rect x="32.2045%" y="997" width="0.0398%" height="15" fill="rgb(252,210,15)" fg:x="69589" fg:w="86"/><text x="32.4545%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (85 samples, 0.04%)</title><rect x="32.2049%" y="981" width="0.0393%" height="15" fill="rgb(253,209,26)" fg:x="69590" fg:w="85"/><text x="32.4549%" y="991.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (72 samples, 0.03%)</title><rect x="32.2521%" y="1045" width="0.0333%" height="15" fill="rgb(238,170,14)" fg:x="69692" fg:w="72"/><text x="32.5021%" y="1055.50"></text></g><g><title>std::time::Instant::duration_since (72 samples, 0.03%)</title><rect x="32.2521%" y="1029" width="0.0333%" height="15" fill="rgb(216,178,15)" fg:x="69692" fg:w="72"/><text x="32.5021%" y="1039.50"></text></g><g><title>std::time::Instant::checked_duration_since (54 samples, 0.02%)</title><rect x="32.2605%" y="1013" width="0.0250%" height="15" fill="rgb(250,197,2)" fg:x="69710" fg:w="54"/><text x="32.5105%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (54 samples, 0.02%)</title><rect x="32.2605%" y="997" width="0.0250%" height="15" fill="rgb(212,70,42)" fg:x="69710" fg:w="54"/><text x="32.5105%" y="1007.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (54 samples, 0.02%)</title><rect x="32.2605%" y="981" width="0.0250%" height="15" fill="rgb(227,213,9)" fg:x="69710" fg:w="54"/><text x="32.5105%" y="991.50"></text></g><g><title>[[vdso]] (199 samples, 0.09%)</title><rect x="32.3100%" y="965" width="0.0921%" height="15" fill="rgb(245,99,25)" fg:x="69817" fg:w="199"/><text x="32.5600%" y="975.50"></text></g><g><title>clock_gettime (230 samples, 0.11%)</title><rect x="32.2961%" y="997" width="0.1064%" height="15" fill="rgb(250,82,29)" fg:x="69787" fg:w="230"/><text x="32.5461%" y="1007.50"></text></g><g><title>__vdso_clock_gettime (228 samples, 0.11%)</title><rect x="32.2970%" y="981" width="0.1055%" height="15" fill="rgb(241,226,54)" fg:x="69789" fg:w="228"/><text x="32.5470%" y="991.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::check_for_timeout::{{closure}} (1,120 samples, 0.52%)</title><rect x="31.8847%" y="1077" width="0.5183%" height="15" fill="rgb(221,99,41)" fg:x="68898" fg:w="1120"/><text x="32.1347%" y="1087.50"></text></g><g><title>std::time::Instant::elapsed (341 samples, 0.16%)</title><rect x="32.2452%" y="1061" width="0.1578%" height="15" fill="rgb(213,90,21)" fg:x="69677" fg:w="341"/><text x="32.4952%" y="1071.50"></text></g><g><title>std::time::Instant::now (253 samples, 0.12%)</title><rect x="32.2859%" y="1045" width="0.1171%" height="15" fill="rgb(205,208,24)" fg:x="69765" fg:w="253"/><text x="32.5359%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (253 samples, 0.12%)</title><rect x="32.2859%" y="1029" width="0.1171%" height="15" fill="rgb(246,31,12)" fg:x="69765" fg:w="253"/><text x="32.5359%" y="1039.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (253 samples, 0.12%)</title><rect x="32.2859%" y="1013" width="0.1171%" height="15" fill="rgb(213,154,6)" fg:x="69765" fg:w="253"/><text x="32.5359%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.03%)</title><rect x="32.4821%" y="533" width="0.0287%" height="15" fill="rgb(222,163,29)" fg:x="70189" fg:w="62"/><text x="32.7321%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (62 samples, 0.03%)</title><rect x="32.4821%" y="517" width="0.0287%" height="15" fill="rgb(227,201,8)" fg:x="70189" fg:w="62"/><text x="32.7321%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (62 samples, 0.03%)</title><rect x="32.4821%" y="501" width="0.0287%" height="15" fill="rgb(233,9,32)" fg:x="70189" fg:w="62"/><text x="32.7321%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (62 samples, 0.03%)</title><rect x="32.4821%" y="485" width="0.0287%" height="15" fill="rgb(217,54,24)" fg:x="70189" fg:w="62"/><text x="32.7321%" y="495.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="32.4877%" y="469" width="0.0231%" height="15" fill="rgb(235,192,0)" fg:x="70201" fg:w="50"/><text x="32.7377%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (64 samples, 0.03%)</title><rect x="32.4821%" y="581" width="0.0296%" height="15" fill="rgb(235,45,9)" fg:x="70189" fg:w="64"/><text x="32.7321%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (64 samples, 0.03%)</title><rect x="32.4821%" y="565" width="0.0296%" height="15" fill="rgb(246,42,40)" fg:x="70189" fg:w="64"/><text x="32.7321%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (64 samples, 0.03%)</title><rect x="32.4821%" y="549" width="0.0296%" height="15" fill="rgb(248,111,24)" fg:x="70189" fg:w="64"/><text x="32.7321%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (88 samples, 0.04%)</title><rect x="32.4715%" y="725" width="0.0407%" height="15" fill="rgb(249,65,22)" fg:x="70166" fg:w="88"/><text x="32.7215%" y="735.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.04%)</title><rect x="32.4715%" y="709" width="0.0407%" height="15" fill="rgb(238,111,51)" fg:x="70166" fg:w="88"/><text x="32.7215%" y="719.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (88 samples, 0.04%)</title><rect x="32.4715%" y="693" width="0.0407%" height="15" fill="rgb(250,118,22)" fg:x="70166" fg:w="88"/><text x="32.7215%" y="703.50"></text></g><g><title>core::mem::drop (88 samples, 0.04%)</title><rect x="32.4715%" y="677" width="0.0407%" height="15" fill="rgb(234,84,26)" fg:x="70166" fg:w="88"/><text x="32.7215%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (88 samples, 0.04%)</title><rect x="32.4715%" y="661" width="0.0407%" height="15" fill="rgb(243,172,12)" fg:x="70166" fg:w="88"/><text x="32.7215%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (88 samples, 0.04%)</title><rect x="32.4715%" y="645" width="0.0407%" height="15" fill="rgb(236,150,49)" fg:x="70166" fg:w="88"/><text x="32.7215%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (75 samples, 0.03%)</title><rect x="32.4775%" y="629" width="0.0347%" height="15" fill="rgb(225,197,26)" fg:x="70179" fg:w="75"/><text x="32.7275%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (71 samples, 0.03%)</title><rect x="32.4793%" y="613" width="0.0329%" height="15" fill="rgb(214,17,42)" fg:x="70183" fg:w="71"/><text x="32.7293%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (70 samples, 0.03%)</title><rect x="32.4798%" y="597" width="0.0324%" height="15" fill="rgb(224,165,40)" fg:x="70184" fg:w="70"/><text x="32.7298%" y="607.50"></text></g><g><title>core::mem::drop (98 samples, 0.05%)</title><rect x="32.4692%" y="853" width="0.0454%" height="15" fill="rgb(246,100,4)" fg:x="70161" fg:w="98"/><text x="32.7192%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (98 samples, 0.05%)</title><rect x="32.4692%" y="837" width="0.0454%" height="15" fill="rgb(222,103,0)" fg:x="70161" fg:w="98"/><text x="32.7192%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (98 samples, 0.05%)</title><rect x="32.4692%" y="821" width="0.0454%" height="15" fill="rgb(227,189,26)" fg:x="70161" fg:w="98"/><text x="32.7192%" y="831.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (98 samples, 0.05%)</title><rect x="32.4692%" y="805" width="0.0454%" height="15" fill="rgb(214,202,17)" fg:x="70161" fg:w="98"/><text x="32.7192%" y="815.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (98 samples, 0.05%)</title><rect x="32.4692%" y="789" width="0.0454%" height="15" fill="rgb(229,111,3)" fg:x="70161" fg:w="98"/><text x="32.7192%" y="799.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (93 samples, 0.04%)</title><rect x="32.4715%" y="773" width="0.0430%" height="15" fill="rgb(229,172,15)" fg:x="70166" fg:w="93"/><text x="32.7215%" y="783.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (93 samples, 0.04%)</title><rect x="32.4715%" y="757" width="0.0430%" height="15" fill="rgb(230,224,35)" fg:x="70166" fg:w="93"/><text x="32.7215%" y="767.50"></text></g><g><title>core::mem::drop (93 samples, 0.04%)</title><rect x="32.4715%" y="741" width="0.0430%" height="15" fill="rgb(251,141,6)" fg:x="70166" fg:w="93"/><text x="32.7215%" y="751.50"></text></g><g><title>sled::pin (108 samples, 0.05%)</title><rect x="32.4669%" y="997" width="0.0500%" height="15" fill="rgb(225,208,6)" fg:x="70156" fg:w="108"/><text x="32.7169%" y="1007.50"></text></g><g><title>crossbeam_epoch::default::pin (108 samples, 0.05%)</title><rect x="32.4669%" y="981" width="0.0500%" height="15" fill="rgb(246,181,16)" fg:x="70156" fg:w="108"/><text x="32.7169%" y="991.50"></text></g><g><title>crossbeam_epoch::default::with_handle (108 samples, 0.05%)</title><rect x="32.4669%" y="965" width="0.0500%" height="15" fill="rgb(227,129,36)" fg:x="70156" fg:w="108"/><text x="32.7169%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (108 samples, 0.05%)</title><rect x="32.4669%" y="949" width="0.0500%" height="15" fill="rgb(248,117,24)" fg:x="70156" fg:w="108"/><text x="32.7169%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (108 samples, 0.05%)</title><rect x="32.4669%" y="933" width="0.0500%" height="15" fill="rgb(214,185,35)" fg:x="70156" fg:w="108"/><text x="32.7169%" y="943.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (108 samples, 0.05%)</title><rect x="32.4669%" y="917" width="0.0500%" height="15" fill="rgb(236,150,34)" fg:x="70156" fg:w="108"/><text x="32.7169%" y="927.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (108 samples, 0.05%)</title><rect x="32.4669%" y="901" width="0.0500%" height="15" fill="rgb(243,228,27)" fg:x="70156" fg:w="108"/><text x="32.7169%" y="911.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (108 samples, 0.05%)</title><rect x="32.4669%" y="885" width="0.0500%" height="15" fill="rgb(245,77,44)" fg:x="70156" fg:w="108"/><text x="32.7169%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (104 samples, 0.05%)</title><rect x="32.4687%" y="869" width="0.0481%" height="15" fill="rgb(235,214,42)" fg:x="70160" fg:w="104"/><text x="32.7187%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (38 samples, 0.02%)</title><rect x="32.5201%" y="981" width="0.0176%" height="15" fill="rgb(221,74,3)" fg:x="70271" fg:w="38"/><text x="32.7701%" y="991.50"></text></g><g><title>sled::tree::Tree::get_inner::{{closure}} (38 samples, 0.02%)</title><rect x="32.5201%" y="965" width="0.0176%" height="15" fill="rgb(206,121,29)" fg:x="70271" fg:w="38"/><text x="32.7701%" y="975.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="32.5201%" y="949" width="0.0176%" height="15" fill="rgb(249,131,53)" fg:x="70271" fg:w="38"/><text x="32.7701%" y="959.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="32.5201%" y="933" width="0.0176%" height="15" fill="rgb(236,170,29)" fg:x="70271" fg:w="38"/><text x="32.7701%" y="943.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.02%)</title><rect x="32.5219%" y="917" width="0.0157%" height="15" fill="rgb(247,96,15)" fg:x="70275" fg:w="34"/><text x="32.7719%" y="927.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (22 samples, 0.01%)</title><rect x="32.5377%" y="981" width="0.0102%" height="15" fill="rgb(211,210,7)" fg:x="70309" fg:w="22"/><text x="32.7877%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (22 samples, 0.01%)</title><rect x="32.5377%" y="965" width="0.0102%" height="15" fill="rgb(240,88,50)" fg:x="70309" fg:w="22"/><text x="32.7877%" y="975.50"></text></g><g><title>sled::binary_search::binary_search_lub (58 samples, 0.03%)</title><rect x="32.5687%" y="949" width="0.0268%" height="15" fill="rgb(209,229,26)" fg:x="70376" fg:w="58"/><text x="32.8187%" y="959.50"></text></g><g><title>sled::binary_search::binary_search (56 samples, 0.03%)</title><rect x="32.5696%" y="933" width="0.0259%" height="15" fill="rgb(210,68,23)" fg:x="70378" fg:w="56"/><text x="32.8196%" y="943.50"></text></g><g><title>sled::fastcmp::fastcmp (23 samples, 0.01%)</title><rect x="32.5849%" y="917" width="0.0106%" height="15" fill="rgb(229,180,13)" fg:x="70411" fg:w="23"/><text x="32.8349%" y="927.50"></text></g><g><title>sled::node::Node::index_next_node (69 samples, 0.03%)</title><rect x="32.5645%" y="965" width="0.0319%" height="15" fill="rgb(236,53,44)" fg:x="70367" fg:w="69"/><text x="32.8145%" y="975.50"></text></g><g><title>sled::lru::Lru::accessed (32 samples, 0.01%)</title><rect x="32.6085%" y="933" width="0.0148%" height="15" fill="rgb(244,214,29)" fg:x="70462" fg:w="32"/><text x="32.8585%" y="943.50"></text></g><g><title>sled::pagecache::Page::is_free (31 samples, 0.01%)</title><rect x="32.6233%" y="933" width="0.0143%" height="15" fill="rgb(220,75,29)" fg:x="70494" fg:w="31"/><text x="32.8733%" y="943.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (423 samples, 0.20%)</title><rect x="32.4488%" y="1029" width="0.1958%" height="15" fill="rgb(214,183,37)" fg:x="70117" fg:w="423"/><text x="32.6988%" y="1039.50"></text></g><g><title>sled::tree::Tree::get (397 samples, 0.18%)</title><rect x="32.4608%" y="1013" width="0.1837%" height="15" fill="rgb(239,117,29)" fg:x="70143" fg:w="397"/><text x="32.7108%" y="1023.50"></text></g><g><title>sled::tree::Tree::get_inner (276 samples, 0.13%)</title><rect x="32.5168%" y="997" width="0.1277%" height="15" fill="rgb(237,171,35)" fg:x="70264" fg:w="276"/><text x="32.7668%" y="1007.50"></text></g><g><title>sled::tree::Tree::view_for_key (209 samples, 0.10%)</title><rect x="32.5478%" y="981" width="0.0967%" height="15" fill="rgb(229,178,53)" fg:x="70331" fg:w="209"/><text x="32.7978%" y="991.50"></text></g><g><title>sled::tree::Tree::view_for_pid (104 samples, 0.05%)</title><rect x="32.5964%" y="965" width="0.0481%" height="15" fill="rgb(210,102,19)" fg:x="70436" fg:w="104"/><text x="32.8464%" y="975.50"></text></g><g><title>sled::pagecache::PageCache::get (89 samples, 0.04%)</title><rect x="32.6034%" y="949" width="0.0412%" height="15" fill="rgb(235,127,22)" fg:x="70451" fg:w="89"/><text x="32.8534%" y="959.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_block_hash (449 samples, 0.21%)</title><rect x="32.4423%" y="1045" width="0.2078%" height="15" fill="rgb(244,31,31)" fg:x="70103" fg:w="449"/><text x="32.6923%" y="1055.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_block_hash (457 samples, 0.21%)</title><rect x="32.4395%" y="1061" width="0.2115%" height="15" fill="rgb(231,43,21)" fg:x="70097" fg:w="457"/><text x="32.6895%" y="1071.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (36 samples, 0.02%)</title><rect x="32.6682%" y="949" width="0.0167%" height="15" fill="rgb(217,131,35)" fg:x="70591" fg:w="36"/><text x="32.9182%" y="959.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (50 samples, 0.02%)</title><rect x="32.6626%" y="1013" width="0.0231%" height="15" fill="rgb(221,149,4)" fg:x="70579" fg:w="50"/><text x="32.9126%" y="1023.50"></text></g><g><title>bitcoin::consensus::encode::deserialize_partial (45 samples, 0.02%)</title><rect x="32.6649%" y="997" width="0.0208%" height="15" fill="rgb(232,170,28)" fg:x="70584" fg:w="45"/><text x="32.9149%" y="1007.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (44 samples, 0.02%)</title><rect x="32.6654%" y="981" width="0.0204%" height="15" fill="rgb(238,56,10)" fg:x="70585" fg:w="44"/><text x="32.9154%" y="991.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (44 samples, 0.02%)</title><rect x="32.6654%" y="965" width="0.0204%" height="15" fill="rgb(235,196,14)" fg:x="70585" fg:w="44"/><text x="32.9154%" y="975.50"></text></g><g><title>bitcoin::consensus::encode::serialize (22 samples, 0.01%)</title><rect x="32.6857%" y="1013" width="0.0102%" height="15" fill="rgb(216,45,48)" fg:x="70629" fg:w="22"/><text x="32.9357%" y="1023.50"></text></g><g><title>&lt;&amp;T as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (22 samples, 0.01%)</title><rect x="32.6857%" y="997" width="0.0102%" height="15" fill="rgb(238,213,17)" fg:x="70629" fg:w="22"/><text x="32.9357%" y="1007.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (22 samples, 0.01%)</title><rect x="32.6857%" y="981" width="0.0102%" height="15" fill="rgb(212,13,2)" fg:x="70629" fg:w="22"/><text x="32.9357%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (22 samples, 0.01%)</title><rect x="32.6857%" y="965" width="0.0102%" height="15" fill="rgb(240,114,20)" fg:x="70629" fg:w="22"/><text x="32.9357%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as kv::value::Value&gt;::from_raw_value (26 samples, 0.01%)</title><rect x="32.7033%" y="997" width="0.0120%" height="15" fill="rgb(228,41,40)" fg:x="70667" fg:w="26"/><text x="32.9533%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.02%)</title><rect x="32.7575%" y="517" width="0.0250%" height="15" fill="rgb(244,132,35)" fg:x="70784" fg:w="54"/><text x="33.0075%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (54 samples, 0.02%)</title><rect x="32.7575%" y="501" width="0.0250%" height="15" fill="rgb(253,189,4)" fg:x="70784" fg:w="54"/><text x="33.0075%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (53 samples, 0.02%)</title><rect x="32.7579%" y="485" width="0.0245%" height="15" fill="rgb(224,37,19)" fg:x="70785" fg:w="53"/><text x="33.0079%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (53 samples, 0.02%)</title><rect x="32.7579%" y="469" width="0.0245%" height="15" fill="rgb(235,223,18)" fg:x="70785" fg:w="53"/><text x="33.0079%" y="479.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.02%)</title><rect x="32.7621%" y="453" width="0.0204%" height="15" fill="rgb(235,163,25)" fg:x="70794" fg:w="44"/><text x="33.0121%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (55 samples, 0.03%)</title><rect x="32.7575%" y="565" width="0.0255%" height="15" fill="rgb(217,145,28)" fg:x="70784" fg:w="55"/><text x="33.0075%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (55 samples, 0.03%)</title><rect x="32.7575%" y="549" width="0.0255%" height="15" fill="rgb(223,223,32)" fg:x="70784" fg:w="55"/><text x="33.0075%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (55 samples, 0.03%)</title><rect x="32.7575%" y="533" width="0.0255%" height="15" fill="rgb(227,189,39)" fg:x="70784" fg:w="55"/><text x="33.0075%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (73 samples, 0.03%)</title><rect x="32.7496%" y="709" width="0.0338%" height="15" fill="rgb(248,10,22)" fg:x="70767" fg:w="73"/><text x="32.9996%" y="719.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.03%)</title><rect x="32.7496%" y="693" width="0.0338%" height="15" fill="rgb(248,46,39)" fg:x="70767" fg:w="73"/><text x="32.9996%" y="703.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (73 samples, 0.03%)</title><rect x="32.7496%" y="677" width="0.0338%" height="15" fill="rgb(248,113,48)" fg:x="70767" fg:w="73"/><text x="32.9996%" y="687.50"></text></g><g><title>core::mem::drop (73 samples, 0.03%)</title><rect x="32.7496%" y="661" width="0.0338%" height="15" fill="rgb(245,16,25)" fg:x="70767" fg:w="73"/><text x="32.9996%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (73 samples, 0.03%)</title><rect x="32.7496%" y="645" width="0.0338%" height="15" fill="rgb(249,152,16)" fg:x="70767" fg:w="73"/><text x="32.9996%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (73 samples, 0.03%)</title><rect x="32.7496%" y="629" width="0.0338%" height="15" fill="rgb(250,16,1)" fg:x="70767" fg:w="73"/><text x="32.9996%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (62 samples, 0.03%)</title><rect x="32.7547%" y="613" width="0.0287%" height="15" fill="rgb(249,138,3)" fg:x="70778" fg:w="62"/><text x="33.0047%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (59 samples, 0.03%)</title><rect x="32.7561%" y="597" width="0.0273%" height="15" fill="rgb(227,71,41)" fg:x="70781" fg:w="59"/><text x="33.0061%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (59 samples, 0.03%)</title><rect x="32.7561%" y="581" width="0.0273%" height="15" fill="rgb(209,184,23)" fg:x="70781" fg:w="59"/><text x="33.0061%" y="591.50"></text></g><g><title>core::mem::drop (83 samples, 0.04%)</title><rect x="32.7468%" y="837" width="0.0384%" height="15" fill="rgb(223,215,31)" fg:x="70761" fg:w="83"/><text x="32.9968%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (83 samples, 0.04%)</title><rect x="32.7468%" y="821" width="0.0384%" height="15" fill="rgb(210,146,28)" fg:x="70761" fg:w="83"/><text x="32.9968%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (83 samples, 0.04%)</title><rect x="32.7468%" y="805" width="0.0384%" height="15" fill="rgb(209,183,41)" fg:x="70761" fg:w="83"/><text x="32.9968%" y="815.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (83 samples, 0.04%)</title><rect x="32.7468%" y="789" width="0.0384%" height="15" fill="rgb(209,224,45)" fg:x="70761" fg:w="83"/><text x="32.9968%" y="799.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (83 samples, 0.04%)</title><rect x="32.7468%" y="773" width="0.0384%" height="15" fill="rgb(224,209,51)" fg:x="70761" fg:w="83"/><text x="32.9968%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (78 samples, 0.04%)</title><rect x="32.7491%" y="757" width="0.0361%" height="15" fill="rgb(223,17,39)" fg:x="70766" fg:w="78"/><text x="32.9991%" y="767.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (77 samples, 0.04%)</title><rect x="32.7496%" y="741" width="0.0356%" height="15" fill="rgb(234,204,37)" fg:x="70767" fg:w="77"/><text x="32.9996%" y="751.50"></text></g><g><title>core::mem::drop (77 samples, 0.04%)</title><rect x="32.7496%" y="725" width="0.0356%" height="15" fill="rgb(236,120,5)" fg:x="70767" fg:w="77"/><text x="32.9996%" y="735.50"></text></g><g><title>sled::pin (105 samples, 0.05%)</title><rect x="32.7371%" y="981" width="0.0486%" height="15" fill="rgb(248,97,27)" fg:x="70740" fg:w="105"/><text x="32.9871%" y="991.50"></text></g><g><title>crossbeam_epoch::default::pin (102 samples, 0.05%)</title><rect x="32.7385%" y="965" width="0.0472%" height="15" fill="rgb(240,66,17)" fg:x="70743" fg:w="102"/><text x="32.9885%" y="975.50"></text></g><g><title>crossbeam_epoch::default::with_handle (102 samples, 0.05%)</title><rect x="32.7385%" y="949" width="0.0472%" height="15" fill="rgb(210,79,3)" fg:x="70743" fg:w="102"/><text x="32.9885%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (102 samples, 0.05%)</title><rect x="32.7385%" y="933" width="0.0472%" height="15" fill="rgb(214,176,27)" fg:x="70743" fg:w="102"/><text x="32.9885%" y="943.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (101 samples, 0.05%)</title><rect x="32.7390%" y="917" width="0.0467%" height="15" fill="rgb(235,185,3)" fg:x="70744" fg:w="101"/><text x="32.9890%" y="927.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (101 samples, 0.05%)</title><rect x="32.7390%" y="901" width="0.0467%" height="15" fill="rgb(227,24,12)" fg:x="70744" fg:w="101"/><text x="32.9890%" y="911.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (101 samples, 0.05%)</title><rect x="32.7390%" y="885" width="0.0467%" height="15" fill="rgb(252,169,48)" fg:x="70744" fg:w="101"/><text x="32.9890%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (101 samples, 0.05%)</title><rect x="32.7390%" y="869" width="0.0467%" height="15" fill="rgb(212,65,1)" fg:x="70744" fg:w="101"/><text x="32.9890%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (85 samples, 0.04%)</title><rect x="32.7464%" y="853" width="0.0393%" height="15" fill="rgb(242,39,24)" fg:x="70760" fg:w="85"/><text x="32.9964%" y="863.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (44 samples, 0.02%)</title><rect x="32.8001%" y="965" width="0.0204%" height="15" fill="rgb(249,32,23)" fg:x="70876" fg:w="44"/><text x="33.0501%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (41 samples, 0.02%)</title><rect x="32.8014%" y="949" width="0.0190%" height="15" fill="rgb(251,195,23)" fg:x="70879" fg:w="41"/><text x="33.0514%" y="959.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key::{{closure}} (39 samples, 0.02%)</title><rect x="32.8024%" y="933" width="0.0180%" height="15" fill="rgb(236,174,8)" fg:x="70881" fg:w="39"/><text x="33.0524%" y="943.50"></text></g><g><title>sled::fastcmp::fastcmp (23 samples, 0.01%)</title><rect x="32.8098%" y="917" width="0.0106%" height="15" fill="rgb(220,197,8)" fg:x="70897" fg:w="23"/><text x="33.0598%" y="927.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (24 samples, 0.01%)</title><rect x="32.8454%" y="901" width="0.0111%" height="15" fill="rgb(240,108,37)" fg:x="70974" fg:w="24"/><text x="33.0954%" y="911.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="32.8672%" y="885" width="0.0111%" height="15" fill="rgb(232,176,24)" fg:x="71021" fg:w="24"/><text x="33.1172%" y="895.50"></text></g><g><title>sled::binary_search::binary_search_lub (83 samples, 0.04%)</title><rect x="32.8403%" y="933" width="0.0384%" height="15" fill="rgb(243,35,29)" fg:x="70963" fg:w="83"/><text x="33.0903%" y="943.50"></text></g><g><title>sled::binary_search::binary_search (77 samples, 0.04%)</title><rect x="32.8431%" y="917" width="0.0356%" height="15" fill="rgb(210,37,18)" fg:x="70969" fg:w="77"/><text x="33.0931%" y="927.50"></text></g><g><title>sled::fastcmp::fastcmp (30 samples, 0.01%)</title><rect x="32.8648%" y="901" width="0.0139%" height="15" fill="rgb(224,184,40)" fg:x="71016" fg:w="30"/><text x="33.1148%" y="911.50"></text></g><g><title>sled::node::Node::index_next_node (99 samples, 0.05%)</title><rect x="32.8362%" y="949" width="0.0458%" height="15" fill="rgb(236,39,29)" fg:x="70954" fg:w="99"/><text x="33.0862%" y="959.50"></text></g><g><title>sled::lru::Lru::accessed (35 samples, 0.02%)</title><rect x="32.8940%" y="917" width="0.0162%" height="15" fill="rgb(232,48,39)" fg:x="71079" fg:w="35"/><text x="33.1440%" y="927.50"></text></g><g><title>sled::pagecache::Page::is_free (37 samples, 0.02%)</title><rect x="32.9102%" y="917" width="0.0171%" height="15" fill="rgb(236,34,42)" fg:x="71114" fg:w="37"/><text x="33.1602%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (25 samples, 0.01%)</title><rect x="32.9158%" y="901" width="0.0116%" height="15" fill="rgb(243,106,37)" fg:x="71126" fg:w="25"/><text x="33.1658%" y="911.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (525 samples, 0.24%)</title><rect x="32.7015%" y="1013" width="0.2430%" height="15" fill="rgb(218,96,6)" fg:x="70663" fg:w="525"/><text x="32.9515%" y="1023.50"></text></g><g><title>sled::tree::Tree::get (476 samples, 0.22%)</title><rect x="32.7242%" y="997" width="0.2203%" height="15" fill="rgb(235,130,12)" fg:x="70712" fg:w="476"/><text x="32.9742%" y="1007.50"></text></g><g><title>sled::tree::Tree::get_inner (343 samples, 0.16%)</title><rect x="32.7857%" y="981" width="0.1587%" height="15" fill="rgb(231,95,0)" fg:x="70845" fg:w="343"/><text x="33.0357%" y="991.50"></text></g><g><title>sled::tree::Tree::view_for_key (268 samples, 0.12%)</title><rect x="32.8204%" y="965" width="0.1240%" height="15" fill="rgb(228,12,23)" fg:x="70920" fg:w="268"/><text x="33.0704%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_pid (135 samples, 0.06%)</title><rect x="32.8820%" y="949" width="0.0625%" height="15" fill="rgb(216,12,1)" fg:x="71053" fg:w="135"/><text x="33.1320%" y="959.50"></text></g><g><title>sled::pagecache::PageCache::get (126 samples, 0.06%)</title><rect x="32.8861%" y="933" width="0.0583%" height="15" fill="rgb(219,59,3)" fg:x="71062" fg:w="126"/><text x="33.1361%" y="943.50"></text></g><g><title>sled::pagecache::pagetable::PageTable::get (30 samples, 0.01%)</title><rect x="32.9306%" y="917" width="0.0139%" height="15" fill="rgb(215,208,46)" fg:x="71158" fg:w="30"/><text x="33.1806%" y="927.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_header (635 samples, 0.29%)</title><rect x="32.6608%" y="1029" width="0.2939%" height="15" fill="rgb(254,224,29)" fg:x="70575" fg:w="635"/><text x="32.9108%" y="1039.50"></text></g><g><title>kv::store::Store::bucket (22 samples, 0.01%)</title><rect x="32.9444%" y="1013" width="0.0102%" height="15" fill="rgb(232,14,29)" fg:x="71188" fg:w="22"/><text x="33.1944%" y="1023.50"></text></g><g><title>sled::db::Db::open_tree (22 samples, 0.01%)</title><rect x="32.9444%" y="997" width="0.0102%" height="15" fill="rgb(208,45,52)" fg:x="71188" fg:w="22"/><text x="33.1944%" y="1007.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (645 samples, 0.30%)</title><rect x="32.6566%" y="1045" width="0.2985%" height="15" fill="rgb(234,191,28)" fg:x="70566" fg:w="645"/><text x="32.9066%" y="1055.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_validation_index (662 samples, 0.31%)</title><rect x="32.6510%" y="1061" width="0.3064%" height="15" fill="rgb(244,67,43)" fg:x="70554" fg:w="662"/><text x="32.9010%" y="1071.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (44 samples, 0.02%)</title><rect x="33.0102%" y="885" width="0.0204%" height="15" fill="rgb(236,189,24)" fg:x="71330" fg:w="44"/><text x="33.2602%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (159 samples, 0.07%)</title><rect x="32.9810%" y="901" width="0.0736%" height="15" fill="rgb(239,214,33)" fg:x="71267" fg:w="159"/><text x="33.2310%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (52 samples, 0.02%)</title><rect x="33.0305%" y="885" width="0.0241%" height="15" fill="rgb(226,176,41)" fg:x="71374" fg:w="52"/><text x="33.2805%" y="895.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (170 samples, 0.08%)</title><rect x="32.9787%" y="981" width="0.0787%" height="15" fill="rgb(248,47,8)" fg:x="71262" fg:w="170"/><text x="33.2287%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (170 samples, 0.08%)</title><rect x="32.9787%" y="965" width="0.0787%" height="15" fill="rgb(218,81,44)" fg:x="71262" fg:w="170"/><text x="33.2287%" y="975.50"></text></g><g><title>std::io::Write::write_all (170 samples, 0.08%)</title><rect x="32.9787%" y="949" width="0.0787%" height="15" fill="rgb(213,98,6)" fg:x="71262" fg:w="170"/><text x="33.2287%" y="959.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (170 samples, 0.08%)</title><rect x="32.9787%" y="933" width="0.0787%" height="15" fill="rgb(222,85,22)" fg:x="71262" fg:w="170"/><text x="33.2287%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (168 samples, 0.08%)</title><rect x="32.9796%" y="917" width="0.0777%" height="15" fill="rgb(239,46,39)" fg:x="71264" fg:w="168"/><text x="33.2296%" y="927.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (172 samples, 0.08%)</title><rect x="32.9787%" y="1013" width="0.0796%" height="15" fill="rgb(237,12,29)" fg:x="71262" fg:w="172"/><text x="33.2287%" y="1023.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (172 samples, 0.08%)</title><rect x="32.9787%" y="997" width="0.0796%" height="15" fill="rgb(214,77,8)" fg:x="71262" fg:w="172"/><text x="33.2287%" y="1007.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (24 samples, 0.01%)</title><rect x="33.0583%" y="1013" width="0.0111%" height="15" fill="rgb(217,168,37)" fg:x="71434" fg:w="24"/><text x="33.3083%" y="1023.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (24 samples, 0.01%)</title><rect x="33.0583%" y="997" width="0.0111%" height="15" fill="rgb(221,217,23)" fg:x="71434" fg:w="24"/><text x="33.3083%" y="1007.50"></text></g><g><title>std::io::Write::write_all (23 samples, 0.01%)</title><rect x="33.0588%" y="981" width="0.0106%" height="15" fill="rgb(243,229,36)" fg:x="71435" fg:w="23"/><text x="33.3088%" y="991.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (235 samples, 0.11%)</title><rect x="32.9713%" y="1029" width="0.1088%" height="15" fill="rgb(251,163,40)" fg:x="71246" fg:w="235"/><text x="33.2213%" y="1039.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (23 samples, 0.01%)</title><rect x="33.0694%" y="1013" width="0.0106%" height="15" fill="rgb(237,222,12)" fg:x="71458" fg:w="23"/><text x="33.3194%" y="1023.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (23 samples, 0.01%)</title><rect x="33.0694%" y="997" width="0.0106%" height="15" fill="rgb(248,132,6)" fg:x="71458" fg:w="23"/><text x="33.3194%" y="1007.50"></text></g><g><title>std::io::Write::write_all (23 samples, 0.01%)</title><rect x="33.0694%" y="981" width="0.0106%" height="15" fill="rgb(227,167,50)" fg:x="71458" fg:w="23"/><text x="33.3194%" y="991.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (43 samples, 0.02%)</title><rect x="33.1203%" y="949" width="0.0199%" height="15" fill="rgb(242,84,37)" fg:x="71568" fg:w="43"/><text x="33.3703%" y="959.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (162 samples, 0.07%)</title><rect x="33.0916%" y="965" width="0.0750%" height="15" fill="rgb(212,4,50)" fg:x="71506" fg:w="162"/><text x="33.3416%" y="975.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (57 samples, 0.03%)</title><rect x="33.1402%" y="949" width="0.0264%" height="15" fill="rgb(230,228,32)" fg:x="71611" fg:w="57"/><text x="33.3902%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (179 samples, 0.08%)</title><rect x="33.0907%" y="981" width="0.0828%" height="15" fill="rgb(248,217,23)" fg:x="71504" fg:w="179"/><text x="33.3407%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (187 samples, 0.09%)</title><rect x="33.0907%" y="997" width="0.0865%" height="15" fill="rgb(238,197,32)" fg:x="71504" fg:w="187"/><text x="33.3407%" y="1007.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (51 samples, 0.02%)</title><rect x="33.2064%" y="933" width="0.0236%" height="15" fill="rgb(236,106,1)" fg:x="71754" fg:w="51"/><text x="33.4564%" y="943.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (149 samples, 0.07%)</title><rect x="33.1800%" y="949" width="0.0690%" height="15" fill="rgb(219,228,13)" fg:x="71697" fg:w="149"/><text x="33.4300%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (41 samples, 0.02%)</title><rect x="33.2300%" y="933" width="0.0190%" height="15" fill="rgb(238,30,35)" fg:x="71805" fg:w="41"/><text x="33.4800%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (157 samples, 0.07%)</title><rect x="33.1772%" y="981" width="0.0727%" height="15" fill="rgb(236,70,23)" fg:x="71691" fg:w="157"/><text x="33.4272%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (154 samples, 0.07%)</title><rect x="33.1786%" y="965" width="0.0713%" height="15" fill="rgb(249,104,48)" fg:x="71694" fg:w="154"/><text x="33.4286%" y="975.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (619 samples, 0.29%)</title><rect x="32.9657%" y="1061" width="0.2865%" height="15" fill="rgb(254,117,50)" fg:x="71234" fg:w="619"/><text x="33.2157%" y="1071.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (613 samples, 0.28%)</title><rect x="32.9685%" y="1045" width="0.2837%" height="15" fill="rgb(223,152,4)" fg:x="71240" fg:w="613"/><text x="33.2185%" y="1055.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (355 samples, 0.16%)</title><rect x="33.0879%" y="1029" width="0.1643%" height="15" fill="rgb(245,6,2)" fg:x="71498" fg:w="355"/><text x="33.3379%" y="1039.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (353 samples, 0.16%)</title><rect x="33.0888%" y="1013" width="0.1634%" height="15" fill="rgb(249,150,24)" fg:x="71500" fg:w="353"/><text x="33.3388%" y="1023.50"></text></g><g><title>bitcoin_hashes::Hash::hash (162 samples, 0.07%)</title><rect x="33.1772%" y="997" width="0.0750%" height="15" fill="rgb(228,185,42)" fg:x="71691" fg:w="162"/><text x="33.4272%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.03%)</title><rect x="33.2915%" y="517" width="0.0264%" height="15" fill="rgb(226,39,33)" fg:x="71938" fg:w="57"/><text x="33.5415%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (57 samples, 0.03%)</title><rect x="33.2915%" y="501" width="0.0264%" height="15" fill="rgb(221,166,19)" fg:x="71938" fg:w="57"/><text x="33.5415%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (56 samples, 0.03%)</title><rect x="33.2920%" y="485" width="0.0259%" height="15" fill="rgb(209,109,2)" fg:x="71939" fg:w="56"/><text x="33.5420%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (56 samples, 0.03%)</title><rect x="33.2920%" y="469" width="0.0259%" height="15" fill="rgb(252,216,26)" fg:x="71939" fg:w="56"/><text x="33.5420%" y="479.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.02%)</title><rect x="33.2980%" y="453" width="0.0199%" height="15" fill="rgb(227,173,36)" fg:x="71952" fg:w="43"/><text x="33.5480%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (58 samples, 0.03%)</title><rect x="33.2915%" y="565" width="0.0268%" height="15" fill="rgb(209,90,7)" fg:x="71938" fg:w="58"/><text x="33.5415%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (58 samples, 0.03%)</title><rect x="33.2915%" y="549" width="0.0268%" height="15" fill="rgb(250,194,11)" fg:x="71938" fg:w="58"/><text x="33.5415%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (58 samples, 0.03%)</title><rect x="33.2915%" y="533" width="0.0268%" height="15" fill="rgb(220,72,50)" fg:x="71938" fg:w="58"/><text x="33.5415%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (84 samples, 0.04%)</title><rect x="33.2800%" y="709" width="0.0389%" height="15" fill="rgb(222,106,48)" fg:x="71913" fg:w="84"/><text x="33.5300%" y="719.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.04%)</title><rect x="33.2800%" y="693" width="0.0389%" height="15" fill="rgb(216,220,45)" fg:x="71913" fg:w="84"/><text x="33.5300%" y="703.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (84 samples, 0.04%)</title><rect x="33.2800%" y="677" width="0.0389%" height="15" fill="rgb(234,112,18)" fg:x="71913" fg:w="84"/><text x="33.5300%" y="687.50"></text></g><g><title>core::mem::drop (84 samples, 0.04%)</title><rect x="33.2800%" y="661" width="0.0389%" height="15" fill="rgb(206,179,9)" fg:x="71913" fg:w="84"/><text x="33.5300%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (84 samples, 0.04%)</title><rect x="33.2800%" y="645" width="0.0389%" height="15" fill="rgb(215,115,40)" fg:x="71913" fg:w="84"/><text x="33.5300%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (84 samples, 0.04%)</title><rect x="33.2800%" y="629" width="0.0389%" height="15" fill="rgb(222,69,34)" fg:x="71913" fg:w="84"/><text x="33.5300%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (74 samples, 0.03%)</title><rect x="33.2846%" y="613" width="0.0342%" height="15" fill="rgb(209,161,10)" fg:x="71923" fg:w="74"/><text x="33.5346%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (70 samples, 0.03%)</title><rect x="33.2864%" y="597" width="0.0324%" height="15" fill="rgb(217,6,38)" fg:x="71927" fg:w="70"/><text x="33.5364%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (70 samples, 0.03%)</title><rect x="33.2864%" y="581" width="0.0324%" height="15" fill="rgb(229,229,48)" fg:x="71927" fg:w="70"/><text x="33.5364%" y="591.50"></text></g><g><title>core::mem::drop (94 samples, 0.04%)</title><rect x="33.2767%" y="837" width="0.0435%" height="15" fill="rgb(225,21,28)" fg:x="71906" fg:w="94"/><text x="33.5267%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (94 samples, 0.04%)</title><rect x="33.2767%" y="821" width="0.0435%" height="15" fill="rgb(206,33,13)" fg:x="71906" fg:w="94"/><text x="33.5267%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (94 samples, 0.04%)</title><rect x="33.2767%" y="805" width="0.0435%" height="15" fill="rgb(242,178,17)" fg:x="71906" fg:w="94"/><text x="33.5267%" y="815.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (94 samples, 0.04%)</title><rect x="33.2767%" y="789" width="0.0435%" height="15" fill="rgb(220,162,5)" fg:x="71906" fg:w="94"/><text x="33.5267%" y="799.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (94 samples, 0.04%)</title><rect x="33.2767%" y="773" width="0.0435%" height="15" fill="rgb(210,33,43)" fg:x="71906" fg:w="94"/><text x="33.5267%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (87 samples, 0.04%)</title><rect x="33.2800%" y="757" width="0.0403%" height="15" fill="rgb(216,116,54)" fg:x="71913" fg:w="87"/><text x="33.5300%" y="767.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (87 samples, 0.04%)</title><rect x="33.2800%" y="741" width="0.0403%" height="15" fill="rgb(249,92,24)" fg:x="71913" fg:w="87"/><text x="33.5300%" y="751.50"></text></g><g><title>core::mem::drop (87 samples, 0.04%)</title><rect x="33.2800%" y="725" width="0.0403%" height="15" fill="rgb(231,189,14)" fg:x="71913" fg:w="87"/><text x="33.5300%" y="735.50"></text></g><g><title>sled::pin (104 samples, 0.05%)</title><rect x="33.2744%" y="981" width="0.0481%" height="15" fill="rgb(230,8,41)" fg:x="71901" fg:w="104"/><text x="33.5244%" y="991.50"></text></g><g><title>crossbeam_epoch::default::pin (103 samples, 0.05%)</title><rect x="33.2749%" y="965" width="0.0477%" height="15" fill="rgb(249,7,27)" fg:x="71902" fg:w="103"/><text x="33.5249%" y="975.50"></text></g><g><title>crossbeam_epoch::default::with_handle (103 samples, 0.05%)</title><rect x="33.2749%" y="949" width="0.0477%" height="15" fill="rgb(232,86,5)" fg:x="71902" fg:w="103"/><text x="33.5249%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (103 samples, 0.05%)</title><rect x="33.2749%" y="933" width="0.0477%" height="15" fill="rgb(224,175,18)" fg:x="71902" fg:w="103"/><text x="33.5249%" y="943.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (103 samples, 0.05%)</title><rect x="33.2749%" y="917" width="0.0477%" height="15" fill="rgb(220,129,12)" fg:x="71902" fg:w="103"/><text x="33.5249%" y="927.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (103 samples, 0.05%)</title><rect x="33.2749%" y="901" width="0.0477%" height="15" fill="rgb(210,19,36)" fg:x="71902" fg:w="103"/><text x="33.5249%" y="911.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (103 samples, 0.05%)</title><rect x="33.2749%" y="885" width="0.0477%" height="15" fill="rgb(219,96,14)" fg:x="71902" fg:w="103"/><text x="33.5249%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (103 samples, 0.05%)</title><rect x="33.2749%" y="869" width="0.0477%" height="15" fill="rgb(249,106,1)" fg:x="71902" fg:w="103"/><text x="33.5249%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (99 samples, 0.05%)</title><rect x="33.2767%" y="853" width="0.0458%" height="15" fill="rgb(249,155,20)" fg:x="71906" fg:w="99"/><text x="33.5267%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.01%)</title><rect x="33.3239%" y="965" width="0.0139%" height="15" fill="rgb(244,168,9)" fg:x="72008" fg:w="30"/><text x="33.5739%" y="975.50"></text></g><g><title>sled::tree::Tree::get_inner::{{closure}} (30 samples, 0.01%)</title><rect x="33.3239%" y="949" width="0.0139%" height="15" fill="rgb(216,23,50)" fg:x="72008" fg:w="30"/><text x="33.5739%" y="959.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (30 samples, 0.01%)</title><rect x="33.3239%" y="933" width="0.0139%" height="15" fill="rgb(224,219,20)" fg:x="72008" fg:w="30"/><text x="33.5739%" y="943.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (30 samples, 0.01%)</title><rect x="33.3239%" y="917" width="0.0139%" height="15" fill="rgb(222,156,15)" fg:x="72008" fg:w="30"/><text x="33.5739%" y="927.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.01%)</title><rect x="33.3239%" y="901" width="0.0139%" height="15" fill="rgb(231,97,17)" fg:x="72008" fg:w="30"/><text x="33.5739%" y="911.50"></text></g><g><title>sled::binary_search::binary_search_lub (32 samples, 0.01%)</title><rect x="33.3522%" y="933" width="0.0148%" height="15" fill="rgb(218,70,48)" fg:x="72069" fg:w="32"/><text x="33.6022%" y="943.50"></text></g><g><title>sled::binary_search::binary_search (31 samples, 0.01%)</title><rect x="33.3526%" y="917" width="0.0143%" height="15" fill="rgb(212,196,52)" fg:x="72070" fg:w="31"/><text x="33.6026%" y="927.50"></text></g><g><title>sled::node::Node::index_next_node (35 samples, 0.02%)</title><rect x="33.3517%" y="949" width="0.0162%" height="15" fill="rgb(243,203,18)" fg:x="72068" fg:w="35"/><text x="33.6017%" y="959.50"></text></g><g><title>sled::lru::Lru::accessed (31 samples, 0.01%)</title><rect x="33.3753%" y="917" width="0.0143%" height="15" fill="rgb(252,125,41)" fg:x="72119" fg:w="31"/><text x="33.6253%" y="927.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (285 samples, 0.13%)</title><rect x="33.2642%" y="1013" width="0.1319%" height="15" fill="rgb(223,180,33)" fg:x="71879" fg:w="285"/><text x="33.5142%" y="1023.50"></text></g><g><title>sled::tree::Tree::get (272 samples, 0.13%)</title><rect x="33.2702%" y="997" width="0.1259%" height="15" fill="rgb(254,159,46)" fg:x="71892" fg:w="272"/><text x="33.5202%" y="1007.50"></text></g><g><title>sled::tree::Tree::get_inner (159 samples, 0.07%)</title><rect x="33.3225%" y="981" width="0.0736%" height="15" fill="rgb(254,38,10)" fg:x="72005" fg:w="159"/><text x="33.5725%" y="991.50"></text></g><g><title>sled::tree::Tree::view_for_key (114 samples, 0.05%)</title><rect x="33.3434%" y="965" width="0.0528%" height="15" fill="rgb(208,217,32)" fg:x="72050" fg:w="114"/><text x="33.5934%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_pid (60 samples, 0.03%)</title><rect x="33.3684%" y="949" width="0.0278%" height="15" fill="rgb(221,120,13)" fg:x="72104" fg:w="60"/><text x="33.6184%" y="959.50"></text></g><g><title>sled::pagecache::PageCache::get (47 samples, 0.02%)</title><rect x="33.3744%" y="933" width="0.0218%" height="15" fill="rgb(246,54,52)" fg:x="72117" fg:w="47"/><text x="33.6244%" y="943.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_block_hash (313 samples, 0.14%)</title><rect x="33.2568%" y="1029" width="0.1449%" height="15" fill="rgb(242,34,25)" fg:x="71863" fg:w="313"/><text x="33.5068%" y="1039.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_block_hash (321 samples, 0.15%)</title><rect x="33.2559%" y="1045" width="0.1486%" height="15" fill="rgb(247,209,9)" fg:x="71861" fg:w="321"/><text x="33.5059%" y="1055.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::get_blocks_to_download (337 samples, 0.16%)</title><rect x="33.2559%" y="1061" width="0.1560%" height="15" fill="rgb(228,71,26)" fg:x="71861" fg:w="337"/><text x="33.5059%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (24 samples, 0.01%)</title><rect x="33.4387%" y="1045" width="0.0111%" height="15" fill="rgb(222,145,49)" fg:x="72256" fg:w="24"/><text x="33.6887%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.01%)</title><rect x="33.4387%" y="1029" width="0.0111%" height="15" fill="rgb(218,121,17)" fg:x="72256" fg:w="24"/><text x="33.6887%" y="1039.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::request_blocks::{{closure}} (91 samples, 0.04%)</title><rect x="33.4119%" y="1061" width="0.0421%" height="15" fill="rgb(244,50,7)" fg:x="72198" fg:w="91"/><text x="33.6619%" y="1071.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="33.4979%" y="837" width="0.0176%" height="15" fill="rgb(246,229,37)" fg:x="72384" fg:w="38"/><text x="33.7479%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="33.4979%" y="821" width="0.0176%" height="15" fill="rgb(225,18,5)" fg:x="72384" fg:w="38"/><text x="33.7479%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (565 samples, 0.26%)</title><rect x="33.5178%" y="757" width="0.2615%" height="15" fill="rgb(213,204,8)" fg:x="72427" fg:w="565"/><text x="33.7678%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (565 samples, 0.26%)</title><rect x="33.5178%" y="741" width="0.2615%" height="15" fill="rgb(238,103,6)" fg:x="72427" fg:w="565"/><text x="33.7678%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (565 samples, 0.26%)</title><rect x="33.5178%" y="725" width="0.2615%" height="15" fill="rgb(222,25,35)" fg:x="72427" fg:w="565"/><text x="33.7678%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (564 samples, 0.26%)</title><rect x="33.5183%" y="709" width="0.2610%" height="15" fill="rgb(213,203,35)" fg:x="72428" fg:w="564"/><text x="33.7683%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (564 samples, 0.26%)</title><rect x="33.5183%" y="693" width="0.2610%" height="15" fill="rgb(221,79,53)" fg:x="72428" fg:w="564"/><text x="33.7683%" y="703.50"></text></g><g><title>alloc::alloc::alloc (564 samples, 0.26%)</title><rect x="33.5183%" y="677" width="0.2610%" height="15" fill="rgb(243,200,35)" fg:x="72428" fg:w="564"/><text x="33.7683%" y="687.50"></text></g><g><title>malloc (551 samples, 0.25%)</title><rect x="33.5243%" y="661" width="0.2550%" height="15" fill="rgb(248,60,25)" fg:x="72441" fg:w="551"/><text x="33.7743%" y="671.50"></text></g><g><title>[libc.so.6] (447 samples, 0.21%)</title><rect x="33.5724%" y="645" width="0.2069%" height="15" fill="rgb(227,53,46)" fg:x="72545" fg:w="447"/><text x="33.8224%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (698 samples, 0.32%)</title><rect x="33.5178%" y="821" width="0.3230%" height="15" fill="rgb(216,120,32)" fg:x="72427" fg:w="698"/><text x="33.7678%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (698 samples, 0.32%)</title><rect x="33.5178%" y="805" width="0.3230%" height="15" fill="rgb(220,134,1)" fg:x="72427" fg:w="698"/><text x="33.7678%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (698 samples, 0.32%)</title><rect x="33.5178%" y="789" width="0.3230%" height="15" fill="rgb(237,168,5)" fg:x="72427" fg:w="698"/><text x="33.7678%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (698 samples, 0.32%)</title><rect x="33.5178%" y="773" width="0.3230%" height="15" fill="rgb(231,100,33)" fg:x="72427" fg:w="698"/><text x="33.7678%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (133 samples, 0.06%)</title><rect x="33.7793%" y="757" width="0.0615%" height="15" fill="rgb(236,177,47)" fg:x="72992" fg:w="133"/><text x="34.0293%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (133 samples, 0.06%)</title><rect x="33.7793%" y="741" width="0.0615%" height="15" fill="rgb(235,7,49)" fg:x="72992" fg:w="133"/><text x="34.0293%" y="751.50"></text></g><g><title>[libc.so.6] (131 samples, 0.06%)</title><rect x="33.7802%" y="725" width="0.0606%" height="15" fill="rgb(232,119,22)" fg:x="72994" fg:w="131"/><text x="34.0302%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as core::clone::Clone&gt;::clone (749 samples, 0.35%)</title><rect x="33.4952%" y="853" width="0.3466%" height="15" fill="rgb(254,73,53)" fg:x="72378" fg:w="749"/><text x="33.7452%" y="863.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as core::clone::Clone&gt;::clone (700 samples, 0.32%)</title><rect x="33.5178%" y="837" width="0.3239%" height="15" fill="rgb(251,35,20)" fg:x="72427" fg:w="700"/><text x="33.7678%" y="847.50"></text></g><g><title>[libc.so.6] (75 samples, 0.03%)</title><rect x="34.1343%" y="629" width="0.0347%" height="15" fill="rgb(241,119,20)" fg:x="73759" fg:w="75"/><text x="34.3843%" y="639.50"></text></g><g><title>[libc.so.6] (573 samples, 0.27%)</title><rect x="33.9075%" y="645" width="0.2652%" height="15" fill="rgb(207,102,14)" fg:x="73269" fg:w="573"/><text x="34.1575%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (686 samples, 0.32%)</title><rect x="33.8557%" y="757" width="0.3175%" height="15" fill="rgb(248,201,50)" fg:x="73157" fg:w="686"/><text x="34.1057%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (686 samples, 0.32%)</title><rect x="33.8557%" y="741" width="0.3175%" height="15" fill="rgb(222,185,44)" fg:x="73157" fg:w="686"/><text x="34.1057%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (686 samples, 0.32%)</title><rect x="33.8557%" y="725" width="0.3175%" height="15" fill="rgb(218,107,18)" fg:x="73157" fg:w="686"/><text x="34.1057%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (682 samples, 0.32%)</title><rect x="33.8575%" y="709" width="0.3156%" height="15" fill="rgb(237,177,39)" fg:x="73161" fg:w="682"/><text x="34.1075%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (682 samples, 0.32%)</title><rect x="33.8575%" y="693" width="0.3156%" height="15" fill="rgb(246,69,6)" fg:x="73161" fg:w="682"/><text x="34.1075%" y="703.50"></text></g><g><title>alloc::alloc::alloc (682 samples, 0.32%)</title><rect x="33.8575%" y="677" width="0.3156%" height="15" fill="rgb(234,208,37)" fg:x="73161" fg:w="682"/><text x="34.1075%" y="687.50"></text></g><g><title>malloc (673 samples, 0.31%)</title><rect x="33.8617%" y="661" width="0.3115%" height="15" fill="rgb(225,4,6)" fg:x="73170" fg:w="673"/><text x="34.1117%" y="671.50"></text></g><g><title>[libc.so.6] (71 samples, 0.03%)</title><rect x="34.1731%" y="725" width="0.0329%" height="15" fill="rgb(233,45,0)" fg:x="73843" fg:w="71"/><text x="34.4231%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as core::clone::Clone&gt;::clone (788 samples, 0.36%)</title><rect x="33.8418%" y="853" width="0.3647%" height="15" fill="rgb(226,136,5)" fg:x="73127" fg:w="788"/><text x="34.0918%" y="863.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as core::clone::Clone&gt;::clone (788 samples, 0.36%)</title><rect x="33.8418%" y="837" width="0.3647%" height="15" fill="rgb(211,91,47)" fg:x="73127" fg:w="788"/><text x="34.0918%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (788 samples, 0.36%)</title><rect x="33.8418%" y="821" width="0.3647%" height="15" fill="rgb(242,88,51)" fg:x="73127" fg:w="788"/><text x="34.0918%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (758 samples, 0.35%)</title><rect x="33.8557%" y="805" width="0.3508%" height="15" fill="rgb(230,91,28)" fg:x="73157" fg:w="758"/><text x="34.1057%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (758 samples, 0.35%)</title><rect x="33.8557%" y="789" width="0.3508%" height="15" fill="rgb(254,186,29)" fg:x="73157" fg:w="758"/><text x="34.1057%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (758 samples, 0.35%)</title><rect x="33.8557%" y="773" width="0.3508%" height="15" fill="rgb(238,6,4)" fg:x="73157" fg:w="758"/><text x="34.1057%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (72 samples, 0.03%)</title><rect x="34.1731%" y="757" width="0.0333%" height="15" fill="rgb(221,151,16)" fg:x="73843" fg:w="72"/><text x="34.4231%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 0.03%)</title><rect x="34.1731%" y="741" width="0.0333%" height="15" fill="rgb(251,143,52)" fg:x="73843" fg:w="72"/><text x="34.4231%" y="751.50"></text></g><g><title>[libc.so.6] (739 samples, 0.34%)</title><rect x="34.2893%" y="741" width="0.3420%" height="15" fill="rgb(206,90,15)" fg:x="74094" fg:w="739"/><text x="34.5393%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (913 samples, 0.42%)</title><rect x="34.2092%" y="853" width="0.4225%" height="15" fill="rgb(218,35,8)" fg:x="73921" fg:w="913"/><text x="34.4592%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (904 samples, 0.42%)</title><rect x="34.2134%" y="837" width="0.4184%" height="15" fill="rgb(239,215,6)" fg:x="73930" fg:w="904"/><text x="34.4634%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (904 samples, 0.42%)</title><rect x="34.2134%" y="821" width="0.4184%" height="15" fill="rgb(245,116,39)" fg:x="73930" fg:w="904"/><text x="34.4634%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (897 samples, 0.42%)</title><rect x="34.2166%" y="805" width="0.4151%" height="15" fill="rgb(242,65,28)" fg:x="73937" fg:w="897"/><text x="34.4666%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (897 samples, 0.42%)</title><rect x="34.2166%" y="789" width="0.4151%" height="15" fill="rgb(252,132,53)" fg:x="73937" fg:w="897"/><text x="34.4666%" y="799.50"></text></g><g><title>alloc::alloc::alloc (895 samples, 0.41%)</title><rect x="34.2176%" y="773" width="0.4142%" height="15" fill="rgb(224,159,50)" fg:x="73939" fg:w="895"/><text x="34.4676%" y="783.50"></text></g><g><title>malloc (884 samples, 0.41%)</title><rect x="34.2226%" y="757" width="0.4091%" height="15" fill="rgb(224,93,4)" fg:x="73950" fg:w="884"/><text x="34.4726%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,492 samples, 1.15%)</title><rect x="33.4817%" y="917" width="1.1532%" height="15" fill="rgb(208,81,34)" fg:x="72349" fg:w="2492"/><text x="33.7317%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,470 samples, 1.14%)</title><rect x="33.4919%" y="901" width="1.1431%" height="15" fill="rgb(233,92,54)" fg:x="72371" fg:w="2470"/><text x="33.7419%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (2,470 samples, 1.14%)</title><rect x="33.4919%" y="885" width="1.1431%" height="15" fill="rgb(237,21,14)" fg:x="72371" fg:w="2470"/><text x="33.7419%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,470 samples, 1.14%)</title><rect x="33.4919%" y="869" width="1.1431%" height="15" fill="rgb(249,128,51)" fg:x="72371" fg:w="2470"/><text x="33.7419%" y="879.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as core::clone::Clone&gt;::clone (2,495 samples, 1.15%)</title><rect x="33.4808%" y="933" width="1.1546%" height="15" fill="rgb(223,129,24)" fg:x="72347" fg:w="2495"/><text x="33.7308%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.02%)</title><rect x="34.6364%" y="933" width="0.0162%" height="15" fill="rgb(231,168,25)" fg:x="74844" fg:w="35"/><text x="34.8864%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.02%)</title><rect x="34.6364%" y="917" width="0.0162%" height="15" fill="rgb(224,39,20)" fg:x="74844" fg:w="35"/><text x="34.8864%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.02%)</title><rect x="34.6364%" y="901" width="0.0162%" height="15" fill="rgb(225,152,53)" fg:x="74844" fg:w="35"/><text x="34.8864%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.02%)</title><rect x="34.6364%" y="885" width="0.0162%" height="15" fill="rgb(252,17,24)" fg:x="74844" fg:w="35"/><text x="34.8864%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.02%)</title><rect x="34.6364%" y="869" width="0.0162%" height="15" fill="rgb(250,114,30)" fg:x="74844" fg:w="35"/><text x="34.8864%" y="879.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.02%)</title><rect x="34.6364%" y="853" width="0.0162%" height="15" fill="rgb(229,5,4)" fg:x="74844" fg:w="35"/><text x="34.8864%" y="863.50"></text></g><g><title>malloc (34 samples, 0.02%)</title><rect x="34.6368%" y="837" width="0.0157%" height="15" fill="rgb(225,176,49)" fg:x="74845" fg:w="34"/><text x="34.8868%" y="847.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="34.6396%" y="821" width="0.0130%" height="15" fill="rgb(224,221,49)" fg:x="74851" fg:w="28"/><text x="34.8896%" y="831.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (2,563 samples, 1.19%)</title><rect x="33.4790%" y="1029" width="1.1861%" height="15" fill="rgb(253,169,27)" fg:x="72343" fg:w="2563"/><text x="33.7290%" y="1039.50"></text></g><g><title>&lt;bitcoin::blockdata::block::Block as core::clone::Clone&gt;::clone (2,563 samples, 1.19%)</title><rect x="33.4790%" y="1013" width="1.1861%" height="15" fill="rgb(211,206,16)" fg:x="72343" fg:w="2563"/><text x="33.7290%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,562 samples, 1.19%)</title><rect x="33.4794%" y="997" width="1.1856%" height="15" fill="rgb(244,87,35)" fg:x="72344" fg:w="2562"/><text x="33.7294%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,560 samples, 1.18%)</title><rect x="33.4803%" y="981" width="1.1847%" height="15" fill="rgb(246,28,10)" fg:x="72346" fg:w="2560"/><text x="33.7303%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (2,560 samples, 1.18%)</title><rect x="33.4803%" y="965" width="1.1847%" height="15" fill="rgb(229,12,44)" fg:x="72346" fg:w="2560"/><text x="33.7303%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,560 samples, 1.18%)</title><rect x="33.4803%" y="949" width="1.1847%" height="15" fill="rgb(210,145,37)" fg:x="72346" fg:w="2560"/><text x="33.7303%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (27 samples, 0.01%)</title><rect x="34.6526%" y="933" width="0.0125%" height="15" fill="rgb(227,112,52)" fg:x="74879" fg:w="27"/><text x="34.9026%" y="943.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (69 samples, 0.03%)</title><rect x="34.6780%" y="869" width="0.0319%" height="15" fill="rgb(238,155,34)" fg:x="74934" fg:w="69"/><text x="34.9280%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (23 samples, 0.01%)</title><rect x="34.6993%" y="853" width="0.0106%" height="15" fill="rgb(239,226,36)" fg:x="74980" fg:w="23"/><text x="34.9493%" y="863.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (73 samples, 0.03%)</title><rect x="34.6766%" y="981" width="0.0338%" height="15" fill="rgb(230,16,23)" fg:x="74931" fg:w="73"/><text x="34.9266%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (73 samples, 0.03%)</title><rect x="34.6766%" y="965" width="0.0338%" height="15" fill="rgb(236,171,36)" fg:x="74931" fg:w="73"/><text x="34.9266%" y="975.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (73 samples, 0.03%)</title><rect x="34.6766%" y="949" width="0.0338%" height="15" fill="rgb(221,22,14)" fg:x="74931" fg:w="73"/><text x="34.9266%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (73 samples, 0.03%)</title><rect x="34.6766%" y="933" width="0.0338%" height="15" fill="rgb(242,43,11)" fg:x="74931" fg:w="73"/><text x="34.9266%" y="943.50"></text></g><g><title>std::io::Write::write_all (73 samples, 0.03%)</title><rect x="34.6766%" y="917" width="0.0338%" height="15" fill="rgb(232,69,23)" fg:x="74931" fg:w="73"/><text x="34.9266%" y="927.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (71 samples, 0.03%)</title><rect x="34.6776%" y="901" width="0.0329%" height="15" fill="rgb(216,180,54)" fg:x="74933" fg:w="71"/><text x="34.9276%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (71 samples, 0.03%)</title><rect x="34.6776%" y="885" width="0.0329%" height="15" fill="rgb(216,5,24)" fg:x="74933" fg:w="71"/><text x="34.9276%" y="895.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (88 samples, 0.04%)</title><rect x="34.6748%" y="997" width="0.0407%" height="15" fill="rgb(225,89,9)" fg:x="74927" fg:w="88"/><text x="34.9248%" y="1007.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (24 samples, 0.01%)</title><rect x="34.7248%" y="917" width="0.0111%" height="15" fill="rgb(243,75,33)" fg:x="75035" fg:w="24"/><text x="34.9748%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (63 samples, 0.03%)</title><rect x="34.7160%" y="933" width="0.0292%" height="15" fill="rgb(247,141,45)" fg:x="75016" fg:w="63"/><text x="34.9660%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (66 samples, 0.03%)</title><rect x="34.7160%" y="965" width="0.0305%" height="15" fill="rgb(232,177,36)" fg:x="75016" fg:w="66"/><text x="34.9660%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (66 samples, 0.03%)</title><rect x="34.7160%" y="949" width="0.0305%" height="15" fill="rgb(219,125,36)" fg:x="75016" fg:w="66"/><text x="34.9660%" y="959.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (73 samples, 0.03%)</title><rect x="34.7470%" y="917" width="0.0338%" height="15" fill="rgb(227,94,9)" fg:x="75083" fg:w="73"/><text x="34.9970%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (30 samples, 0.01%)</title><rect x="34.7669%" y="901" width="0.0139%" height="15" fill="rgb(240,34,52)" fg:x="75126" fg:w="30"/><text x="35.0169%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (79 samples, 0.04%)</title><rect x="34.7465%" y="949" width="0.0366%" height="15" fill="rgb(216,45,12)" fg:x="75082" fg:w="79"/><text x="34.9965%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (78 samples, 0.04%)</title><rect x="34.7470%" y="933" width="0.0361%" height="15" fill="rgb(246,21,19)" fg:x="75083" fg:w="78"/><text x="34.9970%" y="943.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (243 samples, 0.11%)</title><rect x="34.6711%" y="1029" width="0.1125%" height="15" fill="rgb(213,98,42)" fg:x="74919" fg:w="243"/><text x="34.9211%" y="1039.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (238 samples, 0.11%)</title><rect x="34.6734%" y="1013" width="0.1101%" height="15" fill="rgb(250,136,47)" fg:x="74924" fg:w="238"/><text x="34.9234%" y="1023.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (147 samples, 0.07%)</title><rect x="34.7155%" y="997" width="0.0680%" height="15" fill="rgb(251,124,27)" fg:x="75015" fg:w="147"/><text x="34.9655%" y="1007.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (146 samples, 0.07%)</title><rect x="34.7160%" y="981" width="0.0676%" height="15" fill="rgb(229,180,14)" fg:x="75016" fg:w="146"/><text x="34.9660%" y="991.50"></text></g><g><title>bitcoin_hashes::Hash::hash (80 samples, 0.04%)</title><rect x="34.7465%" y="965" width="0.0370%" height="15" fill="rgb(245,216,25)" fg:x="75082" fg:w="80"/><text x="34.9965%" y="975.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (31 samples, 0.01%)</title><rect x="34.7868%" y="1013" width="0.0143%" height="15" fill="rgb(251,43,5)" fg:x="75169" fg:w="31"/><text x="35.0368%" y="1023.50"></text></g><g><title>&lt;rustreexo::accumulator::stump::Stump as core::clone::Clone&gt;::clone (31 samples, 0.01%)</title><rect x="34.7868%" y="997" width="0.0143%" height="15" fill="rgb(250,128,24)" fg:x="75169" fg:w="31"/><text x="35.0368%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.01%)</title><rect x="34.7868%" y="981" width="0.0143%" height="15" fill="rgb(217,117,27)" fg:x="75169" fg:w="31"/><text x="35.0368%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.01%)</title><rect x="34.7868%" y="965" width="0.0143%" height="15" fill="rgb(245,147,4)" fg:x="75169" fg:w="31"/><text x="35.0368%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.01%)</title><rect x="34.7868%" y="949" width="0.0143%" height="15" fill="rgb(242,201,35)" fg:x="75169" fg:w="31"/><text x="35.0368%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.01%)</title><rect x="34.7868%" y="933" width="0.0143%" height="15" fill="rgb(218,181,1)" fg:x="75169" fg:w="31"/><text x="35.0368%" y="943.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::acc (41 samples, 0.02%)</title><rect x="34.7854%" y="1029" width="0.0190%" height="15" fill="rgb(222,6,29)" fg:x="75166" fg:w="41"/><text x="35.0354%" y="1039.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (36 samples, 0.02%)</title><rect x="34.8118%" y="933" width="0.0167%" height="15" fill="rgb(208,186,3)" fg:x="75223" fg:w="36"/><text x="35.0618%" y="943.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (53 samples, 0.02%)</title><rect x="34.8057%" y="997" width="0.0245%" height="15" fill="rgb(216,36,26)" fg:x="75210" fg:w="53"/><text x="35.0557%" y="1007.50"></text></g><g><title>bitcoin::consensus::encode::deserialize_partial (48 samples, 0.02%)</title><rect x="34.8081%" y="981" width="0.0222%" height="15" fill="rgb(248,201,23)" fg:x="75215" fg:w="48"/><text x="35.0581%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (46 samples, 0.02%)</title><rect x="34.8090%" y="965" width="0.0213%" height="15" fill="rgb(251,170,31)" fg:x="75217" fg:w="46"/><text x="35.0590%" y="975.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (46 samples, 0.02%)</title><rect x="34.8090%" y="949" width="0.0213%" height="15" fill="rgb(207,110,25)" fg:x="75217" fg:w="46"/><text x="35.0590%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="34.8747%" y="501" width="0.0222%" height="15" fill="rgb(250,54,15)" fg:x="75359" fg:w="48"/><text x="35.1247%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (48 samples, 0.02%)</title><rect x="34.8747%" y="485" width="0.0222%" height="15" fill="rgb(227,68,33)" fg:x="75359" fg:w="48"/><text x="35.1247%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (48 samples, 0.02%)</title><rect x="34.8747%" y="469" width="0.0222%" height="15" fill="rgb(238,34,41)" fg:x="75359" fg:w="48"/><text x="35.1247%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (48 samples, 0.02%)</title><rect x="34.8747%" y="453" width="0.0222%" height="15" fill="rgb(220,11,15)" fg:x="75359" fg:w="48"/><text x="35.1247%" y="463.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.02%)</title><rect x="34.8789%" y="437" width="0.0180%" height="15" fill="rgb(246,111,35)" fg:x="75368" fg:w="39"/><text x="35.1289%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (72 samples, 0.03%)</title><rect x="34.8645%" y="693" width="0.0333%" height="15" fill="rgb(209,88,53)" fg:x="75337" fg:w="72"/><text x="35.1145%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.03%)</title><rect x="34.8645%" y="677" width="0.0333%" height="15" fill="rgb(231,185,47)" fg:x="75337" fg:w="72"/><text x="35.1145%" y="687.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (72 samples, 0.03%)</title><rect x="34.8645%" y="661" width="0.0333%" height="15" fill="rgb(233,154,1)" fg:x="75337" fg:w="72"/><text x="35.1145%" y="671.50"></text></g><g><title>core::mem::drop (72 samples, 0.03%)</title><rect x="34.8645%" y="645" width="0.0333%" height="15" fill="rgb(225,15,46)" fg:x="75337" fg:w="72"/><text x="35.1145%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (72 samples, 0.03%)</title><rect x="34.8645%" y="629" width="0.0333%" height="15" fill="rgb(211,135,41)" fg:x="75337" fg:w="72"/><text x="35.1145%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (72 samples, 0.03%)</title><rect x="34.8645%" y="613" width="0.0333%" height="15" fill="rgb(208,54,0)" fg:x="75337" fg:w="72"/><text x="35.1145%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (60 samples, 0.03%)</title><rect x="34.8701%" y="597" width="0.0278%" height="15" fill="rgb(244,136,14)" fg:x="75349" fg:w="60"/><text x="35.1201%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (56 samples, 0.03%)</title><rect x="34.8719%" y="581" width="0.0259%" height="15" fill="rgb(241,56,14)" fg:x="75353" fg:w="56"/><text x="35.1219%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (56 samples, 0.03%)</title><rect x="34.8719%" y="565" width="0.0259%" height="15" fill="rgb(205,80,24)" fg:x="75353" fg:w="56"/><text x="35.1219%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (50 samples, 0.02%)</title><rect x="34.8747%" y="549" width="0.0231%" height="15" fill="rgb(220,57,4)" fg:x="75359" fg:w="50"/><text x="35.1247%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (50 samples, 0.02%)</title><rect x="34.8747%" y="533" width="0.0231%" height="15" fill="rgb(226,193,50)" fg:x="75359" fg:w="50"/><text x="35.1247%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (50 samples, 0.02%)</title><rect x="34.8747%" y="517" width="0.0231%" height="15" fill="rgb(231,168,22)" fg:x="75359" fg:w="50"/><text x="35.1247%" y="527.50"></text></g><g><title>core::mem::drop (81 samples, 0.04%)</title><rect x="34.8627%" y="821" width="0.0375%" height="15" fill="rgb(254,215,14)" fg:x="75333" fg:w="81"/><text x="35.1127%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (81 samples, 0.04%)</title><rect x="34.8627%" y="805" width="0.0375%" height="15" fill="rgb(211,115,16)" fg:x="75333" fg:w="81"/><text x="35.1127%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (81 samples, 0.04%)</title><rect x="34.8627%" y="789" width="0.0375%" height="15" fill="rgb(236,210,16)" fg:x="75333" fg:w="81"/><text x="35.1127%" y="799.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (81 samples, 0.04%)</title><rect x="34.8627%" y="773" width="0.0375%" height="15" fill="rgb(221,94,12)" fg:x="75333" fg:w="81"/><text x="35.1127%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (80 samples, 0.04%)</title><rect x="34.8631%" y="757" width="0.0370%" height="15" fill="rgb(235,218,49)" fg:x="75334" fg:w="80"/><text x="35.1131%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (77 samples, 0.04%)</title><rect x="34.8645%" y="741" width="0.0356%" height="15" fill="rgb(217,114,14)" fg:x="75337" fg:w="77"/><text x="35.1145%" y="751.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (77 samples, 0.04%)</title><rect x="34.8645%" y="725" width="0.0356%" height="15" fill="rgb(216,145,22)" fg:x="75337" fg:w="77"/><text x="35.1145%" y="735.50"></text></g><g><title>core::mem::drop (77 samples, 0.04%)</title><rect x="34.8645%" y="709" width="0.0356%" height="15" fill="rgb(217,112,39)" fg:x="75337" fg:w="77"/><text x="35.1145%" y="719.50"></text></g><g><title>sled::pin (94 samples, 0.04%)</title><rect x="34.8594%" y="965" width="0.0435%" height="15" fill="rgb(225,85,32)" fg:x="75326" fg:w="94"/><text x="35.1094%" y="975.50"></text></g><g><title>crossbeam_epoch::default::pin (94 samples, 0.04%)</title><rect x="34.8594%" y="949" width="0.0435%" height="15" fill="rgb(245,209,47)" fg:x="75326" fg:w="94"/><text x="35.1094%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle (94 samples, 0.04%)</title><rect x="34.8594%" y="933" width="0.0435%" height="15" fill="rgb(218,220,15)" fg:x="75326" fg:w="94"/><text x="35.1094%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (94 samples, 0.04%)</title><rect x="34.8594%" y="917" width="0.0435%" height="15" fill="rgb(222,202,31)" fg:x="75326" fg:w="94"/><text x="35.1094%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (93 samples, 0.04%)</title><rect x="34.8599%" y="901" width="0.0430%" height="15" fill="rgb(243,203,4)" fg:x="75327" fg:w="93"/><text x="35.1099%" y="911.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (93 samples, 0.04%)</title><rect x="34.8599%" y="885" width="0.0430%" height="15" fill="rgb(237,92,17)" fg:x="75327" fg:w="93"/><text x="35.1099%" y="895.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (93 samples, 0.04%)</title><rect x="34.8599%" y="869" width="0.0430%" height="15" fill="rgb(231,119,7)" fg:x="75327" fg:w="93"/><text x="35.1099%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (93 samples, 0.04%)</title><rect x="34.8599%" y="853" width="0.0430%" height="15" fill="rgb(237,82,41)" fg:x="75327" fg:w="93"/><text x="35.1099%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (87 samples, 0.04%)</title><rect x="34.8627%" y="837" width="0.0403%" height="15" fill="rgb(226,81,48)" fg:x="75333" fg:w="87"/><text x="35.1127%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (44 samples, 0.02%)</title><rect x="34.9062%" y="949" width="0.0204%" height="15" fill="rgb(234,70,51)" fg:x="75427" fg:w="44"/><text x="35.1562%" y="959.50"></text></g><g><title>sled::tree::Tree::get_inner::{{closure}} (44 samples, 0.02%)</title><rect x="34.9062%" y="933" width="0.0204%" height="15" fill="rgb(251,86,4)" fg:x="75427" fg:w="44"/><text x="35.1562%" y="943.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (44 samples, 0.02%)</title><rect x="34.9062%" y="917" width="0.0204%" height="15" fill="rgb(244,144,28)" fg:x="75427" fg:w="44"/><text x="35.1562%" y="927.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (44 samples, 0.02%)</title><rect x="34.9062%" y="901" width="0.0204%" height="15" fill="rgb(232,161,39)" fg:x="75427" fg:w="44"/><text x="35.1562%" y="911.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.01%)</title><rect x="34.9140%" y="885" width="0.0125%" height="15" fill="rgb(247,34,51)" fg:x="75444" fg:w="27"/><text x="35.1640%" y="895.50"></text></g><g><title>&lt;sled::ivec::IVec as core::ops::deref::Deref&gt;::deref (44 samples, 0.02%)</title><rect x="34.9270%" y="901" width="0.0204%" height="15" fill="rgb(225,132,2)" fg:x="75472" fg:w="44"/><text x="35.1770%" y="911.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (44 samples, 0.02%)</title><rect x="34.9270%" y="885" width="0.0204%" height="15" fill="rgb(209,159,44)" fg:x="75472" fg:w="44"/><text x="35.1770%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (117 samples, 0.05%)</title><rect x="34.9265%" y="933" width="0.0541%" height="15" fill="rgb(251,214,1)" fg:x="75471" fg:w="117"/><text x="35.1765%" y="943.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key::{{closure}} (116 samples, 0.05%)</title><rect x="34.9270%" y="917" width="0.0537%" height="15" fill="rgb(247,84,47)" fg:x="75472" fg:w="116"/><text x="35.1770%" y="927.50"></text></g><g><title>sled::fastcmp::fastcmp (72 samples, 0.03%)</title><rect x="34.9474%" y="901" width="0.0333%" height="15" fill="rgb(240,111,43)" fg:x="75516" fg:w="72"/><text x="35.1974%" y="911.50"></text></g><g><title>[libc.so.6] (70 samples, 0.03%)</title><rect x="34.9483%" y="885" width="0.0324%" height="15" fill="rgb(215,214,35)" fg:x="75518" fg:w="70"/><text x="35.1983%" y="895.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (118 samples, 0.05%)</title><rect x="34.9265%" y="949" width="0.0546%" height="15" fill="rgb(248,207,23)" fg:x="75471" fg:w="118"/><text x="35.1765%" y="959.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (73 samples, 0.03%)</title><rect x="35.0172%" y="885" width="0.0338%" height="15" fill="rgb(214,186,4)" fg:x="75667" fg:w="73"/><text x="35.2672%" y="895.50"></text></g><g><title>&lt;sled::ivec::IVec as core::ops::deref::Deref&gt;::deref (46 samples, 0.02%)</title><rect x="35.0510%" y="885" width="0.0213%" height="15" fill="rgb(220,133,22)" fg:x="75740" fg:w="46"/><text x="35.3010%" y="895.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (46 samples, 0.02%)</title><rect x="35.0510%" y="869" width="0.0213%" height="15" fill="rgb(239,134,19)" fg:x="75740" fg:w="46"/><text x="35.3010%" y="879.50"></text></g><g><title>sled::binary_search::binary_search_lub (168 samples, 0.08%)</title><rect x="35.0121%" y="917" width="0.0777%" height="15" fill="rgb(250,140,9)" fg:x="75656" fg:w="168"/><text x="35.2621%" y="927.50"></text></g><g><title>sled::binary_search::binary_search (163 samples, 0.08%)</title><rect x="35.0145%" y="901" width="0.0754%" height="15" fill="rgb(225,59,14)" fg:x="75661" fg:w="163"/><text x="35.2645%" y="911.50"></text></g><g><title>sled::fastcmp::fastcmp (35 samples, 0.02%)</title><rect x="35.0737%" y="885" width="0.0162%" height="15" fill="rgb(214,152,51)" fg:x="75789" fg:w="35"/><text x="35.3237%" y="895.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="35.0751%" y="869" width="0.0148%" height="15" fill="rgb(251,227,43)" fg:x="75792" fg:w="32"/><text x="35.3251%" y="879.50"></text></g><g><title>sled::node::Node::index_next_node (203 samples, 0.09%)</title><rect x="34.9964%" y="933" width="0.0939%" height="15" fill="rgb(241,96,17)" fg:x="75622" fg:w="203"/><text x="35.2464%" y="943.50"></text></g><g><title>sled::lru::AccessQueue::push (28 samples, 0.01%)</title><rect x="35.1149%" y="885" width="0.0130%" height="15" fill="rgb(234,198,43)" fg:x="75878" fg:w="28"/><text x="35.3649%" y="895.50"></text></g><g><title>sled::lru::Lru::accessed (50 samples, 0.02%)</title><rect x="35.1121%" y="901" width="0.0231%" height="15" fill="rgb(220,108,29)" fg:x="75872" fg:w="50"/><text x="35.3621%" y="911.50"></text></g><g><title>sled::pagecache::Page::is_free (131 samples, 0.06%)</title><rect x="35.1352%" y="901" width="0.0606%" height="15" fill="rgb(226,163,33)" fg:x="75922" fg:w="131"/><text x="35.3852%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (68 samples, 0.03%)</title><rect x="35.1644%" y="885" width="0.0315%" height="15" fill="rgb(205,194,45)" fg:x="75985" fg:w="68"/><text x="35.4144%" y="895.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::is_null (60 samples, 0.03%)</title><rect x="35.2037%" y="885" width="0.0278%" height="15" fill="rgb(206,143,44)" fg:x="76070" fg:w="60"/><text x="35.4537%" y="895.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (853 samples, 0.39%)</title><rect x="34.8372%" y="997" width="0.3948%" height="15" fill="rgb(236,136,36)" fg:x="75278" fg:w="853"/><text x="35.0872%" y="1007.50"></text></g><g><title>sled::tree::Tree::get (830 samples, 0.38%)</title><rect x="34.8479%" y="981" width="0.3841%" height="15" fill="rgb(249,172,42)" fg:x="75301" fg:w="830"/><text x="35.0979%" y="991.50"></text></g><g><title>sled::tree::Tree::get_inner (711 samples, 0.33%)</title><rect x="34.9029%" y="965" width="0.3290%" height="15" fill="rgb(216,139,23)" fg:x="75420" fg:w="711"/><text x="35.1529%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_key (542 samples, 0.25%)</title><rect x="34.9811%" y="949" width="0.2508%" height="15" fill="rgb(207,166,20)" fg:x="75589" fg:w="542"/><text x="35.2311%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_pid (306 samples, 0.14%)</title><rect x="35.0904%" y="933" width="0.1416%" height="15" fill="rgb(210,209,22)" fg:x="75825" fg:w="306"/><text x="35.3404%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::get (271 samples, 0.13%)</title><rect x="35.1066%" y="917" width="0.1254%" height="15" fill="rgb(232,118,20)" fg:x="75860" fg:w="271"/><text x="35.3566%" y="927.50"></text></g><g><title>sled::pagecache::pagetable::PageTable::get (61 samples, 0.03%)</title><rect x="35.2037%" y="901" width="0.0282%" height="15" fill="rgb(238,113,42)" fg:x="76070" fg:w="61"/><text x="35.4537%" y="911.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_header (935 samples, 0.43%)</title><rect x="34.8057%" y="1013" width="0.4327%" height="15" fill="rgb(231,42,5)" fg:x="75210" fg:w="935"/><text x="35.0557%" y="1023.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (940 samples, 0.44%)</title><rect x="34.8044%" y="1029" width="0.4350%" height="15" fill="rgb(243,166,24)" fg:x="75207" fg:w="940"/><text x="35.0544%" y="1039.50"></text></g><g><title>&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (22 samples, 0.01%)</title><rect x="35.2620%" y="933" width="0.0102%" height="15" fill="rgb(237,226,12)" fg:x="76196" fg:w="22"/><text x="35.5120%" y="943.50"></text></g><g><title>sled::arc::Arc&lt;T&gt;::copy_from_slice (22 samples, 0.01%)</title><rect x="35.2620%" y="917" width="0.0102%" height="15" fill="rgb(229,133,24)" fg:x="76196" fg:w="22"/><text x="35.5120%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as kv::value::Value&gt;::to_raw_value (27 samples, 0.01%)</title><rect x="35.2607%" y="981" width="0.0125%" height="15" fill="rgb(238,33,43)" fg:x="76193" fg:w="27"/><text x="35.5107%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.01%)</title><rect x="35.2620%" y="965" width="0.0111%" height="15" fill="rgb(227,59,38)" fg:x="76196" fg:w="24"/><text x="35.5120%" y="975.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (24 samples, 0.01%)</title><rect x="35.2620%" y="949" width="0.0111%" height="15" fill="rgb(230,97,0)" fg:x="76196" fg:w="24"/><text x="35.5120%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 0.01%)</title><rect x="35.2782%" y="933" width="0.0102%" height="15" fill="rgb(250,173,50)" fg:x="76231" fg:w="22"/><text x="35.5282%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.01%)</title><rect x="35.2782%" y="917" width="0.0102%" height="15" fill="rgb(240,15,50)" fg:x="76231" fg:w="22"/><text x="35.5282%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.01%)</title><rect x="35.2782%" y="901" width="0.0102%" height="15" fill="rgb(221,93,22)" fg:x="76231" fg:w="22"/><text x="35.5282%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.01%)</title><rect x="35.2782%" y="885" width="0.0102%" height="15" fill="rgb(245,180,53)" fg:x="76231" fg:w="22"/><text x="35.5282%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.02%)</title><rect x="35.2741%" y="981" width="0.0157%" height="15" fill="rgb(231,88,51)" fg:x="76222" fg:w="34"/><text x="35.5241%" y="991.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set::{{closure}} (31 samples, 0.01%)</title><rect x="35.2755%" y="965" width="0.0143%" height="15" fill="rgb(240,58,21)" fg:x="76225" fg:w="31"/><text x="35.5255%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as kv::value::Value&gt;::from_raw_value (31 samples, 0.01%)</title><rect x="35.2755%" y="949" width="0.0143%" height="15" fill="rgb(237,21,10)" fg:x="76225" fg:w="31"/><text x="35.5255%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="35.3190%" y="501" width="0.0222%" height="15" fill="rgb(218,43,11)" fg:x="76319" fg:w="48"/><text x="35.5690%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (48 samples, 0.02%)</title><rect x="35.3190%" y="485" width="0.0222%" height="15" fill="rgb(218,221,29)" fg:x="76319" fg:w="48"/><text x="35.5690%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (48 samples, 0.02%)</title><rect x="35.3190%" y="469" width="0.0222%" height="15" fill="rgb(214,118,42)" fg:x="76319" fg:w="48"/><text x="35.5690%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (48 samples, 0.02%)</title><rect x="35.3190%" y="453" width="0.0222%" height="15" fill="rgb(251,200,26)" fg:x="76319" fg:w="48"/><text x="35.5690%" y="463.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.02%)</title><rect x="35.3241%" y="437" width="0.0171%" height="15" fill="rgb(237,101,39)" fg:x="76330" fg:w="37"/><text x="35.5741%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (50 samples, 0.02%)</title><rect x="35.3190%" y="549" width="0.0231%" height="15" fill="rgb(251,117,11)" fg:x="76319" fg:w="50"/><text x="35.5690%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (50 samples, 0.02%)</title><rect x="35.3190%" y="533" width="0.0231%" height="15" fill="rgb(216,223,23)" fg:x="76319" fg:w="50"/><text x="35.5690%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (50 samples, 0.02%)</title><rect x="35.3190%" y="517" width="0.0231%" height="15" fill="rgb(251,54,12)" fg:x="76319" fg:w="50"/><text x="35.5690%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (72 samples, 0.03%)</title><rect x="35.3093%" y="693" width="0.0333%" height="15" fill="rgb(254,176,54)" fg:x="76298" fg:w="72"/><text x="35.5593%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.03%)</title><rect x="35.3093%" y="677" width="0.0333%" height="15" fill="rgb(210,32,8)" fg:x="76298" fg:w="72"/><text x="35.5593%" y="687.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (72 samples, 0.03%)</title><rect x="35.3093%" y="661" width="0.0333%" height="15" fill="rgb(235,52,38)" fg:x="76298" fg:w="72"/><text x="35.5593%" y="671.50"></text></g><g><title>core::mem::drop (72 samples, 0.03%)</title><rect x="35.3093%" y="645" width="0.0333%" height="15" fill="rgb(231,4,44)" fg:x="76298" fg:w="72"/><text x="35.5593%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (72 samples, 0.03%)</title><rect x="35.3093%" y="629" width="0.0333%" height="15" fill="rgb(249,2,32)" fg:x="76298" fg:w="72"/><text x="35.5593%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (72 samples, 0.03%)</title><rect x="35.3093%" y="613" width="0.0333%" height="15" fill="rgb(224,65,26)" fg:x="76298" fg:w="72"/><text x="35.5593%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (60 samples, 0.03%)</title><rect x="35.3148%" y="597" width="0.0278%" height="15" fill="rgb(250,73,40)" fg:x="76310" fg:w="60"/><text x="35.5648%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (56 samples, 0.03%)</title><rect x="35.3167%" y="581" width="0.0259%" height="15" fill="rgb(253,177,16)" fg:x="76314" fg:w="56"/><text x="35.5667%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (56 samples, 0.03%)</title><rect x="35.3167%" y="565" width="0.0259%" height="15" fill="rgb(217,32,34)" fg:x="76314" fg:w="56"/><text x="35.5667%" y="575.50"></text></g><g><title>core::mem::drop (95 samples, 0.04%)</title><rect x="35.3032%" y="821" width="0.0440%" height="15" fill="rgb(212,7,10)" fg:x="76285" fg:w="95"/><text x="35.5532%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (95 samples, 0.04%)</title><rect x="35.3032%" y="805" width="0.0440%" height="15" fill="rgb(245,89,8)" fg:x="76285" fg:w="95"/><text x="35.5532%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (95 samples, 0.04%)</title><rect x="35.3032%" y="789" width="0.0440%" height="15" fill="rgb(237,16,53)" fg:x="76285" fg:w="95"/><text x="35.5532%" y="799.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (95 samples, 0.04%)</title><rect x="35.3032%" y="773" width="0.0440%" height="15" fill="rgb(250,204,30)" fg:x="76285" fg:w="95"/><text x="35.5532%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (95 samples, 0.04%)</title><rect x="35.3032%" y="757" width="0.0440%" height="15" fill="rgb(208,77,27)" fg:x="76285" fg:w="95"/><text x="35.5532%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (82 samples, 0.04%)</title><rect x="35.3093%" y="741" width="0.0379%" height="15" fill="rgb(250,204,28)" fg:x="76298" fg:w="82"/><text x="35.5593%" y="751.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (82 samples, 0.04%)</title><rect x="35.3093%" y="725" width="0.0379%" height="15" fill="rgb(244,63,21)" fg:x="76298" fg:w="82"/><text x="35.5593%" y="735.50"></text></g><g><title>core::mem::drop (82 samples, 0.04%)</title><rect x="35.3093%" y="709" width="0.0379%" height="15" fill="rgb(236,85,44)" fg:x="76298" fg:w="82"/><text x="35.5593%" y="719.50"></text></g><g><title>sled::pin (104 samples, 0.05%)</title><rect x="35.3009%" y="965" width="0.0481%" height="15" fill="rgb(215,98,4)" fg:x="76280" fg:w="104"/><text x="35.5509%" y="975.50"></text></g><g><title>crossbeam_epoch::default::pin (104 samples, 0.05%)</title><rect x="35.3009%" y="949" width="0.0481%" height="15" fill="rgb(235,38,11)" fg:x="76280" fg:w="104"/><text x="35.5509%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle (104 samples, 0.05%)</title><rect x="35.3009%" y="933" width="0.0481%" height="15" fill="rgb(254,186,25)" fg:x="76280" fg:w="104"/><text x="35.5509%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (104 samples, 0.05%)</title><rect x="35.3009%" y="917" width="0.0481%" height="15" fill="rgb(225,55,31)" fg:x="76280" fg:w="104"/><text x="35.5509%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (104 samples, 0.05%)</title><rect x="35.3009%" y="901" width="0.0481%" height="15" fill="rgb(211,15,21)" fg:x="76280" fg:w="104"/><text x="35.5509%" y="911.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (104 samples, 0.05%)</title><rect x="35.3009%" y="885" width="0.0481%" height="15" fill="rgb(215,187,41)" fg:x="76280" fg:w="104"/><text x="35.5509%" y="895.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (104 samples, 0.05%)</title><rect x="35.3009%" y="869" width="0.0481%" height="15" fill="rgb(248,69,32)" fg:x="76280" fg:w="104"/><text x="35.5509%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (104 samples, 0.05%)</title><rect x="35.3009%" y="853" width="0.0481%" height="15" fill="rgb(252,102,52)" fg:x="76280" fg:w="104"/><text x="35.5509%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (99 samples, 0.05%)</title><rect x="35.3032%" y="837" width="0.0458%" height="15" fill="rgb(253,140,32)" fg:x="76285" fg:w="99"/><text x="35.5532%" y="847.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_destroy (25 samples, 0.01%)</title><rect x="35.4074%" y="933" width="0.0116%" height="15" fill="rgb(216,56,42)" fg:x="76510" fg:w="25"/><text x="35.6574%" y="943.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked (25 samples, 0.01%)</title><rect x="35.4074%" y="917" width="0.0116%" height="15" fill="rgb(216,184,14)" fg:x="76510" fg:w="25"/><text x="35.6574%" y="927.50"></text></g><g><title>crossbeam_epoch::internal::Local::defer (25 samples, 0.01%)</title><rect x="35.4074%" y="901" width="0.0116%" height="15" fill="rgb(237,187,27)" fg:x="76510" fg:w="25"/><text x="35.6574%" y="911.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_link (31 samples, 0.01%)</title><rect x="35.4296%" y="933" width="0.0143%" height="15" fill="rgb(219,65,3)" fg:x="76558" fg:w="31"/><text x="35.6796%" y="943.50"></text></g><g><title>sled::stack::Stack&lt;T&gt;::push (31 samples, 0.01%)</title><rect x="35.4296%" y="917" width="0.0143%" height="15" fill="rgb(245,83,25)" fg:x="76558" fg:w="31"/><text x="35.6796%" y="927.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (24 samples, 0.01%)</title><rect x="35.4328%" y="901" width="0.0111%" height="15" fill="rgb(214,205,45)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="911.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (24 samples, 0.01%)</title><rect x="35.4328%" y="885" width="0.0111%" height="15" fill="rgb(241,20,18)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="895.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (24 samples, 0.01%)</title><rect x="35.4328%" y="869" width="0.0111%" height="15" fill="rgb(232,163,23)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (24 samples, 0.01%)</title><rect x="35.4328%" y="853" width="0.0111%" height="15" fill="rgb(214,5,46)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.01%)</title><rect x="35.4328%" y="837" width="0.0111%" height="15" fill="rgb(229,78,17)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.01%)</title><rect x="35.4328%" y="821" width="0.0111%" height="15" fill="rgb(248,89,10)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.01%)</title><rect x="35.4328%" y="805" width="0.0111%" height="15" fill="rgb(248,54,15)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="815.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.01%)</title><rect x="35.4328%" y="789" width="0.0111%" height="15" fill="rgb(223,116,6)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="799.50"></text></g><g><title>malloc (24 samples, 0.01%)</title><rect x="35.4328%" y="773" width="0.0111%" height="15" fill="rgb(205,125,38)" fg:x="76565" fg:w="24"/><text x="35.6828%" y="783.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (66 samples, 0.03%)</title><rect x="35.4439%" y="933" width="0.0305%" height="15" fill="rgb(251,78,38)" fg:x="76589" fg:w="66"/><text x="35.6939%" y="943.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (66 samples, 0.03%)</title><rect x="35.4439%" y="917" width="0.0305%" height="15" fill="rgb(253,78,28)" fg:x="76589" fg:w="66"/><text x="35.6939%" y="927.50"></text></g><g><title>sled::calculate_message_crc32 (29 samples, 0.01%)</title><rect x="35.4763%" y="901" width="0.0134%" height="15" fill="rgb(209,120,3)" fg:x="76659" fg:w="29"/><text x="35.7263%" y="911.50"></text></g><g><title>crc32fast::Hasher::update (26 samples, 0.01%)</title><rect x="35.4777%" y="885" width="0.0120%" height="15" fill="rgb(238,229,9)" fg:x="76662" fg:w="26"/><text x="35.7277%" y="895.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (26 samples, 0.01%)</title><rect x="35.4777%" y="869" width="0.0120%" height="15" fill="rgb(253,159,18)" fg:x="76662" fg:w="26"/><text x="35.7277%" y="879.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (34 samples, 0.02%)</title><rect x="35.4745%" y="933" width="0.0157%" height="15" fill="rgb(244,42,34)" fg:x="76655" fg:w="34"/><text x="35.7245%" y="943.50"></text></g><g><title>sled::pagecache::reservation::Reservation::flush (30 samples, 0.01%)</title><rect x="35.4763%" y="917" width="0.0139%" height="15" fill="rgb(224,8,7)" fg:x="76659" fg:w="30"/><text x="35.7263%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::link (268 samples, 0.12%)</title><rect x="35.3666%" y="949" width="0.1240%" height="15" fill="rgb(210,201,45)" fg:x="76422" fg:w="268"/><text x="35.6166%" y="959.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (567 samples, 0.26%)</title><rect x="35.2583%" y="997" width="0.2624%" height="15" fill="rgb(252,185,21)" fg:x="76188" fg:w="567"/><text x="35.5083%" y="1007.50"></text></g><g><title>sled::tree::Tree::insert (488 samples, 0.23%)</title><rect x="35.2949%" y="981" width="0.2258%" height="15" fill="rgb(223,131,1)" fg:x="76267" fg:w="488"/><text x="35.5449%" y="991.50"></text></g><g><title>sled::tree::Tree::insert_inner (371 samples, 0.17%)</title><rect x="35.3491%" y="965" width="0.1717%" height="15" fill="rgb(245,141,16)" fg:x="76384" fg:w="371"/><text x="35.5991%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_key (64 samples, 0.03%)</title><rect x="35.4911%" y="949" width="0.0296%" height="15" fill="rgb(229,55,45)" fg:x="76691" fg:w="64"/><text x="35.7411%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_pid (32 samples, 0.01%)</title><rect x="35.5059%" y="933" width="0.0148%" height="15" fill="rgb(208,92,15)" fg:x="76723" fg:w="32"/><text x="35.7559%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::get (27 samples, 0.01%)</title><rect x="35.5082%" y="917" width="0.0125%" height="15" fill="rgb(234,185,47)" fg:x="76728" fg:w="27"/><text x="35.7582%" y="927.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::save_roots (603 samples, 0.28%)</title><rect x="35.2463%" y="1013" width="0.2791%" height="15" fill="rgb(253,104,50)" fg:x="76162" fg:w="603"/><text x="35.4963%" y="1023.50"></text></g><g><title>[libc.so.6] (221 samples, 0.10%)</title><rect x="35.5624%" y="805" width="0.1023%" height="15" fill="rgb(205,70,7)" fg:x="76845" fg:w="221"/><text x="35.8124%" y="815.50"></text></g><g><title>[libc.so.6] (207 samples, 0.10%)</title><rect x="35.5689%" y="789" width="0.0958%" height="15" fill="rgb(240,178,43)" fg:x="76859" fg:w="207"/><text x="35.8189%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (261 samples, 0.12%)</title><rect x="35.5443%" y="869" width="0.1208%" height="15" fill="rgb(214,112,2)" fg:x="76806" fg:w="261"/><text x="35.7943%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (261 samples, 0.12%)</title><rect x="35.5443%" y="853" width="0.1208%" height="15" fill="rgb(206,46,17)" fg:x="76806" fg:w="261"/><text x="35.7943%" y="863.50"></text></g><g><title>alloc::alloc::realloc (261 samples, 0.12%)</title><rect x="35.5443%" y="837" width="0.1208%" height="15" fill="rgb(225,220,16)" fg:x="76806" fg:w="261"/><text x="35.7943%" y="847.50"></text></g><g><title>realloc (254 samples, 0.12%)</title><rect x="35.5476%" y="821" width="0.1175%" height="15" fill="rgb(238,65,40)" fg:x="76813" fg:w="254"/><text x="35.7976%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (268 samples, 0.12%)</title><rect x="35.5416%" y="885" width="0.1240%" height="15" fill="rgb(230,151,21)" fg:x="76800" fg:w="268"/><text x="35.7916%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (276 samples, 0.13%)</title><rect x="35.5402%" y="949" width="0.1277%" height="15" fill="rgb(218,58,49)" fg:x="76797" fg:w="276"/><text x="35.7902%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (276 samples, 0.13%)</title><rect x="35.5402%" y="933" width="0.1277%" height="15" fill="rgb(219,179,14)" fg:x="76797" fg:w="276"/><text x="35.7902%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (274 samples, 0.13%)</title><rect x="35.5411%" y="917" width="0.1268%" height="15" fill="rgb(223,72,1)" fg:x="76799" fg:w="274"/><text x="35.7911%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (274 samples, 0.13%)</title><rect x="35.5411%" y="901" width="0.1268%" height="15" fill="rgb(238,126,10)" fg:x="76799" fg:w="274"/><text x="35.7911%" y="911.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::save_acc (927 samples, 0.43%)</title><rect x="35.2403%" y="1029" width="0.4290%" height="15" fill="rgb(224,206,38)" fg:x="76149" fg:w="927"/><text x="35.4903%" y="1039.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (283 samples, 0.13%)</title><rect x="35.5383%" y="1013" width="0.1310%" height="15" fill="rgb(212,201,54)" fg:x="76793" fg:w="283"/><text x="35.7883%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (283 samples, 0.13%)</title><rect x="35.5383%" y="997" width="0.1310%" height="15" fill="rgb(218,154,48)" fg:x="76793" fg:w="283"/><text x="35.7883%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (283 samples, 0.13%)</title><rect x="35.5383%" y="981" width="0.1310%" height="15" fill="rgb(232,93,24)" fg:x="76793" fg:w="283"/><text x="35.7883%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (283 samples, 0.13%)</title><rect x="35.5383%" y="965" width="0.1310%" height="15" fill="rgb(245,30,21)" fg:x="76793" fg:w="283"/><text x="35.7883%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.02%)</title><rect x="35.6864%" y="757" width="0.0162%" height="15" fill="rgb(242,148,29)" fg:x="77113" fg:w="35"/><text x="35.9364%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.02%)</title><rect x="35.6869%" y="741" width="0.0157%" height="15" fill="rgb(244,153,54)" fg:x="77114" fg:w="34"/><text x="35.9369%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.02%)</title><rect x="35.6869%" y="725" width="0.0157%" height="15" fill="rgb(252,87,22)" fg:x="77114" fg:w="34"/><text x="35.9369%" y="735.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.02%)</title><rect x="35.6869%" y="709" width="0.0157%" height="15" fill="rgb(210,51,29)" fg:x="77114" fg:w="34"/><text x="35.9369%" y="719.50"></text></g><g><title>realloc (32 samples, 0.01%)</title><rect x="35.6878%" y="693" width="0.0148%" height="15" fill="rgb(242,136,47)" fg:x="77116" fg:w="32"/><text x="35.9378%" y="703.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (39 samples, 0.02%)</title><rect x="35.6850%" y="917" width="0.0180%" height="15" fill="rgb(238,68,4)" fg:x="77110" fg:w="39"/><text x="35.9350%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (39 samples, 0.02%)</title><rect x="35.6850%" y="901" width="0.0180%" height="15" fill="rgb(242,161,30)" fg:x="77110" fg:w="39"/><text x="35.9350%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (39 samples, 0.02%)</title><rect x="35.6850%" y="885" width="0.0180%" height="15" fill="rgb(218,58,44)" fg:x="77110" fg:w="39"/><text x="35.9350%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (39 samples, 0.02%)</title><rect x="35.6850%" y="869" width="0.0180%" height="15" fill="rgb(252,125,32)" fg:x="77110" fg:w="39"/><text x="35.9350%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (39 samples, 0.02%)</title><rect x="35.6850%" y="853" width="0.0180%" height="15" fill="rgb(219,178,0)" fg:x="77110" fg:w="39"/><text x="35.9350%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (39 samples, 0.02%)</title><rect x="35.6850%" y="837" width="0.0180%" height="15" fill="rgb(213,152,7)" fg:x="77110" fg:w="39"/><text x="35.9350%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 0.02%)</title><rect x="35.6855%" y="821" width="0.0176%" height="15" fill="rgb(249,109,34)" fg:x="77111" fg:w="38"/><text x="35.9355%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (38 samples, 0.02%)</title><rect x="35.6855%" y="805" width="0.0176%" height="15" fill="rgb(232,96,21)" fg:x="77111" fg:w="38"/><text x="35.9355%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.02%)</title><rect x="35.6860%" y="789" width="0.0171%" height="15" fill="rgb(228,27,39)" fg:x="77112" fg:w="37"/><text x="35.9360%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (36 samples, 0.02%)</title><rect x="35.6864%" y="773" width="0.0167%" height="15" fill="rgb(211,182,52)" fg:x="77113" fg:w="36"/><text x="35.9364%" y="783.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (41 samples, 0.02%)</title><rect x="35.6850%" y="949" width="0.0190%" height="15" fill="rgb(234,178,38)" fg:x="77110" fg:w="41"/><text x="35.9350%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (41 samples, 0.02%)</title><rect x="35.6850%" y="933" width="0.0190%" height="15" fill="rgb(221,111,3)" fg:x="77110" fg:w="41"/><text x="35.9350%" y="943.50"></text></g><g><title>[libc.so.6] (94 samples, 0.04%)</title><rect x="35.7063%" y="677" width="0.0435%" height="15" fill="rgb(228,175,21)" fg:x="77156" fg:w="94"/><text x="35.9563%" y="687.50"></text></g><g><title>[libc.so.6] (90 samples, 0.04%)</title><rect x="35.7082%" y="661" width="0.0417%" height="15" fill="rgb(228,174,43)" fg:x="77160" fg:w="90"/><text x="35.9582%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (99 samples, 0.05%)</title><rect x="35.7045%" y="757" width="0.0458%" height="15" fill="rgb(211,191,0)" fg:x="77152" fg:w="99"/><text x="35.9545%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (98 samples, 0.05%)</title><rect x="35.7049%" y="741" width="0.0454%" height="15" fill="rgb(253,117,3)" fg:x="77153" fg:w="98"/><text x="35.9549%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (98 samples, 0.05%)</title><rect x="35.7049%" y="725" width="0.0454%" height="15" fill="rgb(241,127,19)" fg:x="77153" fg:w="98"/><text x="35.9549%" y="735.50"></text></g><g><title>alloc::alloc::realloc (98 samples, 0.05%)</title><rect x="35.7049%" y="709" width="0.0454%" height="15" fill="rgb(218,103,12)" fg:x="77153" fg:w="98"/><text x="35.9549%" y="719.50"></text></g><g><title>realloc (98 samples, 0.05%)</title><rect x="35.7049%" y="693" width="0.0454%" height="15" fill="rgb(236,214,43)" fg:x="77153" fg:w="98"/><text x="35.9549%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (102 samples, 0.05%)</title><rect x="35.7040%" y="821" width="0.0472%" height="15" fill="rgb(244,144,19)" fg:x="77151" fg:w="102"/><text x="35.9540%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (102 samples, 0.05%)</title><rect x="35.7040%" y="805" width="0.0472%" height="15" fill="rgb(246,188,10)" fg:x="77151" fg:w="102"/><text x="35.9540%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (101 samples, 0.05%)</title><rect x="35.7045%" y="789" width="0.0467%" height="15" fill="rgb(212,193,33)" fg:x="77152" fg:w="101"/><text x="35.9545%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (101 samples, 0.05%)</title><rect x="35.7045%" y="773" width="0.0467%" height="15" fill="rgb(241,51,29)" fg:x="77152" fg:w="101"/><text x="35.9545%" y="783.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (103 samples, 0.05%)</title><rect x="35.7040%" y="949" width="0.0477%" height="15" fill="rgb(211,58,19)" fg:x="77151" fg:w="103"/><text x="35.9540%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (103 samples, 0.05%)</title><rect x="35.7040%" y="933" width="0.0477%" height="15" fill="rgb(229,111,26)" fg:x="77151" fg:w="103"/><text x="35.9540%" y="943.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (103 samples, 0.05%)</title><rect x="35.7040%" y="917" width="0.0477%" height="15" fill="rgb(213,115,40)" fg:x="77151" fg:w="103"/><text x="35.9540%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (103 samples, 0.05%)</title><rect x="35.7040%" y="901" width="0.0477%" height="15" fill="rgb(209,56,44)" fg:x="77151" fg:w="103"/><text x="35.9540%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (103 samples, 0.05%)</title><rect x="35.7040%" y="885" width="0.0477%" height="15" fill="rgb(230,108,32)" fg:x="77151" fg:w="103"/><text x="35.9540%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (103 samples, 0.05%)</title><rect x="35.7040%" y="869" width="0.0477%" height="15" fill="rgb(216,165,31)" fg:x="77151" fg:w="103"/><text x="35.9540%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (103 samples, 0.05%)</title><rect x="35.7040%" y="853" width="0.0477%" height="15" fill="rgb(218,122,21)" fg:x="77151" fg:w="103"/><text x="35.9540%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (103 samples, 0.05%)</title><rect x="35.7040%" y="837" width="0.0477%" height="15" fill="rgb(223,224,47)" fg:x="77151" fg:w="103"/><text x="35.9540%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (73 samples, 0.03%)</title><rect x="35.7535%" y="773" width="0.0338%" height="15" fill="rgb(238,102,44)" fg:x="77258" fg:w="73"/><text x="36.0035%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (73 samples, 0.03%)</title><rect x="35.7535%" y="757" width="0.0338%" height="15" fill="rgb(236,46,40)" fg:x="77258" fg:w="73"/><text x="36.0035%" y="767.50"></text></g><g><title>alloc::alloc::realloc (73 samples, 0.03%)</title><rect x="35.7535%" y="741" width="0.0338%" height="15" fill="rgb(247,202,50)" fg:x="77258" fg:w="73"/><text x="36.0035%" y="751.50"></text></g><g><title>realloc (72 samples, 0.03%)</title><rect x="35.7540%" y="725" width="0.0333%" height="15" fill="rgb(209,99,20)" fg:x="77259" fg:w="72"/><text x="36.0040%" y="735.50"></text></g><g><title>[libc.so.6] (67 samples, 0.03%)</title><rect x="35.7563%" y="709" width="0.0310%" height="15" fill="rgb(252,27,34)" fg:x="77264" fg:w="67"/><text x="36.0063%" y="719.50"></text></g><g><title>[libc.so.6] (61 samples, 0.03%)</title><rect x="35.7591%" y="693" width="0.0282%" height="15" fill="rgb(215,206,23)" fg:x="77270" fg:w="61"/><text x="36.0091%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (75 samples, 0.03%)</title><rect x="35.7531%" y="789" width="0.0347%" height="15" fill="rgb(212,135,36)" fg:x="77257" fg:w="75"/><text x="36.0031%" y="799.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (227 samples, 0.11%)</title><rect x="35.6832%" y="965" width="0.1051%" height="15" fill="rgb(240,189,1)" fg:x="77106" fg:w="227"/><text x="35.9332%" y="975.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (77 samples, 0.04%)</title><rect x="35.7526%" y="949" width="0.0356%" height="15" fill="rgb(242,56,20)" fg:x="77256" fg:w="77"/><text x="36.0026%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (77 samples, 0.04%)</title><rect x="35.7526%" y="933" width="0.0356%" height="15" fill="rgb(247,132,33)" fg:x="77256" fg:w="77"/><text x="36.0026%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (77 samples, 0.04%)</title><rect x="35.7526%" y="917" width="0.0356%" height="15" fill="rgb(208,149,11)" fg:x="77256" fg:w="77"/><text x="36.0026%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (77 samples, 0.04%)</title><rect x="35.7526%" y="901" width="0.0356%" height="15" fill="rgb(211,33,11)" fg:x="77256" fg:w="77"/><text x="36.0026%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (77 samples, 0.04%)</title><rect x="35.7526%" y="885" width="0.0356%" height="15" fill="rgb(221,29,38)" fg:x="77256" fg:w="77"/><text x="36.0026%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (77 samples, 0.04%)</title><rect x="35.7526%" y="869" width="0.0356%" height="15" fill="rgb(206,182,49)" fg:x="77256" fg:w="77"/><text x="36.0026%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (77 samples, 0.04%)</title><rect x="35.7526%" y="853" width="0.0356%" height="15" fill="rgb(216,140,1)" fg:x="77256" fg:w="77"/><text x="36.0026%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (77 samples, 0.04%)</title><rect x="35.7526%" y="837" width="0.0356%" height="15" fill="rgb(232,57,40)" fg:x="77256" fg:w="77"/><text x="36.0026%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (76 samples, 0.04%)</title><rect x="35.7531%" y="821" width="0.0352%" height="15" fill="rgb(224,186,18)" fg:x="77257" fg:w="76"/><text x="36.0031%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (76 samples, 0.04%)</title><rect x="35.7531%" y="805" width="0.0352%" height="15" fill="rgb(215,121,11)" fg:x="77257" fg:w="76"/><text x="36.0031%" y="815.50"></text></g><g><title>bitcoin::consensus::encode::serialize (256 samples, 0.12%)</title><rect x="35.6744%" y="997" width="0.1185%" height="15" fill="rgb(245,147,10)" fg:x="77087" fg:w="256"/><text x="35.9244%" y="1007.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (247 samples, 0.11%)</title><rect x="35.6786%" y="981" width="0.1143%" height="15" fill="rgb(238,153,13)" fg:x="77096" fg:w="247"/><text x="35.9286%" y="991.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (68 samples, 0.03%)</title><rect x="35.8100%" y="837" width="0.0315%" height="15" fill="rgb(233,108,0)" fg:x="77380" fg:w="68"/><text x="36.0600%" y="847.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (23 samples, 0.01%)</title><rect x="35.8308%" y="821" width="0.0106%" height="15" fill="rgb(212,157,17)" fg:x="77425" fg:w="23"/><text x="36.0808%" y="831.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (74 samples, 0.03%)</title><rect x="35.8086%" y="949" width="0.0342%" height="15" fill="rgb(225,213,38)" fg:x="77377" fg:w="74"/><text x="36.0586%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (74 samples, 0.03%)</title><rect x="35.8086%" y="933" width="0.0342%" height="15" fill="rgb(248,16,11)" fg:x="77377" fg:w="74"/><text x="36.0586%" y="943.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="35.8095%" y="917" width="0.0333%" height="15" fill="rgb(241,33,4)" fg:x="77379" fg:w="72"/><text x="36.0595%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (72 samples, 0.03%)</title><rect x="35.8095%" y="901" width="0.0333%" height="15" fill="rgb(222,26,43)" fg:x="77379" fg:w="72"/><text x="36.0595%" y="911.50"></text></g><g><title>std::io::Write::write_all (72 samples, 0.03%)</title><rect x="35.8095%" y="885" width="0.0333%" height="15" fill="rgb(243,29,36)" fg:x="77379" fg:w="72"/><text x="36.0595%" y="895.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (72 samples, 0.03%)</title><rect x="35.8095%" y="869" width="0.0333%" height="15" fill="rgb(241,9,27)" fg:x="77379" fg:w="72"/><text x="36.0595%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (71 samples, 0.03%)</title><rect x="35.8100%" y="853" width="0.0329%" height="15" fill="rgb(205,117,26)" fg:x="77380" fg:w="71"/><text x="36.0600%" y="863.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (101 samples, 0.05%)</title><rect x="35.8063%" y="965" width="0.0467%" height="15" fill="rgb(209,80,39)" fg:x="77372" fg:w="101"/><text x="36.0563%" y="975.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (61 samples, 0.03%)</title><rect x="35.8581%" y="901" width="0.0282%" height="15" fill="rgb(239,155,6)" fg:x="77484" fg:w="61"/><text x="36.1081%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (24 samples, 0.01%)</title><rect x="35.8752%" y="885" width="0.0111%" height="15" fill="rgb(212,104,12)" fg:x="77521" fg:w="24"/><text x="36.1252%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (66 samples, 0.03%)</title><rect x="35.8572%" y="917" width="0.0305%" height="15" fill="rgb(234,204,3)" fg:x="77482" fg:w="66"/><text x="36.1072%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (69 samples, 0.03%)</title><rect x="35.8572%" y="933" width="0.0319%" height="15" fill="rgb(251,218,7)" fg:x="77482" fg:w="69"/><text x="36.1072%" y="943.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (67 samples, 0.03%)</title><rect x="35.8919%" y="885" width="0.0310%" height="15" fill="rgb(221,81,32)" fg:x="77557" fg:w="67"/><text x="36.1419%" y="895.50"></text></g><g><title>floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader::block_hash (260 samples, 0.12%)</title><rect x="35.8040%" y="997" width="0.1203%" height="15" fill="rgb(214,152,26)" fg:x="77367" fg:w="260"/><text x="36.0540%" y="1007.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (260 samples, 0.12%)</title><rect x="35.8040%" y="981" width="0.1203%" height="15" fill="rgb(223,22,3)" fg:x="77367" fg:w="260"/><text x="36.0540%" y="991.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (151 samples, 0.07%)</title><rect x="35.8544%" y="965" width="0.0699%" height="15" fill="rgb(207,174,7)" fg:x="77476" fg:w="151"/><text x="36.1044%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (151 samples, 0.07%)</title><rect x="35.8544%" y="949" width="0.0699%" height="15" fill="rgb(224,19,52)" fg:x="77476" fg:w="151"/><text x="36.1044%" y="959.50"></text></g><g><title>bitcoin_hashes::Hash::hash (76 samples, 0.04%)</title><rect x="35.8891%" y="933" width="0.0352%" height="15" fill="rgb(228,24,14)" fg:x="77551" fg:w="76"/><text x="36.1391%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (75 samples, 0.03%)</title><rect x="35.8896%" y="917" width="0.0347%" height="15" fill="rgb(230,153,43)" fg:x="77552" fg:w="75"/><text x="36.1396%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (74 samples, 0.03%)</title><rect x="35.8900%" y="901" width="0.0342%" height="15" fill="rgb(231,106,12)" fg:x="77553" fg:w="74"/><text x="36.1400%" y="911.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.02%)</title><rect x="35.9956%" y="437" width="0.0162%" height="15" fill="rgb(215,92,2)" fg:x="77781" fg:w="35"/><text x="36.2456%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="35.9891%" y="501" width="0.0231%" height="15" fill="rgb(249,143,25)" fg:x="77767" fg:w="50"/><text x="36.2391%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (50 samples, 0.02%)</title><rect x="35.9891%" y="485" width="0.0231%" height="15" fill="rgb(252,7,35)" fg:x="77767" fg:w="50"/><text x="36.2391%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (50 samples, 0.02%)</title><rect x="35.9891%" y="469" width="0.0231%" height="15" fill="rgb(216,69,40)" fg:x="77767" fg:w="50"/><text x="36.2391%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (50 samples, 0.02%)</title><rect x="35.9891%" y="453" width="0.0231%" height="15" fill="rgb(240,36,33)" fg:x="77767" fg:w="50"/><text x="36.2391%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (52 samples, 0.02%)</title><rect x="35.9886%" y="549" width="0.0241%" height="15" fill="rgb(231,128,14)" fg:x="77766" fg:w="52"/><text x="36.2386%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (51 samples, 0.02%)</title><rect x="35.9891%" y="533" width="0.0236%" height="15" fill="rgb(245,143,14)" fg:x="77767" fg:w="51"/><text x="36.2391%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (51 samples, 0.02%)</title><rect x="35.9891%" y="517" width="0.0236%" height="15" fill="rgb(222,130,28)" fg:x="77767" fg:w="51"/><text x="36.2391%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (73 samples, 0.03%)</title><rect x="35.9794%" y="693" width="0.0338%" height="15" fill="rgb(212,10,48)" fg:x="77746" fg:w="73"/><text x="36.2294%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.03%)</title><rect x="35.9794%" y="677" width="0.0338%" height="15" fill="rgb(254,118,45)" fg:x="77746" fg:w="73"/><text x="36.2294%" y="687.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (73 samples, 0.03%)</title><rect x="35.9794%" y="661" width="0.0338%" height="15" fill="rgb(228,6,45)" fg:x="77746" fg:w="73"/><text x="36.2294%" y="671.50"></text></g><g><title>core::mem::drop (73 samples, 0.03%)</title><rect x="35.9794%" y="645" width="0.0338%" height="15" fill="rgb(241,18,35)" fg:x="77746" fg:w="73"/><text x="36.2294%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (73 samples, 0.03%)</title><rect x="35.9794%" y="629" width="0.0338%" height="15" fill="rgb(227,214,53)" fg:x="77746" fg:w="73"/><text x="36.2294%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (72 samples, 0.03%)</title><rect x="35.9798%" y="613" width="0.0333%" height="15" fill="rgb(224,107,51)" fg:x="77747" fg:w="72"/><text x="36.2298%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (62 samples, 0.03%)</title><rect x="35.9845%" y="597" width="0.0287%" height="15" fill="rgb(248,60,28)" fg:x="77757" fg:w="62"/><text x="36.2345%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (60 samples, 0.03%)</title><rect x="35.9854%" y="581" width="0.0278%" height="15" fill="rgb(249,101,23)" fg:x="77759" fg:w="60"/><text x="36.2354%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (60 samples, 0.03%)</title><rect x="35.9854%" y="565" width="0.0278%" height="15" fill="rgb(228,51,19)" fg:x="77759" fg:w="60"/><text x="36.2354%" y="575.50"></text></g><g><title>core::mem::drop (87 samples, 0.04%)</title><rect x="35.9780%" y="821" width="0.0403%" height="15" fill="rgb(213,20,6)" fg:x="77743" fg:w="87"/><text x="36.2280%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (87 samples, 0.04%)</title><rect x="35.9780%" y="805" width="0.0403%" height="15" fill="rgb(212,124,10)" fg:x="77743" fg:w="87"/><text x="36.2280%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (87 samples, 0.04%)</title><rect x="35.9780%" y="789" width="0.0403%" height="15" fill="rgb(248,3,40)" fg:x="77743" fg:w="87"/><text x="36.2280%" y="799.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (87 samples, 0.04%)</title><rect x="35.9780%" y="773" width="0.0403%" height="15" fill="rgb(223,178,23)" fg:x="77743" fg:w="87"/><text x="36.2280%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (87 samples, 0.04%)</title><rect x="35.9780%" y="757" width="0.0403%" height="15" fill="rgb(240,132,45)" fg:x="77743" fg:w="87"/><text x="36.2280%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (84 samples, 0.04%)</title><rect x="35.9794%" y="741" width="0.0389%" height="15" fill="rgb(245,164,36)" fg:x="77746" fg:w="84"/><text x="36.2294%" y="751.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (84 samples, 0.04%)</title><rect x="35.9794%" y="725" width="0.0389%" height="15" fill="rgb(231,188,53)" fg:x="77746" fg:w="84"/><text x="36.2294%" y="735.50"></text></g><g><title>core::mem::drop (84 samples, 0.04%)</title><rect x="35.9794%" y="709" width="0.0389%" height="15" fill="rgb(237,198,39)" fg:x="77746" fg:w="84"/><text x="36.2294%" y="719.50"></text></g><g><title>sled::pin (116 samples, 0.05%)</title><rect x="35.9669%" y="965" width="0.0537%" height="15" fill="rgb(223,120,35)" fg:x="77719" fg:w="116"/><text x="36.2169%" y="975.50"></text></g><g><title>crossbeam_epoch::default::pin (111 samples, 0.05%)</title><rect x="35.9692%" y="949" width="0.0514%" height="15" fill="rgb(253,107,49)" fg:x="77724" fg:w="111"/><text x="36.2192%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle (111 samples, 0.05%)</title><rect x="35.9692%" y="933" width="0.0514%" height="15" fill="rgb(216,44,31)" fg:x="77724" fg:w="111"/><text x="36.2192%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (111 samples, 0.05%)</title><rect x="35.9692%" y="917" width="0.0514%" height="15" fill="rgb(253,87,21)" fg:x="77724" fg:w="111"/><text x="36.2192%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (107 samples, 0.05%)</title><rect x="35.9710%" y="901" width="0.0495%" height="15" fill="rgb(226,18,2)" fg:x="77728" fg:w="107"/><text x="36.2210%" y="911.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (107 samples, 0.05%)</title><rect x="35.9710%" y="885" width="0.0495%" height="15" fill="rgb(216,8,46)" fg:x="77728" fg:w="107"/><text x="36.2210%" y="895.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (107 samples, 0.05%)</title><rect x="35.9710%" y="869" width="0.0495%" height="15" fill="rgb(226,140,39)" fg:x="77728" fg:w="107"/><text x="36.2210%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (107 samples, 0.05%)</title><rect x="35.9710%" y="853" width="0.0495%" height="15" fill="rgb(221,194,54)" fg:x="77728" fg:w="107"/><text x="36.2210%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (92 samples, 0.04%)</title><rect x="35.9780%" y="837" width="0.0426%" height="15" fill="rgb(213,92,11)" fg:x="77743" fg:w="92"/><text x="36.2280%" y="847.50"></text></g><g><title>sled::node::Node::node_kv_pair (67 samples, 0.03%)</title><rect x="36.0451%" y="949" width="0.0310%" height="15" fill="rgb(229,162,46)" fg:x="77888" fg:w="67"/><text x="36.2951%" y="959.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (42 samples, 0.02%)</title><rect x="36.0566%" y="933" width="0.0194%" height="15" fill="rgb(214,111,36)" fg:x="77913" fg:w="42"/><text x="36.3066%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (40 samples, 0.02%)</title><rect x="36.0576%" y="917" width="0.0185%" height="15" fill="rgb(207,6,21)" fg:x="77915" fg:w="40"/><text x="36.3076%" y="927.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key::{{closure}} (38 samples, 0.02%)</title><rect x="36.0585%" y="901" width="0.0176%" height="15" fill="rgb(213,127,38)" fg:x="77917" fg:w="38"/><text x="36.3085%" y="911.50"></text></g><g><title>sled::fastcmp::fastcmp (25 samples, 0.01%)</title><rect x="36.0645%" y="885" width="0.0116%" height="15" fill="rgb(238,118,32)" fg:x="77930" fg:w="25"/><text x="36.3145%" y="895.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="36.0654%" y="869" width="0.0106%" height="15" fill="rgb(240,139,39)" fg:x="77932" fg:w="23"/><text x="36.3154%" y="879.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (454 samples, 0.21%)</title><rect x="36.0964%" y="821" width="0.2101%" height="15" fill="rgb(235,10,37)" fg:x="77999" fg:w="454"/><text x="36.3464%" y="831.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (451 samples, 0.21%)</title><rect x="36.0978%" y="805" width="0.2087%" height="15" fill="rgb(249,171,38)" fg:x="78002" fg:w="451"/><text x="36.3478%" y="815.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (444 samples, 0.21%)</title><rect x="36.1011%" y="789" width="0.2055%" height="15" fill="rgb(242,144,32)" fg:x="78009" fg:w="444"/><text x="36.3511%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (56 samples, 0.03%)</title><rect x="36.3065%" y="821" width="0.0259%" height="15" fill="rgb(217,117,21)" fg:x="78453" fg:w="56"/><text x="36.5565%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (56 samples, 0.03%)</title><rect x="36.3065%" y="805" width="0.0259%" height="15" fill="rgb(249,87,1)" fg:x="78453" fg:w="56"/><text x="36.5565%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.03%)</title><rect x="36.3065%" y="789" width="0.0259%" height="15" fill="rgb(248,196,48)" fg:x="78453" fg:w="56"/><text x="36.5565%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.03%)</title><rect x="36.3070%" y="773" width="0.0255%" height="15" fill="rgb(251,206,33)" fg:x="78454" fg:w="55"/><text x="36.5570%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.03%)</title><rect x="36.3070%" y="757" width="0.0255%" height="15" fill="rgb(232,141,28)" fg:x="78454" fg:w="55"/><text x="36.5570%" y="767.50"></text></g><g><title>alloc::alloc::alloc (55 samples, 0.03%)</title><rect x="36.3070%" y="741" width="0.0255%" height="15" fill="rgb(209,167,14)" fg:x="78454" fg:w="55"/><text x="36.5570%" y="751.50"></text></g><g><title>malloc (51 samples, 0.02%)</title><rect x="36.3089%" y="725" width="0.0236%" height="15" fill="rgb(225,11,50)" fg:x="78458" fg:w="51"/><text x="36.5589%" y="735.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (536 samples, 0.25%)</title><rect x="36.0853%" y="933" width="0.2481%" height="15" fill="rgb(209,50,20)" fg:x="77975" fg:w="536"/><text x="36.3353%" y="943.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (518 samples, 0.24%)</title><rect x="36.0937%" y="917" width="0.2397%" height="15" fill="rgb(212,17,46)" fg:x="77993" fg:w="518"/><text x="36.3437%" y="927.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (518 samples, 0.24%)</title><rect x="36.0937%" y="901" width="0.2397%" height="15" fill="rgb(216,101,39)" fg:x="77993" fg:w="518"/><text x="36.3437%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (518 samples, 0.24%)</title><rect x="36.0937%" y="885" width="0.2397%" height="15" fill="rgb(212,228,48)" fg:x="77993" fg:w="518"/><text x="36.3437%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (514 samples, 0.24%)</title><rect x="36.0955%" y="869" width="0.2379%" height="15" fill="rgb(250,6,50)" fg:x="77997" fg:w="514"/><text x="36.3455%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (514 samples, 0.24%)</title><rect x="36.0955%" y="853" width="0.2379%" height="15" fill="rgb(250,160,48)" fg:x="77997" fg:w="514"/><text x="36.3455%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (514 samples, 0.24%)</title><rect x="36.0955%" y="837" width="0.2379%" height="15" fill="rgb(244,216,33)" fg:x="77997" fg:w="514"/><text x="36.3455%" y="847.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_destroy (36 samples, 0.02%)</title><rect x="36.3602%" y="933" width="0.0167%" height="15" fill="rgb(207,157,5)" fg:x="78569" fg:w="36"/><text x="36.6102%" y="943.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked (31 samples, 0.01%)</title><rect x="36.3625%" y="917" width="0.0143%" height="15" fill="rgb(228,199,8)" fg:x="78574" fg:w="31"/><text x="36.6125%" y="927.50"></text></g><g><title>crossbeam_epoch::internal::Local::defer (30 samples, 0.01%)</title><rect x="36.3630%" y="901" width="0.0139%" height="15" fill="rgb(227,80,20)" fg:x="78575" fg:w="30"/><text x="36.6130%" y="911.50"></text></g><g><title>crossbeam_epoch::internal::Global::push_bag (23 samples, 0.01%)</title><rect x="36.3662%" y="885" width="0.0106%" height="15" fill="rgb(222,9,33)" fg:x="78582" fg:w="23"/><text x="36.6162%" y="895.50"></text></g><g><title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::push (23 samples, 0.01%)</title><rect x="36.3662%" y="869" width="0.0106%" height="15" fill="rgb(239,44,28)" fg:x="78582" fg:w="23"/><text x="36.6162%" y="879.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (23 samples, 0.01%)</title><rect x="36.3662%" y="853" width="0.0106%" height="15" fill="rgb(249,187,43)" fg:x="78582" fg:w="23"/><text x="36.6162%" y="863.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (23 samples, 0.01%)</title><rect x="36.3662%" y="837" width="0.0106%" height="15" fill="rgb(216,141,28)" fg:x="78582" fg:w="23"/><text x="36.6162%" y="847.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (23 samples, 0.01%)</title><rect x="36.3662%" y="821" width="0.0106%" height="15" fill="rgb(230,154,53)" fg:x="78582" fg:w="23"/><text x="36.6162%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23 samples, 0.01%)</title><rect x="36.3662%" y="805" width="0.0106%" height="15" fill="rgb(227,82,4)" fg:x="78582" fg:w="23"/><text x="36.6162%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.01%)</title><rect x="36.3667%" y="789" width="0.0102%" height="15" fill="rgb(220,107,16)" fg:x="78583" fg:w="22"/><text x="36.6167%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.01%)</title><rect x="36.3667%" y="773" width="0.0102%" height="15" fill="rgb(207,187,2)" fg:x="78583" fg:w="22"/><text x="36.6167%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.01%)</title><rect x="36.3667%" y="757" width="0.0102%" height="15" fill="rgb(210,162,52)" fg:x="78583" fg:w="22"/><text x="36.6167%" y="767.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.01%)</title><rect x="36.3667%" y="741" width="0.0102%" height="15" fill="rgb(217,216,49)" fg:x="78583" fg:w="22"/><text x="36.6167%" y="751.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="36.3667%" y="725" width="0.0102%" height="15" fill="rgb(218,146,49)" fg:x="78583" fg:w="22"/><text x="36.6167%" y="735.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="36.3667%" y="709" width="0.0102%" height="15" fill="rgb(216,55,40)" fg:x="78583" fg:w="22"/><text x="36.6167%" y="719.50"></text></g><g><title>sled::node::Node::apply (50 samples, 0.02%)</title><rect x="36.3875%" y="933" width="0.0231%" height="15" fill="rgb(208,196,21)" fg:x="78628" fg:w="50"/><text x="36.6375%" y="943.50"></text></g><g><title>sled::node::Node::set_leaf (26 samples, 0.01%)</title><rect x="36.3986%" y="917" width="0.0120%" height="15" fill="rgb(242,117,42)" fg:x="78652" fg:w="26"/><text x="36.6486%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (34 samples, 0.02%)</title><rect x="36.4111%" y="917" width="0.0157%" height="15" fill="rgb(210,11,23)" fg:x="78679" fg:w="34"/><text x="36.6611%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (22 samples, 0.01%)</title><rect x="36.4269%" y="917" width="0.0102%" height="15" fill="rgb(217,110,2)" fg:x="78713" fg:w="22"/><text x="36.6769%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::replace (61 samples, 0.03%)</title><rect x="36.4111%" y="933" width="0.0282%" height="15" fill="rgb(229,77,54)" fg:x="78679" fg:w="61"/><text x="36.6611%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (42 samples, 0.02%)</title><rect x="36.4912%" y="901" width="0.0194%" height="15" fill="rgb(218,53,16)" fg:x="78852" fg:w="42"/><text x="36.7412%" y="911.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (137 samples, 0.06%)</title><rect x="36.4482%" y="933" width="0.0634%" height="15" fill="rgb(215,38,13)" fg:x="78759" fg:w="137"/><text x="36.6982%" y="943.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (131 samples, 0.06%)</title><rect x="36.4509%" y="917" width="0.0606%" height="15" fill="rgb(235,42,18)" fg:x="78765" fg:w="131"/><text x="36.7009%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.02%)</title><rect x="36.5722%" y="821" width="0.0171%" height="15" fill="rgb(219,66,54)" fg:x="79027" fg:w="37"/><text x="36.8222%" y="831.50"></text></g><g><title>sled::calculate_message_crc32 (161 samples, 0.07%)</title><rect x="36.5153%" y="901" width="0.0745%" height="15" fill="rgb(222,205,4)" fg:x="78904" fg:w="161"/><text x="36.7653%" y="911.50"></text></g><g><title>crc32fast::Hasher::update (147 samples, 0.07%)</title><rect x="36.5217%" y="885" width="0.0680%" height="15" fill="rgb(227,213,46)" fg:x="78918" fg:w="147"/><text x="36.7717%" y="895.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (146 samples, 0.07%)</title><rect x="36.5222%" y="869" width="0.0676%" height="15" fill="rgb(250,145,42)" fg:x="78919" fg:w="146"/><text x="36.7722%" y="879.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (145 samples, 0.07%)</title><rect x="36.5227%" y="853" width="0.0671%" height="15" fill="rgb(219,15,2)" fg:x="78920" fg:w="145"/><text x="36.7727%" y="863.50"></text></g><g><title>crc32fast::baseline::update_slow (71 samples, 0.03%)</title><rect x="36.5569%" y="837" width="0.0329%" height="15" fill="rgb(231,181,52)" fg:x="78994" fg:w="71"/><text x="36.8069%" y="847.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (183 samples, 0.08%)</title><rect x="36.5116%" y="933" width="0.0847%" height="15" fill="rgb(235,1,42)" fg:x="78896" fg:w="183"/><text x="36.7616%" y="943.50"></text></g><g><title>sled::pagecache::reservation::Reservation::flush (175 samples, 0.08%)</title><rect x="36.5153%" y="917" width="0.0810%" height="15" fill="rgb(249,88,27)" fg:x="78904" fg:w="175"/><text x="36.7653%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::link (1,128 samples, 0.52%)</title><rect x="36.0761%" y="949" width="0.5220%" height="15" fill="rgb(235,145,16)" fg:x="77955" fg:w="1128"/><text x="36.3261%" y="959.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (22 samples, 0.01%)</title><rect x="36.6347%" y="885" width="0.0102%" height="15" fill="rgb(237,114,19)" fg:x="79162" fg:w="22"/><text x="36.8847%" y="895.50"></text></g><g><title>sled::binary_search::binary_search_lub (80 samples, 0.04%)</title><rect x="36.6296%" y="917" width="0.0370%" height="15" fill="rgb(238,51,50)" fg:x="79151" fg:w="80"/><text x="36.8796%" y="927.50"></text></g><g><title>sled::binary_search::binary_search (76 samples, 0.04%)</title><rect x="36.6314%" y="901" width="0.0352%" height="15" fill="rgb(205,194,25)" fg:x="79155" fg:w="76"/><text x="36.8814%" y="911.50"></text></g><g><title>sled::fastcmp::fastcmp (33 samples, 0.02%)</title><rect x="36.6513%" y="885" width="0.0153%" height="15" fill="rgb(215,203,17)" fg:x="79198" fg:w="33"/><text x="36.9013%" y="895.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="36.6522%" y="869" width="0.0143%" height="15" fill="rgb(233,112,49)" fg:x="79200" fg:w="31"/><text x="36.9022%" y="879.50"></text></g><g><title>sled::node::Node::index_next_node (96 samples, 0.04%)</title><rect x="36.6236%" y="933" width="0.0444%" height="15" fill="rgb(241,130,26)" fg:x="79138" fg:w="96"/><text x="36.8736%" y="943.50"></text></g><g><title>sled::lru::Lru::accessed (36 samples, 0.02%)</title><rect x="36.6823%" y="901" width="0.0167%" height="15" fill="rgb(252,223,19)" fg:x="79265" fg:w="36"/><text x="36.9323%" y="911.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (1,722 samples, 0.80%)</title><rect x="35.9243%" y="997" width="0.7969%" height="15" fill="rgb(211,95,25)" fg:x="77627" fg:w="1722"/><text x="36.1743%" y="1007.50"></text></g><g><title>sled::tree::Tree::insert (1,666 samples, 0.77%)</title><rect x="35.9502%" y="981" width="0.7710%" height="15" fill="rgb(251,182,27)" fg:x="77683" fg:w="1666"/><text x="36.2002%" y="991.50"></text></g><g><title>sled::tree::Tree::insert_inner (1,514 samples, 0.70%)</title><rect x="36.0205%" y="965" width="0.7007%" height="15" fill="rgb(238,24,4)" fg:x="77835" fg:w="1514"/><text x="36.2705%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_key (250 samples, 0.12%)</title><rect x="36.6055%" y="949" width="0.1157%" height="15" fill="rgb(224,220,25)" fg:x="79099" fg:w="250"/><text x="36.8555%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_pid (114 samples, 0.05%)</title><rect x="36.6684%" y="933" width="0.0528%" height="15" fill="rgb(239,133,26)" fg:x="79235" fg:w="114"/><text x="36.9184%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::get (95 samples, 0.04%)</title><rect x="36.6772%" y="917" width="0.0440%" height="15" fill="rgb(211,94,48)" fg:x="79254" fg:w="95"/><text x="36.9272%" y="927.50"></text></g><g><title>sled::pagecache::pagetable::PageTable::get (25 samples, 0.01%)</title><rect x="36.7096%" y="901" width="0.0116%" height="15" fill="rgb(239,87,6)" fg:x="79324" fg:w="25"/><text x="36.9596%" y="911.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::save_header (2,297 samples, 1.06%)</title><rect x="35.6707%" y="1013" width="1.0630%" height="15" fill="rgb(227,62,0)" fg:x="77079" fg:w="2297"/><text x="35.9207%" y="1023.50"></text></g><g><title>kv::store::Store::bucket (27 samples, 0.01%)</title><rect x="36.7212%" y="997" width="0.0125%" height="15" fill="rgb(211,226,4)" fg:x="79349" fg:w="27"/><text x="36.9712%" y="1007.50"></text></g><g><title>sled::db::Db::open_tree (27 samples, 0.01%)</title><rect x="36.7212%" y="981" width="0.0125%" height="15" fill="rgb(253,38,52)" fg:x="79349" fg:w="27"/><text x="36.9712%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (61 samples, 0.03%)</title><rect x="36.7383%" y="757" width="0.0282%" height="15" fill="rgb(229,126,40)" fg:x="79386" fg:w="61"/><text x="36.9883%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (61 samples, 0.03%)</title><rect x="36.7383%" y="741" width="0.0282%" height="15" fill="rgb(229,165,44)" fg:x="79386" fg:w="61"/><text x="36.9883%" y="751.50"></text></g><g><title>alloc::alloc::realloc (61 samples, 0.03%)</title><rect x="36.7383%" y="725" width="0.0282%" height="15" fill="rgb(247,95,47)" fg:x="79386" fg:w="61"/><text x="36.9883%" y="735.50"></text></g><g><title>realloc (60 samples, 0.03%)</title><rect x="36.7388%" y="709" width="0.0278%" height="15" fill="rgb(216,140,30)" fg:x="79387" fg:w="60"/><text x="36.9888%" y="719.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="36.7429%" y="693" width="0.0236%" height="15" fill="rgb(246,214,8)" fg:x="79396" fg:w="51"/><text x="36.9929%" y="703.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="36.7443%" y="677" width="0.0222%" height="15" fill="rgb(227,224,15)" fg:x="79399" fg:w="48"/><text x="36.9943%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (63 samples, 0.03%)</title><rect x="36.7379%" y="773" width="0.0292%" height="15" fill="rgb(233,175,4)" fg:x="79385" fg:w="63"/><text x="36.9879%" y="783.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (67 samples, 0.03%)</title><rect x="36.7365%" y="933" width="0.0310%" height="15" fill="rgb(221,66,45)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (67 samples, 0.03%)</title><rect x="36.7365%" y="917" width="0.0310%" height="15" fill="rgb(221,178,18)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (67 samples, 0.03%)</title><rect x="36.7365%" y="901" width="0.0310%" height="15" fill="rgb(213,81,29)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (67 samples, 0.03%)</title><rect x="36.7365%" y="885" width="0.0310%" height="15" fill="rgb(220,89,49)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (67 samples, 0.03%)</title><rect x="36.7365%" y="869" width="0.0310%" height="15" fill="rgb(227,60,33)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (67 samples, 0.03%)</title><rect x="36.7365%" y="853" width="0.0310%" height="15" fill="rgb(205,113,12)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (67 samples, 0.03%)</title><rect x="36.7365%" y="837" width="0.0310%" height="15" fill="rgb(211,32,1)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (67 samples, 0.03%)</title><rect x="36.7365%" y="821" width="0.0310%" height="15" fill="rgb(246,2,12)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (67 samples, 0.03%)</title><rect x="36.7365%" y="805" width="0.0310%" height="15" fill="rgb(243,37,27)" fg:x="79382" fg:w="67"/><text x="36.9865%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (66 samples, 0.03%)</title><rect x="36.7369%" y="789" width="0.0305%" height="15" fill="rgb(248,211,31)" fg:x="79383" fg:w="66"/><text x="36.9869%" y="799.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (70 samples, 0.03%)</title><rect x="36.7365%" y="965" width="0.0324%" height="15" fill="rgb(242,146,47)" fg:x="79382" fg:w="70"/><text x="36.9865%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (70 samples, 0.03%)</title><rect x="36.7365%" y="949" width="0.0324%" height="15" fill="rgb(206,70,20)" fg:x="79382" fg:w="70"/><text x="36.9865%" y="959.50"></text></g><g><title>bitcoin::consensus::encode::serialize (112 samples, 0.05%)</title><rect x="36.7360%" y="997" width="0.0518%" height="15" fill="rgb(215,10,51)" fg:x="79381" fg:w="112"/><text x="36.9860%" y="1007.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::BestChain as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (112 samples, 0.05%)</title><rect x="36.7360%" y="981" width="0.0518%" height="15" fill="rgb(243,178,53)" fg:x="79381" fg:w="112"/><text x="36.9860%" y="991.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (41 samples, 0.02%)</title><rect x="36.7689%" y="965" width="0.0190%" height="15" fill="rgb(233,221,20)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (41 samples, 0.02%)</title><rect x="36.7689%" y="949" width="0.0190%" height="15" fill="rgb(218,95,35)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (41 samples, 0.02%)</title><rect x="36.7689%" y="933" width="0.0190%" height="15" fill="rgb(229,13,5)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (41 samples, 0.02%)</title><rect x="36.7689%" y="917" width="0.0190%" height="15" fill="rgb(252,164,30)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (41 samples, 0.02%)</title><rect x="36.7689%" y="901" width="0.0190%" height="15" fill="rgb(232,68,36)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (41 samples, 0.02%)</title><rect x="36.7689%" y="885" width="0.0190%" height="15" fill="rgb(219,59,54)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (41 samples, 0.02%)</title><rect x="36.7689%" y="869" width="0.0190%" height="15" fill="rgb(250,92,33)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41 samples, 0.02%)</title><rect x="36.7689%" y="853" width="0.0190%" height="15" fill="rgb(229,162,54)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.02%)</title><rect x="36.7689%" y="837" width="0.0190%" height="15" fill="rgb(244,114,52)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.02%)</title><rect x="36.7689%" y="821" width="0.0190%" height="15" fill="rgb(212,211,43)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.02%)</title><rect x="36.7689%" y="805" width="0.0190%" height="15" fill="rgb(226,147,8)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (41 samples, 0.02%)</title><rect x="36.7689%" y="789" width="0.0190%" height="15" fill="rgb(226,23,13)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (41 samples, 0.02%)</title><rect x="36.7689%" y="773" width="0.0190%" height="15" fill="rgb(240,63,4)" fg:x="79452" fg:w="41"/><text x="37.0189%" y="783.50"></text></g><g><title>alloc::alloc::realloc (40 samples, 0.02%)</title><rect x="36.7693%" y="757" width="0.0185%" height="15" fill="rgb(221,1,32)" fg:x="79453" fg:w="40"/><text x="37.0193%" y="767.50"></text></g><g><title>realloc (40 samples, 0.02%)</title><rect x="36.7693%" y="741" width="0.0185%" height="15" fill="rgb(242,117,10)" fg:x="79453" fg:w="40"/><text x="37.0193%" y="751.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="36.7712%" y="725" width="0.0167%" height="15" fill="rgb(249,172,44)" fg:x="79457" fg:w="36"/><text x="37.0212%" y="735.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="36.7758%" y="709" width="0.0120%" height="15" fill="rgb(244,46,45)" fg:x="79467" fg:w="26"/><text x="37.0258%" y="719.50"></text></g><g><title>kv::key::Key::to_raw_key (26 samples, 0.01%)</title><rect x="36.8128%" y="981" width="0.0120%" height="15" fill="rgb(206,43,17)" fg:x="79547" fg:w="26"/><text x="37.0628%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="36.8448%" y="501" width="0.0231%" height="15" fill="rgb(239,218,39)" fg:x="79616" fg:w="50"/><text x="37.0948%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (50 samples, 0.02%)</title><rect x="36.8448%" y="485" width="0.0231%" height="15" fill="rgb(208,169,54)" fg:x="79616" fg:w="50"/><text x="37.0948%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (50 samples, 0.02%)</title><rect x="36.8448%" y="469" width="0.0231%" height="15" fill="rgb(247,25,42)" fg:x="79616" fg:w="50"/><text x="37.0948%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (50 samples, 0.02%)</title><rect x="36.8448%" y="453" width="0.0231%" height="15" fill="rgb(226,23,31)" fg:x="79616" fg:w="50"/><text x="37.0948%" y="463.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.02%)</title><rect x="36.8503%" y="437" width="0.0176%" height="15" fill="rgb(247,16,28)" fg:x="79628" fg:w="38"/><text x="37.1003%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (75 samples, 0.03%)</title><rect x="36.8341%" y="693" width="0.0347%" height="15" fill="rgb(231,147,38)" fg:x="79593" fg:w="75"/><text x="37.0841%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.03%)</title><rect x="36.8341%" y="677" width="0.0347%" height="15" fill="rgb(253,81,48)" fg:x="79593" fg:w="75"/><text x="37.0841%" y="687.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (75 samples, 0.03%)</title><rect x="36.8341%" y="661" width="0.0347%" height="15" fill="rgb(249,222,43)" fg:x="79593" fg:w="75"/><text x="37.0841%" y="671.50"></text></g><g><title>core::mem::drop (75 samples, 0.03%)</title><rect x="36.8341%" y="645" width="0.0347%" height="15" fill="rgb(221,3,27)" fg:x="79593" fg:w="75"/><text x="37.0841%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (75 samples, 0.03%)</title><rect x="36.8341%" y="629" width="0.0347%" height="15" fill="rgb(228,180,5)" fg:x="79593" fg:w="75"/><text x="37.0841%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (75 samples, 0.03%)</title><rect x="36.8341%" y="613" width="0.0347%" height="15" fill="rgb(227,131,42)" fg:x="79593" fg:w="75"/><text x="37.0841%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (63 samples, 0.03%)</title><rect x="36.8397%" y="597" width="0.0292%" height="15" fill="rgb(212,3,39)" fg:x="79605" fg:w="63"/><text x="37.0897%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (57 samples, 0.03%)</title><rect x="36.8424%" y="581" width="0.0264%" height="15" fill="rgb(226,45,5)" fg:x="79611" fg:w="57"/><text x="37.0924%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (57 samples, 0.03%)</title><rect x="36.8424%" y="565" width="0.0264%" height="15" fill="rgb(215,167,45)" fg:x="79611" fg:w="57"/><text x="37.0924%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (52 samples, 0.02%)</title><rect x="36.8448%" y="549" width="0.0241%" height="15" fill="rgb(250,218,53)" fg:x="79616" fg:w="52"/><text x="37.0948%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (52 samples, 0.02%)</title><rect x="36.8448%" y="533" width="0.0241%" height="15" fill="rgb(207,140,0)" fg:x="79616" fg:w="52"/><text x="37.0948%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (52 samples, 0.02%)</title><rect x="36.8448%" y="517" width="0.0241%" height="15" fill="rgb(238,133,51)" fg:x="79616" fg:w="52"/><text x="37.0948%" y="527.50"></text></g><g><title>core::mem::drop (90 samples, 0.04%)</title><rect x="36.8318%" y="821" width="0.0417%" height="15" fill="rgb(218,203,53)" fg:x="79588" fg:w="90"/><text x="37.0818%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (90 samples, 0.04%)</title><rect x="36.8318%" y="805" width="0.0417%" height="15" fill="rgb(226,184,25)" fg:x="79588" fg:w="90"/><text x="37.0818%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (90 samples, 0.04%)</title><rect x="36.8318%" y="789" width="0.0417%" height="15" fill="rgb(231,121,21)" fg:x="79588" fg:w="90"/><text x="37.0818%" y="799.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (90 samples, 0.04%)</title><rect x="36.8318%" y="773" width="0.0417%" height="15" fill="rgb(251,14,34)" fg:x="79588" fg:w="90"/><text x="37.0818%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (90 samples, 0.04%)</title><rect x="36.8318%" y="757" width="0.0417%" height="15" fill="rgb(249,193,11)" fg:x="79588" fg:w="90"/><text x="37.0818%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (86 samples, 0.04%)</title><rect x="36.8337%" y="741" width="0.0398%" height="15" fill="rgb(220,172,37)" fg:x="79592" fg:w="86"/><text x="37.0837%" y="751.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (85 samples, 0.04%)</title><rect x="36.8341%" y="725" width="0.0393%" height="15" fill="rgb(231,229,43)" fg:x="79593" fg:w="85"/><text x="37.0841%" y="735.50"></text></g><g><title>core::mem::drop (85 samples, 0.04%)</title><rect x="36.8341%" y="709" width="0.0393%" height="15" fill="rgb(250,161,5)" fg:x="79593" fg:w="85"/><text x="37.0841%" y="719.50"></text></g><g><title>sled::pin (97 samples, 0.04%)</title><rect x="36.8300%" y="965" width="0.0449%" height="15" fill="rgb(218,225,18)" fg:x="79584" fg:w="97"/><text x="37.0800%" y="975.50"></text></g><g><title>crossbeam_epoch::default::pin (95 samples, 0.04%)</title><rect x="36.8309%" y="949" width="0.0440%" height="15" fill="rgb(245,45,42)" fg:x="79586" fg:w="95"/><text x="37.0809%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle (95 samples, 0.04%)</title><rect x="36.8309%" y="933" width="0.0440%" height="15" fill="rgb(211,115,1)" fg:x="79586" fg:w="95"/><text x="37.0809%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (95 samples, 0.04%)</title><rect x="36.8309%" y="917" width="0.0440%" height="15" fill="rgb(248,133,52)" fg:x="79586" fg:w="95"/><text x="37.0809%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (95 samples, 0.04%)</title><rect x="36.8309%" y="901" width="0.0440%" height="15" fill="rgb(238,100,21)" fg:x="79586" fg:w="95"/><text x="37.0809%" y="911.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (95 samples, 0.04%)</title><rect x="36.8309%" y="885" width="0.0440%" height="15" fill="rgb(247,144,11)" fg:x="79586" fg:w="95"/><text x="37.0809%" y="895.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (95 samples, 0.04%)</title><rect x="36.8309%" y="869" width="0.0440%" height="15" fill="rgb(206,164,16)" fg:x="79586" fg:w="95"/><text x="37.0809%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (95 samples, 0.04%)</title><rect x="36.8309%" y="853" width="0.0440%" height="15" fill="rgb(222,34,3)" fg:x="79586" fg:w="95"/><text x="37.0809%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (93 samples, 0.04%)</title><rect x="36.8318%" y="837" width="0.0430%" height="15" fill="rgb(248,82,4)" fg:x="79588" fg:w="93"/><text x="37.0818%" y="847.50"></text></g><g><title>sled::node::Node::node_kv_pair (38 samples, 0.02%)</title><rect x="36.8864%" y="949" width="0.0176%" height="15" fill="rgb(228,81,46)" fg:x="79706" fg:w="38"/><text x="37.1364%" y="959.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (23 samples, 0.01%)</title><rect x="36.8934%" y="933" width="0.0106%" height="15" fill="rgb(227,67,47)" fg:x="79721" fg:w="23"/><text x="37.1434%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (22 samples, 0.01%)</title><rect x="36.8938%" y="917" width="0.0102%" height="15" fill="rgb(215,93,53)" fg:x="79722" fg:w="22"/><text x="37.1438%" y="927.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (22 samples, 0.01%)</title><rect x="36.9086%" y="821" width="0.0102%" height="15" fill="rgb(248,194,39)" fg:x="79754" fg:w="22"/><text x="37.1586%" y="831.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="36.9072%" y="933" width="0.0176%" height="15" fill="rgb(215,5,19)" fg:x="79751" fg:w="38"/><text x="37.1572%" y="943.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="36.9072%" y="917" width="0.0176%" height="15" fill="rgb(226,215,51)" fg:x="79751" fg:w="38"/><text x="37.1572%" y="927.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (37 samples, 0.02%)</title><rect x="36.9077%" y="901" width="0.0171%" height="15" fill="rgb(225,56,26)" fg:x="79752" fg:w="37"/><text x="37.1577%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.02%)</title><rect x="36.9077%" y="885" width="0.0171%" height="15" fill="rgb(222,75,29)" fg:x="79752" fg:w="37"/><text x="37.1577%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36 samples, 0.02%)</title><rect x="36.9082%" y="869" width="0.0167%" height="15" fill="rgb(236,139,6)" fg:x="79753" fg:w="36"/><text x="37.1582%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (36 samples, 0.02%)</title><rect x="36.9082%" y="853" width="0.0167%" height="15" fill="rgb(223,137,36)" fg:x="79753" fg:w="36"/><text x="37.1582%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36 samples, 0.02%)</title><rect x="36.9082%" y="837" width="0.0167%" height="15" fill="rgb(226,99,2)" fg:x="79753" fg:w="36"/><text x="37.1582%" y="847.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_destroy (24 samples, 0.01%)</title><rect x="36.9480%" y="933" width="0.0111%" height="15" fill="rgb(206,133,23)" fg:x="79839" fg:w="24"/><text x="37.1980%" y="943.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked (24 samples, 0.01%)</title><rect x="36.9480%" y="917" width="0.0111%" height="15" fill="rgb(243,173,15)" fg:x="79839" fg:w="24"/><text x="37.1980%" y="927.50"></text></g><g><title>crossbeam_epoch::internal::Local::defer (24 samples, 0.01%)</title><rect x="36.9480%" y="901" width="0.0111%" height="15" fill="rgb(228,69,28)" fg:x="79839" fg:w="24"/><text x="37.1980%" y="911.50"></text></g><g><title>crossbeam_epoch::internal::Global::push_bag (22 samples, 0.01%)</title><rect x="36.9489%" y="885" width="0.0102%" height="15" fill="rgb(212,51,22)" fg:x="79841" fg:w="22"/><text x="37.1989%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (62 samples, 0.03%)</title><rect x="37.0095%" y="805" width="0.0287%" height="15" fill="rgb(227,113,0)" fg:x="79972" fg:w="62"/><text x="37.2595%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (62 samples, 0.03%)</title><rect x="37.0095%" y="789" width="0.0287%" height="15" fill="rgb(252,84,27)" fg:x="79972" fg:w="62"/><text x="37.2595%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (55 samples, 0.03%)</title><rect x="37.0127%" y="773" width="0.0255%" height="15" fill="rgb(223,145,39)" fg:x="79979" fg:w="55"/><text x="37.2627%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (55 samples, 0.03%)</title><rect x="37.0127%" y="757" width="0.0255%" height="15" fill="rgb(239,219,30)" fg:x="79979" fg:w="55"/><text x="37.2627%" y="767.50"></text></g><g><title>sled::pagecache::segment::Segment::insert_pid (83 samples, 0.04%)</title><rect x="37.0081%" y="853" width="0.0384%" height="15" fill="rgb(224,196,39)" fg:x="79969" fg:w="83"/><text x="37.2581%" y="863.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (82 samples, 0.04%)</title><rect x="37.0086%" y="837" width="0.0379%" height="15" fill="rgb(205,35,43)" fg:x="79970" fg:w="82"/><text x="37.2586%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (82 samples, 0.04%)</title><rect x="37.0086%" y="821" width="0.0379%" height="15" fill="rgb(228,201,21)" fg:x="79970" fg:w="82"/><text x="37.2586%" y="831.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::apply_op (125 samples, 0.06%)</title><rect x="36.9915%" y="885" width="0.0578%" height="15" fill="rgb(237,118,16)" fg:x="79933" fg:w="125"/><text x="37.2415%" y="895.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_link (94 samples, 0.04%)</title><rect x="37.0058%" y="869" width="0.0435%" height="15" fill="rgb(241,17,19)" fg:x="79964" fg:w="94"/><text x="37.2558%" y="879.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_replace (46 samples, 0.02%)</title><rect x="37.0493%" y="885" width="0.0213%" height="15" fill="rgb(214,10,25)" fg:x="80058" fg:w="46"/><text x="37.2993%" y="895.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (186 samples, 0.09%)</title><rect x="36.9873%" y="901" width="0.0861%" height="15" fill="rgb(238,37,29)" fg:x="79924" fg:w="186"/><text x="37.2373%" y="911.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (49 samples, 0.02%)</title><rect x="37.0734%" y="901" width="0.0227%" height="15" fill="rgb(253,83,25)" fg:x="80110" fg:w="49"/><text x="37.3234%" y="911.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (49 samples, 0.02%)</title><rect x="37.0734%" y="885" width="0.0227%" height="15" fill="rgb(234,192,12)" fg:x="80110" fg:w="49"/><text x="37.3234%" y="895.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (286 samples, 0.13%)</title><rect x="36.9679%" y="917" width="0.1324%" height="15" fill="rgb(241,216,45)" fg:x="79882" fg:w="286"/><text x="37.2179%" y="927.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (108 samples, 0.05%)</title><rect x="37.1132%" y="789" width="0.0500%" height="15" fill="rgb(242,22,33)" fg:x="80196" fg:w="108"/><text x="37.3632%" y="799.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (107 samples, 0.05%)</title><rect x="37.1136%" y="773" width="0.0495%" height="15" fill="rgb(231,105,49)" fg:x="80197" fg:w="107"/><text x="37.3636%" y="783.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (100 samples, 0.05%)</title><rect x="37.1169%" y="757" width="0.0463%" height="15" fill="rgb(218,204,15)" fg:x="80204" fg:w="100"/><text x="37.3669%" y="767.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (126 samples, 0.06%)</title><rect x="37.1109%" y="901" width="0.0583%" height="15" fill="rgb(235,138,41)" fg:x="80191" fg:w="126"/><text x="37.3609%" y="911.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (122 samples, 0.06%)</title><rect x="37.1127%" y="885" width="0.0565%" height="15" fill="rgb(246,0,9)" fg:x="80195" fg:w="122"/><text x="37.3627%" y="895.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (122 samples, 0.06%)</title><rect x="37.1127%" y="869" width="0.0565%" height="15" fill="rgb(210,74,4)" fg:x="80195" fg:w="122"/><text x="37.3627%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (122 samples, 0.06%)</title><rect x="37.1127%" y="853" width="0.0565%" height="15" fill="rgb(250,60,41)" fg:x="80195" fg:w="122"/><text x="37.3627%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (122 samples, 0.06%)</title><rect x="37.1127%" y="837" width="0.0565%" height="15" fill="rgb(220,115,12)" fg:x="80195" fg:w="122"/><text x="37.3627%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (122 samples, 0.06%)</title><rect x="37.1127%" y="821" width="0.0565%" height="15" fill="rgb(237,100,13)" fg:x="80195" fg:w="122"/><text x="37.3627%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (122 samples, 0.06%)</title><rect x="37.1127%" y="805" width="0.0565%" height="15" fill="rgb(213,55,26)" fg:x="80195" fg:w="122"/><text x="37.3627%" y="815.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_replace (50 samples, 0.02%)</title><rect x="37.1789%" y="869" width="0.0231%" height="15" fill="rgb(216,17,4)" fg:x="80338" fg:w="50"/><text x="37.4289%" y="879.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (52 samples, 0.02%)</title><rect x="37.1784%" y="885" width="0.0241%" height="15" fill="rgb(220,153,47)" fg:x="80337" fg:w="52"/><text x="37.4284%" y="895.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="37.2094%" y="805" width="0.0106%" height="15" fill="rgb(215,131,9)" fg:x="80404" fg:w="23"/><text x="37.4594%" y="815.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (30 samples, 0.01%)</title><rect x="37.2067%" y="821" width="0.0139%" height="15" fill="rgb(233,46,42)" fg:x="80398" fg:w="30"/><text x="37.4567%" y="831.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (32 samples, 0.01%)</title><rect x="37.2062%" y="837" width="0.0148%" height="15" fill="rgb(226,86,7)" fg:x="80397" fg:w="32"/><text x="37.4562%" y="847.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (36 samples, 0.02%)</title><rect x="37.2062%" y="853" width="0.0167%" height="15" fill="rgb(239,226,21)" fg:x="80397" fg:w="36"/><text x="37.4562%" y="863.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (48 samples, 0.02%)</title><rect x="37.2025%" y="885" width="0.0222%" height="15" fill="rgb(244,137,22)" fg:x="80389" fg:w="48"/><text x="37.4525%" y="895.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (48 samples, 0.02%)</title><rect x="37.2025%" y="869" width="0.0222%" height="15" fill="rgb(211,139,35)" fg:x="80389" fg:w="48"/><text x="37.4525%" y="879.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (131 samples, 0.06%)</title><rect x="37.1701%" y="901" width="0.0606%" height="15" fill="rgb(214,62,50)" fg:x="80319" fg:w="131"/><text x="37.4201%" y="911.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (303 samples, 0.14%)</title><rect x="37.1002%" y="917" width="0.1402%" height="15" fill="rgb(212,113,44)" fg:x="80168" fg:w="303"/><text x="37.3502%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::replace (651 samples, 0.30%)</title><rect x="36.9665%" y="933" width="0.3013%" height="15" fill="rgb(226,150,43)" fg:x="79879" fg:w="651"/><text x="37.2165%" y="943.50"></text></g><g><title>sled::pagecache::segment::SegmentCleaner::pop (59 samples, 0.03%)</title><rect x="37.2404%" y="917" width="0.0273%" height="15" fill="rgb(250,71,37)" fg:x="80471" fg:w="59"/><text x="37.4904%" y="927.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_link (24 samples, 0.01%)</title><rect x="37.2677%" y="933" width="0.0111%" height="15" fill="rgb(219,76,19)" fg:x="80530" fg:w="24"/><text x="37.5177%" y="943.50"></text></g><g><title>sled::stack::Stack&lt;T&gt;::push (24 samples, 0.01%)</title><rect x="37.2677%" y="917" width="0.0111%" height="15" fill="rgb(250,39,11)" fg:x="80530" fg:w="24"/><text x="37.5177%" y="927.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (24 samples, 0.01%)</title><rect x="37.2677%" y="901" width="0.0111%" height="15" fill="rgb(230,64,31)" fg:x="80530" fg:w="24"/><text x="37.5177%" y="911.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (24 samples, 0.01%)</title><rect x="37.2677%" y="885" width="0.0111%" height="15" fill="rgb(208,222,23)" fg:x="80530" fg:w="24"/><text x="37.5177%" y="895.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (24 samples, 0.01%)</title><rect x="37.2677%" y="869" width="0.0111%" height="15" fill="rgb(227,125,18)" fg:x="80530" fg:w="24"/><text x="37.5177%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (24 samples, 0.01%)</title><rect x="37.2677%" y="853" width="0.0111%" height="15" fill="rgb(234,210,9)" fg:x="80530" fg:w="24"/><text x="37.5177%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.01%)</title><rect x="37.2682%" y="837" width="0.0106%" height="15" fill="rgb(217,127,24)" fg:x="80531" fg:w="23"/><text x="37.5182%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.01%)</title><rect x="37.2682%" y="821" width="0.0106%" height="15" fill="rgb(239,141,48)" fg:x="80531" fg:w="23"/><text x="37.5182%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.01%)</title><rect x="37.2682%" y="805" width="0.0106%" height="15" fill="rgb(227,109,8)" fg:x="80531" fg:w="23"/><text x="37.5182%" y="815.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.01%)</title><rect x="37.2682%" y="789" width="0.0106%" height="15" fill="rgb(235,184,23)" fg:x="80531" fg:w="23"/><text x="37.5182%" y="799.50"></text></g><g><title>malloc (23 samples, 0.01%)</title><rect x="37.2682%" y="773" width="0.0106%" height="15" fill="rgb(227,226,48)" fg:x="80531" fg:w="23"/><text x="37.5182%" y="783.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (30 samples, 0.01%)</title><rect x="37.2788%" y="933" width="0.0139%" height="15" fill="rgb(206,150,11)" fg:x="80554" fg:w="30"/><text x="37.5288%" y="943.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (29 samples, 0.01%)</title><rect x="37.2793%" y="917" width="0.0134%" height="15" fill="rgb(254,2,33)" fg:x="80555" fg:w="29"/><text x="37.5293%" y="927.50"></text></g><g><title>sled::calculate_message_crc32 (64 samples, 0.03%)</title><rect x="37.2941%" y="901" width="0.0296%" height="15" fill="rgb(243,160,20)" fg:x="80587" fg:w="64"/><text x="37.5441%" y="911.50"></text></g><g><title>crc32fast::Hasher::update (61 samples, 0.03%)</title><rect x="37.2955%" y="885" width="0.0282%" height="15" fill="rgb(218,208,30)" fg:x="80590" fg:w="61"/><text x="37.5455%" y="895.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (61 samples, 0.03%)</title><rect x="37.2955%" y="869" width="0.0282%" height="15" fill="rgb(224,120,49)" fg:x="80590" fg:w="61"/><text x="37.5455%" y="879.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (60 samples, 0.03%)</title><rect x="37.2960%" y="853" width="0.0278%" height="15" fill="rgb(246,12,2)" fg:x="80591" fg:w="60"/><text x="37.5460%" y="863.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (70 samples, 0.03%)</title><rect x="37.2927%" y="933" width="0.0324%" height="15" fill="rgb(236,117,3)" fg:x="80584" fg:w="70"/><text x="37.5427%" y="943.50"></text></g><g><title>sled::pagecache::reservation::Reservation::flush (68 samples, 0.03%)</title><rect x="37.2937%" y="917" width="0.0315%" height="15" fill="rgb(216,128,52)" fg:x="80586" fg:w="68"/><text x="37.5437%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::link (913 samples, 0.42%)</title><rect x="36.9040%" y="949" width="0.4225%" height="15" fill="rgb(246,145,19)" fg:x="79744" fg:w="913"/><text x="37.1540%" y="959.50"></text></g><g><title>sled::node::Node::index_next_node (25 samples, 0.01%)</title><rect x="37.3390%" y="933" width="0.0116%" height="15" fill="rgb(222,11,46)" fg:x="80684" fg:w="25"/><text x="37.5890%" y="943.50"></text></g><g><title>sled::pagecache::Page::is_free (24 samples, 0.01%)</title><rect x="37.3640%" y="901" width="0.0111%" height="15" fill="rgb(245,82,36)" fg:x="80738" fg:w="24"/><text x="37.6140%" y="911.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (1,256 samples, 0.58%)</title><rect x="36.7976%" y="997" width="0.5813%" height="15" fill="rgb(250,73,51)" fg:x="79514" fg:w="1256"/><text x="37.0476%" y="1007.50"></text></g><g><title>sled::tree::Tree::insert (1,197 samples, 0.55%)</title><rect x="36.8249%" y="981" width="0.5539%" height="15" fill="rgb(221,189,23)" fg:x="79573" fg:w="1197"/><text x="37.0749%" y="991.50"></text></g><g><title>sled::tree::Tree::insert_inner (1,089 samples, 0.50%)</title><rect x="36.8748%" y="965" width="0.5040%" height="15" fill="rgb(210,33,7)" fg:x="79681" fg:w="1089"/><text x="37.1248%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_key (112 samples, 0.05%)</title><rect x="37.3270%" y="949" width="0.0518%" height="15" fill="rgb(210,107,22)" fg:x="80658" fg:w="112"/><text x="37.5770%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_pid (61 samples, 0.03%)</title><rect x="37.3506%" y="933" width="0.0282%" height="15" fill="rgb(222,116,37)" fg:x="80709" fg:w="61"/><text x="37.6006%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::get (54 samples, 0.02%)</title><rect x="37.3538%" y="917" width="0.0250%" height="15" fill="rgb(254,17,48)" fg:x="80716" fg:w="54"/><text x="37.6038%" y="927.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::save_height (1,410 samples, 0.65%)</title><rect x="36.7337%" y="1013" width="0.6525%" height="15" fill="rgb(224,36,32)" fg:x="79376" fg:w="1410"/><text x="36.9837%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.03%)</title><rect x="37.4320%" y="501" width="0.0296%" height="15" fill="rgb(232,90,46)" fg:x="80885" fg:w="64"/><text x="37.6820%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (64 samples, 0.03%)</title><rect x="37.4320%" y="485" width="0.0296%" height="15" fill="rgb(241,66,40)" fg:x="80885" fg:w="64"/><text x="37.6820%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (64 samples, 0.03%)</title><rect x="37.4320%" y="469" width="0.0296%" height="15" fill="rgb(249,184,29)" fg:x="80885" fg:w="64"/><text x="37.6820%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (64 samples, 0.03%)</title><rect x="37.4320%" y="453" width="0.0296%" height="15" fill="rgb(231,181,1)" fg:x="80885" fg:w="64"/><text x="37.6820%" y="463.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="37.4385%" y="437" width="0.0231%" height="15" fill="rgb(224,94,2)" fg:x="80899" fg:w="50"/><text x="37.6885%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (67 samples, 0.03%)</title><rect x="37.4320%" y="549" width="0.0310%" height="15" fill="rgb(229,170,15)" fg:x="80885" fg:w="67"/><text x="37.6820%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (67 samples, 0.03%)</title><rect x="37.4320%" y="533" width="0.0310%" height="15" fill="rgb(240,127,35)" fg:x="80885" fg:w="67"/><text x="37.6820%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (67 samples, 0.03%)</title><rect x="37.4320%" y="517" width="0.0310%" height="15" fill="rgb(248,196,34)" fg:x="80885" fg:w="67"/><text x="37.6820%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (87 samples, 0.04%)</title><rect x="37.4232%" y="693" width="0.0403%" height="15" fill="rgb(236,137,7)" fg:x="80866" fg:w="87"/><text x="37.6732%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.04%)</title><rect x="37.4232%" y="677" width="0.0403%" height="15" fill="rgb(235,127,16)" fg:x="80866" fg:w="87"/><text x="37.6732%" y="687.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (87 samples, 0.04%)</title><rect x="37.4232%" y="661" width="0.0403%" height="15" fill="rgb(250,192,54)" fg:x="80866" fg:w="87"/><text x="37.6732%" y="671.50"></text></g><g><title>core::mem::drop (87 samples, 0.04%)</title><rect x="37.4232%" y="645" width="0.0403%" height="15" fill="rgb(218,98,20)" fg:x="80866" fg:w="87"/><text x="37.6732%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (87 samples, 0.04%)</title><rect x="37.4232%" y="629" width="0.0403%" height="15" fill="rgb(230,176,47)" fg:x="80866" fg:w="87"/><text x="37.6732%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (87 samples, 0.04%)</title><rect x="37.4232%" y="613" width="0.0403%" height="15" fill="rgb(244,2,33)" fg:x="80866" fg:w="87"/><text x="37.6732%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (76 samples, 0.04%)</title><rect x="37.4283%" y="597" width="0.0352%" height="15" fill="rgb(231,100,17)" fg:x="80877" fg:w="76"/><text x="37.6783%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (69 samples, 0.03%)</title><rect x="37.4316%" y="581" width="0.0319%" height="15" fill="rgb(245,23,12)" fg:x="80884" fg:w="69"/><text x="37.6816%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (69 samples, 0.03%)</title><rect x="37.4316%" y="565" width="0.0319%" height="15" fill="rgb(249,55,22)" fg:x="80884" fg:w="69"/><text x="37.6816%" y="575.50"></text></g><g><title>core::mem::drop (95 samples, 0.04%)</title><rect x="37.4214%" y="821" width="0.0440%" height="15" fill="rgb(207,134,9)" fg:x="80862" fg:w="95"/><text x="37.6714%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (95 samples, 0.04%)</title><rect x="37.4214%" y="805" width="0.0440%" height="15" fill="rgb(218,134,0)" fg:x="80862" fg:w="95"/><text x="37.6714%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (95 samples, 0.04%)</title><rect x="37.4214%" y="789" width="0.0440%" height="15" fill="rgb(213,212,33)" fg:x="80862" fg:w="95"/><text x="37.6714%" y="799.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (95 samples, 0.04%)</title><rect x="37.4214%" y="773" width="0.0440%" height="15" fill="rgb(252,106,18)" fg:x="80862" fg:w="95"/><text x="37.6714%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (95 samples, 0.04%)</title><rect x="37.4214%" y="757" width="0.0440%" height="15" fill="rgb(208,126,42)" fg:x="80862" fg:w="95"/><text x="37.6714%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (92 samples, 0.04%)</title><rect x="37.4228%" y="741" width="0.0426%" height="15" fill="rgb(246,175,29)" fg:x="80865" fg:w="92"/><text x="37.6728%" y="751.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (91 samples, 0.04%)</title><rect x="37.4232%" y="725" width="0.0421%" height="15" fill="rgb(215,13,50)" fg:x="80866" fg:w="91"/><text x="37.6732%" y="735.50"></text></g><g><title>core::mem::drop (91 samples, 0.04%)</title><rect x="37.4232%" y="709" width="0.0421%" height="15" fill="rgb(216,172,15)" fg:x="80866" fg:w="91"/><text x="37.6732%" y="719.50"></text></g><g><title>sled::pin (102 samples, 0.05%)</title><rect x="37.4200%" y="965" width="0.0472%" height="15" fill="rgb(212,103,13)" fg:x="80859" fg:w="102"/><text x="37.6700%" y="975.50"></text></g><g><title>crossbeam_epoch::default::pin (101 samples, 0.05%)</title><rect x="37.4205%" y="949" width="0.0467%" height="15" fill="rgb(231,171,36)" fg:x="80860" fg:w="101"/><text x="37.6705%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle (101 samples, 0.05%)</title><rect x="37.4205%" y="933" width="0.0467%" height="15" fill="rgb(250,123,20)" fg:x="80860" fg:w="101"/><text x="37.6705%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (101 samples, 0.05%)</title><rect x="37.4205%" y="917" width="0.0467%" height="15" fill="rgb(212,53,50)" fg:x="80860" fg:w="101"/><text x="37.6705%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (101 samples, 0.05%)</title><rect x="37.4205%" y="901" width="0.0467%" height="15" fill="rgb(243,54,12)" fg:x="80860" fg:w="101"/><text x="37.6705%" y="911.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (101 samples, 0.05%)</title><rect x="37.4205%" y="885" width="0.0467%" height="15" fill="rgb(234,101,34)" fg:x="80860" fg:w="101"/><text x="37.6705%" y="895.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (101 samples, 0.05%)</title><rect x="37.4205%" y="869" width="0.0467%" height="15" fill="rgb(254,67,22)" fg:x="80860" fg:w="101"/><text x="37.6705%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (101 samples, 0.05%)</title><rect x="37.4205%" y="853" width="0.0467%" height="15" fill="rgb(250,35,47)" fg:x="80860" fg:w="101"/><text x="37.6705%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (99 samples, 0.05%)</title><rect x="37.4214%" y="837" width="0.0458%" height="15" fill="rgb(226,126,38)" fg:x="80862" fg:w="99"/><text x="37.6714%" y="847.50"></text></g><g><title>sled::node::Node::node_kv_pair (35 samples, 0.02%)</title><rect x="37.4760%" y="949" width="0.0162%" height="15" fill="rgb(216,138,53)" fg:x="80980" fg:w="35"/><text x="37.7260%" y="959.50"></text></g><g><title>sled::binary_search::binary_search_lub (57 samples, 0.03%)</title><rect x="37.5116%" y="917" width="0.0264%" height="15" fill="rgb(246,199,43)" fg:x="81057" fg:w="57"/><text x="37.7616%" y="927.50"></text></g><g><title>sled::binary_search::binary_search (56 samples, 0.03%)</title><rect x="37.5121%" y="901" width="0.0259%" height="15" fill="rgb(232,125,11)" fg:x="81058" fg:w="56"/><text x="37.7621%" y="911.50"></text></g><g><title>sled::fastcmp::fastcmp (35 samples, 0.02%)</title><rect x="37.5218%" y="885" width="0.0162%" height="15" fill="rgb(218,219,45)" fg:x="81079" fg:w="35"/><text x="37.7718%" y="895.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="37.5237%" y="869" width="0.0143%" height="15" fill="rgb(216,102,54)" fg:x="81083" fg:w="31"/><text x="37.7737%" y="879.50"></text></g><g><title>sled::node::Node::index_next_node (71 samples, 0.03%)</title><rect x="37.5056%" y="933" width="0.0329%" height="15" fill="rgb(250,228,7)" fg:x="81044" fg:w="71"/><text x="37.7556%" y="943.50"></text></g><g><title>sled::lru::Lru::accessed (34 samples, 0.02%)</title><rect x="37.5473%" y="901" width="0.0157%" height="15" fill="rgb(226,125,25)" fg:x="81134" fg:w="34"/><text x="37.7973%" y="911.50"></text></g><g><title>sled::pagecache::Page::is_free (28 samples, 0.01%)</title><rect x="37.5630%" y="901" width="0.0130%" height="15" fill="rgb(224,165,27)" fg:x="81168" fg:w="28"/><text x="37.8130%" y="911.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (412 samples, 0.19%)</title><rect x="37.3950%" y="997" width="0.1907%" height="15" fill="rgb(233,86,3)" fg:x="80805" fg:w="412"/><text x="37.6450%" y="1007.50"></text></g><g><title>sled::tree::Tree::insert (370 samples, 0.17%)</title><rect x="37.4144%" y="981" width="0.1712%" height="15" fill="rgb(228,116,20)" fg:x="80847" fg:w="370"/><text x="37.6644%" y="991.50"></text></g><g><title>sled::tree::Tree::insert_inner (256 samples, 0.12%)</title><rect x="37.4672%" y="965" width="0.1185%" height="15" fill="rgb(209,192,17)" fg:x="80961" fg:w="256"/><text x="37.7172%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_key (200 samples, 0.09%)</title><rect x="37.4931%" y="949" width="0.0926%" height="15" fill="rgb(224,88,34)" fg:x="81017" fg:w="200"/><text x="37.7431%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_pid (100 samples, 0.05%)</title><rect x="37.5394%" y="933" width="0.0463%" height="15" fill="rgb(233,38,6)" fg:x="81117" fg:w="100"/><text x="37.7894%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::get (92 samples, 0.04%)</title><rect x="37.5431%" y="917" width="0.0426%" height="15" fill="rgb(212,59,30)" fg:x="81125" fg:w="92"/><text x="37.7931%" y="927.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::update_block_index (446 samples, 0.21%)</title><rect x="37.3862%" y="1013" width="0.2064%" height="15" fill="rgb(213,80,3)" fg:x="80786" fg:w="446"/><text x="37.6362%" y="1023.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (23 samples, 0.01%)</title><rect x="37.5949%" y="981" width="0.0106%" height="15" fill="rgb(251,178,7)" fg:x="81237" fg:w="23"/><text x="37.8449%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (23 samples, 0.01%)</title><rect x="37.5949%" y="965" width="0.0106%" height="15" fill="rgb(213,154,26)" fg:x="81237" fg:w="23"/><text x="37.8449%" y="975.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (65 samples, 0.03%)</title><rect x="37.6509%" y="853" width="0.0301%" height="15" fill="rgb(238,165,49)" fg:x="81358" fg:w="65"/><text x="37.9009%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (220 samples, 0.10%)</title><rect x="37.6088%" y="869" width="0.1018%" height="15" fill="rgb(248,91,46)" fg:x="81267" fg:w="220"/><text x="37.8588%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (64 samples, 0.03%)</title><rect x="37.6810%" y="853" width="0.0296%" height="15" fill="rgb(244,21,52)" fg:x="81423" fg:w="64"/><text x="37.9310%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (230 samples, 0.11%)</title><rect x="37.6070%" y="901" width="0.1064%" height="15" fill="rgb(247,122,20)" fg:x="81263" fg:w="230"/><text x="37.8570%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (228 samples, 0.11%)</title><rect x="37.6079%" y="885" width="0.1055%" height="15" fill="rgb(218,27,9)" fg:x="81265" fg:w="228"/><text x="37.8579%" y="895.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (233 samples, 0.11%)</title><rect x="37.6060%" y="949" width="0.1078%" height="15" fill="rgb(246,7,6)" fg:x="81261" fg:w="233"/><text x="37.8560%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (233 samples, 0.11%)</title><rect x="37.6060%" y="933" width="0.1078%" height="15" fill="rgb(227,135,54)" fg:x="81261" fg:w="233"/><text x="37.8560%" y="943.50"></text></g><g><title>std::io::Write::write_all (233 samples, 0.11%)</title><rect x="37.6060%" y="917" width="0.1078%" height="15" fill="rgb(247,14,11)" fg:x="81261" fg:w="233"/><text x="37.8560%" y="927.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (236 samples, 0.11%)</title><rect x="37.6056%" y="981" width="0.1092%" height="15" fill="rgb(206,149,34)" fg:x="81260" fg:w="236"/><text x="37.8556%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (236 samples, 0.11%)</title><rect x="37.6056%" y="965" width="0.1092%" height="15" fill="rgb(227,228,4)" fg:x="81260" fg:w="236"/><text x="37.8556%" y="975.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (33 samples, 0.02%)</title><rect x="37.7148%" y="981" width="0.0153%" height="15" fill="rgb(238,218,28)" fg:x="81496" fg:w="33"/><text x="37.9648%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (33 samples, 0.02%)</title><rect x="37.7148%" y="965" width="0.0153%" height="15" fill="rgb(252,86,40)" fg:x="81496" fg:w="33"/><text x="37.9648%" y="975.50"></text></g><g><title>std::io::Write::write_all (33 samples, 0.02%)</title><rect x="37.7148%" y="949" width="0.0153%" height="15" fill="rgb(251,225,11)" fg:x="81496" fg:w="33"/><text x="37.9648%" y="959.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (326 samples, 0.15%)</title><rect x="37.5949%" y="997" width="0.1509%" height="15" fill="rgb(206,46,49)" fg:x="81237" fg:w="326"/><text x="37.8449%" y="1007.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (34 samples, 0.02%)</title><rect x="37.7301%" y="981" width="0.0157%" height="15" fill="rgb(245,128,24)" fg:x="81529" fg:w="34"/><text x="37.9801%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (34 samples, 0.02%)</title><rect x="37.7301%" y="965" width="0.0157%" height="15" fill="rgb(219,177,34)" fg:x="81529" fg:w="34"/><text x="37.9801%" y="975.50"></text></g><g><title>std::io::Write::write_all (33 samples, 0.02%)</title><rect x="37.7305%" y="949" width="0.0153%" height="15" fill="rgb(218,60,48)" fg:x="81530" fg:w="33"/><text x="37.9805%" y="959.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (23 samples, 0.01%)</title><rect x="37.7352%" y="933" width="0.0106%" height="15" fill="rgb(221,11,5)" fg:x="81540" fg:w="23"/><text x="37.9852%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (60 samples, 0.03%)</title><rect x="37.7833%" y="917" width="0.0278%" height="15" fill="rgb(220,148,13)" fg:x="81644" fg:w="60"/><text x="38.0333%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (209 samples, 0.10%)</title><rect x="37.7509%" y="933" width="0.0967%" height="15" fill="rgb(210,16,3)" fg:x="81574" fg:w="209"/><text x="38.0009%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (79 samples, 0.04%)</title><rect x="37.8110%" y="917" width="0.0366%" height="15" fill="rgb(236,80,2)" fg:x="81704" fg:w="79"/><text x="38.0610%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (224 samples, 0.10%)</title><rect x="37.7500%" y="949" width="0.1037%" height="15" fill="rgb(239,129,19)" fg:x="81572" fg:w="224"/><text x="38.0000%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (233 samples, 0.11%)</title><rect x="37.7486%" y="965" width="0.1078%" height="15" fill="rgb(220,106,35)" fg:x="81569" fg:w="233"/><text x="37.9986%" y="975.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (65 samples, 0.03%)</title><rect x="37.8990%" y="901" width="0.0301%" height="15" fill="rgb(252,139,45)" fg:x="81894" fg:w="65"/><text x="38.1490%" y="911.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (214 samples, 0.10%)</title><rect x="37.8606%" y="917" width="0.0990%" height="15" fill="rgb(229,8,36)" fg:x="81811" fg:w="214"/><text x="38.1106%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (66 samples, 0.03%)</title><rect x="37.9291%" y="901" width="0.0305%" height="15" fill="rgb(230,126,33)" fg:x="81959" fg:w="66"/><text x="38.1791%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (233 samples, 0.11%)</title><rect x="37.8596%" y="933" width="0.1078%" height="15" fill="rgb(239,140,21)" fg:x="81809" fg:w="233"/><text x="38.1096%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (238 samples, 0.11%)</title><rect x="37.8592%" y="949" width="0.1101%" height="15" fill="rgb(254,104,9)" fg:x="81808" fg:w="238"/><text x="38.1092%" y="959.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (819 samples, 0.38%)</title><rect x="37.5926%" y="1013" width="0.3790%" height="15" fill="rgb(239,52,14)" fg:x="81232" fg:w="819"/><text x="37.8426%" y="1023.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (485 samples, 0.22%)</title><rect x="37.7472%" y="997" width="0.2244%" height="15" fill="rgb(208,227,44)" fg:x="81566" fg:w="485"/><text x="37.9972%" y="1007.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (483 samples, 0.22%)</title><rect x="37.7481%" y="981" width="0.2235%" height="15" fill="rgb(246,18,19)" fg:x="81568" fg:w="483"/><text x="37.9981%" y="991.50"></text></g><g><title>bitcoin_hashes::Hash::hash (249 samples, 0.12%)</title><rect x="37.8564%" y="965" width="0.1152%" height="15" fill="rgb(235,228,25)" fg:x="81802" fg:w="249"/><text x="38.1064%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustreexo::accumulator::stump::Stump&gt; (22 samples, 0.01%)</title><rect x="37.9716%" y="1013" width="0.0102%" height="15" fill="rgb(240,156,20)" fg:x="82051" fg:w="22"/><text x="38.2216%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rustreexo::accumulator::node_hash::NodeHash&gt;&gt; (22 samples, 0.01%)</title><rect x="37.9716%" y="997" width="0.0102%" height="15" fill="rgb(224,8,20)" fg:x="82051" fg:w="22"/><text x="38.2216%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rustreexo::accumulator::node_hash::NodeHash&gt;&gt; (22 samples, 0.01%)</title><rect x="37.9716%" y="981" width="0.0102%" height="15" fill="rgb(214,12,52)" fg:x="82051" fg:w="22"/><text x="38.2216%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="37.9716%" y="965" width="0.0102%" height="15" fill="rgb(211,220,47)" fg:x="82051" fg:w="22"/><text x="38.2216%" y="975.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::update_view (5,007 samples, 2.32%)</title><rect x="35.6693%" y="1029" width="2.3171%" height="15" fill="rgb(250,173,5)" fg:x="77076" fg:w="5007"/><text x="35.9193%" y="1039.50">f..</text></g><g><title>bitcoin::blockdata::block::Block::bip34_block_height (38 samples, 0.02%)</title><rect x="37.9901%" y="1013" width="0.0176%" height="15" fill="rgb(250,125,52)" fg:x="82091" fg:w="38"/><text x="38.2401%" y="1023.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (114 samples, 0.05%)</title><rect x="38.0961%" y="853" width="0.0528%" height="15" fill="rgb(209,133,18)" fg:x="82320" fg:w="114"/><text x="38.3461%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (395 samples, 0.18%)</title><rect x="38.0262%" y="869" width="0.1828%" height="15" fill="rgb(216,173,22)" fg:x="82169" fg:w="395"/><text x="38.2762%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (130 samples, 0.06%)</title><rect x="38.1489%" y="853" width="0.0602%" height="15" fill="rgb(205,3,22)" fg:x="82434" fg:w="130"/><text x="38.3989%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (422 samples, 0.20%)</title><rect x="38.0198%" y="901" width="0.1953%" height="15" fill="rgb(248,22,20)" fg:x="82155" fg:w="422"/><text x="38.2698%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (417 samples, 0.19%)</title><rect x="38.0221%" y="885" width="0.1930%" height="15" fill="rgb(233,6,29)" fg:x="82160" fg:w="417"/><text x="38.2721%" y="895.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (437 samples, 0.20%)</title><rect x="38.0137%" y="949" width="0.2022%" height="15" fill="rgb(240,22,54)" fg:x="82142" fg:w="437"/><text x="38.2637%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (437 samples, 0.20%)</title><rect x="38.0137%" y="933" width="0.2022%" height="15" fill="rgb(231,133,32)" fg:x="82142" fg:w="437"/><text x="38.2637%" y="943.50"></text></g><g><title>std::io::Write::write_all (435 samples, 0.20%)</title><rect x="38.0147%" y="917" width="0.2013%" height="15" fill="rgb(248,193,4)" fg:x="82144" fg:w="435"/><text x="38.2647%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (443 samples, 0.21%)</title><rect x="38.0128%" y="965" width="0.2050%" height="15" fill="rgb(211,178,46)" fg:x="82140" fg:w="443"/><text x="38.2628%" y="975.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (110 samples, 0.05%)</title><rect x="38.3016%" y="901" width="0.0509%" height="15" fill="rgb(224,5,42)" fg:x="82764" fg:w="110"/><text x="38.5516%" y="911.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (399 samples, 0.18%)</title><rect x="38.2271%" y="917" width="0.1846%" height="15" fill="rgb(239,176,25)" fg:x="82603" fg:w="399"/><text x="38.4771%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (128 samples, 0.06%)</title><rect x="38.3525%" y="901" width="0.0592%" height="15" fill="rgb(245,187,50)" fg:x="82874" fg:w="128"/><text x="38.6025%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (440 samples, 0.20%)</title><rect x="38.2201%" y="933" width="0.2036%" height="15" fill="rgb(248,24,15)" fg:x="82588" fg:w="440"/><text x="38.4701%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (452 samples, 0.21%)</title><rect x="38.2201%" y="949" width="0.2092%" height="15" fill="rgb(205,166,13)" fg:x="82588" fg:w="452"/><text x="38.4701%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (108 samples, 0.05%)</title><rect x="38.5020%" y="885" width="0.0500%" height="15" fill="rgb(208,114,23)" fg:x="83197" fg:w="108"/><text x="38.7520%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (401 samples, 0.19%)</title><rect x="38.4344%" y="901" width="0.1856%" height="15" fill="rgb(239,127,18)" fg:x="83051" fg:w="401"/><text x="38.6844%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (147 samples, 0.07%)</title><rect x="38.5520%" y="885" width="0.0680%" height="15" fill="rgb(219,154,28)" fg:x="83305" fg:w="147"/><text x="38.8020%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (429 samples, 0.20%)</title><rect x="38.4312%" y="917" width="0.1985%" height="15" fill="rgb(225,157,23)" fg:x="83044" fg:w="429"/><text x="38.6812%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (443 samples, 0.21%)</title><rect x="38.4302%" y="933" width="0.2050%" height="15" fill="rgb(219,8,6)" fg:x="83042" fg:w="443"/><text x="38.6802%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (908 samples, 0.42%)</title><rect x="38.2183%" y="965" width="0.4202%" height="15" fill="rgb(212,47,6)" fg:x="82584" fg:w="908"/><text x="38.4683%" y="975.50"></text></g><g><title>bitcoin_hashes::Hash::hash (452 samples, 0.21%)</title><rect x="38.4293%" y="949" width="0.2092%" height="15" fill="rgb(224,190,4)" fg:x="83040" fg:w="452"/><text x="38.6793%" y="959.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (41 samples, 0.02%)</title><rect x="38.6714%" y="677" width="0.0190%" height="15" fill="rgb(239,183,29)" fg:x="83563" fg:w="41"/><text x="38.9214%" y="687.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (35 samples, 0.02%)</title><rect x="38.6741%" y="661" width="0.0162%" height="15" fill="rgb(213,57,7)" fg:x="83569" fg:w="35"/><text x="38.9241%" y="671.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (59 samples, 0.03%)</title><rect x="38.6644%" y="757" width="0.0273%" height="15" fill="rgb(216,148,1)" fg:x="83548" fg:w="59"/><text x="38.9144%" y="767.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (53 samples, 0.02%)</title><rect x="38.6672%" y="741" width="0.0245%" height="15" fill="rgb(236,182,29)" fg:x="83554" fg:w="53"/><text x="38.9172%" y="751.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (53 samples, 0.02%)</title><rect x="38.6672%" y="725" width="0.0245%" height="15" fill="rgb(244,120,48)" fg:x="83554" fg:w="53"/><text x="38.9172%" y="735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (53 samples, 0.02%)</title><rect x="38.6672%" y="709" width="0.0245%" height="15" fill="rgb(206,71,34)" fg:x="83554" fg:w="53"/><text x="38.9172%" y="719.50"></text></g><g><title>std::io::Write::write_all (53 samples, 0.02%)</title><rect x="38.6672%" y="693" width="0.0245%" height="15" fill="rgb(242,32,6)" fg:x="83554" fg:w="53"/><text x="38.9172%" y="703.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (89 samples, 0.04%)</title><rect x="38.6519%" y="805" width="0.0412%" height="15" fill="rgb(241,35,3)" fg:x="83521" fg:w="89"/><text x="38.9019%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (89 samples, 0.04%)</title><rect x="38.6519%" y="789" width="0.0412%" height="15" fill="rgb(222,62,19)" fg:x="83521" fg:w="89"/><text x="38.9019%" y="799.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (79 samples, 0.04%)</title><rect x="38.6565%" y="773" width="0.0366%" height="15" fill="rgb(223,110,41)" fg:x="83531" fg:w="79"/><text x="38.9065%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (34 samples, 0.02%)</title><rect x="38.7329%" y="661" width="0.0157%" height="15" fill="rgb(208,224,4)" fg:x="83696" fg:w="34"/><text x="38.9829%" y="671.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (153 samples, 0.07%)</title><rect x="38.7070%" y="677" width="0.0708%" height="15" fill="rgb(241,137,19)" fg:x="83640" fg:w="153"/><text x="38.9570%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (63 samples, 0.03%)</title><rect x="38.7486%" y="661" width="0.0292%" height="15" fill="rgb(244,24,17)" fg:x="83730" fg:w="63"/><text x="38.9986%" y="671.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (202 samples, 0.09%)</title><rect x="38.6973%" y="709" width="0.0935%" height="15" fill="rgb(245,178,49)" fg:x="83619" fg:w="202"/><text x="38.9473%" y="719.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (198 samples, 0.09%)</title><rect x="38.6991%" y="693" width="0.0916%" height="15" fill="rgb(219,160,38)" fg:x="83623" fg:w="198"/><text x="38.9491%" y="703.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (213 samples, 0.10%)</title><rect x="38.6931%" y="757" width="0.0986%" height="15" fill="rgb(228,137,14)" fg:x="83610" fg:w="213"/><text x="38.9431%" y="767.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (213 samples, 0.10%)</title><rect x="38.6931%" y="741" width="0.0986%" height="15" fill="rgb(237,134,11)" fg:x="83610" fg:w="213"/><text x="38.9431%" y="751.50"></text></g><g><title>std::io::Write::write_all (210 samples, 0.10%)</title><rect x="38.6945%" y="725" width="0.0972%" height="15" fill="rgb(211,126,44)" fg:x="83613" fg:w="210"/><text x="38.9445%" y="735.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (245 samples, 0.11%)</title><rect x="38.6931%" y="789" width="0.1134%" height="15" fill="rgb(226,171,33)" fg:x="83610" fg:w="245"/><text x="38.9431%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (245 samples, 0.11%)</title><rect x="38.6931%" y="773" width="0.1134%" height="15" fill="rgb(253,99,13)" fg:x="83610" fg:w="245"/><text x="38.9431%" y="783.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::into_inner (32 samples, 0.01%)</title><rect x="38.7917%" y="757" width="0.0148%" height="15" fill="rgb(244,48,7)" fg:x="83823" fg:w="32"/><text x="39.0417%" y="767.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (41 samples, 0.02%)</title><rect x="38.8130%" y="741" width="0.0190%" height="15" fill="rgb(244,217,54)" fg:x="83869" fg:w="41"/><text x="39.0630%" y="751.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (39 samples, 0.02%)</title><rect x="38.8139%" y="725" width="0.0180%" height="15" fill="rgb(224,15,18)" fg:x="83871" fg:w="39"/><text x="39.0639%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (302 samples, 0.14%)</title><rect x="38.6931%" y="805" width="0.1398%" height="15" fill="rgb(244,99,12)" fg:x="83610" fg:w="302"/><text x="38.9431%" y="815.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (57 samples, 0.03%)</title><rect x="38.8065%" y="789" width="0.0264%" height="15" fill="rgb(233,226,8)" fg:x="83855" fg:w="57"/><text x="39.0565%" y="799.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (57 samples, 0.03%)</title><rect x="38.8065%" y="773" width="0.0264%" height="15" fill="rgb(229,211,3)" fg:x="83855" fg:w="57"/><text x="39.0565%" y="783.50"></text></g><g><title>std::io::Write::write_all (56 samples, 0.03%)</title><rect x="38.8070%" y="757" width="0.0259%" height="15" fill="rgb(216,140,21)" fg:x="83856" fg:w="56"/><text x="39.0570%" y="767.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (22 samples, 0.01%)</title><rect x="38.8412%" y="709" width="0.0102%" height="15" fill="rgb(234,122,30)" fg:x="83930" fg:w="22"/><text x="39.0912%" y="719.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (60 samples, 0.03%)</title><rect x="38.8329%" y="773" width="0.0278%" height="15" fill="rgb(236,25,46)" fg:x="83912" fg:w="60"/><text x="39.0829%" y="783.50"></text></g><g><title>std::io::Write::write_all (59 samples, 0.03%)</title><rect x="38.8333%" y="757" width="0.0273%" height="15" fill="rgb(217,52,54)" fg:x="83913" fg:w="59"/><text x="39.0833%" y="767.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (51 samples, 0.02%)</title><rect x="38.8370%" y="741" width="0.0236%" height="15" fill="rgb(222,29,26)" fg:x="83921" fg:w="51"/><text x="39.0870%" y="751.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (48 samples, 0.02%)</title><rect x="38.8384%" y="725" width="0.0222%" height="15" fill="rgb(216,177,29)" fg:x="83924" fg:w="48"/><text x="39.0884%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (452 samples, 0.21%)</title><rect x="38.6519%" y="821" width="0.2092%" height="15" fill="rgb(247,136,51)" fg:x="83521" fg:w="452"/><text x="38.9019%" y="831.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Sequence as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (61 samples, 0.03%)</title><rect x="38.8329%" y="805" width="0.0282%" height="15" fill="rgb(231,47,47)" fg:x="83912" fg:w="61"/><text x="39.0829%" y="815.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (61 samples, 0.03%)</title><rect x="38.8329%" y="789" width="0.0282%" height="15" fill="rgb(211,192,36)" fg:x="83912" fg:w="61"/><text x="39.0829%" y="799.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (30 samples, 0.01%)</title><rect x="38.8666%" y="757" width="0.0139%" height="15" fill="rgb(229,156,32)" fg:x="83985" fg:w="30"/><text x="39.1166%" y="767.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (46 samples, 0.02%)</title><rect x="38.8611%" y="821" width="0.0213%" height="15" fill="rgb(248,213,20)" fg:x="83973" fg:w="46"/><text x="39.1111%" y="831.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (45 samples, 0.02%)</title><rect x="38.8616%" y="805" width="0.0208%" height="15" fill="rgb(217,64,7)" fg:x="83974" fg:w="45"/><text x="39.1116%" y="815.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (45 samples, 0.02%)</title><rect x="38.8616%" y="789" width="0.0208%" height="15" fill="rgb(232,142,8)" fg:x="83974" fg:w="45"/><text x="39.1116%" y="799.50"></text></g><g><title>std::io::Write::write_all (41 samples, 0.02%)</title><rect x="38.8634%" y="773" width="0.0190%" height="15" fill="rgb(224,92,44)" fg:x="83978" fg:w="41"/><text x="39.1134%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (506 samples, 0.23%)</title><rect x="38.6487%" y="837" width="0.2342%" height="15" fill="rgb(214,169,17)" fg:x="83514" fg:w="506"/><text x="38.8987%" y="847.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (45 samples, 0.02%)</title><rect x="39.0240%" y="661" width="0.0208%" height="15" fill="rgb(210,59,37)" fg:x="84325" fg:w="45"/><text x="39.2740%" y="671.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (173 samples, 0.08%)</title><rect x="39.0448%" y="661" width="0.0801%" height="15" fill="rgb(214,116,48)" fg:x="84370" fg:w="173"/><text x="39.2948%" y="671.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (732 samples, 0.34%)</title><rect x="38.9027%" y="677" width="0.3388%" height="15" fill="rgb(244,191,6)" fg:x="84063" fg:w="732"/><text x="39.1527%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (252 samples, 0.12%)</title><rect x="39.1249%" y="661" width="0.1166%" height="15" fill="rgb(241,50,52)" fg:x="84543" fg:w="252"/><text x="39.3749%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (69 samples, 0.03%)</title><rect x="39.2461%" y="677" width="0.0319%" height="15" fill="rgb(236,75,39)" fg:x="84805" fg:w="69"/><text x="39.4961%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.03%)</title><rect x="39.2461%" y="661" width="0.0319%" height="15" fill="rgb(236,99,0)" fg:x="84805" fg:w="69"/><text x="39.4961%" y="671.50"></text></g><g><title>[libc.so.6] (68 samples, 0.03%)</title><rect x="39.2466%" y="645" width="0.0315%" height="15" fill="rgb(207,202,15)" fg:x="84806" fg:w="68"/><text x="39.4966%" y="655.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (836 samples, 0.39%)</title><rect x="38.8953%" y="709" width="0.3869%" height="15" fill="rgb(233,207,14)" fg:x="84047" fg:w="836"/><text x="39.1453%" y="719.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (833 samples, 0.39%)</title><rect x="38.8967%" y="693" width="0.3855%" height="15" fill="rgb(226,27,51)" fg:x="84050" fg:w="833"/><text x="39.1467%" y="703.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (851 samples, 0.39%)</title><rect x="38.8893%" y="757" width="0.3938%" height="15" fill="rgb(206,104,42)" fg:x="84034" fg:w="851"/><text x="39.1393%" y="767.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (851 samples, 0.39%)</title><rect x="38.8893%" y="741" width="0.3938%" height="15" fill="rgb(212,225,4)" fg:x="84034" fg:w="851"/><text x="39.1393%" y="751.50"></text></g><g><title>std::io::Write::write_all (851 samples, 0.39%)</title><rect x="38.8893%" y="725" width="0.3938%" height="15" fill="rgb(233,96,42)" fg:x="84034" fg:w="851"/><text x="39.1393%" y="735.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (52 samples, 0.02%)</title><rect x="39.2924%" y="677" width="0.0241%" height="15" fill="rgb(229,21,32)" fg:x="84905" fg:w="52"/><text x="39.5424%" y="687.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (39 samples, 0.02%)</title><rect x="39.2984%" y="661" width="0.0180%" height="15" fill="rgb(226,216,24)" fg:x="84918" fg:w="39"/><text x="39.5484%" y="671.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (937 samples, 0.43%)</title><rect x="38.8852%" y="805" width="0.4336%" height="15" fill="rgb(221,163,17)" fg:x="84025" fg:w="937"/><text x="39.1352%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (937 samples, 0.43%)</title><rect x="38.8852%" y="789" width="0.4336%" height="15" fill="rgb(216,216,42)" fg:x="84025" fg:w="937"/><text x="39.1352%" y="799.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (932 samples, 0.43%)</title><rect x="38.8875%" y="773" width="0.4313%" height="15" fill="rgb(240,118,7)" fg:x="84030" fg:w="932"/><text x="39.1375%" y="783.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (77 samples, 0.04%)</title><rect x="39.2832%" y="757" width="0.0356%" height="15" fill="rgb(221,67,37)" fg:x="84885" fg:w="77"/><text x="39.5332%" y="767.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (71 samples, 0.03%)</title><rect x="39.2859%" y="741" width="0.0329%" height="15" fill="rgb(241,32,44)" fg:x="84891" fg:w="71"/><text x="39.5359%" y="751.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (71 samples, 0.03%)</title><rect x="39.2859%" y="725" width="0.0329%" height="15" fill="rgb(235,204,43)" fg:x="84891" fg:w="71"/><text x="39.5359%" y="735.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (70 samples, 0.03%)</title><rect x="39.2864%" y="709" width="0.0324%" height="15" fill="rgb(213,116,10)" fg:x="84892" fg:w="70"/><text x="39.5364%" y="719.50"></text></g><g><title>std::io::Write::write_all (70 samples, 0.03%)</title><rect x="39.2864%" y="693" width="0.0324%" height="15" fill="rgb(239,15,48)" fg:x="84892" fg:w="70"/><text x="39.5364%" y="703.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (57 samples, 0.03%)</title><rect x="39.3354%" y="757" width="0.0264%" height="15" fill="rgb(207,123,36)" fg:x="84998" fg:w="57"/><text x="39.5854%" y="767.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (48 samples, 0.02%)</title><rect x="39.3396%" y="741" width="0.0222%" height="15" fill="rgb(209,103,30)" fg:x="85007" fg:w="48"/><text x="39.5896%" y="751.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,035 samples, 0.48%)</title><rect x="38.8847%" y="821" width="0.4790%" height="15" fill="rgb(238,100,19)" fg:x="84024" fg:w="1035"/><text x="39.1347%" y="831.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (97 samples, 0.04%)</title><rect x="39.3188%" y="805" width="0.0449%" height="15" fill="rgb(244,30,14)" fg:x="84962" fg:w="97"/><text x="39.5688%" y="815.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (96 samples, 0.04%)</title><rect x="39.3192%" y="789" width="0.0444%" height="15" fill="rgb(249,174,6)" fg:x="84963" fg:w="96"/><text x="39.5692%" y="799.50"></text></g><g><title>std::io::Write::write_all (72 samples, 0.03%)</title><rect x="39.3304%" y="773" width="0.0333%" height="15" fill="rgb(235,213,41)" fg:x="84987" fg:w="72"/><text x="39.5804%" y="783.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (29 samples, 0.01%)</title><rect x="39.3688%" y="757" width="0.0134%" height="15" fill="rgb(213,118,6)" fg:x="85070" fg:w="29"/><text x="39.6188%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,081 samples, 0.50%)</title><rect x="38.8828%" y="837" width="0.5003%" height="15" fill="rgb(235,44,51)" fg:x="84020" fg:w="1081"/><text x="39.1328%" y="847.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (42 samples, 0.02%)</title><rect x="39.3637%" y="821" width="0.0194%" height="15" fill="rgb(217,9,53)" fg:x="85059" fg:w="42"/><text x="39.6137%" y="831.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="39.3669%" y="805" width="0.0162%" height="15" fill="rgb(237,172,34)" fg:x="85066" fg:w="35"/><text x="39.6169%" y="815.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (35 samples, 0.02%)</title><rect x="39.3669%" y="789" width="0.0162%" height="15" fill="rgb(206,206,11)" fg:x="85066" fg:w="35"/><text x="39.6169%" y="799.50"></text></g><g><title>std::io::Write::write_all (35 samples, 0.02%)</title><rect x="39.3669%" y="773" width="0.0162%" height="15" fill="rgb(214,149,29)" fg:x="85066" fg:w="35"/><text x="39.6169%" y="783.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (22 samples, 0.01%)</title><rect x="39.3864%" y="773" width="0.0102%" height="15" fill="rgb(208,123,3)" fg:x="85108" fg:w="22"/><text x="39.6364%" y="783.50"></text></g><g><title>&lt;bitcoin::blockdata::locktime::PackedLockTime as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (31 samples, 0.01%)</title><rect x="39.3831%" y="837" width="0.0143%" height="15" fill="rgb(229,126,4)" fg:x="85101" fg:w="31"/><text x="39.6331%" y="847.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (31 samples, 0.01%)</title><rect x="39.3831%" y="821" width="0.0143%" height="15" fill="rgb(222,92,36)" fg:x="85101" fg:w="31"/><text x="39.6331%" y="831.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (31 samples, 0.01%)</title><rect x="39.3831%" y="805" width="0.0143%" height="15" fill="rgb(216,39,41)" fg:x="85101" fg:w="31"/><text x="39.6331%" y="815.50"></text></g><g><title>std::io::Write::write_all (30 samples, 0.01%)</title><rect x="39.3836%" y="789" width="0.0139%" height="15" fill="rgb(253,127,28)" fg:x="85102" fg:w="30"/><text x="39.6336%" y="799.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (72 samples, 0.03%)</title><rect x="39.5937%" y="757" width="0.0333%" height="15" fill="rgb(249,152,51)" fg:x="85556" fg:w="72"/><text x="39.8437%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (281 samples, 0.13%)</title><rect x="39.6270%" y="757" width="0.1300%" height="15" fill="rgb(209,123,42)" fg:x="85628" fg:w="281"/><text x="39.8770%" y="767.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (1,138 samples, 0.53%)</title><rect x="39.4224%" y="773" width="0.5266%" height="15" fill="rgb(241,118,22)" fg:x="85186" fg:w="1138"/><text x="39.6724%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (415 samples, 0.19%)</title><rect x="39.7570%" y="757" width="0.1921%" height="15" fill="rgb(208,25,7)" fg:x="85909" fg:w="415"/><text x="40.0070%" y="767.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,202 samples, 0.56%)</title><rect x="39.4113%" y="789" width="0.5563%" height="15" fill="rgb(243,144,39)" fg:x="85162" fg:w="1202"/><text x="39.6613%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,228 samples, 0.57%)</title><rect x="39.4072%" y="805" width="0.5683%" height="15" fill="rgb(250,50,5)" fg:x="85153" fg:w="1228"/><text x="39.6572%" y="815.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (54 samples, 0.02%)</title><rect x="40.1037%" y="741" width="0.0250%" height="15" fill="rgb(207,67,11)" fg:x="86658" fg:w="54"/><text x="40.3537%" y="751.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (211 samples, 0.10%)</title><rect x="40.1287%" y="741" width="0.0976%" height="15" fill="rgb(245,204,40)" fg:x="86712" fg:w="211"/><text x="40.3787%" y="751.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (756 samples, 0.35%)</title><rect x="39.9917%" y="757" width="0.3499%" height="15" fill="rgb(238,228,24)" fg:x="86416" fg:w="756"/><text x="40.2417%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (249 samples, 0.12%)</title><rect x="40.2263%" y="741" width="0.1152%" height="15" fill="rgb(217,116,22)" fg:x="86923" fg:w="249"/><text x="40.4763%" y="751.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (802 samples, 0.37%)</title><rect x="39.9833%" y="773" width="0.3712%" height="15" fill="rgb(234,98,12)" fg:x="86398" fg:w="802"/><text x="40.2333%" y="783.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (828 samples, 0.38%)</title><rect x="39.9782%" y="789" width="0.3832%" height="15" fill="rgb(242,170,50)" fg:x="86387" fg:w="828"/><text x="40.2282%" y="799.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin_hashes::Hash&gt;::from_engine (2,093 samples, 0.97%)</title><rect x="39.3993%" y="837" width="0.9686%" height="15" fill="rgb(235,7,5)" fg:x="85136" fg:w="2093"/><text x="39.6493%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (2,090 samples, 0.97%)</title><rect x="39.4007%" y="821" width="0.9672%" height="15" fill="rgb(241,114,28)" fg:x="85139" fg:w="2090"/><text x="39.6507%" y="831.50"></text></g><g><title>bitcoin_hashes::Hash::hash (848 samples, 0.39%)</title><rect x="39.9755%" y="805" width="0.3924%" height="15" fill="rgb(246,112,42)" fg:x="86381" fg:w="848"/><text x="40.2255%" y="815.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="40.3679%" y="837" width="0.0162%" height="15" fill="rgb(248,228,14)" fg:x="87229" fg:w="35"/><text x="40.6179%" y="847.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (35 samples, 0.02%)</title><rect x="40.3679%" y="821" width="0.0162%" height="15" fill="rgb(208,133,18)" fg:x="87229" fg:w="35"/><text x="40.6179%" y="831.50"></text></g><g><title>std::io::Write::write_all (32 samples, 0.01%)</title><rect x="40.3693%" y="805" width="0.0148%" height="15" fill="rgb(207,35,49)" fg:x="87232" fg:w="32"/><text x="40.6193%" y="815.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (3,763 samples, 1.74%)</title><rect x="38.6431%" y="853" width="1.7414%" height="15" fill="rgb(205,68,36)" fg:x="83502" fg:w="3763"/><text x="38.8931%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,778 samples, 1.75%)</title><rect x="38.6385%" y="965" width="1.7484%" height="15" fill="rgb(245,62,40)" fg:x="83492" fg:w="3778"/><text x="38.8885%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (3,769 samples, 1.74%)</title><rect x="38.6427%" y="949" width="1.7442%" height="15" fill="rgb(228,27,24)" fg:x="83501" fg:w="3769"/><text x="38.8927%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (3,769 samples, 1.74%)</title><rect x="38.6427%" y="933" width="1.7442%" height="15" fill="rgb(253,19,12)" fg:x="83501" fg:w="3769"/><text x="38.8927%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,769 samples, 1.74%)</title><rect x="38.6427%" y="917" width="1.7442%" height="15" fill="rgb(232,28,20)" fg:x="83501" fg:w="3769"/><text x="38.8927%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,769 samples, 1.74%)</title><rect x="38.6427%" y="901" width="1.7442%" height="15" fill="rgb(218,35,51)" fg:x="83501" fg:w="3769"/><text x="38.8927%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3,769 samples, 1.74%)</title><rect x="38.6427%" y="885" width="1.7442%" height="15" fill="rgb(212,90,40)" fg:x="83501" fg:w="3769"/><text x="38.8927%" y="895.50"></text></g><g><title>bitcoin::blockdata::block::Block::compute_merkle_root::{{closure}} (3,769 samples, 1.74%)</title><rect x="38.6427%" y="869" width="1.7442%" height="15" fill="rgb(220,172,12)" fg:x="83501" fg:w="3769"/><text x="38.8927%" y="879.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (24 samples, 0.01%)</title><rect x="40.3975%" y="805" width="0.0111%" height="15" fill="rgb(226,159,20)" fg:x="87293" fg:w="24"/><text x="40.6475%" y="815.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (24 samples, 0.01%)</title><rect x="40.3975%" y="789" width="0.0111%" height="15" fill="rgb(234,205,16)" fg:x="87293" fg:w="24"/><text x="40.6475%" y="799.50"></text></g><g><title>std::io::Write::write_all (24 samples, 0.01%)</title><rect x="40.3975%" y="773" width="0.0111%" height="15" fill="rgb(207,9,39)" fg:x="87293" fg:w="24"/><text x="40.6475%" y="783.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (24 samples, 0.01%)</title><rect x="40.3975%" y="757" width="0.0111%" height="15" fill="rgb(249,143,15)" fg:x="87293" fg:w="24"/><text x="40.6475%" y="767.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (23 samples, 0.01%)</title><rect x="40.3980%" y="741" width="0.0106%" height="15" fill="rgb(253,133,29)" fg:x="87294" fg:w="23"/><text x="40.6480%" y="751.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (43 samples, 0.02%)</title><rect x="40.3938%" y="853" width="0.0199%" height="15" fill="rgb(221,187,0)" fg:x="87285" fg:w="43"/><text x="40.6438%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (43 samples, 0.02%)</title><rect x="40.3938%" y="837" width="0.0199%" height="15" fill="rgb(205,204,26)" fg:x="87285" fg:w="43"/><text x="40.6438%" y="847.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (35 samples, 0.02%)</title><rect x="40.3975%" y="821" width="0.0162%" height="15" fill="rgb(224,68,54)" fg:x="87293" fg:w="35"/><text x="40.6475%" y="831.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (24 samples, 0.01%)</title><rect x="40.4147%" y="725" width="0.0111%" height="15" fill="rgb(209,67,4)" fg:x="87330" fg:w="24"/><text x="40.6647%" y="735.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (30 samples, 0.01%)</title><rect x="40.4137%" y="805" width="0.0139%" height="15" fill="rgb(228,229,18)" fg:x="87328" fg:w="30"/><text x="40.6637%" y="815.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (30 samples, 0.01%)</title><rect x="40.4137%" y="789" width="0.0139%" height="15" fill="rgb(231,89,13)" fg:x="87328" fg:w="30"/><text x="40.6637%" y="799.50"></text></g><g><title>std::io::Write::write_all (30 samples, 0.01%)</title><rect x="40.4137%" y="773" width="0.0139%" height="15" fill="rgb(210,182,18)" fg:x="87328" fg:w="30"/><text x="40.6637%" y="783.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (30 samples, 0.01%)</title><rect x="40.4137%" y="757" width="0.0139%" height="15" fill="rgb(240,105,2)" fg:x="87328" fg:w="30"/><text x="40.6637%" y="767.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (29 samples, 0.01%)</title><rect x="40.4142%" y="741" width="0.0134%" height="15" fill="rgb(207,170,50)" fg:x="87329" fg:w="29"/><text x="40.6642%" y="751.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (41 samples, 0.02%)</title><rect x="40.4137%" y="837" width="0.0190%" height="15" fill="rgb(232,133,24)" fg:x="87328" fg:w="41"/><text x="40.6637%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (41 samples, 0.02%)</title><rect x="40.4137%" y="821" width="0.0190%" height="15" fill="rgb(235,166,27)" fg:x="87328" fg:w="41"/><text x="40.6637%" y="831.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (54 samples, 0.02%)</title><rect x="40.4137%" y="853" width="0.0250%" height="15" fill="rgb(209,19,13)" fg:x="87328" fg:w="54"/><text x="40.6637%" y="863.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (108 samples, 0.05%)</title><rect x="40.3938%" y="869" width="0.0500%" height="15" fill="rgb(226,79,39)" fg:x="87285" fg:w="108"/><text x="40.6438%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (125 samples, 0.06%)</title><rect x="40.3915%" y="885" width="0.0578%" height="15" fill="rgb(222,163,10)" fg:x="87280" fg:w="125"/><text x="40.6415%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (76 samples, 0.04%)</title><rect x="40.4989%" y="709" width="0.0352%" height="15" fill="rgb(214,44,19)" fg:x="87512" fg:w="76"/><text x="40.7489%" y="719.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (260 samples, 0.12%)</title><rect x="40.4531%" y="725" width="0.1203%" height="15" fill="rgb(210,217,13)" fg:x="87413" fg:w="260"/><text x="40.7031%" y="735.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (85 samples, 0.04%)</title><rect x="40.5340%" y="709" width="0.0393%" height="15" fill="rgb(237,61,54)" fg:x="87588" fg:w="85"/><text x="40.7840%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (45 samples, 0.02%)</title><rect x="40.5743%" y="725" width="0.0208%" height="15" fill="rgb(226,184,24)" fg:x="87675" fg:w="45"/><text x="40.8243%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.02%)</title><rect x="40.5743%" y="709" width="0.0208%" height="15" fill="rgb(223,226,4)" fg:x="87675" fg:w="45"/><text x="40.8243%" y="719.50"></text></g><g><title>[libc.so.6] (45 samples, 0.02%)</title><rect x="40.5743%" y="693" width="0.0208%" height="15" fill="rgb(210,26,41)" fg:x="87675" fg:w="45"/><text x="40.8243%" y="703.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (311 samples, 0.14%)</title><rect x="40.4517%" y="805" width="0.1439%" height="15" fill="rgb(220,221,6)" fg:x="87410" fg:w="311"/><text x="40.7017%" y="815.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (311 samples, 0.14%)</title><rect x="40.4517%" y="789" width="0.1439%" height="15" fill="rgb(225,89,49)" fg:x="87410" fg:w="311"/><text x="40.7017%" y="799.50"></text></g><g><title>std::io::Write::write_all (311 samples, 0.14%)</title><rect x="40.4517%" y="773" width="0.1439%" height="15" fill="rgb(218,70,45)" fg:x="87410" fg:w="311"/><text x="40.7017%" y="783.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (309 samples, 0.14%)</title><rect x="40.4526%" y="757" width="0.1430%" height="15" fill="rgb(238,166,21)" fg:x="87412" fg:w="309"/><text x="40.7026%" y="767.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (308 samples, 0.14%)</title><rect x="40.4531%" y="741" width="0.1425%" height="15" fill="rgb(224,141,44)" fg:x="87413" fg:w="308"/><text x="40.7031%" y="751.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (327 samples, 0.15%)</title><rect x="40.4494%" y="853" width="0.1513%" height="15" fill="rgb(230,12,49)" fg:x="87405" fg:w="327"/><text x="40.6994%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (327 samples, 0.15%)</title><rect x="40.4494%" y="837" width="0.1513%" height="15" fill="rgb(212,174,12)" fg:x="87405" fg:w="327"/><text x="40.6994%" y="847.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (322 samples, 0.15%)</title><rect x="40.4517%" y="821" width="0.1490%" height="15" fill="rgb(246,67,9)" fg:x="87410" fg:w="322"/><text x="40.7017%" y="831.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (39 samples, 0.02%)</title><rect x="40.6007%" y="853" width="0.0180%" height="15" fill="rgb(239,35,23)" fg:x="87732" fg:w="39"/><text x="40.8507%" y="863.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (39 samples, 0.02%)</title><rect x="40.6007%" y="837" width="0.0180%" height="15" fill="rgb(211,167,0)" fg:x="87732" fg:w="39"/><text x="40.8507%" y="847.50"></text></g><g><title>std::io::Write::write_all (24 samples, 0.01%)</title><rect x="40.6076%" y="821" width="0.0111%" height="15" fill="rgb(225,119,45)" fg:x="87747" fg:w="24"/><text x="40.8576%" y="831.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (367 samples, 0.17%)</title><rect x="40.4494%" y="869" width="0.1698%" height="15" fill="rgb(210,162,6)" fg:x="87405" fg:w="367"/><text x="40.6994%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (376 samples, 0.17%)</title><rect x="40.4494%" y="885" width="0.1740%" height="15" fill="rgb(208,118,35)" fg:x="87405" fg:w="376"/><text x="40.6994%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (38 samples, 0.02%)</title><rect x="40.6497%" y="805" width="0.0176%" height="15" fill="rgb(239,4,53)" fg:x="87838" fg:w="38"/><text x="40.8997%" y="815.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (129 samples, 0.06%)</title><rect x="40.6285%" y="821" width="0.0597%" height="15" fill="rgb(213,130,21)" fg:x="87792" fg:w="129"/><text x="40.8785%" y="831.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (45 samples, 0.02%)</title><rect x="40.6673%" y="805" width="0.0208%" height="15" fill="rgb(235,148,0)" fg:x="87876" fg:w="45"/><text x="40.9173%" y="815.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (135 samples, 0.06%)</title><rect x="40.6275%" y="837" width="0.0625%" height="15" fill="rgb(244,224,18)" fg:x="87790" fg:w="135"/><text x="40.8775%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (138 samples, 0.06%)</title><rect x="40.6266%" y="853" width="0.0639%" height="15" fill="rgb(211,214,4)" fg:x="87788" fg:w="138"/><text x="40.8766%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (31 samples, 0.01%)</title><rect x="40.7076%" y="789" width="0.0143%" height="15" fill="rgb(206,119,25)" fg:x="87963" fg:w="31"/><text x="40.9576%" y="799.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (105 samples, 0.05%)</title><rect x="40.6932%" y="805" width="0.0486%" height="15" fill="rgb(243,93,47)" fg:x="87932" fg:w="105"/><text x="40.9432%" y="815.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (43 samples, 0.02%)</title><rect x="40.7219%" y="789" width="0.0199%" height="15" fill="rgb(224,194,6)" fg:x="87994" fg:w="43"/><text x="40.9719%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (115 samples, 0.05%)</title><rect x="40.6914%" y="837" width="0.0532%" height="15" fill="rgb(243,229,6)" fg:x="87928" fg:w="115"/><text x="40.9414%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (115 samples, 0.05%)</title><rect x="40.6914%" y="821" width="0.0532%" height="15" fill="rgb(207,23,50)" fg:x="87928" fg:w="115"/><text x="40.9414%" y="831.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin_hashes::Hash&gt;::from_engine (261 samples, 0.12%)</title><rect x="40.6261%" y="885" width="0.1208%" height="15" fill="rgb(253,192,32)" fg:x="87787" fg:w="261"/><text x="40.8761%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (260 samples, 0.12%)</title><rect x="40.6266%" y="869" width="0.1203%" height="15" fill="rgb(213,21,6)" fg:x="87788" fg:w="260"/><text x="40.8766%" y="879.50"></text></g><g><title>bitcoin_hashes::Hash::hash (122 samples, 0.06%)</title><rect x="40.6905%" y="853" width="0.0565%" height="15" fill="rgb(243,151,13)" fg:x="87926" fg:w="122"/><text x="40.9405%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (794 samples, 0.37%)</title><rect x="40.3869%" y="965" width="0.3674%" height="15" fill="rgb(233,165,41)" fg:x="87270" fg:w="794"/><text x="40.6369%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (793 samples, 0.37%)</title><rect x="40.3873%" y="949" width="0.3670%" height="15" fill="rgb(246,176,45)" fg:x="87271" fg:w="793"/><text x="40.6373%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (793 samples, 0.37%)</title><rect x="40.3873%" y="933" width="0.3670%" height="15" fill="rgb(217,170,52)" fg:x="87271" fg:w="793"/><text x="40.6373%" y="943.50"></text></g><g><title>bitcoin::blockdata::block::Block::compute_merkle_root::{{closure}} (793 samples, 0.37%)</title><rect x="40.3873%" y="917" width="0.3670%" height="15" fill="rgb(214,203,54)" fg:x="87271" fg:w="793"/><text x="40.6373%" y="927.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (793 samples, 0.37%)</title><rect x="40.3873%" y="901" width="0.3670%" height="15" fill="rgb(248,215,49)" fg:x="87271" fg:w="793"/><text x="40.6373%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (26 samples, 0.01%)</title><rect x="40.7562%" y="965" width="0.0120%" height="15" fill="rgb(208,46,10)" fg:x="88068" fg:w="26"/><text x="41.0062%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.01%)</title><rect x="40.7562%" y="949" width="0.0120%" height="15" fill="rgb(254,5,31)" fg:x="88068" fg:w="26"/><text x="41.0062%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.01%)</title><rect x="40.7562%" y="933" width="0.0120%" height="15" fill="rgb(222,104,33)" fg:x="88068" fg:w="26"/><text x="41.0062%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.01%)</title><rect x="40.7562%" y="917" width="0.0120%" height="15" fill="rgb(248,49,16)" fg:x="88068" fg:w="26"/><text x="41.0062%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.01%)</title><rect x="40.7562%" y="901" width="0.0120%" height="15" fill="rgb(232,198,41)" fg:x="88068" fg:w="26"/><text x="41.0062%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.01%)</title><rect x="40.7562%" y="885" width="0.0120%" height="15" fill="rgb(214,125,3)" fg:x="88068" fg:w="26"/><text x="41.0062%" y="895.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="40.7562%" y="869" width="0.0120%" height="15" fill="rgb(229,220,28)" fg:x="88068" fg:w="26"/><text x="41.0062%" y="879.50"></text></g><g><title>malloc (26 samples, 0.01%)</title><rect x="40.7562%" y="853" width="0.0120%" height="15" fill="rgb(222,64,37)" fg:x="88068" fg:w="26"/><text x="41.0062%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (58 samples, 0.03%)</title><rect x="40.8108%" y="837" width="0.0268%" height="15" fill="rgb(249,184,13)" fg:x="88186" fg:w="58"/><text x="41.0608%" y="847.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (197 samples, 0.09%)</title><rect x="40.7802%" y="853" width="0.0912%" height="15" fill="rgb(252,176,6)" fg:x="88120" fg:w="197"/><text x="41.0302%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (73 samples, 0.03%)</title><rect x="40.8376%" y="837" width="0.0338%" height="15" fill="rgb(228,153,7)" fg:x="88244" fg:w="73"/><text x="41.0876%" y="847.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (213 samples, 0.10%)</title><rect x="40.7761%" y="885" width="0.0986%" height="15" fill="rgb(242,193,5)" fg:x="88111" fg:w="213"/><text x="41.0261%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (211 samples, 0.10%)</title><rect x="40.7770%" y="869" width="0.0976%" height="15" fill="rgb(232,140,9)" fg:x="88113" fg:w="211"/><text x="41.0270%" y="879.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (219 samples, 0.10%)</title><rect x="40.7738%" y="933" width="0.1013%" height="15" fill="rgb(213,222,16)" fg:x="88106" fg:w="219"/><text x="41.0238%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (219 samples, 0.10%)</title><rect x="40.7738%" y="917" width="0.1013%" height="15" fill="rgb(222,75,50)" fg:x="88106" fg:w="219"/><text x="41.0238%" y="927.50"></text></g><g><title>std::io::Write::write_all (218 samples, 0.10%)</title><rect x="40.7742%" y="901" width="0.1009%" height="15" fill="rgb(205,180,2)" fg:x="88107" fg:w="218"/><text x="41.0242%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (220 samples, 0.10%)</title><rect x="40.7738%" y="949" width="0.1018%" height="15" fill="rgb(216,34,7)" fg:x="88106" fg:w="220"/><text x="41.0238%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (52 samples, 0.02%)</title><rect x="40.9177%" y="885" width="0.0241%" height="15" fill="rgb(253,16,32)" fg:x="88417" fg:w="52"/><text x="41.1677%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (192 samples, 0.09%)</title><rect x="40.8839%" y="901" width="0.0889%" height="15" fill="rgb(208,97,28)" fg:x="88344" fg:w="192"/><text x="41.1339%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (67 samples, 0.03%)</title><rect x="40.9418%" y="885" width="0.0310%" height="15" fill="rgb(225,92,11)" fg:x="88469" fg:w="67"/><text x="41.1918%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (203 samples, 0.09%)</title><rect x="40.8830%" y="917" width="0.0939%" height="15" fill="rgb(243,38,12)" fg:x="88342" fg:w="203"/><text x="41.1330%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (209 samples, 0.10%)</title><rect x="40.8816%" y="933" width="0.0967%" height="15" fill="rgb(208,139,16)" fg:x="88339" fg:w="209"/><text x="41.1316%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (55 samples, 0.03%)</title><rect x="41.0163%" y="869" width="0.0255%" height="15" fill="rgb(227,24,9)" fg:x="88630" fg:w="55"/><text x="41.2663%" y="879.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (208 samples, 0.10%)</title><rect x="40.9820%" y="885" width="0.0963%" height="15" fill="rgb(206,62,11)" fg:x="88556" fg:w="208"/><text x="41.2320%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (79 samples, 0.04%)</title><rect x="41.0417%" y="869" width="0.0366%" height="15" fill="rgb(228,134,27)" fg:x="88685" fg:w="79"/><text x="41.2917%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (221 samples, 0.10%)</title><rect x="40.9802%" y="901" width="0.1023%" height="15" fill="rgb(205,55,33)" fg:x="88552" fg:w="221"/><text x="41.2302%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (226 samples, 0.10%)</title><rect x="40.9797%" y="917" width="0.1046%" height="15" fill="rgb(243,75,43)" fg:x="88551" fg:w="226"/><text x="41.2297%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (453 samples, 0.21%)</title><rect x="40.8765%" y="949" width="0.2096%" height="15" fill="rgb(223,27,42)" fg:x="88328" fg:w="453"/><text x="41.1265%" y="959.50"></text></g><g><title>bitcoin_hashes::Hash::hash (233 samples, 0.11%)</title><rect x="40.9783%" y="933" width="0.1078%" height="15" fill="rgb(232,189,33)" fg:x="88548" fg:w="233"/><text x="41.2283%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (23 samples, 0.01%)</title><rect x="41.1047%" y="821" width="0.0106%" height="15" fill="rgb(210,9,39)" fg:x="88821" fg:w="23"/><text x="41.3547%" y="831.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (94 samples, 0.04%)</title><rect x="41.0880%" y="837" width="0.0435%" height="15" fill="rgb(242,85,26)" fg:x="88785" fg:w="94"/><text x="41.3380%" y="847.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (35 samples, 0.02%)</title><rect x="41.1153%" y="821" width="0.0162%" height="15" fill="rgb(248,44,4)" fg:x="88844" fg:w="35"/><text x="41.3653%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (100 samples, 0.05%)</title><rect x="41.0875%" y="933" width="0.0463%" height="15" fill="rgb(250,96,46)" fg:x="88784" fg:w="100"/><text x="41.3375%" y="943.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (100 samples, 0.05%)</title><rect x="41.0875%" y="917" width="0.0463%" height="15" fill="rgb(229,116,26)" fg:x="88784" fg:w="100"/><text x="41.3375%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (100 samples, 0.05%)</title><rect x="41.0875%" y="901" width="0.0463%" height="15" fill="rgb(246,94,34)" fg:x="88784" fg:w="100"/><text x="41.3375%" y="911.50"></text></g><g><title>std::io::Write::write_all (100 samples, 0.05%)</title><rect x="41.0875%" y="885" width="0.0463%" height="15" fill="rgb(251,73,21)" fg:x="88784" fg:w="100"/><text x="41.3375%" y="895.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (100 samples, 0.05%)</title><rect x="41.0875%" y="869" width="0.0463%" height="15" fill="rgb(254,121,25)" fg:x="88784" fg:w="100"/><text x="41.3375%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (100 samples, 0.05%)</title><rect x="41.0875%" y="853" width="0.0463%" height="15" fill="rgb(215,161,49)" fg:x="88784" fg:w="100"/><text x="41.3375%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (28 samples, 0.01%)</title><rect x="41.1532%" y="869" width="0.0130%" height="15" fill="rgb(221,43,13)" fg:x="88926" fg:w="28"/><text x="41.4032%" y="879.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (102 samples, 0.05%)</title><rect x="41.1357%" y="885" width="0.0472%" height="15" fill="rgb(249,5,37)" fg:x="88888" fg:w="102"/><text x="41.3857%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (36 samples, 0.02%)</title><rect x="41.1662%" y="869" width="0.0167%" height="15" fill="rgb(226,25,44)" fg:x="88954" fg:w="36"/><text x="41.4162%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (112 samples, 0.05%)</title><rect x="41.1338%" y="901" width="0.0518%" height="15" fill="rgb(238,189,16)" fg:x="88884" fg:w="112"/><text x="41.3838%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (114 samples, 0.05%)</title><rect x="41.1338%" y="917" width="0.0528%" height="15" fill="rgb(251,186,8)" fg:x="88884" fg:w="114"/><text x="41.3838%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (26 samples, 0.01%)</title><rect x="41.2083%" y="853" width="0.0120%" height="15" fill="rgb(254,34,31)" fg:x="89045" fg:w="26"/><text x="41.4583%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (95 samples, 0.04%)</title><rect x="41.1880%" y="869" width="0.0440%" height="15" fill="rgb(225,215,27)" fg:x="89001" fg:w="95"/><text x="41.4380%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (25 samples, 0.01%)</title><rect x="41.2204%" y="853" width="0.0116%" height="15" fill="rgb(221,192,48)" fg:x="89071" fg:w="25"/><text x="41.4704%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (100 samples, 0.05%)</title><rect x="41.1875%" y="885" width="0.0463%" height="15" fill="rgb(219,137,20)" fg:x="89000" fg:w="100"/><text x="41.4375%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (104 samples, 0.05%)</title><rect x="41.1870%" y="901" width="0.0481%" height="15" fill="rgb(219,84,11)" fg:x="88999" fg:w="104"/><text x="41.4370%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (225 samples, 0.10%)</title><rect x="41.1338%" y="933" width="0.1041%" height="15" fill="rgb(224,10,23)" fg:x="88884" fg:w="225"/><text x="41.3838%" y="943.50"></text></g><g><title>bitcoin_hashes::Hash::hash (111 samples, 0.05%)</title><rect x="41.1866%" y="917" width="0.0514%" height="15" fill="rgb(248,22,39)" fg:x="88998" fg:w="111"/><text x="41.4366%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (51 samples, 0.02%)</title><rect x="41.2398%" y="821" width="0.0236%" height="15" fill="rgb(212,154,20)" fg:x="89113" fg:w="51"/><text x="41.4898%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (58 samples, 0.03%)</title><rect x="41.2379%" y="917" width="0.0268%" height="15" fill="rgb(236,199,50)" fg:x="89109" fg:w="58"/><text x="41.4879%" y="927.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (58 samples, 0.03%)</title><rect x="41.2379%" y="901" width="0.0268%" height="15" fill="rgb(211,9,17)" fg:x="89109" fg:w="58"/><text x="41.4879%" y="911.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (58 samples, 0.03%)</title><rect x="41.2379%" y="885" width="0.0268%" height="15" fill="rgb(243,216,36)" fg:x="89109" fg:w="58"/><text x="41.4879%" y="895.50"></text></g><g><title>std::io::Write::write_all (57 samples, 0.03%)</title><rect x="41.2384%" y="869" width="0.0264%" height="15" fill="rgb(250,2,10)" fg:x="89110" fg:w="57"/><text x="41.4884%" y="879.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (54 samples, 0.02%)</title><rect x="41.2398%" y="853" width="0.0250%" height="15" fill="rgb(226,50,48)" fg:x="89113" fg:w="54"/><text x="41.4898%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (54 samples, 0.02%)</title><rect x="41.2398%" y="837" width="0.0250%" height="15" fill="rgb(243,81,16)" fg:x="89113" fg:w="54"/><text x="41.4898%" y="847.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (48 samples, 0.02%)</title><rect x="41.2671%" y="869" width="0.0222%" height="15" fill="rgb(250,14,2)" fg:x="89172" fg:w="48"/><text x="41.5171%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (55 samples, 0.03%)</title><rect x="41.2657%" y="885" width="0.0255%" height="15" fill="rgb(233,135,29)" fg:x="89169" fg:w="55"/><text x="41.5157%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (57 samples, 0.03%)</title><rect x="41.2652%" y="901" width="0.0264%" height="15" fill="rgb(224,64,43)" fg:x="89168" fg:w="57"/><text x="41.5152%" y="911.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (47 samples, 0.02%)</title><rect x="41.2921%" y="853" width="0.0218%" height="15" fill="rgb(238,84,13)" fg:x="89226" fg:w="47"/><text x="41.5421%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (51 samples, 0.02%)</title><rect x="41.2916%" y="885" width="0.0236%" height="15" fill="rgb(253,48,26)" fg:x="89225" fg:w="51"/><text x="41.5416%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (51 samples, 0.02%)</title><rect x="41.2916%" y="869" width="0.0236%" height="15" fill="rgb(205,223,31)" fg:x="89225" fg:w="51"/><text x="41.5416%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (109 samples, 0.05%)</title><rect x="41.2652%" y="917" width="0.0504%" height="15" fill="rgb(221,41,32)" fg:x="89168" fg:w="109"/><text x="41.5152%" y="927.50"></text></g><g><title>bitcoin_hashes::Hash::hash (52 samples, 0.02%)</title><rect x="41.2916%" y="901" width="0.0241%" height="15" fill="rgb(213,158,31)" fg:x="89225" fg:w="52"/><text x="41.5416%" y="911.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (34 samples, 0.02%)</title><rect x="41.3157%" y="837" width="0.0157%" height="15" fill="rgb(245,126,43)" fg:x="89277" fg:w="34"/><text x="41.5657%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (34 samples, 0.02%)</title><rect x="41.3157%" y="821" width="0.0157%" height="15" fill="rgb(227,7,22)" fg:x="89277" fg:w="34"/><text x="41.5657%" y="831.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (34 samples, 0.02%)</title><rect x="41.3157%" y="805" width="0.0157%" height="15" fill="rgb(252,90,44)" fg:x="89277" fg:w="34"/><text x="41.5657%" y="815.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="41.3157%" y="901" width="0.0162%" height="15" fill="rgb(253,91,0)" fg:x="89277" fg:w="35"/><text x="41.5657%" y="911.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="41.3157%" y="885" width="0.0162%" height="15" fill="rgb(252,175,49)" fg:x="89277" fg:w="35"/><text x="41.5657%" y="895.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (35 samples, 0.02%)</title><rect x="41.3157%" y="869" width="0.0162%" height="15" fill="rgb(246,150,1)" fg:x="89277" fg:w="35"/><text x="41.5657%" y="879.50"></text></g><g><title>std::io::Write::write_all (35 samples, 0.02%)</title><rect x="41.3157%" y="853" width="0.0162%" height="15" fill="rgb(241,192,25)" fg:x="89277" fg:w="35"/><text x="41.5657%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (23 samples, 0.01%)</title><rect x="41.3319%" y="885" width="0.0106%" height="15" fill="rgb(239,187,11)" fg:x="89312" fg:w="23"/><text x="41.5819%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (23 samples, 0.01%)</title><rect x="41.3319%" y="869" width="0.0106%" height="15" fill="rgb(218,202,51)" fg:x="89312" fg:w="23"/><text x="41.5819%" y="879.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (22 samples, 0.01%)</title><rect x="41.3323%" y="853" width="0.0102%" height="15" fill="rgb(225,176,8)" fg:x="89313" fg:w="22"/><text x="41.5823%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (25 samples, 0.01%)</title><rect x="41.3430%" y="837" width="0.0116%" height="15" fill="rgb(219,122,41)" fg:x="89336" fg:w="25"/><text x="41.5930%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (50 samples, 0.02%)</title><rect x="41.3319%" y="901" width="0.0231%" height="15" fill="rgb(248,140,20)" fg:x="89312" fg:w="50"/><text x="41.5819%" y="911.50"></text></g><g><title>bitcoin_hashes::Hash::hash (27 samples, 0.01%)</title><rect x="41.3425%" y="885" width="0.0125%" height="15" fill="rgb(245,41,37)" fg:x="89335" fg:w="27"/><text x="41.5925%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (26 samples, 0.01%)</title><rect x="41.3430%" y="869" width="0.0120%" height="15" fill="rgb(235,82,39)" fg:x="89336" fg:w="26"/><text x="41.5930%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (26 samples, 0.01%)</title><rect x="41.3430%" y="853" width="0.0120%" height="15" fill="rgb(230,108,42)" fg:x="89336" fg:w="26"/><text x="41.5930%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (28 samples, 0.01%)</title><rect x="41.3587%" y="885" width="0.0130%" height="15" fill="rgb(215,150,50)" fg:x="89370" fg:w="28"/><text x="41.6087%" y="895.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (1,329 samples, 0.62%)</title><rect x="40.7682%" y="965" width="0.6150%" height="15" fill="rgb(233,212,5)" fg:x="88094" fg:w="1329"/><text x="41.0182%" y="975.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (642 samples, 0.30%)</title><rect x="41.0861%" y="949" width="0.2971%" height="15" fill="rgb(245,80,22)" fg:x="88781" fg:w="642"/><text x="41.3361%" y="959.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (314 samples, 0.15%)</title><rect x="41.2379%" y="933" width="0.1453%" height="15" fill="rgb(238,129,16)" fg:x="89109" fg:w="314"/><text x="41.4879%" y="943.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (146 samples, 0.07%)</title><rect x="41.3157%" y="917" width="0.0676%" height="15" fill="rgb(240,19,0)" fg:x="89277" fg:w="146"/><text x="41.5657%" y="927.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (61 samples, 0.03%)</title><rect x="41.3550%" y="901" width="0.0282%" height="15" fill="rgb(232,42,35)" fg:x="89362" fg:w="61"/><text x="41.6050%" y="911.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (25 samples, 0.01%)</title><rect x="41.3717%" y="885" width="0.0116%" height="15" fill="rgb(223,130,24)" fg:x="89398" fg:w="25"/><text x="41.6217%" y="895.50"></text></g><g><title>bitcoin::util::hash::bitcoin_merkle_root (7,299 samples, 3.38%)</title><rect x="38.0091%" y="981" width="3.3778%" height="15" fill="rgb(237,16,22)" fg:x="82132" fg:w="7299"/><text x="38.2591%" y="991.50">bit..</text></g><g><title>bitcoin::blockdata::block::Block::check_merkle_root (7,303 samples, 3.38%)</title><rect x="38.0077%" y="1013" width="3.3797%" height="15" fill="rgb(248,192,20)" fg:x="82129" fg:w="7303"/><text x="38.2577%" y="1023.50">bit..</text></g><g><title>bitcoin::blockdata::block::Block::compute_merkle_root (7,300 samples, 3.38%)</title><rect x="38.0091%" y="997" width="3.3783%" height="15" fill="rgb(233,167,2)" fg:x="82132" fg:w="7300"/><text x="38.2591%" y="1007.50">bit..</text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (63 samples, 0.03%)</title><rect x="41.4022%" y="917" width="0.0292%" height="15" fill="rgb(252,71,44)" fg:x="89464" fg:w="63"/><text x="41.6522%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (70 samples, 0.03%)</title><rect x="41.4018%" y="933" width="0.0324%" height="15" fill="rgb(238,37,47)" fg:x="89463" fg:w="70"/><text x="41.6518%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (71 samples, 0.03%)</title><rect x="41.4018%" y="949" width="0.0329%" height="15" fill="rgb(214,202,54)" fg:x="89463" fg:w="71"/><text x="41.6518%" y="959.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (65 samples, 0.03%)</title><rect x="41.4369%" y="901" width="0.0301%" height="15" fill="rgb(254,165,40)" fg:x="89539" fg:w="65"/><text x="41.6869%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (28 samples, 0.01%)</title><rect x="41.4541%" y="885" width="0.0130%" height="15" fill="rgb(246,173,38)" fg:x="89576" fg:w="28"/><text x="41.7041%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (74 samples, 0.03%)</title><rect x="41.4351%" y="933" width="0.0342%" height="15" fill="rgb(215,3,27)" fg:x="89535" fg:w="74"/><text x="41.6851%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (73 samples, 0.03%)</title><rect x="41.4355%" y="917" width="0.0338%" height="15" fill="rgb(239,169,51)" fg:x="89536" fg:w="73"/><text x="41.6855%" y="927.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::WitnessCommitment as bitcoin_hashes::Hash&gt;::from_engine (152 samples, 0.07%)</title><rect x="41.4004%" y="981" width="0.0703%" height="15" fill="rgb(212,5,25)" fg:x="89460" fg:w="152"/><text x="41.6504%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (151 samples, 0.07%)</title><rect x="41.4008%" y="965" width="0.0699%" height="15" fill="rgb(243,45,17)" fg:x="89461" fg:w="151"/><text x="41.6508%" y="975.50"></text></g><g><title>bitcoin_hashes::Hash::hash (78 samples, 0.04%)</title><rect x="41.4346%" y="949" width="0.0361%" height="15" fill="rgb(242,97,9)" fg:x="89534" fg:w="78"/><text x="41.6846%" y="959.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (69 samples, 0.03%)</title><rect x="41.4726%" y="965" width="0.0319%" height="15" fill="rgb(228,71,31)" fg:x="89616" fg:w="69"/><text x="41.7226%" y="975.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (27 samples, 0.01%)</title><rect x="41.4920%" y="949" width="0.0125%" height="15" fill="rgb(252,184,16)" fg:x="89658" fg:w="27"/><text x="41.7420%" y="959.50"></text></g><g><title>bitcoin::blockdata::block::Block::compute_witness_commitment (236 samples, 0.11%)</title><rect x="41.3957%" y="997" width="0.1092%" height="15" fill="rgb(236,169,46)" fg:x="89450" fg:w="236"/><text x="41.6457%" y="1007.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (70 samples, 0.03%)</title><rect x="41.4726%" y="981" width="0.0324%" height="15" fill="rgb(207,17,47)" fg:x="89616" fg:w="70"/><text x="41.7226%" y="991.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (121 samples, 0.06%)</title><rect x="41.6049%" y="853" width="0.0560%" height="15" fill="rgb(206,201,28)" fg:x="89902" fg:w="121"/><text x="41.8549%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (429 samples, 0.20%)</title><rect x="41.5230%" y="869" width="0.1985%" height="15" fill="rgb(224,184,23)" fg:x="89725" fg:w="429"/><text x="41.7730%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (131 samples, 0.06%)</title><rect x="41.6609%" y="853" width="0.0606%" height="15" fill="rgb(208,139,48)" fg:x="90023" fg:w="131"/><text x="41.9109%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (463 samples, 0.21%)</title><rect x="41.5161%" y="901" width="0.2143%" height="15" fill="rgb(208,130,10)" fg:x="89710" fg:w="463"/><text x="41.7661%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (459 samples, 0.21%)</title><rect x="41.5179%" y="885" width="0.2124%" height="15" fill="rgb(211,213,45)" fg:x="89714" fg:w="459"/><text x="41.7679%" y="895.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (476 samples, 0.22%)</title><rect x="41.5110%" y="949" width="0.2203%" height="15" fill="rgb(235,100,30)" fg:x="89699" fg:w="476"/><text x="41.7610%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (476 samples, 0.22%)</title><rect x="41.5110%" y="933" width="0.2203%" height="15" fill="rgb(206,144,31)" fg:x="89699" fg:w="476"/><text x="41.7610%" y="943.50"></text></g><g><title>std::io::Write::write_all (475 samples, 0.22%)</title><rect x="41.5114%" y="917" width="0.2198%" height="15" fill="rgb(224,200,26)" fg:x="89700" fg:w="475"/><text x="41.7614%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (481 samples, 0.22%)</title><rect x="41.5110%" y="965" width="0.2226%" height="15" fill="rgb(247,104,53)" fg:x="89699" fg:w="481"/><text x="41.7610%" y="975.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (29 samples, 0.01%)</title><rect x="41.8011%" y="901" width="0.0134%" height="15" fill="rgb(220,14,17)" fg:x="90326" fg:w="29"/><text x="42.0511%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (114 samples, 0.05%)</title><rect x="41.8146%" y="901" width="0.0528%" height="15" fill="rgb(230,140,40)" fg:x="90355" fg:w="114"/><text x="42.0646%" y="911.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (414 samples, 0.19%)</title><rect x="41.7428%" y="917" width="0.1916%" height="15" fill="rgb(229,2,41)" fg:x="90200" fg:w="414"/><text x="41.9928%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (145 samples, 0.07%)</title><rect x="41.8673%" y="901" width="0.0671%" height="15" fill="rgb(232,89,16)" fg:x="90469" fg:w="145"/><text x="42.1173%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (439 samples, 0.20%)</title><rect x="41.7391%" y="933" width="0.2032%" height="15" fill="rgb(247,59,52)" fg:x="90192" fg:w="439"/><text x="41.9891%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (457 samples, 0.21%)</title><rect x="41.7364%" y="949" width="0.2115%" height="15" fill="rgb(226,110,21)" fg:x="90186" fg:w="457"/><text x="41.9864%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (116 samples, 0.05%)</title><rect x="42.0469%" y="885" width="0.0537%" height="15" fill="rgb(224,176,43)" fg:x="90857" fg:w="116"/><text x="42.2969%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (445 samples, 0.21%)</title><rect x="41.9566%" y="901" width="0.2059%" height="15" fill="rgb(221,73,6)" fg:x="90662" fg:w="445"/><text x="42.2066%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (134 samples, 0.06%)</title><rect x="42.1006%" y="885" width="0.0620%" height="15" fill="rgb(232,78,19)" fg:x="90973" fg:w="134"/><text x="42.3506%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (477 samples, 0.22%)</title><rect x="41.9515%" y="917" width="0.2207%" height="15" fill="rgb(233,112,48)" fg:x="90651" fg:w="477"/><text x="42.2015%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (496 samples, 0.23%)</title><rect x="41.9492%" y="933" width="0.2295%" height="15" fill="rgb(243,131,47)" fg:x="90646" fg:w="496"/><text x="42.1992%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (968 samples, 0.45%)</title><rect x="41.7354%" y="965" width="0.4480%" height="15" fill="rgb(226,51,1)" fg:x="90184" fg:w="968"/><text x="41.9854%" y="975.50"></text></g><g><title>bitcoin_hashes::Hash::hash (509 samples, 0.24%)</title><rect x="41.9478%" y="949" width="0.2356%" height="15" fill="rgb(247,58,7)" fg:x="90643" fg:w="509"/><text x="42.1978%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (44 samples, 0.02%)</title><rect x="42.2227%" y="645" width="0.0204%" height="15" fill="rgb(209,7,32)" fg:x="91237" fg:w="44"/><text x="42.4727%" y="655.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (49 samples, 0.02%)</title><rect x="42.2209%" y="661" width="0.0227%" height="15" fill="rgb(209,39,41)" fg:x="91233" fg:w="49"/><text x="42.4709%" y="671.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (69 samples, 0.03%)</title><rect x="42.2130%" y="741" width="0.0319%" height="15" fill="rgb(226,182,46)" fg:x="91216" fg:w="69"/><text x="42.4630%" y="751.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (67 samples, 0.03%)</title><rect x="42.2139%" y="725" width="0.0310%" height="15" fill="rgb(230,219,10)" fg:x="91218" fg:w="67"/><text x="42.4639%" y="735.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (67 samples, 0.03%)</title><rect x="42.2139%" y="709" width="0.0310%" height="15" fill="rgb(227,175,30)" fg:x="91218" fg:w="67"/><text x="42.4639%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (67 samples, 0.03%)</title><rect x="42.2139%" y="693" width="0.0310%" height="15" fill="rgb(217,2,50)" fg:x="91218" fg:w="67"/><text x="42.4639%" y="703.50"></text></g><g><title>std::io::Write::write_all (67 samples, 0.03%)</title><rect x="42.2139%" y="677" width="0.0310%" height="15" fill="rgb(229,160,0)" fg:x="91218" fg:w="67"/><text x="42.4639%" y="687.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (83 samples, 0.04%)</title><rect x="42.2070%" y="789" width="0.0384%" height="15" fill="rgb(207,78,37)" fg:x="91203" fg:w="83"/><text x="42.4570%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (83 samples, 0.04%)</title><rect x="42.2070%" y="773" width="0.0384%" height="15" fill="rgb(225,57,0)" fg:x="91203" fg:w="83"/><text x="42.4570%" y="783.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (81 samples, 0.04%)</title><rect x="42.2079%" y="757" width="0.0375%" height="15" fill="rgb(232,154,2)" fg:x="91205" fg:w="81"/><text x="42.4579%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (39 samples, 0.02%)</title><rect x="42.2922%" y="645" width="0.0180%" height="15" fill="rgb(241,212,25)" fg:x="91387" fg:w="39"/><text x="42.5422%" y="655.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (140 samples, 0.06%)</title><rect x="42.2658%" y="661" width="0.0648%" height="15" fill="rgb(226,69,20)" fg:x="91330" fg:w="140"/><text x="42.5158%" y="671.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (44 samples, 0.02%)</title><rect x="42.3102%" y="645" width="0.0204%" height="15" fill="rgb(247,184,54)" fg:x="91426" fg:w="44"/><text x="42.5602%" y="655.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (189 samples, 0.09%)</title><rect x="42.2570%" y="677" width="0.0875%" height="15" fill="rgb(210,145,0)" fg:x="91311" fg:w="189"/><text x="42.5070%" y="687.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (196 samples, 0.09%)</title><rect x="42.2542%" y="693" width="0.0907%" height="15" fill="rgb(253,82,12)" fg:x="91305" fg:w="196"/><text x="42.5042%" y="703.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (215 samples, 0.10%)</title><rect x="42.2459%" y="741" width="0.0995%" height="15" fill="rgb(245,42,11)" fg:x="91287" fg:w="215"/><text x="42.4959%" y="751.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (215 samples, 0.10%)</title><rect x="42.2459%" y="725" width="0.0995%" height="15" fill="rgb(219,147,32)" fg:x="91287" fg:w="215"/><text x="42.4959%" y="735.50"></text></g><g><title>std::io::Write::write_all (208 samples, 0.10%)</title><rect x="42.2491%" y="709" width="0.0963%" height="15" fill="rgb(246,12,7)" fg:x="91294" fg:w="208"/><text x="42.4991%" y="719.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (221 samples, 0.10%)</title><rect x="42.2454%" y="773" width="0.1023%" height="15" fill="rgb(243,50,9)" fg:x="91286" fg:w="221"/><text x="42.4954%" y="783.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (221 samples, 0.10%)</title><rect x="42.2454%" y="757" width="0.1023%" height="15" fill="rgb(219,149,6)" fg:x="91286" fg:w="221"/><text x="42.4954%" y="767.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (46 samples, 0.02%)</title><rect x="42.3546%" y="725" width="0.0213%" height="15" fill="rgb(241,51,42)" fg:x="91522" fg:w="46"/><text x="42.6046%" y="735.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (39 samples, 0.02%)</title><rect x="42.3579%" y="709" width="0.0180%" height="15" fill="rgb(226,128,27)" fg:x="91529" fg:w="39"/><text x="42.6079%" y="719.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (284 samples, 0.13%)</title><rect x="42.2454%" y="789" width="0.1314%" height="15" fill="rgb(244,144,4)" fg:x="91286" fg:w="284"/><text x="42.4954%" y="799.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (63 samples, 0.03%)</title><rect x="42.3477%" y="773" width="0.0292%" height="15" fill="rgb(221,4,13)" fg:x="91507" fg:w="63"/><text x="42.5977%" y="783.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (63 samples, 0.03%)</title><rect x="42.3477%" y="757" width="0.0292%" height="15" fill="rgb(208,170,28)" fg:x="91507" fg:w="63"/><text x="42.5977%" y="767.50"></text></g><g><title>std::io::Write::write_all (61 samples, 0.03%)</title><rect x="42.3486%" y="741" width="0.0282%" height="15" fill="rgb(226,131,13)" fg:x="91509" fg:w="61"/><text x="42.5986%" y="751.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (26 samples, 0.01%)</title><rect x="42.3907%" y="693" width="0.0120%" height="15" fill="rgb(215,72,41)" fg:x="91600" fg:w="26"/><text x="42.6407%" y="703.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (58 samples, 0.03%)</title><rect x="42.3866%" y="725" width="0.0268%" height="15" fill="rgb(243,108,20)" fg:x="91591" fg:w="58"/><text x="42.6366%" y="735.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (56 samples, 0.03%)</title><rect x="42.3875%" y="709" width="0.0259%" height="15" fill="rgb(230,189,17)" fg:x="91593" fg:w="56"/><text x="42.6375%" y="719.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (447 samples, 0.21%)</title><rect x="42.2070%" y="805" width="0.2069%" height="15" fill="rgb(220,50,17)" fg:x="91203" fg:w="447"/><text x="42.4570%" y="815.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Sequence as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (80 samples, 0.04%)</title><rect x="42.3768%" y="789" width="0.0370%" height="15" fill="rgb(248,152,48)" fg:x="91570" fg:w="80"/><text x="42.6268%" y="799.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (80 samples, 0.04%)</title><rect x="42.3768%" y="773" width="0.0370%" height="15" fill="rgb(244,91,11)" fg:x="91570" fg:w="80"/><text x="42.6268%" y="783.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (80 samples, 0.04%)</title><rect x="42.3768%" y="757" width="0.0370%" height="15" fill="rgb(220,157,5)" fg:x="91570" fg:w="80"/><text x="42.6268%" y="767.50"></text></g><g><title>std::io::Write::write_all (76 samples, 0.04%)</title><rect x="42.3787%" y="741" width="0.0352%" height="15" fill="rgb(253,137,8)" fg:x="91574" fg:w="76"/><text x="42.6287%" y="751.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (26 samples, 0.01%)</title><rect x="42.4227%" y="741" width="0.0120%" height="15" fill="rgb(217,137,51)" fg:x="91669" fg:w="26"/><text x="42.6727%" y="751.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (48 samples, 0.02%)</title><rect x="42.4139%" y="805" width="0.0222%" height="15" fill="rgb(218,209,53)" fg:x="91650" fg:w="48"/><text x="42.6639%" y="815.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (39 samples, 0.02%)</title><rect x="42.4180%" y="789" width="0.0180%" height="15" fill="rgb(249,137,25)" fg:x="91659" fg:w="39"/><text x="42.6680%" y="799.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (39 samples, 0.02%)</title><rect x="42.4180%" y="773" width="0.0180%" height="15" fill="rgb(239,155,26)" fg:x="91659" fg:w="39"/><text x="42.6680%" y="783.50"></text></g><g><title>std::io::Write::write_all (39 samples, 0.02%)</title><rect x="42.4180%" y="757" width="0.0180%" height="15" fill="rgb(227,85,46)" fg:x="91659" fg:w="39"/><text x="42.6680%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (505 samples, 0.23%)</title><rect x="42.2033%" y="821" width="0.2337%" height="15" fill="rgb(251,107,43)" fg:x="91195" fg:w="505"/><text x="42.4533%" y="831.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (33 samples, 0.02%)</title><rect x="42.5735%" y="645" width="0.0153%" height="15" fill="rgb(234,170,33)" fg:x="91995" fg:w="33"/><text x="42.8235%" y="655.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (188 samples, 0.09%)</title><rect x="42.5888%" y="645" width="0.0870%" height="15" fill="rgb(206,29,35)" fg:x="92028" fg:w="188"/><text x="42.8388%" y="655.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (728 samples, 0.34%)</title><rect x="42.4574%" y="661" width="0.3369%" height="15" fill="rgb(227,138,25)" fg:x="91744" fg:w="728"/><text x="42.7074%" y="671.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (256 samples, 0.12%)</title><rect x="42.6758%" y="645" width="0.1185%" height="15" fill="rgb(249,131,35)" fg:x="92216" fg:w="256"/><text x="42.9258%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (57 samples, 0.03%)</title><rect x="42.7966%" y="661" width="0.0264%" height="15" fill="rgb(239,6,40)" fg:x="92477" fg:w="57"/><text x="43.0466%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.03%)</title><rect x="42.7966%" y="645" width="0.0264%" height="15" fill="rgb(246,136,47)" fg:x="92477" fg:w="57"/><text x="43.0466%" y="655.50"></text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="42.7970%" y="629" width="0.0259%" height="15" fill="rgb(253,58,26)" fg:x="92478" fg:w="56"/><text x="43.0470%" y="639.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (821 samples, 0.38%)</title><rect x="42.4472%" y="693" width="0.3799%" height="15" fill="rgb(237,141,10)" fg:x="91722" fg:w="821"/><text x="42.6972%" y="703.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (811 samples, 0.38%)</title><rect x="42.4518%" y="677" width="0.3753%" height="15" fill="rgb(234,156,12)" fg:x="91732" fg:w="811"/><text x="42.7018%" y="687.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (845 samples, 0.39%)</title><rect x="42.4393%" y="741" width="0.3910%" height="15" fill="rgb(243,224,36)" fg:x="91705" fg:w="845"/><text x="42.6893%" y="751.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (845 samples, 0.39%)</title><rect x="42.4393%" y="725" width="0.3910%" height="15" fill="rgb(205,229,51)" fg:x="91705" fg:w="845"/><text x="42.6893%" y="735.50"></text></g><g><title>std::io::Write::write_all (844 samples, 0.39%)</title><rect x="42.4398%" y="709" width="0.3906%" height="15" fill="rgb(223,189,4)" fg:x="91706" fg:w="844"/><text x="42.6898%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (22 samples, 0.01%)</title><rect x="42.8507%" y="629" width="0.0102%" height="15" fill="rgb(249,167,54)" fg:x="92594" fg:w="22"/><text x="43.1007%" y="639.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (51 samples, 0.02%)</title><rect x="42.8378%" y="661" width="0.0236%" height="15" fill="rgb(218,34,28)" fg:x="92566" fg:w="51"/><text x="43.0878%" y="671.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (45 samples, 0.02%)</title><rect x="42.8405%" y="645" width="0.0208%" height="15" fill="rgb(232,109,42)" fg:x="92572" fg:w="45"/><text x="43.0905%" y="655.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="42.8304%" y="741" width="0.0333%" height="15" fill="rgb(248,214,46)" fg:x="92550" fg:w="72"/><text x="43.0804%" y="751.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (67 samples, 0.03%)</title><rect x="42.8327%" y="725" width="0.0310%" height="15" fill="rgb(244,216,40)" fg:x="92555" fg:w="67"/><text x="43.0827%" y="735.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (67 samples, 0.03%)</title><rect x="42.8327%" y="709" width="0.0310%" height="15" fill="rgb(231,226,31)" fg:x="92555" fg:w="67"/><text x="43.0827%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (67 samples, 0.03%)</title><rect x="42.8327%" y="693" width="0.0310%" height="15" fill="rgb(238,38,43)" fg:x="92555" fg:w="67"/><text x="43.0827%" y="703.50"></text></g><g><title>std::io::Write::write_all (66 samples, 0.03%)</title><rect x="42.8331%" y="677" width="0.0305%" height="15" fill="rgb(208,88,43)" fg:x="92556" fg:w="66"/><text x="43.0831%" y="687.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (919 samples, 0.43%)</title><rect x="42.4389%" y="789" width="0.4253%" height="15" fill="rgb(205,136,37)" fg:x="91704" fg:w="919"/><text x="42.6889%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (919 samples, 0.43%)</title><rect x="42.4389%" y="773" width="0.4253%" height="15" fill="rgb(237,34,14)" fg:x="91704" fg:w="919"/><text x="42.6889%" y="783.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (918 samples, 0.42%)</title><rect x="42.4393%" y="757" width="0.4248%" height="15" fill="rgb(236,193,44)" fg:x="91705" fg:w="918"/><text x="42.6893%" y="767.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (53 samples, 0.02%)</title><rect x="42.8766%" y="741" width="0.0245%" height="15" fill="rgb(231,48,10)" fg:x="92650" fg:w="53"/><text x="43.1266%" y="751.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (49 samples, 0.02%)</title><rect x="42.8785%" y="725" width="0.0227%" height="15" fill="rgb(213,141,34)" fg:x="92654" fg:w="49"/><text x="43.1285%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,001 samples, 0.46%)</title><rect x="42.4389%" y="805" width="0.4632%" height="15" fill="rgb(249,130,34)" fg:x="91704" fg:w="1001"/><text x="42.6889%" y="815.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (82 samples, 0.04%)</title><rect x="42.8642%" y="789" width="0.0379%" height="15" fill="rgb(219,42,41)" fg:x="92623" fg:w="82"/><text x="43.1142%" y="799.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (82 samples, 0.04%)</title><rect x="42.8642%" y="773" width="0.0379%" height="15" fill="rgb(224,100,54)" fg:x="92623" fg:w="82"/><text x="43.1142%" y="783.50"></text></g><g><title>std::io::Write::write_all (71 samples, 0.03%)</title><rect x="42.8692%" y="757" width="0.0329%" height="15" fill="rgb(229,200,27)" fg:x="92634" fg:w="71"/><text x="43.1192%" y="767.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (43 samples, 0.02%)</title><rect x="42.9021%" y="805" width="0.0199%" height="15" fill="rgb(217,118,10)" fg:x="92705" fg:w="43"/><text x="43.1521%" y="815.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="42.9058%" y="789" width="0.0162%" height="15" fill="rgb(206,22,3)" fg:x="92713" fg:w="35"/><text x="43.1558%" y="799.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (35 samples, 0.02%)</title><rect x="42.9058%" y="773" width="0.0162%" height="15" fill="rgb(232,163,46)" fg:x="92713" fg:w="35"/><text x="43.1558%" y="783.50"></text></g><g><title>std::io::Write::write_all (35 samples, 0.02%)</title><rect x="42.9058%" y="757" width="0.0162%" height="15" fill="rgb(206,95,13)" fg:x="92713" fg:w="35"/><text x="43.1558%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,050 samples, 0.49%)</title><rect x="42.4370%" y="821" width="0.4859%" height="15" fill="rgb(253,154,18)" fg:x="91700" fg:w="1050"/><text x="42.6870%" y="831.50"></text></g><g><title>&lt;bitcoin::blockdata::locktime::PackedLockTime as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (34 samples, 0.02%)</title><rect x="42.9229%" y="821" width="0.0157%" height="15" fill="rgb(219,32,23)" fg:x="92750" fg:w="34"/><text x="43.1729%" y="831.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (34 samples, 0.02%)</title><rect x="42.9229%" y="805" width="0.0157%" height="15" fill="rgb(230,191,45)" fg:x="92750" fg:w="34"/><text x="43.1729%" y="815.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (34 samples, 0.02%)</title><rect x="42.9229%" y="789" width="0.0157%" height="15" fill="rgb(229,64,36)" fg:x="92750" fg:w="34"/><text x="43.1729%" y="799.50"></text></g><g><title>std::io::Write::write_all (32 samples, 0.01%)</title><rect x="42.9238%" y="773" width="0.0148%" height="15" fill="rgb(205,129,25)" fg:x="92752" fg:w="32"/><text x="43.1738%" y="783.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (128 samples, 0.06%)</title><rect x="43.3126%" y="725" width="0.0592%" height="15" fill="rgb(254,112,7)" fg:x="93592" fg:w="128"/><text x="43.5626%" y="735.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (624 samples, 0.29%)</title><rect x="43.3718%" y="725" width="0.2888%" height="15" fill="rgb(226,53,48)" fg:x="93720" fg:w="624"/><text x="43.6218%" y="735.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (2,342 samples, 1.08%)</title><rect x="42.9576%" y="741" width="1.0838%" height="15" fill="rgb(214,153,38)" fg:x="92825" fg:w="2342"/><text x="43.2076%" y="751.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (823 samples, 0.38%)</title><rect x="43.6606%" y="725" width="0.3809%" height="15" fill="rgb(243,101,7)" fg:x="94344" fg:w="823"/><text x="43.9106%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (213 samples, 0.10%)</title><rect x="44.0466%" y="741" width="0.0986%" height="15" fill="rgb(240,140,22)" fg:x="95178" fg:w="213"/><text x="44.2966%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (213 samples, 0.10%)</title><rect x="44.0466%" y="725" width="0.0986%" height="15" fill="rgb(235,114,2)" fg:x="95178" fg:w="213"/><text x="44.2966%" y="735.50"></text></g><g><title>[libc.so.6] (212 samples, 0.10%)</title><rect x="44.0470%" y="709" width="0.0981%" height="15" fill="rgb(242,59,12)" fg:x="95179" fg:w="212"/><text x="44.2970%" y="719.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (2,594 samples, 1.20%)</title><rect x="42.9488%" y="773" width="1.2005%" height="15" fill="rgb(252,134,9)" fg:x="92806" fg:w="2594"/><text x="43.1988%" y="783.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2,589 samples, 1.20%)</title><rect x="42.9512%" y="757" width="1.1981%" height="15" fill="rgb(236,4,44)" fg:x="92811" fg:w="2589"/><text x="43.2012%" y="767.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (2,613 samples, 1.21%)</title><rect x="42.9410%" y="805" width="1.2092%" height="15" fill="rgb(254,172,41)" fg:x="92789" fg:w="2613"/><text x="43.1910%" y="815.50"></text></g><g><title>std::io::Write::write_all (2,612 samples, 1.21%)</title><rect x="42.9414%" y="789" width="1.2088%" height="15" fill="rgb(244,63,20)" fg:x="92790" fg:w="2612"/><text x="43.1914%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (34 samples, 0.02%)</title><rect x="44.1590%" y="757" width="0.0157%" height="15" fill="rgb(250,73,31)" fg:x="95421" fg:w="34"/><text x="44.4090%" y="767.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (42 samples, 0.02%)</title><rect x="44.1558%" y="773" width="0.0194%" height="15" fill="rgb(241,38,36)" fg:x="95414" fg:w="42"/><text x="44.4058%" y="783.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2,678 samples, 1.24%)</title><rect x="42.9387%" y="821" width="1.2393%" height="15" fill="rgb(245,211,2)" fg:x="92784" fg:w="2678"/><text x="43.1887%" y="831.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (60 samples, 0.03%)</title><rect x="44.1502%" y="805" width="0.0278%" height="15" fill="rgb(206,120,28)" fg:x="95402" fg:w="60"/><text x="44.4002%" y="815.50"></text></g><g><title>std::io::Write::write_all (58 samples, 0.03%)</title><rect x="44.1511%" y="789" width="0.0268%" height="15" fill="rgb(211,59,34)" fg:x="95404" fg:w="58"/><text x="44.4011%" y="799.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (25 samples, 0.01%)</title><rect x="44.1909%" y="773" width="0.0116%" height="15" fill="rgb(233,168,5)" fg:x="95490" fg:w="25"/><text x="44.4409%" y="783.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (42 samples, 0.02%)</title><rect x="44.1854%" y="821" width="0.0194%" height="15" fill="rgb(234,33,13)" fg:x="95478" fg:w="42"/><text x="44.4354%" y="831.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (42 samples, 0.02%)</title><rect x="44.1854%" y="805" width="0.0194%" height="15" fill="rgb(231,150,26)" fg:x="95478" fg:w="42"/><text x="44.4354%" y="815.50"></text></g><g><title>std::io::Write::write_all (39 samples, 0.02%)</title><rect x="44.1868%" y="789" width="0.0180%" height="15" fill="rgb(217,191,4)" fg:x="95481" fg:w="39"/><text x="44.4368%" y="799.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (41 samples, 0.02%)</title><rect x="44.2099%" y="773" width="0.0190%" height="15" fill="rgb(246,198,38)" fg:x="95531" fg:w="41"/><text x="44.4599%" y="783.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (36 samples, 0.02%)</title><rect x="44.2122%" y="757" width="0.0167%" height="15" fill="rgb(245,64,37)" fg:x="95536" fg:w="36"/><text x="44.4622%" y="767.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (57 samples, 0.03%)</title><rect x="44.2048%" y="821" width="0.0264%" height="15" fill="rgb(250,30,36)" fg:x="95520" fg:w="57"/><text x="44.4548%" y="831.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (57 samples, 0.03%)</title><rect x="44.2048%" y="805" width="0.0264%" height="15" fill="rgb(217,86,53)" fg:x="95520" fg:w="57"/><text x="44.4548%" y="815.50"></text></g><g><title>std::io::Write::write_all (57 samples, 0.03%)</title><rect x="44.2048%" y="789" width="0.0264%" height="15" fill="rgb(228,157,16)" fg:x="95520" fg:w="57"/><text x="44.4548%" y="799.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (4,390 samples, 2.03%)</title><rect x="42.2005%" y="837" width="2.0316%" height="15" fill="rgb(217,59,31)" fg:x="91189" fg:w="4390"/><text x="42.4505%" y="847.50">&lt;..</text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (42 samples, 0.02%)</title><rect x="44.3724%" y="757" width="0.0194%" height="15" fill="rgb(237,138,41)" fg:x="95882" fg:w="42"/><text x="44.6224%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (198 samples, 0.09%)</title><rect x="44.3918%" y="757" width="0.0916%" height="15" fill="rgb(227,91,49)" fg:x="95924" fg:w="198"/><text x="44.6418%" y="767.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (780 samples, 0.36%)</title><rect x="44.2520%" y="773" width="0.3610%" height="15" fill="rgb(247,21,44)" fg:x="95622" fg:w="780"/><text x="44.5020%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (280 samples, 0.13%)</title><rect x="44.4834%" y="757" width="0.1296%" height="15" fill="rgb(219,210,51)" fg:x="96122" fg:w="280"/><text x="44.7334%" y="767.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (835 samples, 0.39%)</title><rect x="44.2460%" y="789" width="0.3864%" height="15" fill="rgb(209,140,6)" fg:x="95609" fg:w="835"/><text x="44.4960%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (855 samples, 0.40%)</title><rect x="44.2437%" y="805" width="0.3957%" height="15" fill="rgb(221,188,24)" fg:x="95604" fg:w="855"/><text x="44.4937%" y="815.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (45 samples, 0.02%)</title><rect x="44.7639%" y="741" width="0.0208%" height="15" fill="rgb(232,154,20)" fg:x="96728" fg:w="45"/><text x="45.0139%" y="751.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (205 samples, 0.09%)</title><rect x="44.7847%" y="741" width="0.0949%" height="15" fill="rgb(244,137,50)" fg:x="96773" fg:w="205"/><text x="45.0347%" y="751.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (713 samples, 0.33%)</title><rect x="44.6565%" y="757" width="0.3300%" height="15" fill="rgb(225,185,43)" fg:x="96496" fg:w="713"/><text x="44.9065%" y="767.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (231 samples, 0.11%)</title><rect x="44.8796%" y="741" width="0.1069%" height="15" fill="rgb(213,205,38)" fg:x="96978" fg:w="231"/><text x="45.1296%" y="751.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (757 samples, 0.35%)</title><rect x="44.6486%" y="773" width="0.3503%" height="15" fill="rgb(236,73,12)" fg:x="96479" fg:w="757"/><text x="44.8986%" y="783.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (780 samples, 0.36%)</title><rect x="44.6426%" y="789" width="0.3610%" height="15" fill="rgb(235,219,13)" fg:x="96466" fg:w="780"/><text x="44.8926%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,117 samples, 2.83%)</title><rect x="42.1834%" y="965" width="2.8308%" height="15" fill="rgb(218,59,36)" fg:x="91152" fg:w="6117"/><text x="42.4334%" y="975.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (6,113 samples, 2.83%)</title><rect x="42.1853%" y="949" width="2.8290%" height="15" fill="rgb(205,110,39)" fg:x="91156" fg:w="6113"/><text x="42.4353%" y="959.50">co..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (6,113 samples, 2.83%)</title><rect x="42.1853%" y="933" width="2.8290%" height="15" fill="rgb(218,206,42)" fg:x="91156" fg:w="6113"/><text x="42.4353%" y="943.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,113 samples, 2.83%)</title><rect x="42.1853%" y="917" width="2.8290%" height="15" fill="rgb(248,125,24)" fg:x="91156" fg:w="6113"/><text x="42.4353%" y="927.50">&lt;c..</text></g><g><title>core::option::Option&lt;T&gt;::map (6,113 samples, 2.83%)</title><rect x="42.1853%" y="901" width="2.8290%" height="15" fill="rgb(242,28,27)" fg:x="91156" fg:w="6113"/><text x="42.4353%" y="911.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,101 samples, 2.82%)</title><rect x="42.1908%" y="885" width="2.8234%" height="15" fill="rgb(216,228,15)" fg:x="91168" fg:w="6101"/><text x="42.4408%" y="895.50">co..</text></g><g><title>bitcoin::blockdata::block::Block::witness_root::{{closure}} (6,101 samples, 2.82%)</title><rect x="42.1908%" y="869" width="2.8234%" height="15" fill="rgb(235,116,46)" fg:x="91168" fg:w="6101"/><text x="42.4408%" y="879.50">bi..</text></g><g><title>bitcoin::blockdata::transaction::Transaction::wtxid (6,096 samples, 2.82%)</title><rect x="42.1931%" y="853" width="2.8211%" height="15" fill="rgb(224,18,32)" fg:x="91173" fg:w="6096"/><text x="42.4431%" y="863.50">bi..</text></g><g><title>&lt;bitcoin::hash_types::newtypes::Wtxid as bitcoin_hashes::Hash&gt;::from_engine (1,686 samples, 0.78%)</title><rect x="44.2340%" y="837" width="0.7802%" height="15" fill="rgb(252,5,12)" fg:x="95583" fg:w="1686"/><text x="44.4840%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,679 samples, 0.78%)</title><rect x="44.2372%" y="821" width="0.7770%" height="15" fill="rgb(251,36,5)" fg:x="95590" fg:w="1679"/><text x="44.4872%" y="831.50"></text></g><g><title>bitcoin_hashes::Hash::hash (810 samples, 0.37%)</title><rect x="44.6394%" y="805" width="0.3749%" height="15" fill="rgb(217,53,14)" fg:x="96459" fg:w="810"/><text x="44.8894%" y="815.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (22 samples, 0.01%)</title><rect x="45.0202%" y="709" width="0.0102%" height="15" fill="rgb(215,86,45)" fg:x="97282" fg:w="22"/><text x="45.2702%" y="719.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (30 samples, 0.01%)</title><rect x="45.0179%" y="821" width="0.0139%" height="15" fill="rgb(242,169,11)" fg:x="97277" fg:w="30"/><text x="45.2679%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (30 samples, 0.01%)</title><rect x="45.0179%" y="805" width="0.0139%" height="15" fill="rgb(211,213,45)" fg:x="97277" fg:w="30"/><text x="45.2679%" y="815.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (30 samples, 0.01%)</title><rect x="45.0179%" y="789" width="0.0139%" height="15" fill="rgb(205,88,11)" fg:x="97277" fg:w="30"/><text x="45.2679%" y="799.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (30 samples, 0.01%)</title><rect x="45.0179%" y="773" width="0.0139%" height="15" fill="rgb(252,69,26)" fg:x="97277" fg:w="30"/><text x="45.2679%" y="783.50"></text></g><g><title>std::io::Write::write_all (30 samples, 0.01%)</title><rect x="45.0179%" y="757" width="0.0139%" height="15" fill="rgb(246,123,37)" fg:x="97277" fg:w="30"/><text x="45.2679%" y="767.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (28 samples, 0.01%)</title><rect x="45.0189%" y="741" width="0.0130%" height="15" fill="rgb(212,205,5)" fg:x="97279" fg:w="28"/><text x="45.2689%" y="751.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (27 samples, 0.01%)</title><rect x="45.0193%" y="725" width="0.0125%" height="15" fill="rgb(253,148,0)" fg:x="97280" fg:w="27"/><text x="45.2693%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="45.0179%" y="837" width="0.0162%" height="15" fill="rgb(239,22,4)" fg:x="97277" fg:w="35"/><text x="45.2679%" y="847.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (47 samples, 0.02%)</title><rect x="45.0161%" y="853" width="0.0218%" height="15" fill="rgb(226,26,53)" fg:x="97273" fg:w="47"/><text x="45.2661%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (52 samples, 0.02%)</title><rect x="45.0152%" y="869" width="0.0241%" height="15" fill="rgb(225,229,45)" fg:x="97271" fg:w="52"/><text x="45.2652%" y="879.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (29 samples, 0.01%)</title><rect x="45.0406%" y="709" width="0.0134%" height="15" fill="rgb(220,60,37)" fg:x="97326" fg:w="29"/><text x="45.2906%" y="719.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (34 samples, 0.02%)</title><rect x="45.0397%" y="789" width="0.0157%" height="15" fill="rgb(217,180,35)" fg:x="97324" fg:w="34"/><text x="45.2897%" y="799.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (34 samples, 0.02%)</title><rect x="45.0397%" y="773" width="0.0157%" height="15" fill="rgb(229,7,53)" fg:x="97324" fg:w="34"/><text x="45.2897%" y="783.50"></text></g><g><title>std::io::Write::write_all (34 samples, 0.02%)</title><rect x="45.0397%" y="757" width="0.0157%" height="15" fill="rgb(254,137,3)" fg:x="97324" fg:w="34"/><text x="45.2897%" y="767.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (33 samples, 0.02%)</title><rect x="45.0401%" y="741" width="0.0153%" height="15" fill="rgb(215,140,41)" fg:x="97325" fg:w="33"/><text x="45.2901%" y="751.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (33 samples, 0.02%)</title><rect x="45.0401%" y="725" width="0.0153%" height="15" fill="rgb(250,80,15)" fg:x="97325" fg:w="33"/><text x="45.2901%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (36 samples, 0.02%)</title><rect x="45.0397%" y="837" width="0.0167%" height="15" fill="rgb(252,191,6)" fg:x="97324" fg:w="36"/><text x="45.2897%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (36 samples, 0.02%)</title><rect x="45.0397%" y="821" width="0.0167%" height="15" fill="rgb(246,217,18)" fg:x="97324" fg:w="36"/><text x="45.2897%" y="831.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (36 samples, 0.02%)</title><rect x="45.0397%" y="805" width="0.0167%" height="15" fill="rgb(223,93,7)" fg:x="97324" fg:w="36"/><text x="45.2897%" y="815.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (43 samples, 0.02%)</title><rect x="45.0397%" y="853" width="0.0199%" height="15" fill="rgb(225,55,52)" fg:x="97324" fg:w="43"/><text x="45.2897%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (47 samples, 0.02%)</title><rect x="45.0392%" y="869" width="0.0218%" height="15" fill="rgb(240,31,24)" fg:x="97323" fg:w="47"/><text x="45.2892%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (30 samples, 0.01%)</title><rect x="45.0860%" y="773" width="0.0139%" height="15" fill="rgb(205,56,52)" fg:x="97424" fg:w="30"/><text x="45.3360%" y="783.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (113 samples, 0.05%)</title><rect x="45.0651%" y="789" width="0.0523%" height="15" fill="rgb(246,146,12)" fg:x="97379" fg:w="113"/><text x="45.3151%" y="799.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (38 samples, 0.02%)</title><rect x="45.0998%" y="773" width="0.0176%" height="15" fill="rgb(239,84,36)" fg:x="97454" fg:w="38"/><text x="45.3498%" y="783.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (134 samples, 0.06%)</title><rect x="45.0628%" y="853" width="0.0620%" height="15" fill="rgb(207,41,40)" fg:x="97374" fg:w="134"/><text x="45.3128%" y="863.50"></text></g><g><title>std::io::Write::write_all (134 samples, 0.06%)</title><rect x="45.0628%" y="837" width="0.0620%" height="15" fill="rgb(241,179,25)" fg:x="97374" fg:w="134"/><text x="45.3128%" y="847.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (134 samples, 0.06%)</title><rect x="45.0628%" y="821" width="0.0620%" height="15" fill="rgb(210,0,34)" fg:x="97374" fg:w="134"/><text x="45.3128%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (133 samples, 0.06%)</title><rect x="45.0633%" y="805" width="0.0615%" height="15" fill="rgb(225,217,29)" fg:x="97375" fg:w="133"/><text x="45.3133%" y="815.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (143 samples, 0.07%)</title><rect x="45.0610%" y="869" width="0.0662%" height="15" fill="rgb(216,191,38)" fg:x="97370" fg:w="143"/><text x="45.3110%" y="879.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (253 samples, 0.12%)</title><rect x="45.0152%" y="885" width="0.1171%" height="15" fill="rgb(232,140,52)" fg:x="97271" fg:w="253"/><text x="45.2652%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (35 samples, 0.02%)</title><rect x="45.1341%" y="821" width="0.0162%" height="15" fill="rgb(223,158,51)" fg:x="97528" fg:w="35"/><text x="45.3841%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (38 samples, 0.02%)</title><rect x="45.1332%" y="837" width="0.0176%" height="15" fill="rgb(235,29,51)" fg:x="97526" fg:w="38"/><text x="45.3832%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (40 samples, 0.02%)</title><rect x="45.1332%" y="853" width="0.0185%" height="15" fill="rgb(215,181,18)" fg:x="97526" fg:w="40"/><text x="45.3832%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (31 samples, 0.01%)</title><rect x="45.1531%" y="805" width="0.0143%" height="15" fill="rgb(227,125,34)" fg:x="97569" fg:w="31"/><text x="45.4031%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (337 samples, 0.16%)</title><rect x="45.0142%" y="965" width="0.1560%" height="15" fill="rgb(230,197,49)" fg:x="97269" fg:w="337"/><text x="45.2642%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (337 samples, 0.16%)</title><rect x="45.0142%" y="949" width="0.1560%" height="15" fill="rgb(239,141,16)" fg:x="97269" fg:w="337"/><text x="45.2642%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (337 samples, 0.16%)</title><rect x="45.0142%" y="933" width="0.1560%" height="15" fill="rgb(225,105,43)" fg:x="97269" fg:w="337"/><text x="45.2642%" y="943.50"></text></g><g><title>bitcoin::blockdata::block::Block::witness_root::{{closure}} (337 samples, 0.16%)</title><rect x="45.0142%" y="917" width="0.1560%" height="15" fill="rgb(214,131,14)" fg:x="97269" fg:w="337"/><text x="45.2642%" y="927.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::wtxid (336 samples, 0.16%)</title><rect x="45.0147%" y="901" width="0.1555%" height="15" fill="rgb(229,177,11)" fg:x="97270" fg:w="336"/><text x="45.2647%" y="911.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Wtxid as bitcoin_hashes::Hash&gt;::from_engine (82 samples, 0.04%)</title><rect x="45.1322%" y="885" width="0.0379%" height="15" fill="rgb(231,180,14)" fg:x="97524" fg:w="82"/><text x="45.3822%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (81 samples, 0.04%)</title><rect x="45.1327%" y="869" width="0.0375%" height="15" fill="rgb(232,88,2)" fg:x="97525" fg:w="81"/><text x="45.3827%" y="879.50"></text></g><g><title>bitcoin_hashes::Hash::hash (40 samples, 0.02%)</title><rect x="45.1517%" y="853" width="0.0185%" height="15" fill="rgb(205,220,8)" fg:x="97566" fg:w="40"/><text x="45.4017%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (38 samples, 0.02%)</title><rect x="45.1526%" y="837" width="0.0176%" height="15" fill="rgb(225,23,53)" fg:x="97568" fg:w="38"/><text x="45.4026%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (38 samples, 0.02%)</title><rect x="45.1526%" y="821" width="0.0176%" height="15" fill="rgb(213,62,29)" fg:x="97568" fg:w="38"/><text x="45.4026%" y="831.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (68 samples, 0.03%)</title><rect x="45.2253%" y="837" width="0.0315%" height="15" fill="rgb(227,75,7)" fg:x="97725" fg:w="68"/><text x="45.4753%" y="847.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (252 samples, 0.12%)</title><rect x="45.1831%" y="853" width="0.1166%" height="15" fill="rgb(207,105,14)" fg:x="97634" fg:w="252"/><text x="45.4331%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (93 samples, 0.04%)</title><rect x="45.2567%" y="837" width="0.0430%" height="15" fill="rgb(245,62,29)" fg:x="97793" fg:w="93"/><text x="45.5067%" y="847.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (268 samples, 0.12%)</title><rect x="45.1790%" y="885" width="0.1240%" height="15" fill="rgb(236,202,4)" fg:x="97625" fg:w="268"/><text x="45.4290%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (265 samples, 0.12%)</title><rect x="45.1804%" y="869" width="0.1226%" height="15" fill="rgb(250,67,1)" fg:x="97628" fg:w="265"/><text x="45.4304%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (276 samples, 0.13%)</title><rect x="45.1767%" y="949" width="0.1277%" height="15" fill="rgb(253,115,44)" fg:x="97620" fg:w="276"/><text x="45.4267%" y="959.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (275 samples, 0.13%)</title><rect x="45.1771%" y="933" width="0.1273%" height="15" fill="rgb(251,139,18)" fg:x="97621" fg:w="275"/><text x="45.4271%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (275 samples, 0.13%)</title><rect x="45.1771%" y="917" width="0.1273%" height="15" fill="rgb(218,22,32)" fg:x="97621" fg:w="275"/><text x="45.4271%" y="927.50"></text></g><g><title>std::io::Write::write_all (274 samples, 0.13%)</title><rect x="45.1776%" y="901" width="0.1268%" height="15" fill="rgb(243,53,5)" fg:x="97622" fg:w="274"/><text x="45.4276%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (69 samples, 0.03%)</title><rect x="45.3414%" y="885" width="0.0319%" height="15" fill="rgb(227,56,16)" fg:x="97976" fg:w="69"/><text x="45.5914%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (194 samples, 0.09%)</title><rect x="45.3109%" y="901" width="0.0898%" height="15" fill="rgb(245,53,0)" fg:x="97910" fg:w="194"/><text x="45.5609%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (59 samples, 0.03%)</title><rect x="45.3733%" y="885" width="0.0273%" height="15" fill="rgb(216,170,35)" fg:x="98045" fg:w="59"/><text x="45.6233%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (213 samples, 0.10%)</title><rect x="45.3086%" y="917" width="0.0986%" height="15" fill="rgb(211,200,8)" fg:x="97905" fg:w="213"/><text x="45.5586%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (219 samples, 0.10%)</title><rect x="45.3076%" y="933" width="0.1013%" height="15" fill="rgb(228,204,44)" fg:x="97903" fg:w="219"/><text x="45.5576%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (65 samples, 0.03%)</title><rect x="45.4543%" y="869" width="0.0301%" height="15" fill="rgb(214,121,17)" fg:x="98220" fg:w="65"/><text x="45.7043%" y="879.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (211 samples, 0.10%)</title><rect x="45.4136%" y="885" width="0.0976%" height="15" fill="rgb(233,64,38)" fg:x="98132" fg:w="211"/><text x="45.6636%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (58 samples, 0.03%)</title><rect x="45.4844%" y="869" width="0.0268%" height="15" fill="rgb(253,54,19)" fg:x="98285" fg:w="58"/><text x="45.7344%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (226 samples, 0.10%)</title><rect x="45.4118%" y="901" width="0.1046%" height="15" fill="rgb(253,94,18)" fg:x="98128" fg:w="226"/><text x="45.6618%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (235 samples, 0.11%)</title><rect x="45.4094%" y="917" width="0.1088%" height="15" fill="rgb(227,57,52)" fg:x="98123" fg:w="235"/><text x="45.6594%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (463 samples, 0.21%)</title><rect x="45.3062%" y="949" width="0.2143%" height="15" fill="rgb(230,228,50)" fg:x="97900" fg:w="463"/><text x="45.5562%" y="959.50"></text></g><g><title>bitcoin_hashes::Hash::hash (241 samples, 0.11%)</title><rect x="45.4090%" y="933" width="0.1115%" height="15" fill="rgb(217,205,27)" fg:x="98122" fg:w="241"/><text x="45.6590%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (27 samples, 0.01%)</title><rect x="45.5372%" y="821" width="0.0125%" height="15" fill="rgb(252,71,50)" fg:x="98399" fg:w="27"/><text x="45.7872%" y="831.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (91 samples, 0.04%)</title><rect x="45.5233%" y="837" width="0.0421%" height="15" fill="rgb(209,86,4)" fg:x="98369" fg:w="91"/><text x="45.7733%" y="847.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (34 samples, 0.02%)</title><rect x="45.5497%" y="821" width="0.0157%" height="15" fill="rgb(229,94,0)" fg:x="98426" fg:w="34"/><text x="45.7997%" y="831.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (98 samples, 0.05%)</title><rect x="45.5219%" y="869" width="0.0454%" height="15" fill="rgb(252,223,21)" fg:x="98366" fg:w="98"/><text x="45.7719%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (98 samples, 0.05%)</title><rect x="45.5219%" y="853" width="0.0454%" height="15" fill="rgb(230,210,4)" fg:x="98366" fg:w="98"/><text x="45.7719%" y="863.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (99 samples, 0.05%)</title><rect x="45.5219%" y="917" width="0.0458%" height="15" fill="rgb(240,149,38)" fg:x="98366" fg:w="99"/><text x="45.7719%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (99 samples, 0.05%)</title><rect x="45.5219%" y="901" width="0.0458%" height="15" fill="rgb(254,105,20)" fg:x="98366" fg:w="99"/><text x="45.7719%" y="911.50"></text></g><g><title>std::io::Write::write_all (99 samples, 0.05%)</title><rect x="45.5219%" y="885" width="0.0458%" height="15" fill="rgb(253,87,46)" fg:x="98366" fg:w="99"/><text x="45.7719%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (100 samples, 0.05%)</title><rect x="45.5219%" y="933" width="0.0463%" height="15" fill="rgb(253,116,33)" fg:x="98366" fg:w="100"/><text x="45.7719%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (38 samples, 0.02%)</title><rect x="45.5890%" y="869" width="0.0176%" height="15" fill="rgb(229,198,5)" fg:x="98511" fg:w="38"/><text x="45.8390%" y="879.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (111 samples, 0.05%)</title><rect x="45.5714%" y="885" width="0.0514%" height="15" fill="rgb(242,38,37)" fg:x="98473" fg:w="111"/><text x="45.8214%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (35 samples, 0.02%)</title><rect x="45.6066%" y="869" width="0.0162%" height="15" fill="rgb(242,69,53)" fg:x="98549" fg:w="35"/><text x="45.8566%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (120 samples, 0.06%)</title><rect x="45.5705%" y="901" width="0.0555%" height="15" fill="rgb(249,80,16)" fg:x="98471" fg:w="120"/><text x="45.8205%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (125 samples, 0.06%)</title><rect x="45.5691%" y="917" width="0.0578%" height="15" fill="rgb(206,128,11)" fg:x="98468" fg:w="125"/><text x="45.8191%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (36 samples, 0.02%)</title><rect x="45.6543%" y="853" width="0.0167%" height="15" fill="rgb(212,35,20)" fg:x="98652" fg:w="36"/><text x="45.9043%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (125 samples, 0.06%)</title><rect x="45.6302%" y="869" width="0.0578%" height="15" fill="rgb(236,79,13)" fg:x="98600" fg:w="125"/><text x="45.8802%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (37 samples, 0.02%)</title><rect x="45.6709%" y="853" width="0.0171%" height="15" fill="rgb(233,123,3)" fg:x="98688" fg:w="37"/><text x="45.9209%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (130 samples, 0.06%)</title><rect x="45.6297%" y="885" width="0.0602%" height="15" fill="rgb(214,93,52)" fg:x="98599" fg:w="130"/><text x="45.8797%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (136 samples, 0.06%)</title><rect x="45.6293%" y="901" width="0.0629%" height="15" fill="rgb(251,37,40)" fg:x="98598" fg:w="136"/><text x="45.8793%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (270 samples, 0.12%)</title><rect x="45.5686%" y="933" width="0.1250%" height="15" fill="rgb(227,80,54)" fg:x="98467" fg:w="270"/><text x="45.8186%" y="943.50"></text></g><g><title>bitcoin_hashes::Hash::hash (144 samples, 0.07%)</title><rect x="45.6270%" y="917" width="0.0666%" height="15" fill="rgb(254,48,11)" fg:x="98593" fg:w="144"/><text x="45.8770%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (32 samples, 0.01%)</title><rect x="45.6959%" y="821" width="0.0148%" height="15" fill="rgb(235,193,26)" fg:x="98742" fg:w="32"/><text x="45.9459%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (42 samples, 0.02%)</title><rect x="45.6936%" y="917" width="0.0194%" height="15" fill="rgb(229,99,21)" fg:x="98737" fg:w="42"/><text x="45.9436%" y="927.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (42 samples, 0.02%)</title><rect x="45.6936%" y="901" width="0.0194%" height="15" fill="rgb(211,140,41)" fg:x="98737" fg:w="42"/><text x="45.9436%" y="911.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (42 samples, 0.02%)</title><rect x="45.6936%" y="885" width="0.0194%" height="15" fill="rgb(240,227,30)" fg:x="98737" fg:w="42"/><text x="45.9436%" y="895.50"></text></g><g><title>std::io::Write::write_all (41 samples, 0.02%)</title><rect x="45.6941%" y="869" width="0.0190%" height="15" fill="rgb(215,224,45)" fg:x="98738" fg:w="41"/><text x="45.9441%" y="879.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (40 samples, 0.02%)</title><rect x="45.6945%" y="853" width="0.0185%" height="15" fill="rgb(206,123,31)" fg:x="98739" fg:w="40"/><text x="45.9445%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (39 samples, 0.02%)</title><rect x="45.6950%" y="837" width="0.0180%" height="15" fill="rgb(210,138,16)" fg:x="98740" fg:w="39"/><text x="45.9450%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (54 samples, 0.02%)</title><rect x="45.7135%" y="885" width="0.0250%" height="15" fill="rgb(228,57,28)" fg:x="98780" fg:w="54"/><text x="45.9635%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (53 samples, 0.02%)</title><rect x="45.7140%" y="869" width="0.0245%" height="15" fill="rgb(242,170,10)" fg:x="98781" fg:w="53"/><text x="45.9640%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (22 samples, 0.01%)</title><rect x="45.7283%" y="853" width="0.0102%" height="15" fill="rgb(228,214,39)" fg:x="98812" fg:w="22"/><text x="45.9783%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (55 samples, 0.03%)</title><rect x="45.7135%" y="901" width="0.0255%" height="15" fill="rgb(218,179,33)" fg:x="98780" fg:w="55"/><text x="45.9635%" y="911.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (43 samples, 0.02%)</title><rect x="45.7399%" y="853" width="0.0199%" height="15" fill="rgb(235,193,39)" fg:x="98837" fg:w="43"/><text x="45.9899%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (45 samples, 0.02%)</title><rect x="45.7394%" y="869" width="0.0208%" height="15" fill="rgb(219,221,36)" fg:x="98836" fg:w="45"/><text x="45.9894%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (47 samples, 0.02%)</title><rect x="45.7389%" y="885" width="0.0218%" height="15" fill="rgb(248,218,19)" fg:x="98835" fg:w="47"/><text x="45.9889%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (105 samples, 0.05%)</title><rect x="45.7130%" y="917" width="0.0486%" height="15" fill="rgb(205,50,9)" fg:x="98779" fg:w="105"/><text x="45.9630%" y="927.50"></text></g><g><title>bitcoin_hashes::Hash::hash (49 samples, 0.02%)</title><rect x="45.7389%" y="901" width="0.0227%" height="15" fill="rgb(238,81,28)" fg:x="98835" fg:w="49"/><text x="45.9889%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (27 samples, 0.01%)</title><rect x="45.7616%" y="901" width="0.0125%" height="15" fill="rgb(235,110,19)" fg:x="98884" fg:w="27"/><text x="46.0116%" y="911.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (27 samples, 0.01%)</title><rect x="45.7616%" y="885" width="0.0125%" height="15" fill="rgb(214,7,14)" fg:x="98884" fg:w="27"/><text x="46.0116%" y="895.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (27 samples, 0.01%)</title><rect x="45.7616%" y="869" width="0.0125%" height="15" fill="rgb(211,77,3)" fg:x="98884" fg:w="27"/><text x="46.0116%" y="879.50"></text></g><g><title>std::io::Write::write_all (27 samples, 0.01%)</title><rect x="45.7616%" y="853" width="0.0125%" height="15" fill="rgb(229,5,9)" fg:x="98884" fg:w="27"/><text x="46.0116%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (26 samples, 0.01%)</title><rect x="45.7621%" y="837" width="0.0120%" height="15" fill="rgb(225,90,11)" fg:x="98885" fg:w="26"/><text x="46.0121%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (26 samples, 0.01%)</title><rect x="45.7621%" y="821" width="0.0120%" height="15" fill="rgb(242,56,8)" fg:x="98885" fg:w="26"/><text x="46.0121%" y="831.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (26 samples, 0.01%)</title><rect x="45.7621%" y="805" width="0.0120%" height="15" fill="rgb(249,212,39)" fg:x="98885" fg:w="26"/><text x="46.0121%" y="815.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (23 samples, 0.01%)</title><rect x="45.7746%" y="853" width="0.0106%" height="15" fill="rgb(236,90,9)" fg:x="98912" fg:w="23"/><text x="46.0246%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (25 samples, 0.01%)</title><rect x="45.7741%" y="869" width="0.0116%" height="15" fill="rgb(206,88,35)" fg:x="98911" fg:w="25"/><text x="46.0241%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (26 samples, 0.01%)</title><rect x="45.7741%" y="885" width="0.0120%" height="15" fill="rgb(205,126,30)" fg:x="98911" fg:w="26"/><text x="46.0241%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (28 samples, 0.01%)</title><rect x="45.7861%" y="837" width="0.0130%" height="15" fill="rgb(230,176,12)" fg:x="98937" fg:w="28"/><text x="46.0361%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (29 samples, 0.01%)</title><rect x="45.7861%" y="853" width="0.0134%" height="15" fill="rgb(243,19,9)" fg:x="98937" fg:w="29"/><text x="46.0361%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (30 samples, 0.01%)</title><rect x="45.7861%" y="869" width="0.0139%" height="15" fill="rgb(245,171,17)" fg:x="98937" fg:w="30"/><text x="46.0361%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (58 samples, 0.03%)</title><rect x="45.7741%" y="901" width="0.0268%" height="15" fill="rgb(227,52,21)" fg:x="98911" fg:w="58"/><text x="46.0241%" y="911.50"></text></g><g><title>bitcoin_hashes::Hash::hash (32 samples, 0.01%)</title><rect x="45.7861%" y="885" width="0.0148%" height="15" fill="rgb(238,69,14)" fg:x="98937" fg:w="32"/><text x="46.0361%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (23 samples, 0.01%)</title><rect x="45.8047%" y="885" width="0.0106%" height="15" fill="rgb(241,156,39)" fg:x="98977" fg:w="23"/><text x="46.0547%" y="895.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (127 samples, 0.06%)</title><rect x="45.7616%" y="917" width="0.0588%" height="15" fill="rgb(212,227,28)" fg:x="98884" fg:w="127"/><text x="46.0116%" y="927.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (42 samples, 0.02%)</title><rect x="45.8010%" y="901" width="0.0194%" height="15" fill="rgb(209,118,27)" fg:x="98969" fg:w="42"/><text x="46.0510%" y="911.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (1,397 samples, 0.65%)</title><rect x="45.1744%" y="965" width="0.6465%" height="15" fill="rgb(226,102,5)" fg:x="97615" fg:w="1397"/><text x="45.4244%" y="975.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (649 samples, 0.30%)</title><rect x="45.5205%" y="949" width="0.3003%" height="15" fill="rgb(223,34,3)" fg:x="98363" fg:w="649"/><text x="45.7705%" y="959.50"></text></g><g><title>bitcoin::util::hash::merkle_root_r (275 samples, 0.13%)</title><rect x="45.6936%" y="933" width="0.1273%" height="15" fill="rgb(221,81,38)" fg:x="98737" fg:w="275"/><text x="45.9436%" y="943.50"></text></g><g><title>bitcoin::util::hash::bitcoin_merkle_root (9,329 samples, 4.32%)</title><rect x="41.5087%" y="981" width="4.3173%" height="15" fill="rgb(236,219,28)" fg:x="89694" fg:w="9329"/><text x="41.7587%" y="991.50">bitco..</text></g><g><title>bitcoin::blockdata::block::Block::witness_root (9,338 samples, 4.32%)</title><rect x="41.5050%" y="997" width="4.3214%" height="15" fill="rgb(213,200,14)" fg:x="89686" fg:w="9338"/><text x="41.7550%" y="1007.50">bitco..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.01%)</title><rect x="45.8283%" y="997" width="0.0143%" height="15" fill="rgb(240,33,19)" fg:x="99028" fg:w="31"/><text x="46.0783%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31 samples, 0.01%)</title><rect x="45.8283%" y="981" width="0.0143%" height="15" fill="rgb(233,113,27)" fg:x="99028" fg:w="31"/><text x="46.0783%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 0.01%)</title><rect x="45.8283%" y="965" width="0.0143%" height="15" fill="rgb(220,221,18)" fg:x="99028" fg:w="31"/><text x="46.0783%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.01%)</title><rect x="45.8292%" y="949" width="0.0134%" height="15" fill="rgb(238,92,8)" fg:x="99030" fg:w="29"/><text x="46.0792%" y="959.50"></text></g><g><title>bitcoin::blockdata::block::Block::check_witness_commitment (9,631 samples, 4.46%)</title><rect x="41.3874%" y="1013" width="4.4570%" height="15" fill="rgb(222,164,16)" fg:x="89432" fg:w="9631"/><text x="41.6374%" y="1023.50">bitco..</text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::block::Block&gt; (26 samples, 0.01%)</title><rect x="45.8449%" y="997" width="0.0120%" height="15" fill="rgb(241,119,3)" fg:x="99064" fg:w="26"/><text x="46.0949%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::Transaction&gt;&gt; (26 samples, 0.01%)</title><rect x="45.8449%" y="981" width="0.0120%" height="15" fill="rgb(241,44,8)" fg:x="99064" fg:w="26"/><text x="46.0949%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;floresta_chain::pruned_utreexo::chainparams::ChainParams&gt; (32 samples, 0.01%)</title><rect x="45.8449%" y="1013" width="0.0148%" height="15" fill="rgb(230,36,40)" fg:x="99064" fg:w="32"/><text x="46.0949%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.02%)</title><rect x="45.8662%" y="885" width="0.0190%" height="15" fill="rgb(243,16,36)" fg:x="99110" fg:w="41"/><text x="46.1162%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40 samples, 0.02%)</title><rect x="45.8667%" y="869" width="0.0185%" height="15" fill="rgb(231,4,26)" fg:x="99111" fg:w="40"/><text x="46.1167%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (40 samples, 0.02%)</title><rect x="45.8667%" y="853" width="0.0185%" height="15" fill="rgb(240,9,31)" fg:x="99111" fg:w="40"/><text x="46.1167%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40 samples, 0.02%)</title><rect x="45.8667%" y="837" width="0.0185%" height="15" fill="rgb(207,173,15)" fg:x="99111" fg:w="40"/><text x="46.1167%" y="847.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as core::clone::Clone&gt;::clone (46 samples, 0.02%)</title><rect x="45.8653%" y="901" width="0.0213%" height="15" fill="rgb(224,192,53)" fg:x="99108" fg:w="46"/><text x="46.1153%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::block::Block as core::clone::Clone&gt;::clone (57 samples, 0.03%)</title><rect x="45.8634%" y="981" width="0.0264%" height="15" fill="rgb(223,67,28)" fg:x="99104" fg:w="57"/><text x="46.1134%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (57 samples, 0.03%)</title><rect x="45.8634%" y="965" width="0.0264%" height="15" fill="rgb(211,20,47)" fg:x="99104" fg:w="57"/><text x="46.1134%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53 samples, 0.02%)</title><rect x="45.8653%" y="949" width="0.0245%" height="15" fill="rgb(240,228,2)" fg:x="99108" fg:w="53"/><text x="46.1153%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (53 samples, 0.02%)</title><rect x="45.8653%" y="933" width="0.0245%" height="15" fill="rgb(248,151,12)" fg:x="99108" fg:w="53"/><text x="46.1153%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 0.02%)</title><rect x="45.8653%" y="917" width="0.0245%" height="15" fill="rgb(244,8,39)" fg:x="99108" fg:w="53"/><text x="46.1153%" y="927.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainparams::ChainParams as core::clone::Clone&gt;::clone (94 samples, 0.04%)</title><rect x="45.8630%" y="997" width="0.0435%" height="15" fill="rgb(222,26,8)" fg:x="99103" fg:w="94"/><text x="46.1130%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (36 samples, 0.02%)</title><rect x="45.8898%" y="981" width="0.0167%" height="15" fill="rgb(213,106,44)" fg:x="99161" fg:w="36"/><text x="46.1398%" y="991.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.02%)</title><rect x="45.8898%" y="965" width="0.0167%" height="15" fill="rgb(214,129,20)" fg:x="99161" fg:w="36"/><text x="46.1398%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.01%)</title><rect x="45.8954%" y="949" width="0.0111%" height="15" fill="rgb(212,32,13)" fg:x="99173" fg:w="24"/><text x="46.1454%" y="959.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::chain_params (103 samples, 0.05%)</title><rect x="45.8602%" y="1013" width="0.0477%" height="15" fill="rgb(208,168,33)" fg:x="99097" fg:w="103"/><text x="46.1102%" y="1023.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (35 samples, 0.02%)</title><rect x="45.9116%" y="965" width="0.0162%" height="15" fill="rgb(231,207,8)" fg:x="99208" fg:w="35"/><text x="46.1616%" y="975.50"></text></g><g><title>bitcoin::consensus::encode::deserialize_partial (33 samples, 0.02%)</title><rect x="45.9125%" y="949" width="0.0153%" height="15" fill="rgb(235,219,23)" fg:x="99210" fg:w="33"/><text x="46.1625%" y="959.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (31 samples, 0.01%)</title><rect x="45.9134%" y="933" width="0.0143%" height="15" fill="rgb(226,216,26)" fg:x="99212" fg:w="31"/><text x="46.1634%" y="943.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (31 samples, 0.01%)</title><rect x="45.9134%" y="917" width="0.0143%" height="15" fill="rgb(239,137,16)" fg:x="99212" fg:w="31"/><text x="46.1634%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.03%)</title><rect x="45.9689%" y="469" width="0.0264%" height="15" fill="rgb(207,12,36)" fg:x="99332" fg:w="57"/><text x="46.2189%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (57 samples, 0.03%)</title><rect x="45.9689%" y="453" width="0.0264%" height="15" fill="rgb(210,214,24)" fg:x="99332" fg:w="57"/><text x="46.2189%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (56 samples, 0.03%)</title><rect x="45.9694%" y="437" width="0.0259%" height="15" fill="rgb(206,56,30)" fg:x="99333" fg:w="56"/><text x="46.2194%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (56 samples, 0.03%)</title><rect x="45.9694%" y="421" width="0.0259%" height="15" fill="rgb(228,143,26)" fg:x="99333" fg:w="56"/><text x="46.2194%" y="431.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="45.9768%" y="405" width="0.0185%" height="15" fill="rgb(216,218,46)" fg:x="99349" fg:w="40"/><text x="46.2268%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (78 samples, 0.04%)</title><rect x="45.9606%" y="661" width="0.0361%" height="15" fill="rgb(206,6,19)" fg:x="99314" fg:w="78"/><text x="46.2106%" y="671.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.04%)</title><rect x="45.9606%" y="645" width="0.0361%" height="15" fill="rgb(239,177,51)" fg:x="99314" fg:w="78"/><text x="46.2106%" y="655.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (78 samples, 0.04%)</title><rect x="45.9606%" y="629" width="0.0361%" height="15" fill="rgb(216,55,25)" fg:x="99314" fg:w="78"/><text x="46.2106%" y="639.50"></text></g><g><title>core::mem::drop (78 samples, 0.04%)</title><rect x="45.9606%" y="613" width="0.0361%" height="15" fill="rgb(231,163,29)" fg:x="99314" fg:w="78"/><text x="46.2106%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (78 samples, 0.04%)</title><rect x="45.9606%" y="597" width="0.0361%" height="15" fill="rgb(232,149,50)" fg:x="99314" fg:w="78"/><text x="46.2106%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (78 samples, 0.04%)</title><rect x="45.9606%" y="581" width="0.0361%" height="15" fill="rgb(223,142,48)" fg:x="99314" fg:w="78"/><text x="46.2106%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (71 samples, 0.03%)</title><rect x="45.9639%" y="565" width="0.0329%" height="15" fill="rgb(245,83,23)" fg:x="99321" fg:w="71"/><text x="46.2139%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (66 samples, 0.03%)</title><rect x="45.9662%" y="549" width="0.0305%" height="15" fill="rgb(224,63,2)" fg:x="99326" fg:w="66"/><text x="46.2162%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (66 samples, 0.03%)</title><rect x="45.9662%" y="533" width="0.0305%" height="15" fill="rgb(218,65,53)" fg:x="99326" fg:w="66"/><text x="46.2162%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (60 samples, 0.03%)</title><rect x="45.9689%" y="517" width="0.0278%" height="15" fill="rgb(221,84,29)" fg:x="99332" fg:w="60"/><text x="46.2189%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (60 samples, 0.03%)</title><rect x="45.9689%" y="501" width="0.0278%" height="15" fill="rgb(234,0,32)" fg:x="99332" fg:w="60"/><text x="46.2189%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (60 samples, 0.03%)</title><rect x="45.9689%" y="485" width="0.0278%" height="15" fill="rgb(206,20,16)" fg:x="99332" fg:w="60"/><text x="46.2189%" y="495.50"></text></g><g><title>core::mem::drop (86 samples, 0.04%)</title><rect x="45.9592%" y="789" width="0.0398%" height="15" fill="rgb(244,172,18)" fg:x="99311" fg:w="86"/><text x="46.2092%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (86 samples, 0.04%)</title><rect x="45.9592%" y="773" width="0.0398%" height="15" fill="rgb(254,133,1)" fg:x="99311" fg:w="86"/><text x="46.2092%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (86 samples, 0.04%)</title><rect x="45.9592%" y="757" width="0.0398%" height="15" fill="rgb(222,206,41)" fg:x="99311" fg:w="86"/><text x="46.2092%" y="767.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (86 samples, 0.04%)</title><rect x="45.9592%" y="741" width="0.0398%" height="15" fill="rgb(212,3,42)" fg:x="99311" fg:w="86"/><text x="46.2092%" y="751.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (86 samples, 0.04%)</title><rect x="45.9592%" y="725" width="0.0398%" height="15" fill="rgb(241,11,4)" fg:x="99311" fg:w="86"/><text x="46.2092%" y="735.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (84 samples, 0.04%)</title><rect x="45.9602%" y="709" width="0.0389%" height="15" fill="rgb(205,19,26)" fg:x="99313" fg:w="84"/><text x="46.2102%" y="719.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (83 samples, 0.04%)</title><rect x="45.9606%" y="693" width="0.0384%" height="15" fill="rgb(210,179,32)" fg:x="99314" fg:w="83"/><text x="46.2106%" y="703.50"></text></g><g><title>core::mem::drop (83 samples, 0.04%)</title><rect x="45.9606%" y="677" width="0.0384%" height="15" fill="rgb(227,116,49)" fg:x="99314" fg:w="83"/><text x="46.2106%" y="687.50"></text></g><g><title>sled::pin (101 samples, 0.05%)</title><rect x="45.9537%" y="933" width="0.0467%" height="15" fill="rgb(211,146,6)" fg:x="99299" fg:w="101"/><text x="46.2037%" y="943.50"></text></g><g><title>crossbeam_epoch::default::pin (99 samples, 0.05%)</title><rect x="45.9546%" y="917" width="0.0458%" height="15" fill="rgb(219,44,39)" fg:x="99301" fg:w="99"/><text x="46.2046%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle (99 samples, 0.05%)</title><rect x="45.9546%" y="901" width="0.0458%" height="15" fill="rgb(234,128,11)" fg:x="99301" fg:w="99"/><text x="46.2046%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (99 samples, 0.05%)</title><rect x="45.9546%" y="885" width="0.0458%" height="15" fill="rgb(220,183,53)" fg:x="99301" fg:w="99"/><text x="46.2046%" y="895.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (99 samples, 0.05%)</title><rect x="45.9546%" y="869" width="0.0458%" height="15" fill="rgb(213,219,32)" fg:x="99301" fg:w="99"/><text x="46.2046%" y="879.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (99 samples, 0.05%)</title><rect x="45.9546%" y="853" width="0.0458%" height="15" fill="rgb(232,156,16)" fg:x="99301" fg:w="99"/><text x="46.2046%" y="863.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (99 samples, 0.05%)</title><rect x="45.9546%" y="837" width="0.0458%" height="15" fill="rgb(246,135,34)" fg:x="99301" fg:w="99"/><text x="46.2046%" y="847.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (99 samples, 0.05%)</title><rect x="45.9546%" y="821" width="0.0458%" height="15" fill="rgb(241,99,0)" fg:x="99301" fg:w="99"/><text x="46.2046%" y="831.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (89 samples, 0.04%)</title><rect x="45.9592%" y="805" width="0.0412%" height="15" fill="rgb(222,103,45)" fg:x="99311" fg:w="89"/><text x="46.2092%" y="815.50"></text></g><g><title>sled::binary_search::binary_search_lub (56 samples, 0.03%)</title><rect x="46.0310%" y="885" width="0.0259%" height="15" fill="rgb(212,57,4)" fg:x="99466" fg:w="56"/><text x="46.2810%" y="895.50"></text></g><g><title>sled::binary_search::binary_search (56 samples, 0.03%)</title><rect x="46.0310%" y="869" width="0.0259%" height="15" fill="rgb(215,68,47)" fg:x="99466" fg:w="56"/><text x="46.2810%" y="879.50"></text></g><g><title>sled::fastcmp::fastcmp (25 samples, 0.01%)</title><rect x="46.0453%" y="853" width="0.0116%" height="15" fill="rgb(230,84,2)" fg:x="99497" fg:w="25"/><text x="46.2953%" y="863.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="46.0453%" y="837" width="0.0116%" height="15" fill="rgb(220,102,14)" fg:x="99497" fg:w="25"/><text x="46.2953%" y="847.50"></text></g><g><title>sled::node::Node::index_next_node (67 samples, 0.03%)</title><rect x="46.0268%" y="901" width="0.0310%" height="15" fill="rgb(240,10,32)" fg:x="99457" fg:w="67"/><text x="46.2768%" y="911.50"></text></g><g><title>sled::lru::Lru::accessed (40 samples, 0.02%)</title><rect x="46.0657%" y="869" width="0.0185%" height="15" fill="rgb(215,47,27)" fg:x="99541" fg:w="40"/><text x="46.3157%" y="879.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (358 samples, 0.17%)</title><rect x="45.9333%" y="965" width="0.1657%" height="15" fill="rgb(233,188,43)" fg:x="99255" fg:w="358"/><text x="46.1833%" y="975.50"></text></g><g><title>sled::tree::Tree::get (330 samples, 0.15%)</title><rect x="45.9463%" y="949" width="0.1527%" height="15" fill="rgb(253,190,1)" fg:x="99283" fg:w="330"/><text x="46.1963%" y="959.50"></text></g><g><title>sled::tree::Tree::get_inner (213 samples, 0.10%)</title><rect x="46.0004%" y="933" width="0.0986%" height="15" fill="rgb(206,114,52)" fg:x="99400" fg:w="213"/><text x="46.2504%" y="943.50"></text></g><g><title>sled::tree::Tree::view_for_key (178 samples, 0.08%)</title><rect x="46.0166%" y="917" width="0.0824%" height="15" fill="rgb(233,120,37)" fg:x="99435" fg:w="178"/><text x="46.2666%" y="927.50"></text></g><g><title>sled::tree::Tree::view_for_pid (89 samples, 0.04%)</title><rect x="46.0578%" y="901" width="0.0412%" height="15" fill="rgb(214,52,39)" fg:x="99524" fg:w="89"/><text x="46.3078%" y="911.50"></text></g><g><title>sled::pagecache::PageCache::get (77 samples, 0.04%)</title><rect x="46.0634%" y="885" width="0.0356%" height="15" fill="rgb(223,80,29)" fg:x="99536" fg:w="77"/><text x="46.3134%" y="895.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_header (424 samples, 0.20%)</title><rect x="45.9097%" y="981" width="0.1962%" height="15" fill="rgb(230,101,40)" fg:x="99204" fg:w="424"/><text x="46.1597%" y="991.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_ancestor (431 samples, 0.20%)</title><rect x="45.9079%" y="1013" width="0.1995%" height="15" fill="rgb(219,211,8)" fg:x="99200" fg:w="431"/><text x="46.1579%" y="1023.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (431 samples, 0.20%)</title><rect x="45.9079%" y="997" width="0.1995%" height="15" fill="rgb(252,126,28)" fg:x="99200" fg:w="431"/><text x="46.1579%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.02%)</title><rect x="46.1379%" y="485" width="0.0162%" height="15" fill="rgb(215,56,38)" fg:x="99697" fg:w="35"/><text x="46.3879%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (35 samples, 0.02%)</title><rect x="46.1379%" y="469" width="0.0162%" height="15" fill="rgb(249,55,44)" fg:x="99697" fg:w="35"/><text x="46.3879%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (34 samples, 0.02%)</title><rect x="46.1383%" y="453" width="0.0157%" height="15" fill="rgb(220,221,32)" fg:x="99698" fg:w="34"/><text x="46.3883%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (34 samples, 0.02%)</title><rect x="46.1383%" y="437" width="0.0157%" height="15" fill="rgb(212,216,41)" fg:x="99698" fg:w="34"/><text x="46.3883%" y="447.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="46.1434%" y="421" width="0.0106%" height="15" fill="rgb(228,213,43)" fg:x="99709" fg:w="23"/><text x="46.3934%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (62 samples, 0.03%)</title><rect x="46.1268%" y="677" width="0.0287%" height="15" fill="rgb(211,31,26)" fg:x="99673" fg:w="62"/><text x="46.3768%" y="687.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.03%)</title><rect x="46.1268%" y="661" width="0.0287%" height="15" fill="rgb(229,202,19)" fg:x="99673" fg:w="62"/><text x="46.3768%" y="671.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (62 samples, 0.03%)</title><rect x="46.1268%" y="645" width="0.0287%" height="15" fill="rgb(229,105,46)" fg:x="99673" fg:w="62"/><text x="46.3768%" y="655.50"></text></g><g><title>core::mem::drop (62 samples, 0.03%)</title><rect x="46.1268%" y="629" width="0.0287%" height="15" fill="rgb(235,108,1)" fg:x="99673" fg:w="62"/><text x="46.3768%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (62 samples, 0.03%)</title><rect x="46.1268%" y="613" width="0.0287%" height="15" fill="rgb(245,111,35)" fg:x="99673" fg:w="62"/><text x="46.3768%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (62 samples, 0.03%)</title><rect x="46.1268%" y="597" width="0.0287%" height="15" fill="rgb(219,185,31)" fg:x="99673" fg:w="62"/><text x="46.3768%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (50 samples, 0.02%)</title><rect x="46.1323%" y="581" width="0.0231%" height="15" fill="rgb(214,4,43)" fg:x="99685" fg:w="50"/><text x="46.3823%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (45 samples, 0.02%)</title><rect x="46.1346%" y="565" width="0.0208%" height="15" fill="rgb(235,227,40)" fg:x="99690" fg:w="45"/><text x="46.3846%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (45 samples, 0.02%)</title><rect x="46.1346%" y="549" width="0.0208%" height="15" fill="rgb(230,88,30)" fg:x="99690" fg:w="45"/><text x="46.3846%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (38 samples, 0.02%)</title><rect x="46.1379%" y="533" width="0.0176%" height="15" fill="rgb(216,217,1)" fg:x="99697" fg:w="38"/><text x="46.3879%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (38 samples, 0.02%)</title><rect x="46.1379%" y="517" width="0.0176%" height="15" fill="rgb(248,139,50)" fg:x="99697" fg:w="38"/><text x="46.3879%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (38 samples, 0.02%)</title><rect x="46.1379%" y="501" width="0.0176%" height="15" fill="rgb(233,1,21)" fg:x="99697" fg:w="38"/><text x="46.3879%" y="511.50"></text></g><g><title>core::mem::drop (74 samples, 0.03%)</title><rect x="46.1240%" y="805" width="0.0342%" height="15" fill="rgb(215,183,12)" fg:x="99667" fg:w="74"/><text x="46.3740%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (74 samples, 0.03%)</title><rect x="46.1240%" y="789" width="0.0342%" height="15" fill="rgb(229,104,42)" fg:x="99667" fg:w="74"/><text x="46.3740%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (74 samples, 0.03%)</title><rect x="46.1240%" y="773" width="0.0342%" height="15" fill="rgb(243,34,48)" fg:x="99667" fg:w="74"/><text x="46.3740%" y="783.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (74 samples, 0.03%)</title><rect x="46.1240%" y="757" width="0.0342%" height="15" fill="rgb(239,11,44)" fg:x="99667" fg:w="74"/><text x="46.3740%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (74 samples, 0.03%)</title><rect x="46.1240%" y="741" width="0.0342%" height="15" fill="rgb(231,98,35)" fg:x="99667" fg:w="74"/><text x="46.3740%" y="751.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (68 samples, 0.03%)</title><rect x="46.1268%" y="725" width="0.0315%" height="15" fill="rgb(233,28,25)" fg:x="99673" fg:w="68"/><text x="46.3768%" y="735.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (68 samples, 0.03%)</title><rect x="46.1268%" y="709" width="0.0315%" height="15" fill="rgb(234,123,11)" fg:x="99673" fg:w="68"/><text x="46.3768%" y="719.50"></text></g><g><title>core::mem::drop (68 samples, 0.03%)</title><rect x="46.1268%" y="693" width="0.0315%" height="15" fill="rgb(220,69,3)" fg:x="99673" fg:w="68"/><text x="46.3768%" y="703.50"></text></g><g><title>sled::pin (84 samples, 0.04%)</title><rect x="46.1221%" y="949" width="0.0389%" height="15" fill="rgb(214,64,36)" fg:x="99663" fg:w="84"/><text x="46.3721%" y="959.50"></text></g><g><title>crossbeam_epoch::default::pin (84 samples, 0.04%)</title><rect x="46.1221%" y="933" width="0.0389%" height="15" fill="rgb(211,138,32)" fg:x="99663" fg:w="84"/><text x="46.3721%" y="943.50"></text></g><g><title>crossbeam_epoch::default::with_handle (84 samples, 0.04%)</title><rect x="46.1221%" y="917" width="0.0389%" height="15" fill="rgb(213,118,47)" fg:x="99663" fg:w="84"/><text x="46.3721%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (84 samples, 0.04%)</title><rect x="46.1221%" y="901" width="0.0389%" height="15" fill="rgb(243,124,49)" fg:x="99663" fg:w="84"/><text x="46.3721%" y="911.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (84 samples, 0.04%)</title><rect x="46.1221%" y="885" width="0.0389%" height="15" fill="rgb(221,30,28)" fg:x="99663" fg:w="84"/><text x="46.3721%" y="895.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (84 samples, 0.04%)</title><rect x="46.1221%" y="869" width="0.0389%" height="15" fill="rgb(246,37,13)" fg:x="99663" fg:w="84"/><text x="46.3721%" y="879.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (84 samples, 0.04%)</title><rect x="46.1221%" y="853" width="0.0389%" height="15" fill="rgb(249,66,14)" fg:x="99663" fg:w="84"/><text x="46.3721%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (84 samples, 0.04%)</title><rect x="46.1221%" y="837" width="0.0389%" height="15" fill="rgb(213,166,5)" fg:x="99663" fg:w="84"/><text x="46.3721%" y="847.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (80 samples, 0.04%)</title><rect x="46.1240%" y="821" width="0.0370%" height="15" fill="rgb(221,66,24)" fg:x="99667" fg:w="80"/><text x="46.3740%" y="831.50"></text></g><g><title>sled::binary_search::binary_search_lub (46 samples, 0.02%)</title><rect x="46.1790%" y="901" width="0.0213%" height="15" fill="rgb(210,132,17)" fg:x="99786" fg:w="46"/><text x="46.4290%" y="911.50"></text></g><g><title>sled::binary_search::binary_search (44 samples, 0.02%)</title><rect x="46.1800%" y="885" width="0.0204%" height="15" fill="rgb(243,202,5)" fg:x="99788" fg:w="44"/><text x="46.4300%" y="895.50"></text></g><g><title>sled::fastcmp::fastcmp (28 samples, 0.01%)</title><rect x="46.1874%" y="869" width="0.0130%" height="15" fill="rgb(233,70,48)" fg:x="99804" fg:w="28"/><text x="46.4374%" y="879.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="46.1888%" y="853" width="0.0116%" height="15" fill="rgb(238,41,26)" fg:x="99807" fg:w="25"/><text x="46.4388%" y="863.50"></text></g><g><title>sled::node::Node::index_next_node (49 samples, 0.02%)</title><rect x="46.1786%" y="917" width="0.0227%" height="15" fill="rgb(241,19,31)" fg:x="99785" fg:w="49"/><text x="46.4286%" y="927.50"></text></g><g><title>sled::lru::Lru::accessed (24 samples, 0.01%)</title><rect x="46.2151%" y="885" width="0.0111%" height="15" fill="rgb(214,76,10)" fg:x="99864" fg:w="24"/><text x="46.4651%" y="895.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (271 samples, 0.13%)</title><rect x="46.1129%" y="981" width="0.1254%" height="15" fill="rgb(254,202,22)" fg:x="99643" fg:w="271"/><text x="46.3629%" y="991.50"></text></g><g><title>sled::tree::Tree::get (257 samples, 0.12%)</title><rect x="46.1194%" y="965" width="0.1189%" height="15" fill="rgb(214,72,24)" fg:x="99657" fg:w="257"/><text x="46.3694%" y="975.50"></text></g><g><title>sled::tree::Tree::get_inner (167 samples, 0.08%)</title><rect x="46.1610%" y="949" width="0.0773%" height="15" fill="rgb(221,92,46)" fg:x="99747" fg:w="167"/><text x="46.4110%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_key (153 samples, 0.07%)</title><rect x="46.1675%" y="933" width="0.0708%" height="15" fill="rgb(246,13,50)" fg:x="99761" fg:w="153"/><text x="46.4175%" y="943.50"></text></g><g><title>sled::tree::Tree::view_for_pid (80 samples, 0.04%)</title><rect x="46.2013%" y="917" width="0.0370%" height="15" fill="rgb(240,165,38)" fg:x="99834" fg:w="80"/><text x="46.4513%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::get (60 samples, 0.03%)</title><rect x="46.2105%" y="901" width="0.0278%" height="15" fill="rgb(241,24,51)" fg:x="99854" fg:w="60"/><text x="46.4605%" y="911.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_block_hash (295 samples, 0.14%)</title><rect x="46.1078%" y="997" width="0.1365%" height="15" fill="rgb(227,51,44)" fg:x="99632" fg:w="295"/><text x="46.3578%" y="1007.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_validation_flags (319 samples, 0.15%)</title><rect x="46.1073%" y="1013" width="0.1476%" height="15" fill="rgb(231,121,3)" fg:x="99631" fg:w="319"/><text x="46.3573%" y="1023.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (60 samples, 0.03%)</title><rect x="46.2665%" y="853" width="0.0278%" height="15" fill="rgb(245,3,41)" fg:x="99975" fg:w="60"/><text x="46.5165%" y="863.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (64 samples, 0.03%)</title><rect x="46.2651%" y="965" width="0.0296%" height="15" fill="rgb(214,13,26)" fg:x="99972" fg:w="64"/><text x="46.5151%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (64 samples, 0.03%)</title><rect x="46.2651%" y="949" width="0.0296%" height="15" fill="rgb(252,75,11)" fg:x="99972" fg:w="64"/><text x="46.5151%" y="959.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (64 samples, 0.03%)</title><rect x="46.2651%" y="933" width="0.0296%" height="15" fill="rgb(218,226,17)" fg:x="99972" fg:w="64"/><text x="46.5151%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (64 samples, 0.03%)</title><rect x="46.2651%" y="917" width="0.0296%" height="15" fill="rgb(248,89,38)" fg:x="99972" fg:w="64"/><text x="46.5151%" y="927.50"></text></g><g><title>std::io::Write::write_all (64 samples, 0.03%)</title><rect x="46.2651%" y="901" width="0.0296%" height="15" fill="rgb(237,73,46)" fg:x="99972" fg:w="64"/><text x="46.5151%" y="911.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (63 samples, 0.03%)</title><rect x="46.2656%" y="885" width="0.0292%" height="15" fill="rgb(242,78,33)" fg:x="99973" fg:w="63"/><text x="46.5156%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (62 samples, 0.03%)</title><rect x="46.2661%" y="869" width="0.0287%" height="15" fill="rgb(235,60,3)" fg:x="99974" fg:w="62"/><text x="46.5161%" y="879.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (81 samples, 0.04%)</title><rect x="46.2633%" y="981" width="0.0375%" height="15" fill="rgb(216,172,19)" fg:x="99968" fg:w="81"/><text x="46.5133%" y="991.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (61 samples, 0.03%)</title><rect x="46.3021%" y="917" width="0.0282%" height="15" fill="rgb(227,6,42)" fg:x="100052" fg:w="61"/><text x="46.5521%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (67 samples, 0.03%)</title><rect x="46.3021%" y="933" width="0.0310%" height="15" fill="rgb(223,207,42)" fg:x="100052" fg:w="67"/><text x="46.5521%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (68 samples, 0.03%)</title><rect x="46.3021%" y="949" width="0.0315%" height="15" fill="rgb(246,138,30)" fg:x="100052" fg:w="68"/><text x="46.5521%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (23 samples, 0.01%)</title><rect x="46.3461%" y="885" width="0.0106%" height="15" fill="rgb(251,199,47)" fg:x="100147" fg:w="23"/><text x="46.5961%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (75 samples, 0.03%)</title><rect x="46.3345%" y="901" width="0.0347%" height="15" fill="rgb(228,218,44)" fg:x="100122" fg:w="75"/><text x="46.5845%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (27 samples, 0.01%)</title><rect x="46.3568%" y="885" width="0.0125%" height="15" fill="rgb(220,68,6)" fg:x="100170" fg:w="27"/><text x="46.6068%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (78 samples, 0.04%)</title><rect x="46.3341%" y="917" width="0.0361%" height="15" fill="rgb(240,60,26)" fg:x="100121" fg:w="78"/><text x="46.5841%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (81 samples, 0.04%)</title><rect x="46.3336%" y="933" width="0.0375%" height="15" fill="rgb(211,200,19)" fg:x="100120" fg:w="81"/><text x="46.5836%" y="943.50"></text></g><g><title>floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader::block_hash (247 samples, 0.11%)</title><rect x="46.2577%" y="1013" width="0.1143%" height="15" fill="rgb(242,145,30)" fg:x="99956" fg:w="247"/><text x="46.5077%" y="1023.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (238 samples, 0.11%)</title><rect x="46.2619%" y="997" width="0.1101%" height="15" fill="rgb(225,64,13)" fg:x="99965" fg:w="238"/><text x="46.5119%" y="1007.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (153 samples, 0.07%)</title><rect x="46.3012%" y="981" width="0.0708%" height="15" fill="rgb(218,103,35)" fg:x="100050" fg:w="153"/><text x="46.5512%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (153 samples, 0.07%)</title><rect x="46.3012%" y="965" width="0.0708%" height="15" fill="rgb(216,93,46)" fg:x="100050" fg:w="153"/><text x="46.5512%" y="975.50"></text></g><g><title>bitcoin_hashes::Hash::hash (83 samples, 0.04%)</title><rect x="46.3336%" y="949" width="0.0384%" height="15" fill="rgb(225,159,27)" fg:x="100120" fg:w="83"/><text x="46.5836%" y="959.50"></text></g><g><title>[libc.so.6] (129 samples, 0.06%)</title><rect x="46.5048%" y="805" width="0.0597%" height="15" fill="rgb(225,204,11)" fg:x="100490" fg:w="129"/><text x="46.7548%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (390 samples, 0.18%)</title><rect x="46.3845%" y="965" width="0.1805%" height="15" fill="rgb(205,56,4)" fg:x="100230" fg:w="390"/><text x="46.6345%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (390 samples, 0.18%)</title><rect x="46.3845%" y="949" width="0.1805%" height="15" fill="rgb(206,6,35)" fg:x="100230" fg:w="390"/><text x="46.6345%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bitcoin::blockdata::transaction::OutPoint,bitcoin::blockdata::transaction::TxOut)&gt; (390 samples, 0.18%)</title><rect x="46.3845%" y="933" width="0.1805%" height="15" fill="rgb(247,73,52)" fg:x="100230" fg:w="390"/><text x="46.6345%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::TxOut&gt; (390 samples, 0.18%)</title><rect x="46.3845%" y="917" width="0.1805%" height="15" fill="rgb(246,97,4)" fg:x="100230" fg:w="390"/><text x="46.6345%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::script::Script&gt; (390 samples, 0.18%)</title><rect x="46.3845%" y="901" width="0.1805%" height="15" fill="rgb(212,37,15)" fg:x="100230" fg:w="390"/><text x="46.6345%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (390 samples, 0.18%)</title><rect x="46.3845%" y="885" width="0.1805%" height="15" fill="rgb(208,130,40)" fg:x="100230" fg:w="390"/><text x="46.6345%" y="895.50"></text></g><g><title>alloc::alloc::box_free (390 samples, 0.18%)</title><rect x="46.3845%" y="869" width="0.1805%" height="15" fill="rgb(236,55,29)" fg:x="100230" fg:w="390"/><text x="46.6345%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (390 samples, 0.18%)</title><rect x="46.3845%" y="853" width="0.1805%" height="15" fill="rgb(209,156,45)" fg:x="100230" fg:w="390"/><text x="46.6345%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (386 samples, 0.18%)</title><rect x="46.3864%" y="837" width="0.1786%" height="15" fill="rgb(249,107,4)" fg:x="100234" fg:w="386"/><text x="46.6364%" y="847.50"></text></g><g><title>cfree (383 samples, 0.18%)</title><rect x="46.3878%" y="821" width="0.1772%" height="15" fill="rgb(227,7,13)" fg:x="100237" fg:w="383"/><text x="46.6378%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (396 samples, 0.18%)</title><rect x="46.3827%" y="981" width="0.1833%" height="15" fill="rgb(250,129,14)" fg:x="100226" fg:w="396"/><text x="46.6327%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (404 samples, 0.19%)</title><rect x="46.3817%" y="997" width="0.1870%" height="15" fill="rgb(229,92,13)" fg:x="100224" fg:w="404"/><text x="46.6317%" y="1007.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::is_coin_base (23 samples, 0.01%)</title><rect x="46.5687%" y="997" width="0.0106%" height="15" fill="rgb(245,98,39)" fg:x="100628" fg:w="23"/><text x="46.8187%" y="1007.50"></text></g><g><title>[libc.so.6] (263 samples, 0.12%)</title><rect x="46.7339%" y="629" width="0.1217%" height="15" fill="rgb(234,135,48)" fg:x="100985" fg:w="263"/><text x="46.9839%" y="639.50"></text></g><g><title>cfree (549 samples, 0.25%)</title><rect x="46.6039%" y="645" width="0.2541%" height="15" fill="rgb(230,98,28)" fg:x="100704" fg:w="549"/><text x="46.8539%" y="655.50"></text></g><g><title>std::_Destroy&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (590 samples, 0.27%)</title><rect x="46.5863%" y="789" width="0.2730%" height="15" fill="rgb(223,121,0)" fg:x="100666" fg:w="590"/><text x="46.8363%" y="799.50"></text></g><g><title>std::_Destroy&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*&gt; (590 samples, 0.27%)</title><rect x="46.5863%" y="773" width="0.2730%" height="15" fill="rgb(234,173,33)" fg:x="100666" fg:w="590"/><text x="46.8363%" y="783.50"></text></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;*&gt; (590 samples, 0.27%)</title><rect x="46.5863%" y="757" width="0.2730%" height="15" fill="rgb(245,47,8)" fg:x="100666" fg:w="590"/><text x="46.8363%" y="767.50"></text></g><g><title>std::_Destroy&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (585 samples, 0.27%)</title><rect x="46.5886%" y="741" width="0.2707%" height="15" fill="rgb(205,17,20)" fg:x="100671" fg:w="585"/><text x="46.8386%" y="751.50"></text></g><g><title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~vector (585 samples, 0.27%)</title><rect x="46.5886%" y="725" width="0.2707%" height="15" fill="rgb(232,151,16)" fg:x="100671" fg:w="585"/><text x="46.8386%" y="735.50"></text></g><g><title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::~_Vector_base (585 samples, 0.27%)</title><rect x="46.5886%" y="709" width="0.2707%" height="15" fill="rgb(208,30,32)" fg:x="100671" fg:w="585"/><text x="46.8386%" y="719.50"></text></g><g><title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_deallocate (580 samples, 0.27%)</title><rect x="46.5909%" y="693" width="0.2684%" height="15" fill="rgb(254,26,3)" fg:x="100676" fg:w="580"/><text x="46.8409%" y="703.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::deallocate (552 samples, 0.26%)</title><rect x="46.6039%" y="677" width="0.2555%" height="15" fill="rgb(240,177,30)" fg:x="100704" fg:w="552"/><text x="46.8539%" y="687.50"></text></g><g><title>std::__new_allocator&lt;unsigned char&gt;::deallocate (552 samples, 0.26%)</title><rect x="46.6039%" y="661" width="0.2555%" height="15" fill="rgb(248,76,44)" fg:x="100704" fg:w="552"/><text x="46.8539%" y="671.50"></text></g><g><title>cfree (175 samples, 0.08%)</title><rect x="46.8593%" y="725" width="0.0810%" height="15" fill="rgb(241,186,54)" fg:x="101256" fg:w="175"/><text x="47.1093%" y="735.50"></text></g><g><title>[libc.so.6] (93 samples, 0.04%)</title><rect x="46.8973%" y="709" width="0.0430%" height="15" fill="rgb(249,171,29)" fg:x="101338" fg:w="93"/><text x="47.1473%" y="719.50"></text></g><g><title>std::_Destroy&lt;CTxIn*, CTxIn&gt; (769 samples, 0.36%)</title><rect x="46.5854%" y="901" width="0.3559%" height="15" fill="rgb(237,151,44)" fg:x="100664" fg:w="769"/><text x="46.8354%" y="911.50"></text></g><g><title>std::_Destroy&lt;CTxIn*&gt; (769 samples, 0.36%)</title><rect x="46.5854%" y="885" width="0.3559%" height="15" fill="rgb(228,174,30)" fg:x="100664" fg:w="769"/><text x="46.8354%" y="895.50"></text></g><g><title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;CTxIn*&gt; (769 samples, 0.36%)</title><rect x="46.5854%" y="869" width="0.3559%" height="15" fill="rgb(252,14,37)" fg:x="100664" fg:w="769"/><text x="46.8354%" y="879.50"></text></g><g><title>std::_Destroy&lt;CTxIn&gt; (769 samples, 0.36%)</title><rect x="46.5854%" y="853" width="0.3559%" height="15" fill="rgb(207,111,40)" fg:x="100664" fg:w="769"/><text x="46.8354%" y="863.50"></text></g><g><title>CTxIn::~CTxIn (769 samples, 0.36%)</title><rect x="46.5854%" y="837" width="0.3559%" height="15" fill="rgb(248,171,54)" fg:x="100664" fg:w="769"/><text x="46.8354%" y="847.50"></text></g><g><title>CScriptWitness::~CScriptWitness (767 samples, 0.35%)</title><rect x="46.5863%" y="821" width="0.3550%" height="15" fill="rgb(211,127,2)" fg:x="100666" fg:w="767"/><text x="46.8363%" y="831.50"></text></g><g><title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~vector (767 samples, 0.35%)</title><rect x="46.5863%" y="805" width="0.3550%" height="15" fill="rgb(236,87,47)" fg:x="100666" fg:w="767"/><text x="46.8363%" y="815.50"></text></g><g><title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~_Vector_base (177 samples, 0.08%)</title><rect x="46.8593%" y="789" width="0.0819%" height="15" fill="rgb(223,190,45)" fg:x="101256" fg:w="177"/><text x="47.1093%" y="799.50"></text></g><g><title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_deallocate (177 samples, 0.08%)</title><rect x="46.8593%" y="773" width="0.0819%" height="15" fill="rgb(215,5,16)" fg:x="101256" fg:w="177"/><text x="47.1093%" y="783.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::deallocate (177 samples, 0.08%)</title><rect x="46.8593%" y="757" width="0.0819%" height="15" fill="rgb(252,82,33)" fg:x="101256" fg:w="177"/><text x="47.1093%" y="767.50"></text></g><g><title>std::__new_allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::deallocate (177 samples, 0.08%)</title><rect x="46.8593%" y="741" width="0.0819%" height="15" fill="rgb(247,213,44)" fg:x="101256" fg:w="177"/><text x="47.1093%" y="751.50"></text></g><g><title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::~vector (1,088 samples, 0.50%)</title><rect x="46.5854%" y="917" width="0.5035%" height="15" fill="rgb(205,196,44)" fg:x="100664" fg:w="1088"/><text x="46.8354%" y="927.50"></text></g><g><title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::~_Vector_base (319 samples, 0.15%)</title><rect x="46.9412%" y="901" width="0.1476%" height="15" fill="rgb(237,96,54)" fg:x="101433" fg:w="319"/><text x="47.1912%" y="911.50"></text></g><g><title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_deallocate (319 samples, 0.15%)</title><rect x="46.9412%" y="885" width="0.1476%" height="15" fill="rgb(230,113,34)" fg:x="101433" fg:w="319"/><text x="47.1912%" y="895.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;CTxIn&gt; &gt;::deallocate (319 samples, 0.15%)</title><rect x="46.9412%" y="869" width="0.1476%" height="15" fill="rgb(221,224,12)" fg:x="101433" fg:w="319"/><text x="47.1912%" y="879.50"></text></g><g><title>std::__new_allocator&lt;CTxIn&gt;::deallocate (319 samples, 0.15%)</title><rect x="46.9412%" y="853" width="0.1476%" height="15" fill="rgb(219,112,44)" fg:x="101433" fg:w="319"/><text x="47.1912%" y="863.50"></text></g><g><title>cfree (319 samples, 0.15%)</title><rect x="46.9412%" y="837" width="0.1476%" height="15" fill="rgb(210,31,13)" fg:x="101433" fg:w="319"/><text x="47.1912%" y="847.50"></text></g><g><title>[libc.so.6] (319 samples, 0.15%)</title><rect x="46.9412%" y="821" width="0.1476%" height="15" fill="rgb(230,25,16)" fg:x="101433" fg:w="319"/><text x="47.1912%" y="831.50"></text></g><g><title>[libc.so.6] (318 samples, 0.15%)</title><rect x="46.9417%" y="805" width="0.1472%" height="15" fill="rgb(246,108,53)" fg:x="101434" fg:w="318"/><text x="47.1917%" y="815.50"></text></g><g><title>[libc.so.6] (315 samples, 0.15%)</title><rect x="46.9431%" y="789" width="0.1458%" height="15" fill="rgb(241,172,50)" fg:x="101437" fg:w="315"/><text x="47.1931%" y="799.50"></text></g><g><title>CTransaction::~CTransaction (1,091 samples, 0.50%)</title><rect x="46.5854%" y="933" width="0.5049%" height="15" fill="rgb(235,141,10)" fg:x="100664" fg:w="1091"/><text x="46.8354%" y="943.50"></text></g><g><title>[libc.so.6] (100 samples, 0.05%)</title><rect x="47.7992%" y="597" width="0.0463%" height="15" fill="rgb(220,174,43)" fg:x="103287" fg:w="100"/><text x="48.0492%" y="607.50"></text></g><g><title>[libc.so.6] (1,198 samples, 0.55%)</title><rect x="47.2957%" y="613" width="0.5544%" height="15" fill="rgb(215,181,40)" fg:x="102199" fg:w="1198"/><text x="47.5457%" y="623.50"></text></g><g><title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_allocate (1,532 samples, 0.71%)</title><rect x="47.1444%" y="693" width="0.7090%" height="15" fill="rgb(230,97,2)" fg:x="101872" fg:w="1532"/><text x="47.3944%" y="703.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;unsigned char&gt; &gt;::allocate (1,532 samples, 0.71%)</title><rect x="47.1444%" y="677" width="0.7090%" height="15" fill="rgb(211,25,27)" fg:x="101872" fg:w="1532"/><text x="47.3944%" y="687.50"></text></g><g><title>std::__new_allocator&lt;unsigned char&gt;::allocate (1,532 samples, 0.71%)</title><rect x="47.1444%" y="661" width="0.7090%" height="15" fill="rgb(230,87,26)" fg:x="101872" fg:w="1532"/><text x="47.3944%" y="671.50"></text></g><g><title>operator new (1,520 samples, 0.70%)</title><rect x="47.1500%" y="645" width="0.7034%" height="15" fill="rgb(227,160,17)" fg:x="101884" fg:w="1520"/><text x="47.4000%" y="655.50"></text></g><g><title>malloc (1,506 samples, 0.70%)</title><rect x="47.1564%" y="629" width="0.6969%" height="15" fill="rgb(244,85,34)" fg:x="101898" fg:w="1506"/><text x="47.4064%" y="639.50"></text></g><g><title>std::__uninitialized_default_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (76 samples, 0.04%)</title><rect x="47.8534%" y="693" width="0.0352%" height="15" fill="rgb(207,70,0)" fg:x="103404" fg:w="76"/><text x="48.1034%" y="703.50"></text></g><g><title>std::__uninitialized_default_n&lt;unsigned char*, unsigned long&gt; (76 samples, 0.04%)</title><rect x="47.8534%" y="677" width="0.0352%" height="15" fill="rgb(223,129,7)" fg:x="103404" fg:w="76"/><text x="48.1034%" y="687.50"></text></g><g><title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;unsigned char*, unsigned long&gt; (76 samples, 0.04%)</title><rect x="47.8534%" y="661" width="0.0352%" height="15" fill="rgb(246,105,7)" fg:x="103404" fg:w="76"/><text x="48.1034%" y="671.50"></text></g><g><title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;unsigned char*, unsigned long&gt; (76 samples, 0.04%)</title><rect x="47.8534%" y="645" width="0.0352%" height="15" fill="rgb(215,154,42)" fg:x="103404" fg:w="76"/><text x="48.1034%" y="655.50"></text></g><g><title>std::fill_n&lt;unsigned char*, unsigned long, unsigned char&gt; (71 samples, 0.03%)</title><rect x="47.8557%" y="629" width="0.0329%" height="15" fill="rgb(220,215,30)" fg:x="103409" fg:w="71"/><text x="48.1057%" y="639.50"></text></g><g><title>std::__fill_n_a&lt;unsigned char*, unsigned long, unsigned char&gt; (71 samples, 0.03%)</title><rect x="47.8557%" y="613" width="0.0329%" height="15" fill="rgb(228,81,51)" fg:x="103409" fg:w="71"/><text x="48.1057%" y="623.50"></text></g><g><title>std::__fill_a&lt;unsigned char*, unsigned char&gt; (30 samples, 0.01%)</title><rect x="47.8747%" y="597" width="0.0139%" height="15" fill="rgb(247,71,54)" fg:x="103450" fg:w="30"/><text x="48.1247%" y="607.50"></text></g><g><title>std::__fill_a1&lt;unsigned char&gt; (30 samples, 0.01%)</title><rect x="47.8747%" y="581" width="0.0139%" height="15" fill="rgb(234,176,34)" fg:x="103450" fg:w="30"/><text x="48.1247%" y="591.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="47.8765%" y="565" width="0.0120%" height="15" fill="rgb(241,103,54)" fg:x="103454" fg:w="26"/><text x="48.1265%" y="575.50"></text></g><g><title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (1,652 samples, 0.76%)</title><rect x="47.1282%" y="709" width="0.7645%" height="15" fill="rgb(228,22,34)" fg:x="101837" fg:w="1652"/><text x="47.3782%" y="719.50"></text></g><g><title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::resize (1,667 samples, 0.77%)</title><rect x="47.1268%" y="725" width="0.7715%" height="15" fill="rgb(241,179,48)" fg:x="101834" fg:w="1667"/><text x="47.3768%" y="735.50"></text></g><g><title>[libc.so.6] (79 samples, 0.04%)</title><rect x="47.8983%" y="709" width="0.0366%" height="15" fill="rgb(235,167,37)" fg:x="103501" fg:w="79"/><text x="48.1483%" y="719.50"></text></g><g><title>Unserialize_impl&lt;(anonymous namespace)::TxInputStream, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (1,801 samples, 0.83%)</title><rect x="47.1023%" y="741" width="0.8335%" height="15" fill="rgb(213,109,30)" fg:x="101781" fg:w="1801"/><text x="47.3523%" y="751.50"></text></g><g><title>verify_script (81 samples, 0.04%)</title><rect x="47.8983%" y="725" width="0.0375%" height="15" fill="rgb(222,172,16)" fg:x="103501" fg:w="81"/><text x="48.1483%" y="735.50"></text></g><g><title>Unser&lt;(anonymous namespace)::TxInputStream, std::vector&lt;unsigned char&gt; &gt; (1,846 samples, 0.85%)</title><rect x="47.1023%" y="773" width="0.8543%" height="15" fill="rgb(233,192,5)" fg:x="101781" fg:w="1846"/><text x="47.3523%" y="783.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (1,846 samples, 0.85%)</title><rect x="47.1023%" y="757" width="0.8543%" height="15" fill="rgb(247,189,41)" fg:x="101781" fg:w="1846"/><text x="47.3523%" y="767.50"></text></g><g><title>verify_script (45 samples, 0.02%)</title><rect x="47.9358%" y="741" width="0.0208%" height="15" fill="rgb(218,134,47)" fg:x="103582" fg:w="45"/><text x="48.1858%" y="751.50"></text></g><g><title>ReadCompactSize&lt;(anonymous namespace)::TxInputStream&gt; (45 samples, 0.02%)</title><rect x="47.9358%" y="725" width="0.0208%" height="15" fill="rgb(216,29,3)" fg:x="103582" fg:w="45"/><text x="48.1858%" y="735.50"></text></g><g><title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::emplace_back&lt;&gt; (39 samples, 0.02%)</title><rect x="47.9617%" y="773" width="0.0180%" height="15" fill="rgb(246,140,12)" fg:x="103638" fg:w="39"/><text x="48.2117%" y="783.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;&gt; (24 samples, 0.01%)</title><rect x="47.9686%" y="757" width="0.0111%" height="15" fill="rgb(230,136,11)" fg:x="103653" fg:w="24"/><text x="48.2186%" y="767.50"></text></g><g><title>std::__new_allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::construct&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;&gt; (24 samples, 0.01%)</title><rect x="47.9686%" y="741" width="0.0111%" height="15" fill="rgb(247,22,47)" fg:x="103653" fg:w="24"/><text x="48.2186%" y="751.50"></text></g><g><title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::vector (24 samples, 0.01%)</title><rect x="47.9686%" y="725" width="0.0111%" height="15" fill="rgb(218,84,22)" fg:x="103653" fg:w="24"/><text x="48.2186%" y="735.50"></text></g><g><title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_base (24 samples, 0.01%)</title><rect x="47.9686%" y="709" width="0.0111%" height="15" fill="rgb(216,87,39)" fg:x="103653" fg:w="24"/><text x="48.2186%" y="719.50"></text></g><g><title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl::_Vector_impl (24 samples, 0.01%)</title><rect x="47.9686%" y="693" width="0.0111%" height="15" fill="rgb(221,178,8)" fg:x="103653" fg:w="24"/><text x="48.2186%" y="703.50"></text></g><g><title>std::_Vector_base&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_Vector_impl_data::_Vector_impl_data (24 samples, 0.01%)</title><rect x="47.9686%" y="677" width="0.0111%" height="15" fill="rgb(230,42,11)" fg:x="103653" fg:w="24"/><text x="48.2186%" y="687.50"></text></g><g><title>[libc.so.6] (112 samples, 0.05%)</title><rect x="48.3134%" y="661" width="0.0518%" height="15" fill="rgb(237,229,4)" fg:x="104398" fg:w="112"/><text x="48.5634%" y="671.50"></text></g><g><title>std::_Vector_base&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::_M_allocate (825 samples, 0.38%)</title><rect x="47.9839%" y="757" width="0.3818%" height="15" fill="rgb(222,31,33)" fg:x="103686" fg:w="825"/><text x="48.2339%" y="767.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::allocate (825 samples, 0.38%)</title><rect x="47.9839%" y="741" width="0.3818%" height="15" fill="rgb(210,17,39)" fg:x="103686" fg:w="825"/><text x="48.2339%" y="751.50"></text></g><g><title>std::__new_allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;::allocate (825 samples, 0.38%)</title><rect x="47.9839%" y="725" width="0.3818%" height="15" fill="rgb(244,93,20)" fg:x="103686" fg:w="825"/><text x="48.2339%" y="735.50"></text></g><g><title>operator new (819 samples, 0.38%)</title><rect x="47.9867%" y="709" width="0.3790%" height="15" fill="rgb(210,40,47)" fg:x="103692" fg:w="819"/><text x="48.2367%" y="719.50"></text></g><g><title>malloc (816 samples, 0.38%)</title><rect x="47.9881%" y="693" width="0.3776%" height="15" fill="rgb(239,211,47)" fg:x="103695" fg:w="816"/><text x="48.2381%" y="703.50"></text></g><g><title>[libc.so.6] (673 samples, 0.31%)</title><rect x="48.0542%" y="677" width="0.3115%" height="15" fill="rgb(251,223,49)" fg:x="103838" fg:w="673"/><text x="48.3042%" y="687.50"></text></g><g><title>std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::reserve (845 samples, 0.39%)</title><rect x="47.9797%" y="773" width="0.3910%" height="15" fill="rgb(221,149,5)" fg:x="103677" fg:w="845"/><text x="48.2297%" y="783.50"></text></g><g><title>Unser&lt;(anonymous namespace)::TxInputStream, std::vector&lt;std::vector&lt;unsigned char&gt; &gt; &gt; (2,782 samples, 1.29%)</title><rect x="47.0930%" y="789" width="1.2875%" height="15" fill="rgb(219,224,51)" fg:x="101761" fg:w="2782"/><text x="47.3430%" y="799.50"></text></g><g><title>operator&gt;&gt;&lt;std::vector&lt;std::vector&lt;unsigned char&gt; &gt;&amp;&gt; (2,808 samples, 1.30%)</title><rect x="47.0930%" y="869" width="1.2995%" height="15" fill="rgb(223,7,8)" fg:x="101761" fg:w="2808"/><text x="47.3430%" y="879.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, std::vector&lt;unsigned char&gt;, std::allocator&lt;std::vector&lt;unsigned char&gt; &gt; &gt; (2,808 samples, 1.30%)</title><rect x="47.0930%" y="853" width="1.2995%" height="15" fill="rgb(241,217,22)" fg:x="101761" fg:w="2808"/><text x="47.3430%" y="863.50"></text></g><g><title>Unserialize_impl&lt;(anonymous namespace)::TxInputStream, std::vector&lt;unsigned char&gt;, std::allocator&lt;std::vector&lt;unsigned char&gt; &gt;, std::vector&lt;unsigned char&gt; &gt; (2,808 samples, 1.30%)</title><rect x="47.0930%" y="837" width="1.2995%" height="15" fill="rgb(248,209,0)" fg:x="101761" fg:w="2808"/><text x="47.3430%" y="847.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;std::vector&lt;unsigned char&gt; &gt;&amp;&gt; &gt; (2,808 samples, 1.30%)</title><rect x="47.0930%" y="821" width="1.2995%" height="15" fill="rgb(217,205,4)" fg:x="101761" fg:w="2808"/><text x="47.3430%" y="831.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream&gt; (2,808 samples, 1.30%)</title><rect x="47.0930%" y="805" width="1.2995%" height="15" fill="rgb(228,124,39)" fg:x="101761" fg:w="2808"/><text x="47.3430%" y="815.50"></text></g><g><title>verify_script (26 samples, 0.01%)</title><rect x="48.3805%" y="789" width="0.0120%" height="15" fill="rgb(250,116,42)" fg:x="104543" fg:w="26"/><text x="48.6305%" y="799.50"></text></g><g><title>ReadCompactSize&lt;(anonymous namespace)::TxInputStream&gt; (26 samples, 0.01%)</title><rect x="48.3805%" y="773" width="0.0120%" height="15" fill="rgb(223,202,9)" fg:x="104543" fg:w="26"/><text x="48.6305%" y="783.50"></text></g><g><title>SerReadWriteMany&lt;(anonymous namespace)::TxInputStream, COutPoint&amp;&gt; (24 samples, 0.01%)</title><rect x="48.3981%" y="709" width="0.0111%" height="15" fill="rgb(242,222,40)" fg:x="104581" fg:w="24"/><text x="48.6481%" y="719.50"></text></g><g><title>UnserializeMany&lt;(anonymous namespace)::TxInputStream, COutPoint&amp;&gt; (24 samples, 0.01%)</title><rect x="48.3981%" y="693" width="0.0111%" height="15" fill="rgb(229,99,46)" fg:x="104581" fg:w="24"/><text x="48.6481%" y="703.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, COutPoint&amp;&gt; (24 samples, 0.01%)</title><rect x="48.3981%" y="677" width="0.0111%" height="15" fill="rgb(225,56,46)" fg:x="104581" fg:w="24"/><text x="48.6481%" y="687.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream&gt; (24 samples, 0.01%)</title><rect x="48.3981%" y="661" width="0.0111%" height="15" fill="rgb(227,94,5)" fg:x="104581" fg:w="24"/><text x="48.6481%" y="671.50"></text></g><g><title>SerializationOp&lt;(anonymous namespace)::TxInputStream, CSerActionUnserialize&gt; (24 samples, 0.01%)</title><rect x="48.3981%" y="645" width="0.0111%" height="15" fill="rgb(205,112,38)" fg:x="104581" fg:w="24"/><text x="48.6481%" y="655.50"></text></g><g><title>ReadCompactSize&lt;(anonymous namespace)::TxInputStream&gt; (48 samples, 0.02%)</title><rect x="48.4212%" y="565" width="0.0222%" height="15" fill="rgb(231,133,46)" fg:x="104631" fg:w="48"/><text x="48.6712%" y="575.50"></text></g><g><title>SerReadWriteMany&lt;(anonymous namespace)::TxInputStream, CScript&amp;&gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="709" width="0.0384%" height="15" fill="rgb(217,16,9)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="719.50"></text></g><g><title>UnserializeMany&lt;(anonymous namespace)::TxInputStream, CScript&amp;&gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="693" width="0.0384%" height="15" fill="rgb(249,173,9)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="703.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, CScript&amp;&gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="677" width="0.0384%" height="15" fill="rgb(205,163,53)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="687.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream&gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="661" width="0.0384%" height="15" fill="rgb(217,54,41)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="671.50"></text></g><g><title>SerializationOp&lt;(anonymous namespace)::TxInputStream, CSerActionUnserialize&gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="645" width="0.0384%" height="15" fill="rgb(228,216,12)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="655.50"></text></g><g><title>SerReadWriteMany&lt;(anonymous namespace)::TxInputStream, prevector&lt;28, unsigned char, unsigned int, int&gt;&amp;&gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="629" width="0.0384%" height="15" fill="rgb(244,228,15)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="639.50"></text></g><g><title>UnserializeMany&lt;(anonymous namespace)::TxInputStream, prevector&lt;28, unsigned char&gt;&amp;&gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="613" width="0.0384%" height="15" fill="rgb(221,176,53)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="623.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="597" width="0.0384%" height="15" fill="rgb(205,94,34)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="607.50"></text></g><g><title>Unserialize_impl&lt;(anonymous namespace)::TxInputStream, 28u, unsigned char&gt; (83 samples, 0.04%)</title><rect x="48.4092%" y="581" width="0.0384%" height="15" fill="rgb(213,110,48)" fg:x="104605" fg:w="83"/><text x="48.6592%" y="591.50"></text></g><g><title>Unser&lt;(anonymous namespace)::TxInputStream, CTxIn&gt; (118 samples, 0.05%)</title><rect x="48.3981%" y="773" width="0.0546%" height="15" fill="rgb(236,142,28)" fg:x="104581" fg:w="118"/><text x="48.6481%" y="783.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, CTxIn&amp;&gt; (118 samples, 0.05%)</title><rect x="48.3981%" y="757" width="0.0546%" height="15" fill="rgb(225,135,29)" fg:x="104581" fg:w="118"/><text x="48.6481%" y="767.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream&gt; (118 samples, 0.05%)</title><rect x="48.3981%" y="741" width="0.0546%" height="15" fill="rgb(252,45,31)" fg:x="104581" fg:w="118"/><text x="48.6481%" y="751.50"></text></g><g><title>SerializationOp&lt;(anonymous namespace)::TxInputStream, CSerActionUnserialize&gt; (118 samples, 0.05%)</title><rect x="48.3981%" y="725" width="0.0546%" height="15" fill="rgb(211,187,50)" fg:x="104581" fg:w="118"/><text x="48.6481%" y="735.50"></text></g><g><title>[libc.so.6] (202 samples, 0.09%)</title><rect x="48.6309%" y="645" width="0.0935%" height="15" fill="rgb(229,109,7)" fg:x="105084" fg:w="202"/><text x="48.8809%" y="655.50"></text></g><g><title>Unser&lt;(anonymous namespace)::TxInputStream, std::vector&lt;CTxIn&gt; &gt; (714 samples, 0.33%)</title><rect x="48.3958%" y="789" width="0.3304%" height="15" fill="rgb(251,131,51)" fg:x="104576" fg:w="714"/><text x="48.6458%" y="799.50"></text></g><g><title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::reserve (582 samples, 0.27%)</title><rect x="48.4569%" y="773" width="0.2693%" height="15" fill="rgb(251,180,35)" fg:x="104708" fg:w="582"/><text x="48.7069%" y="783.50"></text></g><g><title>std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_allocate_and_copy&lt;CTxIn const*&gt; (582 samples, 0.27%)</title><rect x="48.4569%" y="757" width="0.2693%" height="15" fill="rgb(211,46,32)" fg:x="104708" fg:w="582"/><text x="48.7069%" y="767.50"></text></g><g><title>std::_Vector_base&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt;::_M_allocate (582 samples, 0.27%)</title><rect x="48.4569%" y="741" width="0.2693%" height="15" fill="rgb(248,123,17)" fg:x="104708" fg:w="582"/><text x="48.7069%" y="751.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;CTxIn&gt; &gt;::allocate (582 samples, 0.27%)</title><rect x="48.4569%" y="725" width="0.2693%" height="15" fill="rgb(227,141,18)" fg:x="104708" fg:w="582"/><text x="48.7069%" y="735.50"></text></g><g><title>std::__new_allocator&lt;CTxIn&gt;::allocate (582 samples, 0.27%)</title><rect x="48.4569%" y="709" width="0.2693%" height="15" fill="rgb(216,102,9)" fg:x="104708" fg:w="582"/><text x="48.7069%" y="719.50"></text></g><g><title>operator new (581 samples, 0.27%)</title><rect x="48.4573%" y="693" width="0.2689%" height="15" fill="rgb(253,47,13)" fg:x="104709" fg:w="581"/><text x="48.7073%" y="703.50"></text></g><g><title>malloc (580 samples, 0.27%)</title><rect x="48.4578%" y="677" width="0.2684%" height="15" fill="rgb(226,93,23)" fg:x="104710" fg:w="580"/><text x="48.7078%" y="687.50"></text></g><g><title>[libc.so.6] (580 samples, 0.27%)</title><rect x="48.4578%" y="661" width="0.2684%" height="15" fill="rgb(247,104,17)" fg:x="104710" fg:w="580"/><text x="48.7078%" y="671.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (715 samples, 0.33%)</title><rect x="48.3958%" y="853" width="0.3309%" height="15" fill="rgb(233,203,26)" fg:x="104576" fg:w="715"/><text x="48.6458%" y="863.50"></text></g><g><title>Unserialize_impl&lt;(anonymous namespace)::TxInputStream, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (715 samples, 0.33%)</title><rect x="48.3958%" y="837" width="0.3309%" height="15" fill="rgb(244,98,49)" fg:x="104576" fg:w="715"/><text x="48.6458%" y="847.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream, Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxIn&gt;&amp;&gt; &gt; (715 samples, 0.33%)</title><rect x="48.3958%" y="821" width="0.3309%" height="15" fill="rgb(235,134,22)" fg:x="104576" fg:w="715"/><text x="48.6458%" y="831.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream&gt; (715 samples, 0.33%)</title><rect x="48.3958%" y="805" width="0.3309%" height="15" fill="rgb(221,70,32)" fg:x="104576" fg:w="715"/><text x="48.6458%" y="815.50"></text></g><g><title>UnserializeTransaction&lt;(anonymous namespace)::TxInputStream, CMutableTransaction&gt; (3,554 samples, 1.64%)</title><rect x="47.0907%" y="885" width="1.6447%" height="15" fill="rgb(238,15,50)" fg:x="101756" fg:w="3554"/><text x="47.3407%" y="895.50"></text></g><g><title>verify_script (734 samples, 0.34%)</title><rect x="48.3958%" y="869" width="0.3397%" height="15" fill="rgb(215,221,48)" fg:x="104576" fg:w="734"/><text x="48.6458%" y="879.50"></text></g><g><title>CTransaction&lt;(anonymous namespace)::TxInputStream&gt; (3,556 samples, 1.65%)</title><rect x="47.0903%" y="933" width="1.6456%" height="15" fill="rgb(236,73,3)" fg:x="101755" fg:w="3556"/><text x="47.3403%" y="943.50"></text></g><g><title>CMutableTransaction&lt;(anonymous namespace)::TxInputStream&gt; (3,555 samples, 1.65%)</title><rect x="47.0907%" y="917" width="1.6452%" height="15" fill="rgb(250,107,11)" fg:x="101756" fg:w="3555"/><text x="47.3407%" y="927.50"></text></g><g><title>Unserialize&lt;(anonymous namespace)::TxInputStream&gt; (3,555 samples, 1.65%)</title><rect x="47.0907%" y="901" width="1.6452%" height="15" fill="rgb(242,39,14)" fg:x="101756" fg:w="3555"/><text x="47.3407%" y="911.50"></text></g><g><title>DefaultFormatter::Ser&lt;CSizeComputer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (47 samples, 0.02%)</title><rect x="48.7470%" y="757" width="0.0218%" height="15" fill="rgb(248,164,37)" fg:x="105335" fg:w="47"/><text x="48.9970%" y="767.50"></text></g><g><title>Serialize&lt;CSizeComputer, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (47 samples, 0.02%)</title><rect x="48.7470%" y="741" width="0.0218%" height="15" fill="rgb(217,60,12)" fg:x="105335" fg:w="47"/><text x="48.9970%" y="751.50"></text></g><g><title>Serialize_impl&lt;CSizeComputer, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (47 samples, 0.02%)</title><rect x="48.7470%" y="725" width="0.0218%" height="15" fill="rgb(240,125,29)" fg:x="105335" fg:w="47"/><text x="48.9970%" y="735.50"></text></g><g><title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::size (40 samples, 0.02%)</title><rect x="48.7503%" y="709" width="0.0185%" height="15" fill="rgb(208,207,28)" fg:x="105342" fg:w="40"/><text x="49.0003%" y="719.50"></text></g><g><title>CSizeComputer::operator&lt;&lt; &lt;std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (59 samples, 0.03%)</title><rect x="48.7429%" y="853" width="0.0273%" height="15" fill="rgb(209,159,27)" fg:x="105326" fg:w="59"/><text x="48.9929%" y="863.50"></text></g><g><title>Serialize&lt;CSizeComputer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (59 samples, 0.03%)</title><rect x="48.7429%" y="837" width="0.0273%" height="15" fill="rgb(251,176,53)" fg:x="105326" fg:w="59"/><text x="48.9929%" y="847.50"></text></g><g><title>Serialize_impl&lt;CSizeComputer, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (59 samples, 0.03%)</title><rect x="48.7429%" y="821" width="0.0273%" height="15" fill="rgb(211,85,7)" fg:x="105326" fg:w="59"/><text x="48.9929%" y="831.50"></text></g><g><title>Serialize&lt;CSizeComputer, Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; const&amp;&gt; &gt; (59 samples, 0.03%)</title><rect x="48.7429%" y="805" width="0.0273%" height="15" fill="rgb(216,64,54)" fg:x="105326" fg:w="59"/><text x="48.9929%" y="815.50"></text></g><g><title>Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; const&amp;&gt;::Serialize&lt;CSizeComputer&gt; (59 samples, 0.03%)</title><rect x="48.7429%" y="789" width="0.0273%" height="15" fill="rgb(217,54,24)" fg:x="105326" fg:w="59"/><text x="48.9929%" y="799.50"></text></g><g><title>VectorFormatter&lt;DefaultFormatter&gt;::Ser&lt;CSizeComputer, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (59 samples, 0.03%)</title><rect x="48.7429%" y="773" width="0.0273%" height="15" fill="rgb(208,206,53)" fg:x="105326" fg:w="59"/><text x="48.9929%" y="783.50"></text></g><g><title>GetSerializeSize&lt;CTransaction&gt; (76 samples, 0.04%)</title><rect x="48.7359%" y="933" width="0.0352%" height="15" fill="rgb(251,74,39)" fg:x="105311" fg:w="76"/><text x="48.9859%" y="943.50"></text></g><g><title>CSizeComputer::operator&lt;&lt; &lt;CTransaction&gt; (76 samples, 0.04%)</title><rect x="48.7359%" y="917" width="0.0352%" height="15" fill="rgb(226,47,5)" fg:x="105311" fg:w="76"/><text x="48.9859%" y="927.50"></text></g><g><title>Serialize&lt;CSizeComputer, CTransaction&gt; (76 samples, 0.04%)</title><rect x="48.7359%" y="901" width="0.0352%" height="15" fill="rgb(234,111,33)" fg:x="105311" fg:w="76"/><text x="48.9859%" y="911.50"></text></g><g><title>CTransaction::Serialize&lt;CSizeComputer&gt; (76 samples, 0.04%)</title><rect x="48.7359%" y="885" width="0.0352%" height="15" fill="rgb(251,14,10)" fg:x="105311" fg:w="76"/><text x="48.9859%" y="895.50"></text></g><g><title>SerializeTransaction&lt;CSizeComputer, CTransaction&gt; (76 samples, 0.04%)</title><rect x="48.7359%" y="869" width="0.0352%" height="15" fill="rgb(232,43,0)" fg:x="105311" fg:w="76"/><text x="48.9859%" y="879.50"></text></g><g><title>CHashWriter::GetHash (34 samples, 0.02%)</title><rect x="48.7822%" y="885" width="0.0157%" height="15" fill="rgb(222,68,43)" fg:x="105411" fg:w="34"/><text x="49.0322%" y="895.50"></text></g><g><title>CHash256::Finalize (34 samples, 0.02%)</title><rect x="48.7822%" y="869" width="0.0157%" height="15" fill="rgb(217,24,23)" fg:x="105411" fg:w="34"/><text x="49.0322%" y="879.50"></text></g><g><title>CSHA256::Finalize (34 samples, 0.02%)</title><rect x="48.7822%" y="853" width="0.0157%" height="15" fill="rgb(229,209,14)" fg:x="105411" fg:w="34"/><text x="49.0322%" y="863.50"></text></g><g><title>CSHA256::Write (34 samples, 0.02%)</title><rect x="48.7822%" y="837" width="0.0157%" height="15" fill="rgb(250,149,48)" fg:x="105411" fg:w="34"/><text x="49.0322%" y="847.50"></text></g><g><title>GetOutputsHash&lt;CTransaction&gt; (58 samples, 0.03%)</title><rect x="48.7822%" y="901" width="0.0268%" height="15" fill="rgb(210,120,37)" fg:x="105411" fg:w="58"/><text x="49.0322%" y="911.50"></text></g><g><title>CHashWriter::operator&lt;&lt; &lt;CTxOut&gt; (24 samples, 0.01%)</title><rect x="48.7979%" y="885" width="0.0111%" height="15" fill="rgb(210,21,8)" fg:x="105445" fg:w="24"/><text x="49.0479%" y="895.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxOut&gt; (24 samples, 0.01%)</title><rect x="48.7979%" y="869" width="0.0111%" height="15" fill="rgb(243,145,7)" fg:x="105445" fg:w="24"/><text x="49.0479%" y="879.50"></text></g><g><title>CTxOut::Serialize&lt;CHashWriter&gt; (24 samples, 0.01%)</title><rect x="48.7979%" y="853" width="0.0111%" height="15" fill="rgb(238,178,32)" fg:x="105445" fg:w="24"/><text x="49.0479%" y="863.50"></text></g><g><title>CTxOut::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (24 samples, 0.01%)</title><rect x="48.7979%" y="837" width="0.0111%" height="15" fill="rgb(222,4,10)" fg:x="105445" fg:w="24"/><text x="49.0479%" y="847.50"></text></g><g><title>CSHA256::Write (22 samples, 0.01%)</title><rect x="48.8090%" y="837" width="0.0102%" height="15" fill="rgb(239,7,37)" fg:x="105469" fg:w="22"/><text x="49.0590%" y="847.50"></text></g><g><title>CHashWriter::GetHash (23 samples, 0.01%)</title><rect x="48.8090%" y="885" width="0.0106%" height="15" fill="rgb(215,31,37)" fg:x="105469" fg:w="23"/><text x="49.0590%" y="895.50"></text></g><g><title>CHash256::Finalize (23 samples, 0.01%)</title><rect x="48.8090%" y="869" width="0.0106%" height="15" fill="rgb(224,83,33)" fg:x="105469" fg:w="23"/><text x="49.0590%" y="879.50"></text></g><g><title>CSHA256::Finalize (23 samples, 0.01%)</title><rect x="48.8090%" y="853" width="0.0106%" height="15" fill="rgb(239,55,3)" fg:x="105469" fg:w="23"/><text x="49.0590%" y="863.50"></text></g><g><title>Ch (28 samples, 0.01%)</title><rect x="49.1385%" y="693" width="0.0130%" height="15" fill="rgb(247,92,11)" fg:x="106181" fg:w="28"/><text x="49.3885%" y="703.50"></text></g><g><title>Maj (51 samples, 0.02%)</title><rect x="49.1515%" y="693" width="0.0236%" height="15" fill="rgb(239,200,7)" fg:x="106209" fg:w="51"/><text x="49.4015%" y="703.50"></text></g><g><title>Sigma0 (91 samples, 0.04%)</title><rect x="49.1751%" y="693" width="0.0421%" height="15" fill="rgb(227,115,8)" fg:x="106260" fg:w="91"/><text x="49.4251%" y="703.50"></text></g><g><title>Sigma1 (80 samples, 0.04%)</title><rect x="49.2172%" y="693" width="0.0370%" height="15" fill="rgb(215,189,27)" fg:x="106351" fg:w="80"/><text x="49.4672%" y="703.50"></text></g><g><title>Round (567 samples, 0.26%)</title><rect x="48.9923%" y="709" width="0.2624%" height="15" fill="rgb(251,216,39)" fg:x="105865" fg:w="567"/><text x="49.2423%" y="719.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="49.2612%" y="709" width="0.0102%" height="15" fill="rgb(207,29,47)" fg:x="106446" fg:w="22"/><text x="49.5112%" y="719.50"></text></g><g><title>sigma0 (140 samples, 0.06%)</title><rect x="49.2741%" y="709" width="0.0648%" height="15" fill="rgb(210,71,34)" fg:x="106474" fg:w="140"/><text x="49.5241%" y="719.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, uint256&gt; (1,223 samples, 0.57%)</title><rect x="48.8197%" y="821" width="0.5660%" height="15" fill="rgb(253,217,51)" fg:x="105492" fg:w="1223"/><text x="49.0697%" y="831.50"></text></g><g><title>SerializeMany&lt;CHashWriter, uint256&gt; (1,223 samples, 0.57%)</title><rect x="48.8197%" y="805" width="0.5660%" height="15" fill="rgb(222,117,46)" fg:x="105492" fg:w="1223"/><text x="49.0697%" y="815.50"></text></g><g><title>Serialize&lt;CHashWriter, uint256&gt; (1,223 samples, 0.57%)</title><rect x="48.8197%" y="789" width="0.5660%" height="15" fill="rgb(226,132,6)" fg:x="105492" fg:w="1223"/><text x="49.0697%" y="799.50"></text></g><g><title>base_blob&lt;256u&gt;::Serialize&lt;CHashWriter&gt; (1,223 samples, 0.57%)</title><rect x="48.8197%" y="773" width="0.5660%" height="15" fill="rgb(254,145,51)" fg:x="105492" fg:w="1223"/><text x="49.0697%" y="783.50"></text></g><g><title>CHashWriter::write (1,223 samples, 0.57%)</title><rect x="48.8197%" y="757" width="0.5660%" height="15" fill="rgb(231,199,27)" fg:x="105492" fg:w="1223"/><text x="49.0697%" y="767.50"></text></g><g><title>CHash256::Write (1,223 samples, 0.57%)</title><rect x="48.8197%" y="741" width="0.5660%" height="15" fill="rgb(245,158,14)" fg:x="105492" fg:w="1223"/><text x="49.0697%" y="751.50"></text></g><g><title>CSHA256::Write (1,223 samples, 0.57%)</title><rect x="48.8197%" y="725" width="0.5660%" height="15" fill="rgb(240,113,14)" fg:x="105492" fg:w="1223"/><text x="49.0697%" y="735.50"></text></g><g><title>sigma1 (101 samples, 0.05%)</title><rect x="49.3389%" y="709" width="0.0467%" height="15" fill="rgb(210,20,13)" fg:x="106614" fg:w="101"/><text x="49.5889%" y="719.50"></text></g><g><title>Round (63 samples, 0.03%)</title><rect x="49.4190%" y="709" width="0.0292%" height="15" fill="rgb(241,144,13)" fg:x="106787" fg:w="63"/><text x="49.6690%" y="719.50"></text></g><g><title>sigma0 (24 samples, 0.01%)</title><rect x="49.4592%" y="709" width="0.0111%" height="15" fill="rgb(235,43,34)" fg:x="106874" fg:w="24"/><text x="49.7092%" y="719.50"></text></g><g><title>GetPrevoutHash&lt;CTransaction&gt; (1,445 samples, 0.67%)</title><rect x="48.8090%" y="901" width="0.6687%" height="15" fill="rgb(208,36,20)" fg:x="105469" fg:w="1445"/><text x="49.0590%" y="911.50"></text></g><g><title>CHashWriter::operator&lt;&lt; &lt;COutPoint&gt; (1,422 samples, 0.66%)</title><rect x="48.8197%" y="885" width="0.6581%" height="15" fill="rgb(239,204,10)" fg:x="105492" fg:w="1422"/><text x="49.0697%" y="895.50"></text></g><g><title>Serialize&lt;CHashWriter, COutPoint&gt; (1,422 samples, 0.66%)</title><rect x="48.8197%" y="869" width="0.6581%" height="15" fill="rgb(217,84,43)" fg:x="105492" fg:w="1422"/><text x="49.0697%" y="879.50"></text></g><g><title>COutPoint::Serialize&lt;CHashWriter&gt; (1,422 samples, 0.66%)</title><rect x="48.8197%" y="853" width="0.6581%" height="15" fill="rgb(241,170,50)" fg:x="105492" fg:w="1422"/><text x="49.0697%" y="863.50"></text></g><g><title>COutPoint::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (1,422 samples, 0.66%)</title><rect x="48.8197%" y="837" width="0.6581%" height="15" fill="rgb(226,205,29)" fg:x="105492" fg:w="1422"/><text x="49.0697%" y="847.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (199 samples, 0.09%)</title><rect x="49.3857%" y="821" width="0.0921%" height="15" fill="rgb(233,113,1)" fg:x="106715" fg:w="199"/><text x="49.6357%" y="831.50"></text></g><g><title>SerializeMany&lt;CHashWriter, unsigned int&gt; (199 samples, 0.09%)</title><rect x="49.3857%" y="805" width="0.0921%" height="15" fill="rgb(253,98,13)" fg:x="106715" fg:w="199"/><text x="49.6357%" y="815.50"></text></g><g><title>Serialize&lt;CHashWriter&gt; (199 samples, 0.09%)</title><rect x="49.3857%" y="789" width="0.0921%" height="15" fill="rgb(211,115,12)" fg:x="106715" fg:w="199"/><text x="49.6357%" y="799.50"></text></g><g><title>ser_writedata32&lt;CHashWriter&gt; (199 samples, 0.09%)</title><rect x="49.3857%" y="773" width="0.0921%" height="15" fill="rgb(208,12,16)" fg:x="106715" fg:w="199"/><text x="49.6357%" y="783.50"></text></g><g><title>CHashWriter::write (199 samples, 0.09%)</title><rect x="49.3857%" y="757" width="0.0921%" height="15" fill="rgb(237,193,54)" fg:x="106715" fg:w="199"/><text x="49.6357%" y="767.50"></text></g><g><title>CHash256::Write (199 samples, 0.09%)</title><rect x="49.3857%" y="741" width="0.0921%" height="15" fill="rgb(243,22,42)" fg:x="106715" fg:w="199"/><text x="49.6357%" y="751.50"></text></g><g><title>CSHA256::Write (195 samples, 0.09%)</title><rect x="49.3875%" y="725" width="0.0902%" height="15" fill="rgb(233,151,36)" fg:x="106719" fg:w="195"/><text x="49.6375%" y="735.50"></text></g><g><title>CSHA256::Write (29 samples, 0.01%)</title><rect x="49.4778%" y="837" width="0.0134%" height="15" fill="rgb(237,57,45)" fg:x="106914" fg:w="29"/><text x="49.7278%" y="847.50"></text></g><g><title>CSHA256::Finalize (30 samples, 0.01%)</title><rect x="49.4778%" y="853" width="0.0139%" height="15" fill="rgb(221,88,17)" fg:x="106914" fg:w="30"/><text x="49.7278%" y="863.50"></text></g><g><title>CHashWriter::GetHash (33 samples, 0.02%)</title><rect x="49.4778%" y="885" width="0.0153%" height="15" fill="rgb(230,79,15)" fg:x="106914" fg:w="33"/><text x="49.7278%" y="895.50"></text></g><g><title>CHash256::Finalize (33 samples, 0.02%)</title><rect x="49.4778%" y="869" width="0.0153%" height="15" fill="rgb(213,57,13)" fg:x="106914" fg:w="33"/><text x="49.7278%" y="879.50"></text></g><g><title>Round (87 samples, 0.04%)</title><rect x="49.5300%" y="789" width="0.0403%" height="15" fill="rgb(222,116,39)" fg:x="107027" fg:w="87"/><text x="49.7800%" y="799.50"></text></g><g><title>PrecomputedTransactionData::PrecomputedTransactionData&lt;CTransaction&gt; (1,771 samples, 0.82%)</title><rect x="48.7725%" y="917" width="0.8196%" height="15" fill="rgb(245,107,2)" fg:x="105390" fg:w="1771"/><text x="49.0225%" y="927.50"></text></g><g><title>GetSequenceHash&lt;CTransaction&gt; (247 samples, 0.11%)</title><rect x="49.4778%" y="901" width="0.1143%" height="15" fill="rgb(238,1,10)" fg:x="106914" fg:w="247"/><text x="49.7278%" y="911.50"></text></g><g><title>CHashWriter::operator&lt;&lt; &lt;unsigned int&gt; (214 samples, 0.10%)</title><rect x="49.4930%" y="885" width="0.0990%" height="15" fill="rgb(249,4,48)" fg:x="106947" fg:w="214"/><text x="49.7430%" y="895.50"></text></g><g><title>Serialize&lt;CHashWriter&gt; (214 samples, 0.10%)</title><rect x="49.4930%" y="869" width="0.0990%" height="15" fill="rgb(223,151,18)" fg:x="106947" fg:w="214"/><text x="49.7430%" y="879.50"></text></g><g><title>ser_writedata32&lt;CHashWriter&gt; (214 samples, 0.10%)</title><rect x="49.4930%" y="853" width="0.0990%" height="15" fill="rgb(227,65,43)" fg:x="106947" fg:w="214"/><text x="49.7430%" y="863.50"></text></g><g><title>CHashWriter::write (214 samples, 0.10%)</title><rect x="49.4930%" y="837" width="0.0990%" height="15" fill="rgb(218,40,45)" fg:x="106947" fg:w="214"/><text x="49.7430%" y="847.50"></text></g><g><title>CHash256::Write (214 samples, 0.10%)</title><rect x="49.4930%" y="821" width="0.0990%" height="15" fill="rgb(252,121,31)" fg:x="106947" fg:w="214"/><text x="49.7430%" y="831.50"></text></g><g><title>CSHA256::Write (198 samples, 0.09%)</title><rect x="49.5004%" y="805" width="0.0916%" height="15" fill="rgb(219,158,43)" fg:x="106963" fg:w="198"/><text x="49.7504%" y="815.50"></text></g><g><title>PrecomputedTransactionData::PrecomputedTransactionData&lt;CTransaction&gt; (1,775 samples, 0.82%)</title><rect x="48.7711%" y="933" width="0.8214%" height="15" fill="rgb(231,162,42)" fg:x="105387" fg:w="1775"/><text x="49.0211%" y="943.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (26 samples, 0.01%)</title><rect x="49.5981%" y="789" width="0.0120%" height="15" fill="rgb(217,179,25)" fg:x="107174" fg:w="26"/><text x="49.8481%" y="799.50"></text></g><g><title>secp256k1_gej_double_var (26 samples, 0.01%)</title><rect x="49.5981%" y="773" width="0.0120%" height="15" fill="rgb(206,212,31)" fg:x="107174" fg:w="26"/><text x="49.8481%" y="783.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (30 samples, 0.01%)</title><rect x="49.5981%" y="805" width="0.0139%" height="15" fill="rgb(235,144,12)" fg:x="107174" fg:w="30"/><text x="49.8481%" y="815.50"></text></g><g><title>GenericTransactionSignatureChecker&lt;CTransaction&gt;::CheckSig (37 samples, 0.02%)</title><rect x="49.5971%" y="901" width="0.0171%" height="15" fill="rgb(213,51,10)" fg:x="107172" fg:w="37"/><text x="49.8471%" y="911.50"></text></g><g><title>GenericTransactionSignatureChecker&lt;CTransaction&gt;::VerifySignature (37 samples, 0.02%)</title><rect x="49.5971%" y="885" width="0.0171%" height="15" fill="rgb(231,145,14)" fg:x="107172" fg:w="37"/><text x="49.8471%" y="895.50"></text></g><g><title>CPubKey::Verify (37 samples, 0.02%)</title><rect x="49.5971%" y="869" width="0.0171%" height="15" fill="rgb(235,15,28)" fg:x="107172" fg:w="37"/><text x="49.8471%" y="879.50"></text></g><g><title>secp256k1_ecdsa_verify (35 samples, 0.02%)</title><rect x="49.5981%" y="853" width="0.0162%" height="15" fill="rgb(237,206,10)" fg:x="107174" fg:w="35"/><text x="49.8481%" y="863.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (35 samples, 0.02%)</title><rect x="49.5981%" y="837" width="0.0162%" height="15" fill="rgb(236,227,27)" fg:x="107174" fg:w="35"/><text x="49.8481%" y="847.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (35 samples, 0.02%)</title><rect x="49.5981%" y="821" width="0.0162%" height="15" fill="rgb(246,83,35)" fg:x="107174" fg:w="35"/><text x="49.8481%" y="831.50"></text></g><g><title>EvalScript (64 samples, 0.03%)</title><rect x="49.5934%" y="917" width="0.0296%" height="15" fill="rgb(220,136,24)" fg:x="107164" fg:w="64"/><text x="49.8434%" y="927.50"></text></g><g><title>secp256k1_fe_sqr_inner (104 samples, 0.05%)</title><rect x="49.6369%" y="725" width="0.0481%" height="15" fill="rgb(217,3,25)" fg:x="107258" fg:w="104"/><text x="49.8869%" y="735.50"></text></g><g><title>secp256k1_fe_sqr (117 samples, 0.05%)</title><rect x="49.6369%" y="741" width="0.0541%" height="15" fill="rgb(239,24,14)" fg:x="107258" fg:w="117"/><text x="49.8869%" y="751.50"></text></g><g><title>secp256k1_ge_set_xo_var (133 samples, 0.06%)</title><rect x="49.6356%" y="789" width="0.0615%" height="15" fill="rgb(244,16,53)" fg:x="107255" fg:w="133"/><text x="49.8856%" y="799.50"></text></g><g><title>secp256k1_ge_set_xquad (133 samples, 0.06%)</title><rect x="49.6356%" y="773" width="0.0615%" height="15" fill="rgb(208,175,44)" fg:x="107255" fg:w="133"/><text x="49.8856%" y="783.50"></text></g><g><title>secp256k1_fe_sqrt (132 samples, 0.06%)</title><rect x="49.6360%" y="757" width="0.0611%" height="15" fill="rgb(252,18,48)" fg:x="107256" fg:w="132"/><text x="49.8860%" y="767.50"></text></g><g><title>secp256k1_ec_pubkey_parse (136 samples, 0.06%)</title><rect x="49.6356%" y="805" width="0.0629%" height="15" fill="rgb(234,199,32)" fg:x="107255" fg:w="136"/><text x="49.8856%" y="815.50"></text></g><g><title>secp256k1_ec_pubkey_parse (137 samples, 0.06%)</title><rect x="49.6356%" y="821" width="0.0634%" height="15" fill="rgb(225,77,54)" fg:x="107255" fg:w="137"/><text x="49.8856%" y="831.50"></text></g><g><title>secp256k1_fe_mul_inner (37 samples, 0.02%)</title><rect x="49.7235%" y="709" width="0.0171%" height="15" fill="rgb(225,42,25)" fg:x="107445" fg:w="37"/><text x="49.9735%" y="719.50"></text></g><g><title>secp256k1_gej_add_ge_var (63 samples, 0.03%)</title><rect x="49.7175%" y="741" width="0.0292%" height="15" fill="rgb(242,227,46)" fg:x="107432" fg:w="63"/><text x="49.9675%" y="751.50"></text></g><g><title>secp256k1_gej_add_ge_var (53 samples, 0.02%)</title><rect x="49.7221%" y="725" width="0.0245%" height="15" fill="rgb(246,197,35)" fg:x="107442" fg:w="53"/><text x="49.9721%" y="735.50"></text></g><g><title>secp256k1_ecmult_odd_multiples_table (74 samples, 0.03%)</title><rect x="49.7128%" y="757" width="0.0342%" height="15" fill="rgb(215,159,26)" fg:x="107422" fg:w="74"/><text x="49.9628%" y="767.50"></text></g><g><title>secp256k1_fe_mul_int (24 samples, 0.01%)</title><rect x="49.7573%" y="725" width="0.0111%" height="15" fill="rgb(212,194,50)" fg:x="107518" fg:w="24"/><text x="50.0073%" y="735.50"></text></g><g><title>secp256k1_fe_sqr_inner (265 samples, 0.12%)</title><rect x="49.7776%" y="709" width="0.1226%" height="15" fill="rgb(246,132,1)" fg:x="107562" fg:w="265"/><text x="50.0276%" y="719.50"></text></g><g><title>secp256k1_fe_sqr (287 samples, 0.13%)</title><rect x="49.7693%" y="725" width="0.1328%" height="15" fill="rgb(217,71,7)" fg:x="107544" fg:w="287"/><text x="50.0193%" y="735.50"></text></g><g><title>secp256k1_fe_mul_inner (523 samples, 0.24%)</title><rect x="49.9322%" y="709" width="0.2420%" height="15" fill="rgb(252,59,32)" fg:x="107896" fg:w="523"/><text x="50.1822%" y="719.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (1,180 samples, 0.55%)</title><rect x="49.7471%" y="757" width="0.5461%" height="15" fill="rgb(253,204,25)" fg:x="107496" fg:w="1180"/><text x="49.9971%" y="767.50"></text></g><g><title>secp256k1_gej_double_var (1,178 samples, 0.55%)</title><rect x="49.7480%" y="741" width="0.5452%" height="15" fill="rgb(232,21,16)" fg:x="107498" fg:w="1178"/><text x="49.9980%" y="751.50"></text></g><g><title>secp256k1_gej_double_var (845 samples, 0.39%)</title><rect x="49.9021%" y="725" width="0.3910%" height="15" fill="rgb(248,90,29)" fg:x="107831" fg:w="845"/><text x="50.1521%" y="735.50"></text></g><g><title>secp256k1_fe_sqr_inner (257 samples, 0.12%)</title><rect x="50.1742%" y="709" width="0.1189%" height="15" fill="rgb(249,223,7)" fg:x="108419" fg:w="257"/><text x="50.4242%" y="719.50"></text></g><g><title>secp256k1_ecmult_wnaf (26 samples, 0.01%)</title><rect x="50.2932%" y="757" width="0.0120%" height="15" fill="rgb(231,119,42)" fg:x="108676" fg:w="26"/><text x="50.5432%" y="767.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (40 samples, 0.02%)</title><rect x="50.3057%" y="741" width="0.0185%" height="15" fill="rgb(215,41,35)" fg:x="108703" fg:w="40"/><text x="50.5557%" y="751.50"></text></g><g><title>secp256k1_ge_from_storage (44 samples, 0.02%)</title><rect x="50.3057%" y="757" width="0.0204%" height="15" fill="rgb(220,44,45)" fg:x="108703" fg:w="44"/><text x="50.5557%" y="767.50"></text></g><g><title>secp256k1_fe_mul_inner (234 samples, 0.11%)</title><rect x="50.3529%" y="725" width="0.1083%" height="15" fill="rgb(253,197,36)" fg:x="108805" fg:w="234"/><text x="50.6029%" y="735.50"></text></g><g><title>secp256k1_gej_add_ge_var (350 samples, 0.16%)</title><rect x="50.3348%" y="757" width="0.1620%" height="15" fill="rgb(245,225,54)" fg:x="108766" fg:w="350"/><text x="50.5848%" y="767.50"></text></g><g><title>secp256k1_gej_add_ge_var (328 samples, 0.15%)</title><rect x="50.3450%" y="741" width="0.1518%" height="15" fill="rgb(239,94,37)" fg:x="108788" fg:w="328"/><text x="50.5950%" y="751.50"></text></g><g><title>secp256k1_fe_sqr_inner (77 samples, 0.04%)</title><rect x="50.4612%" y="725" width="0.0356%" height="15" fill="rgb(242,217,10)" fg:x="109039" fg:w="77"/><text x="50.7112%" y="735.50"></text></g><g><title>secp256k1_fe_mul_inner (90 samples, 0.04%)</title><rect x="50.4991%" y="725" width="0.0417%" height="15" fill="rgb(250,193,7)" fg:x="109121" fg:w="90"/><text x="50.7491%" y="735.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (121 samples, 0.06%)</title><rect x="50.4968%" y="741" width="0.0560%" height="15" fill="rgb(230,104,19)" fg:x="109116" fg:w="121"/><text x="50.7468%" y="751.50"></text></g><g><title>secp256k1_fe_sqr_inner (26 samples, 0.01%)</title><rect x="50.5408%" y="725" width="0.0120%" height="15" fill="rgb(230,181,4)" fg:x="109211" fg:w="26"/><text x="50.7908%" y="735.50"></text></g><g><title>secp256k1_gej_add_zinv_var (130 samples, 0.06%)</title><rect x="50.4968%" y="757" width="0.0602%" height="15" fill="rgb(216,219,49)" fg:x="109116" fg:w="130"/><text x="50.7468%" y="767.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (1,854 samples, 0.86%)</title><rect x="49.6994%" y="773" width="0.8580%" height="15" fill="rgb(254,144,0)" fg:x="107393" fg:w="1854"/><text x="49.9494%" y="783.50"></text></g><g><title>secp256k1_scalar_reduce_512 (169 samples, 0.08%)</title><rect x="50.5625%" y="741" width="0.0782%" height="15" fill="rgb(205,209,38)" fg:x="109258" fg:w="169"/><text x="50.8125%" y="751.50"></text></g><g><title>secp256k1_scalar_inverse (211 samples, 0.10%)</title><rect x="50.5579%" y="757" width="0.0976%" height="15" fill="rgb(240,21,42)" fg:x="109248" fg:w="211"/><text x="50.8079%" y="767.50"></text></g><g><title>secp256k1_scalar_sqr_512 (32 samples, 0.01%)</title><rect x="50.6407%" y="741" width="0.0148%" height="15" fill="rgb(241,132,3)" fg:x="109427" fg:w="32"/><text x="50.8907%" y="751.50"></text></g><g><title>secp256k1_scalar_reduce_512 (29 samples, 0.01%)</title><rect x="50.6611%" y="741" width="0.0134%" height="15" fill="rgb(225,14,2)" fg:x="109471" fg:w="29"/><text x="50.9111%" y="751.50"></text></g><g><title>secp256k1_scalar_inverse (315 samples, 0.15%)</title><rect x="50.5574%" y="773" width="0.1458%" height="15" fill="rgb(210,141,35)" fg:x="109247" fg:w="315"/><text x="50.8074%" y="783.50"></text></g><g><title>secp256k1_scalar_sqr (93 samples, 0.04%)</title><rect x="50.6602%" y="757" width="0.0430%" height="15" fill="rgb(251,14,44)" fg:x="109469" fg:w="93"/><text x="50.9102%" y="767.50"></text></g><g><title>secp256k1_scalar_sqr_512 (62 samples, 0.03%)</title><rect x="50.6745%" y="741" width="0.0287%" height="15" fill="rgb(247,48,18)" fg:x="109500" fg:w="62"/><text x="50.9245%" y="751.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (2,171 samples, 1.00%)</title><rect x="49.6994%" y="789" width="1.0047%" height="15" fill="rgb(225,0,40)" fg:x="107393" fg:w="2171"/><text x="49.9494%" y="799.50"></text></g><g><title>GenericTransactionSignatureChecker&lt;CTransaction&gt;::VerifySignature (2,316 samples, 1.07%)</title><rect x="49.6337%" y="853" width="1.0718%" height="15" fill="rgb(221,31,33)" fg:x="107251" fg:w="2316"/><text x="49.8837%" y="863.50"></text></g><g><title>CPubKey::Verify (2,316 samples, 1.07%)</title><rect x="49.6337%" y="837" width="1.0718%" height="15" fill="rgb(237,42,40)" fg:x="107251" fg:w="2316"/><text x="49.8837%" y="847.50"></text></g><g><title>secp256k1_ecdsa_verify (2,175 samples, 1.01%)</title><rect x="49.6990%" y="821" width="1.0065%" height="15" fill="rgb(233,51,29)" fg:x="107392" fg:w="2175"/><text x="49.9490%" y="831.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (2,175 samples, 1.01%)</title><rect x="49.6990%" y="805" width="1.0065%" height="15" fill="rgb(226,58,20)" fg:x="107392" fg:w="2175"/><text x="49.9490%" y="815.50"></text></g><g><title>CSHA256::Finalize (22 samples, 0.01%)</title><rect x="50.7060%" y="805" width="0.0102%" height="15" fill="rgb(208,98,7)" fg:x="109568" fg:w="22"/><text x="50.9560%" y="815.50"></text></g><g><title>CSHA256::Write (22 samples, 0.01%)</title><rect x="50.7060%" y="789" width="0.0102%" height="15" fill="rgb(228,143,44)" fg:x="109568" fg:w="22"/><text x="50.9560%" y="799.50"></text></g><g><title>CHashWriter::GetHash (23 samples, 0.01%)</title><rect x="50.7060%" y="837" width="0.0106%" height="15" fill="rgb(246,55,38)" fg:x="109568" fg:w="23"/><text x="50.9560%" y="847.50"></text></g><g><title>CHash256::Finalize (23 samples, 0.01%)</title><rect x="50.7060%" y="821" width="0.0106%" height="15" fill="rgb(247,87,16)" fg:x="109568" fg:w="23"/><text x="50.9560%" y="831.50"></text></g><g><title>SignatureHash&lt;CTransaction&gt; (43 samples, 0.02%)</title><rect x="50.7055%" y="853" width="0.0199%" height="15" fill="rgb(234,129,42)" fg:x="109567" fg:w="43"/><text x="50.9555%" y="863.50"></text></g><g><title>GenericTransactionSignatureChecker&lt;CTransaction&gt;::CheckSig (2,361 samples, 1.09%)</title><rect x="49.6332%" y="869" width="1.0926%" height="15" fill="rgb(220,82,16)" fg:x="107250" fg:w="2361"/><text x="49.8832%" y="879.50"></text></g><g><title>EvalScript (2,393 samples, 1.11%)</title><rect x="49.6263%" y="885" width="1.1074%" height="15" fill="rgb(211,88,4)" fg:x="107235" fg:w="2393"/><text x="49.8763%" y="895.50"></text></g><g><title>VerifyWitnessProgram (2,406 samples, 1.11%)</title><rect x="49.6231%" y="917" width="1.1135%" height="15" fill="rgb(248,151,21)" fg:x="107228" fg:w="2406"/><text x="49.8731%" y="927.50"></text></g><g><title>ExecuteWitnessScript (2,399 samples, 1.11%)</title><rect x="49.6263%" y="901" width="1.1102%" height="15" fill="rgb(238,163,6)" fg:x="107235" fg:w="2399"/><text x="49.8763%" y="911.50"></text></g><g><title>VerifyScript (2,483 samples, 1.15%)</title><rect x="49.5925%" y="933" width="1.1491%" height="15" fill="rgb(209,183,11)" fg:x="107162" fg:w="2483"/><text x="49.8425%" y="943.50"></text></g><g><title>CHashWriter::GetHash (40 samples, 0.02%)</title><rect x="50.7435%" y="869" width="0.0185%" height="15" fill="rgb(219,37,20)" fg:x="109649" fg:w="40"/><text x="50.9935%" y="879.50"></text></g><g><title>CHash256::Finalize (40 samples, 0.02%)</title><rect x="50.7435%" y="853" width="0.0185%" height="15" fill="rgb(210,158,4)" fg:x="109649" fg:w="40"/><text x="50.9935%" y="863.50"></text></g><g><title>CSHA256::Finalize (40 samples, 0.02%)</title><rect x="50.7435%" y="837" width="0.0185%" height="15" fill="rgb(221,167,53)" fg:x="109649" fg:w="40"/><text x="50.9935%" y="847.50"></text></g><g><title>CSHA256::Write (40 samples, 0.02%)</title><rect x="50.7435%" y="821" width="0.0185%" height="15" fill="rgb(237,151,45)" fg:x="109649" fg:w="40"/><text x="50.9935%" y="831.50"></text></g><g><title>Ch (39 samples, 0.02%)</title><rect x="51.1299%" y="437" width="0.0180%" height="15" fill="rgb(231,39,3)" fg:x="110484" fg:w="39"/><text x="51.3799%" y="447.50"></text></g><g><title>Maj (58 samples, 0.03%)</title><rect x="51.1479%" y="437" width="0.0268%" height="15" fill="rgb(212,167,28)" fg:x="110523" fg:w="58"/><text x="51.3979%" y="447.50"></text></g><g><title>Sigma0 (109 samples, 0.05%)</title><rect x="51.1748%" y="437" width="0.0504%" height="15" fill="rgb(232,178,8)" fg:x="110581" fg:w="109"/><text x="51.4248%" y="447.50"></text></g><g><title>Sigma1 (81 samples, 0.04%)</title><rect x="51.2252%" y="437" width="0.0375%" height="15" fill="rgb(225,151,20)" fg:x="110690" fg:w="81"/><text x="51.4752%" y="447.50"></text></g><g><title>Round (626 samples, 0.29%)</title><rect x="50.9744%" y="453" width="0.2897%" height="15" fill="rgb(238,3,37)" fg:x="110148" fg:w="626"/><text x="51.2244%" y="463.50"></text></g><g><title>Transform (24 samples, 0.01%)</title><rect x="51.2641%" y="453" width="0.0111%" height="15" fill="rgb(251,147,42)" fg:x="110774" fg:w="24"/><text x="51.5141%" y="463.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="51.2752%" y="453" width="0.0130%" height="15" fill="rgb(208,173,10)" fg:x="110798" fg:w="28"/><text x="51.5252%" y="463.50"></text></g><g><title>sigma0 (147 samples, 0.07%)</title><rect x="51.2914%" y="453" width="0.0680%" height="15" fill="rgb(246,225,4)" fg:x="110833" fg:w="147"/><text x="51.5414%" y="463.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, uint256&gt; (1,396 samples, 0.65%)</title><rect x="50.7675%" y="565" width="0.6460%" height="15" fill="rgb(248,102,6)" fg:x="109701" fg:w="1396"/><text x="51.0175%" y="575.50"></text></g><g><title>SerializeMany&lt;CHashWriter, uint256&gt; (1,396 samples, 0.65%)</title><rect x="50.7675%" y="549" width="0.6460%" height="15" fill="rgb(232,6,21)" fg:x="109701" fg:w="1396"/><text x="51.0175%" y="559.50"></text></g><g><title>Serialize&lt;CHashWriter, uint256&gt; (1,396 samples, 0.65%)</title><rect x="50.7675%" y="533" width="0.6460%" height="15" fill="rgb(221,179,22)" fg:x="109701" fg:w="1396"/><text x="51.0175%" y="543.50"></text></g><g><title>base_blob&lt;256u&gt;::Serialize&lt;CHashWriter&gt; (1,396 samples, 0.65%)</title><rect x="50.7675%" y="517" width="0.6460%" height="15" fill="rgb(252,50,20)" fg:x="109701" fg:w="1396"/><text x="51.0175%" y="527.50"></text></g><g><title>CHashWriter::write (1,396 samples, 0.65%)</title><rect x="50.7675%" y="501" width="0.6460%" height="15" fill="rgb(222,56,38)" fg:x="109701" fg:w="1396"/><text x="51.0175%" y="511.50"></text></g><g><title>CHash256::Write (1,396 samples, 0.65%)</title><rect x="50.7675%" y="485" width="0.6460%" height="15" fill="rgb(206,193,29)" fg:x="109701" fg:w="1396"/><text x="51.0175%" y="495.50"></text></g><g><title>CSHA256::Write (1,396 samples, 0.65%)</title><rect x="50.7675%" y="469" width="0.6460%" height="15" fill="rgb(239,192,45)" fg:x="109701" fg:w="1396"/><text x="51.0175%" y="479.50"></text></g><g><title>sigma1 (117 samples, 0.05%)</title><rect x="51.3594%" y="453" width="0.0541%" height="15" fill="rgb(254,18,36)" fg:x="110980" fg:w="117"/><text x="51.6094%" y="463.50"></text></g><g><title>Round (61 samples, 0.03%)</title><rect x="51.4524%" y="453" width="0.0282%" height="15" fill="rgb(221,127,11)" fg:x="111181" fg:w="61"/><text x="51.7024%" y="463.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, COutPoint&gt; (1,592 samples, 0.74%)</title><rect x="50.7675%" y="645" width="0.7367%" height="15" fill="rgb(234,146,35)" fg:x="109701" fg:w="1592"/><text x="51.0175%" y="655.50"></text></g><g><title>SerializeMany&lt;CHashWriter, COutPoint&gt; (1,592 samples, 0.74%)</title><rect x="50.7675%" y="629" width="0.7367%" height="15" fill="rgb(254,201,37)" fg:x="109701" fg:w="1592"/><text x="51.0175%" y="639.50"></text></g><g><title>Serialize&lt;CHashWriter, COutPoint&gt; (1,592 samples, 0.74%)</title><rect x="50.7675%" y="613" width="0.7367%" height="15" fill="rgb(211,202,23)" fg:x="109701" fg:w="1592"/><text x="51.0175%" y="623.50"></text></g><g><title>COutPoint::Serialize&lt;CHashWriter&gt; (1,592 samples, 0.74%)</title><rect x="50.7675%" y="597" width="0.7367%" height="15" fill="rgb(237,91,2)" fg:x="109701" fg:w="1592"/><text x="51.0175%" y="607.50"></text></g><g><title>COutPoint::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (1,592 samples, 0.74%)</title><rect x="50.7675%" y="581" width="0.7367%" height="15" fill="rgb(226,228,36)" fg:x="109701" fg:w="1592"/><text x="51.0175%" y="591.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (196 samples, 0.09%)</title><rect x="51.4136%" y="565" width="0.0907%" height="15" fill="rgb(213,63,50)" fg:x="111097" fg:w="196"/><text x="51.6636%" y="575.50"></text></g><g><title>SerializeMany&lt;CHashWriter, unsigned int&gt; (196 samples, 0.09%)</title><rect x="51.4136%" y="549" width="0.0907%" height="15" fill="rgb(235,194,19)" fg:x="111097" fg:w="196"/><text x="51.6636%" y="559.50"></text></g><g><title>Serialize&lt;CHashWriter&gt; (196 samples, 0.09%)</title><rect x="51.4136%" y="533" width="0.0907%" height="15" fill="rgb(207,204,18)" fg:x="111097" fg:w="196"/><text x="51.6636%" y="543.50"></text></g><g><title>ser_writedata32&lt;CHashWriter&gt; (196 samples, 0.09%)</title><rect x="51.4136%" y="517" width="0.0907%" height="15" fill="rgb(248,8,7)" fg:x="111097" fg:w="196"/><text x="51.6636%" y="527.50"></text></g><g><title>CHashWriter::write (196 samples, 0.09%)</title><rect x="51.4136%" y="501" width="0.0907%" height="15" fill="rgb(223,145,47)" fg:x="111097" fg:w="196"/><text x="51.6636%" y="511.50"></text></g><g><title>CHash256::Write (196 samples, 0.09%)</title><rect x="51.4136%" y="485" width="0.0907%" height="15" fill="rgb(228,84,11)" fg:x="111097" fg:w="196"/><text x="51.6636%" y="495.50"></text></g><g><title>CSHA256::Write (179 samples, 0.08%)</title><rect x="51.4214%" y="469" width="0.0828%" height="15" fill="rgb(218,76,45)" fg:x="111114" fg:w="179"/><text x="51.6714%" y="479.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="51.5339%" y="421" width="0.0143%" height="15" fill="rgb(223,80,15)" fg:x="111357" fg:w="31"/><text x="51.7839%" y="431.50"></text></g><g><title>WriteCompactSize&lt;CHashWriter&gt; (97 samples, 0.04%)</title><rect x="51.5057%" y="501" width="0.0449%" height="15" fill="rgb(219,218,33)" fg:x="111296" fg:w="97"/><text x="51.7557%" y="511.50"></text></g><g><title>ser_writedata8&lt;CHashWriter&gt; (97 samples, 0.04%)</title><rect x="51.5057%" y="485" width="0.0449%" height="15" fill="rgb(208,51,11)" fg:x="111296" fg:w="97"/><text x="51.7557%" y="495.50"></text></g><g><title>CHashWriter::write (97 samples, 0.04%)</title><rect x="51.5057%" y="469" width="0.0449%" height="15" fill="rgb(229,165,39)" fg:x="111296" fg:w="97"/><text x="51.7557%" y="479.50"></text></g><g><title>CHash256::Write (97 samples, 0.04%)</title><rect x="51.5057%" y="453" width="0.0449%" height="15" fill="rgb(241,100,24)" fg:x="111296" fg:w="97"/><text x="51.7557%" y="463.50"></text></g><g><title>CSHA256::Write (93 samples, 0.04%)</title><rect x="51.5075%" y="437" width="0.0430%" height="15" fill="rgb(228,14,23)" fg:x="111300" fg:w="93"/><text x="51.7575%" y="447.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="645" width="0.0486%" height="15" fill="rgb(247,116,52)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="655.50"></text></g><g><title>SerializeMany&lt;CHashWriter, CScript&gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="629" width="0.0486%" height="15" fill="rgb(216,149,33)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="639.50"></text></g><g><title>Serialize&lt;CHashWriter, CScript&gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="613" width="0.0486%" height="15" fill="rgb(238,142,29)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="623.50"></text></g><g><title>CScript::Serialize&lt;CHashWriter&gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="597" width="0.0486%" height="15" fill="rgb(224,83,40)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="607.50"></text></g><g><title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="581" width="0.0486%" height="15" fill="rgb(234,165,11)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="591.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="565" width="0.0486%" height="15" fill="rgb(215,96,23)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="575.50"></text></g><g><title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="549" width="0.0486%" height="15" fill="rgb(233,179,26)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="559.50"></text></g><g><title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="533" width="0.0486%" height="15" fill="rgb(225,129,33)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="543.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (105 samples, 0.05%)</title><rect x="51.5043%" y="517" width="0.0486%" height="15" fill="rgb(237,49,13)" fg:x="111293" fg:w="105"/><text x="51.7543%" y="527.50"></text></g><g><title>Round (70 samples, 0.03%)</title><rect x="51.5857%" y="533" width="0.0324%" height="15" fill="rgb(211,3,31)" fg:x="111469" fg:w="70"/><text x="51.8357%" y="543.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="51.6190%" y="533" width="0.0130%" height="15" fill="rgb(216,152,19)" fg:x="111541" fg:w="28"/><text x="51.8690%" y="543.50"></text></g><g><title>DefaultFormatter::Ser&lt;CHashWriter, CTxIn&gt; (1,902 samples, 0.88%)</title><rect x="50.7675%" y="709" width="0.8802%" height="15" fill="rgb(251,121,35)" fg:x="109701" fg:w="1902"/><text x="51.0175%" y="719.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxIn&gt; (1,902 samples, 0.88%)</title><rect x="50.7675%" y="693" width="0.8802%" height="15" fill="rgb(210,217,47)" fg:x="109701" fg:w="1902"/><text x="51.0175%" y="703.50"></text></g><g><title>CTxIn::Serialize&lt;CHashWriter&gt; (1,902 samples, 0.88%)</title><rect x="50.7675%" y="677" width="0.8802%" height="15" fill="rgb(244,116,22)" fg:x="109701" fg:w="1902"/><text x="51.0175%" y="687.50"></text></g><g><title>CTxIn::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (1,902 samples, 0.88%)</title><rect x="50.7675%" y="661" width="0.8802%" height="15" fill="rgb(228,17,21)" fg:x="109701" fg:w="1902"/><text x="51.0175%" y="671.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (205 samples, 0.09%)</title><rect x="51.5529%" y="645" width="0.0949%" height="15" fill="rgb(240,149,34)" fg:x="111398" fg:w="205"/><text x="51.8029%" y="655.50"></text></g><g><title>SerializeMany&lt;CHashWriter, unsigned int&gt; (205 samples, 0.09%)</title><rect x="51.5529%" y="629" width="0.0949%" height="15" fill="rgb(208,125,47)" fg:x="111398" fg:w="205"/><text x="51.8029%" y="639.50"></text></g><g><title>Serialize&lt;CHashWriter&gt; (203 samples, 0.09%)</title><rect x="51.5538%" y="613" width="0.0939%" height="15" fill="rgb(249,186,39)" fg:x="111400" fg:w="203"/><text x="51.8038%" y="623.50"></text></g><g><title>ser_writedata32&lt;CHashWriter&gt; (203 samples, 0.09%)</title><rect x="51.5538%" y="597" width="0.0939%" height="15" fill="rgb(240,220,33)" fg:x="111400" fg:w="203"/><text x="51.8038%" y="607.50"></text></g><g><title>CHashWriter::write (203 samples, 0.09%)</title><rect x="51.5538%" y="581" width="0.0939%" height="15" fill="rgb(243,110,23)" fg:x="111400" fg:w="203"/><text x="51.8038%" y="591.50"></text></g><g><title>CHash256::Write (203 samples, 0.09%)</title><rect x="51.5538%" y="565" width="0.0939%" height="15" fill="rgb(219,163,46)" fg:x="111400" fg:w="203"/><text x="51.8038%" y="575.50"></text></g><g><title>CSHA256::Write (201 samples, 0.09%)</title><rect x="51.5547%" y="549" width="0.0930%" height="15" fill="rgb(216,126,30)" fg:x="111402" fg:w="201"/><text x="51.8047%" y="559.50"></text></g><g><title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (1,914 samples, 0.89%)</title><rect x="50.7624%" y="805" width="0.8858%" height="15" fill="rgb(208,139,11)" fg:x="109690" fg:w="1914"/><text x="51.0124%" y="815.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (1,914 samples, 0.89%)</title><rect x="50.7624%" y="789" width="0.8858%" height="15" fill="rgb(213,118,36)" fg:x="109690" fg:w="1914"/><text x="51.0124%" y="799.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (1,914 samples, 0.89%)</title><rect x="50.7624%" y="773" width="0.8858%" height="15" fill="rgb(226,43,17)" fg:x="109690" fg:w="1914"/><text x="51.0124%" y="783.50"></text></g><g><title>Serialize&lt;CHashWriter, Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; const&amp;&gt; &gt; (1,914 samples, 0.89%)</title><rect x="50.7624%" y="757" width="0.8858%" height="15" fill="rgb(254,217,4)" fg:x="109690" fg:w="1914"/><text x="51.0124%" y="767.50"></text></g><g><title>Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; const&amp;&gt;::Serialize&lt;CHashWriter&gt; (1,914 samples, 0.89%)</title><rect x="50.7624%" y="741" width="0.8858%" height="15" fill="rgb(210,134,47)" fg:x="109690" fg:w="1914"/><text x="51.0124%" y="751.50"></text></g><g><title>VectorFormatter&lt;DefaultFormatter&gt;::Ser&lt;CHashWriter, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (1,914 samples, 0.89%)</title><rect x="50.7624%" y="725" width="0.8858%" height="15" fill="rgb(237,24,49)" fg:x="109690" fg:w="1914"/><text x="51.0124%" y="735.50"></text></g><g><title>CHashWriter::write (22 samples, 0.01%)</title><rect x="51.6482%" y="501" width="0.0102%" height="15" fill="rgb(251,39,46)" fg:x="111604" fg:w="22"/><text x="51.8982%" y="511.50"></text></g><g><title>CHash256::Write (22 samples, 0.01%)</title><rect x="51.6482%" y="485" width="0.0102%" height="15" fill="rgb(251,220,3)" fg:x="111604" fg:w="22"/><text x="51.8982%" y="495.50"></text></g><g><title>CSHA256::Write (22 samples, 0.01%)</title><rect x="51.6482%" y="469" width="0.0102%" height="15" fill="rgb(228,105,12)" fg:x="111604" fg:w="22"/><text x="51.8982%" y="479.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="645" width="0.0111%" height="15" fill="rgb(215,196,1)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="655.50"></text></g><g><title>SerializeMany&lt;CHashWriter, CScript&gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="629" width="0.0111%" height="15" fill="rgb(214,33,39)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="639.50"></text></g><g><title>Serialize&lt;CHashWriter, CScript&gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="613" width="0.0111%" height="15" fill="rgb(220,19,52)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="623.50"></text></g><g><title>CScript::Serialize&lt;CHashWriter&gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="597" width="0.0111%" height="15" fill="rgb(221,78,38)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="607.50"></text></g><g><title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="581" width="0.0111%" height="15" fill="rgb(253,30,16)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="591.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="565" width="0.0111%" height="15" fill="rgb(242,65,0)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="575.50"></text></g><g><title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="549" width="0.0111%" height="15" fill="rgb(235,201,12)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="559.50"></text></g><g><title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="533" width="0.0111%" height="15" fill="rgb(233,161,9)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="543.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (24 samples, 0.01%)</title><rect x="51.6482%" y="517" width="0.0111%" height="15" fill="rgb(241,207,41)" fg:x="111604" fg:w="24"/><text x="51.8982%" y="527.50"></text></g><g><title>DefaultFormatter::Ser&lt;CHashWriter, CTxOut&gt; (28 samples, 0.01%)</title><rect x="51.6482%" y="709" width="0.0130%" height="15" fill="rgb(212,69,46)" fg:x="111604" fg:w="28"/><text x="51.8982%" y="719.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxOut&gt; (28 samples, 0.01%)</title><rect x="51.6482%" y="693" width="0.0130%" height="15" fill="rgb(239,69,45)" fg:x="111604" fg:w="28"/><text x="51.8982%" y="703.50"></text></g><g><title>CTxOut::Serialize&lt;CHashWriter&gt; (28 samples, 0.01%)</title><rect x="51.6482%" y="677" width="0.0130%" height="15" fill="rgb(242,117,48)" fg:x="111604" fg:w="28"/><text x="51.8982%" y="687.50"></text></g><g><title>CTxOut::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (28 samples, 0.01%)</title><rect x="51.6482%" y="661" width="0.0130%" height="15" fill="rgb(228,41,36)" fg:x="111604" fg:w="28"/><text x="51.8982%" y="671.50"></text></g><g><title>CTransaction::ComputeHash (1,986 samples, 0.92%)</title><rect x="50.7425%" y="901" width="0.9191%" height="15" fill="rgb(212,3,32)" fg:x="109647" fg:w="1986"/><text x="50.9925%" y="911.50"></text></g><g><title>SerializeHash&lt;CTransaction&gt; (1,986 samples, 0.92%)</title><rect x="50.7425%" y="885" width="0.9191%" height="15" fill="rgb(233,41,49)" fg:x="109647" fg:w="1986"/><text x="50.9925%" y="895.50"></text></g><g><title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (1,944 samples, 0.90%)</title><rect x="50.7620%" y="869" width="0.8996%" height="15" fill="rgb(252,170,49)" fg:x="109689" fg:w="1944"/><text x="51.0120%" y="879.50"></text></g><g><title>Serialize&lt;CHashWriter, CTransaction&gt; (1,944 samples, 0.90%)</title><rect x="50.7620%" y="853" width="0.8996%" height="15" fill="rgb(229,53,26)" fg:x="109689" fg:w="1944"/><text x="51.0120%" y="863.50"></text></g><g><title>CTransaction::Serialize&lt;CHashWriter&gt; (1,944 samples, 0.90%)</title><rect x="50.7620%" y="837" width="0.8996%" height="15" fill="rgb(217,157,12)" fg:x="109689" fg:w="1944"/><text x="51.0120%" y="847.50"></text></g><g><title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (1,944 samples, 0.90%)</title><rect x="50.7620%" y="821" width="0.8996%" height="15" fill="rgb(227,17,9)" fg:x="109689" fg:w="1944"/><text x="51.0120%" y="831.50"></text></g><g><title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (29 samples, 0.01%)</title><rect x="51.6482%" y="805" width="0.0134%" height="15" fill="rgb(218,84,12)" fg:x="111604" fg:w="29"/><text x="51.8982%" y="815.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (29 samples, 0.01%)</title><rect x="51.6482%" y="789" width="0.0134%" height="15" fill="rgb(212,79,24)" fg:x="111604" fg:w="29"/><text x="51.8982%" y="799.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (29 samples, 0.01%)</title><rect x="51.6482%" y="773" width="0.0134%" height="15" fill="rgb(217,222,37)" fg:x="111604" fg:w="29"/><text x="51.8982%" y="783.50"></text></g><g><title>Serialize&lt;CHashWriter, Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; const&amp;&gt; &gt; (29 samples, 0.01%)</title><rect x="51.6482%" y="757" width="0.0134%" height="15" fill="rgb(246,208,8)" fg:x="111604" fg:w="29"/><text x="51.8982%" y="767.50"></text></g><g><title>Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; const&amp;&gt;::Serialize&lt;CHashWriter&gt; (29 samples, 0.01%)</title><rect x="51.6482%" y="741" width="0.0134%" height="15" fill="rgb(244,133,10)" fg:x="111604" fg:w="29"/><text x="51.8982%" y="751.50"></text></g><g><title>VectorFormatter&lt;DefaultFormatter&gt;::Ser&lt;CHashWriter, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (29 samples, 0.01%)</title><rect x="51.6482%" y="725" width="0.0134%" height="15" fill="rgb(209,219,41)" fg:x="111604" fg:w="29"/><text x="51.8982%" y="735.50"></text></g><g><title>Round (22 samples, 0.01%)</title><rect x="51.6667%" y="789" width="0.0102%" height="15" fill="rgb(253,175,45)" fg:x="111644" fg:w="22"/><text x="51.9167%" y="799.50"></text></g><g><title>CHashWriter::GetHash (37 samples, 0.02%)</title><rect x="51.6625%" y="853" width="0.0171%" height="15" fill="rgb(235,100,37)" fg:x="111635" fg:w="37"/><text x="51.9125%" y="863.50"></text></g><g><title>CHash256::Finalize (37 samples, 0.02%)</title><rect x="51.6625%" y="837" width="0.0171%" height="15" fill="rgb(225,87,19)" fg:x="111635" fg:w="37"/><text x="51.9125%" y="847.50"></text></g><g><title>CSHA256::Finalize (37 samples, 0.02%)</title><rect x="51.6625%" y="821" width="0.0171%" height="15" fill="rgb(217,152,17)" fg:x="111635" fg:w="37"/><text x="51.9125%" y="831.50"></text></g><g><title>CSHA256::Write (37 samples, 0.02%)</title><rect x="51.6625%" y="805" width="0.0171%" height="15" fill="rgb(235,72,13)" fg:x="111635" fg:w="37"/><text x="51.9125%" y="815.50"></text></g><g><title>ReadBE32 (25 samples, 0.01%)</title><rect x="51.8564%" y="437" width="0.0116%" height="15" fill="rgb(233,140,18)" fg:x="112054" fg:w="25"/><text x="52.1064%" y="447.50"></text></g><g><title>Ch (23 samples, 0.01%)</title><rect x="52.0212%" y="421" width="0.0106%" height="15" fill="rgb(207,212,28)" fg:x="112410" fg:w="23"/><text x="52.2712%" y="431.50"></text></g><g><title>Maj (55 samples, 0.03%)</title><rect x="52.0318%" y="421" width="0.0255%" height="15" fill="rgb(220,130,25)" fg:x="112433" fg:w="55"/><text x="52.2818%" y="431.50"></text></g><g><title>Sigma0 (86 samples, 0.04%)</title><rect x="52.0573%" y="421" width="0.0398%" height="15" fill="rgb(205,55,34)" fg:x="112488" fg:w="86"/><text x="52.3073%" y="431.50"></text></g><g><title>Sigma1 (83 samples, 0.04%)</title><rect x="52.0971%" y="421" width="0.0384%" height="15" fill="rgb(237,54,35)" fg:x="112574" fg:w="83"/><text x="52.3471%" y="431.50"></text></g><g><title>Round (581 samples, 0.27%)</title><rect x="51.8680%" y="437" width="0.2689%" height="15" fill="rgb(208,67,23)" fg:x="112079" fg:w="581"/><text x="52.1180%" y="447.50"></text></g><g><title>[libc.so.6] (37 samples, 0.02%)</title><rect x="52.1434%" y="437" width="0.0171%" height="15" fill="rgb(206,207,50)" fg:x="112674" fg:w="37"/><text x="52.3934%" y="447.50"></text></g><g><title>sigma0 (118 samples, 0.05%)</title><rect x="52.1651%" y="437" width="0.0546%" height="15" fill="rgb(213,211,42)" fg:x="112721" fg:w="118"/><text x="52.4151%" y="447.50"></text></g><g><title>CSHA256::Write (1,261 samples, 0.58%)</title><rect x="51.6848%" y="453" width="0.5836%" height="15" fill="rgb(252,197,50)" fg:x="111683" fg:w="1261"/><text x="51.9348%" y="463.50"></text></g><g><title>sigma1 (105 samples, 0.05%)</title><rect x="52.2197%" y="437" width="0.0486%" height="15" fill="rgb(251,211,41)" fg:x="112839" fg:w="105"/><text x="52.4697%" y="447.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, uint256&gt; (1,262 samples, 0.58%)</title><rect x="51.6848%" y="549" width="0.5840%" height="15" fill="rgb(229,211,5)" fg:x="111683" fg:w="1262"/><text x="51.9348%" y="559.50"></text></g><g><title>SerializeMany&lt;CHashWriter, uint256&gt; (1,262 samples, 0.58%)</title><rect x="51.6848%" y="533" width="0.5840%" height="15" fill="rgb(239,36,31)" fg:x="111683" fg:w="1262"/><text x="51.9348%" y="543.50"></text></g><g><title>Serialize&lt;CHashWriter, uint256&gt; (1,262 samples, 0.58%)</title><rect x="51.6848%" y="517" width="0.5840%" height="15" fill="rgb(248,67,31)" fg:x="111683" fg:w="1262"/><text x="51.9348%" y="527.50"></text></g><g><title>base_blob&lt;256u&gt;::Serialize&lt;CHashWriter&gt; (1,262 samples, 0.58%)</title><rect x="51.6848%" y="501" width="0.5840%" height="15" fill="rgb(249,55,44)" fg:x="111683" fg:w="1262"/><text x="51.9348%" y="511.50"></text></g><g><title>CHashWriter::write (1,262 samples, 0.58%)</title><rect x="51.6848%" y="485" width="0.5840%" height="15" fill="rgb(216,82,12)" fg:x="111683" fg:w="1262"/><text x="51.9348%" y="495.50"></text></g><g><title>CHash256::Write (1,262 samples, 0.58%)</title><rect x="51.6848%" y="469" width="0.5840%" height="15" fill="rgb(242,174,1)" fg:x="111683" fg:w="1262"/><text x="51.9348%" y="479.50"></text></g><g><title>Round (66 samples, 0.03%)</title><rect x="52.3053%" y="437" width="0.0305%" height="15" fill="rgb(208,120,29)" fg:x="113024" fg:w="66"/><text x="52.5553%" y="447.50"></text></g><g><title>sigma0 (22 samples, 0.01%)</title><rect x="52.3470%" y="437" width="0.0102%" height="15" fill="rgb(221,105,43)" fg:x="113114" fg:w="22"/><text x="52.5970%" y="447.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, COutPoint&gt; (1,464 samples, 0.68%)</title><rect x="51.6848%" y="629" width="0.6775%" height="15" fill="rgb(234,124,22)" fg:x="111683" fg:w="1464"/><text x="51.9348%" y="639.50"></text></g><g><title>SerializeMany&lt;CHashWriter, COutPoint&gt; (1,464 samples, 0.68%)</title><rect x="51.6848%" y="613" width="0.6775%" height="15" fill="rgb(212,23,30)" fg:x="111683" fg:w="1464"/><text x="51.9348%" y="623.50"></text></g><g><title>Serialize&lt;CHashWriter, COutPoint&gt; (1,464 samples, 0.68%)</title><rect x="51.6848%" y="597" width="0.6775%" height="15" fill="rgb(219,122,53)" fg:x="111683" fg:w="1464"/><text x="51.9348%" y="607.50"></text></g><g><title>COutPoint::Serialize&lt;CHashWriter&gt; (1,464 samples, 0.68%)</title><rect x="51.6848%" y="581" width="0.6775%" height="15" fill="rgb(248,84,24)" fg:x="111683" fg:w="1464"/><text x="51.9348%" y="591.50"></text></g><g><title>COutPoint::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (1,464 samples, 0.68%)</title><rect x="51.6848%" y="565" width="0.6775%" height="15" fill="rgb(245,115,18)" fg:x="111683" fg:w="1464"/><text x="51.9348%" y="575.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (202 samples, 0.09%)</title><rect x="52.2688%" y="549" width="0.0935%" height="15" fill="rgb(227,176,51)" fg:x="112945" fg:w="202"/><text x="52.5188%" y="559.50"></text></g><g><title>SerializeMany&lt;CHashWriter, unsigned int&gt; (202 samples, 0.09%)</title><rect x="52.2688%" y="533" width="0.0935%" height="15" fill="rgb(229,63,42)" fg:x="112945" fg:w="202"/><text x="52.5188%" y="543.50"></text></g><g><title>Serialize&lt;CHashWriter&gt; (199 samples, 0.09%)</title><rect x="52.2702%" y="517" width="0.0921%" height="15" fill="rgb(247,202,24)" fg:x="112948" fg:w="199"/><text x="52.5202%" y="527.50"></text></g><g><title>ser_writedata32&lt;CHashWriter&gt; (199 samples, 0.09%)</title><rect x="52.2702%" y="501" width="0.0921%" height="15" fill="rgb(244,173,20)" fg:x="112948" fg:w="199"/><text x="52.5202%" y="511.50"></text></g><g><title>CHashWriter::write (199 samples, 0.09%)</title><rect x="52.2702%" y="485" width="0.0921%" height="15" fill="rgb(242,81,47)" fg:x="112948" fg:w="199"/><text x="52.5202%" y="495.50"></text></g><g><title>CHash256::Write (199 samples, 0.09%)</title><rect x="52.2702%" y="469" width="0.0921%" height="15" fill="rgb(231,185,54)" fg:x="112948" fg:w="199"/><text x="52.5202%" y="479.50"></text></g><g><title>CSHA256::Write (188 samples, 0.09%)</title><rect x="52.2753%" y="453" width="0.0870%" height="15" fill="rgb(243,55,32)" fg:x="112959" fg:w="188"/><text x="52.5253%" y="463.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="52.3896%" y="405" width="0.0148%" height="15" fill="rgb(208,167,19)" fg:x="113206" fg:w="32"/><text x="52.6396%" y="415.50"></text></g><g><title>WriteCompactSize&lt;CHashWriter&gt; (97 samples, 0.04%)</title><rect x="52.3646%" y="485" width="0.0449%" height="15" fill="rgb(231,72,35)" fg:x="113152" fg:w="97"/><text x="52.6146%" y="495.50"></text></g><g><title>ser_writedata8&lt;CHashWriter&gt; (97 samples, 0.04%)</title><rect x="52.3646%" y="469" width="0.0449%" height="15" fill="rgb(250,173,51)" fg:x="113152" fg:w="97"/><text x="52.6146%" y="479.50"></text></g><g><title>CHashWriter::write (97 samples, 0.04%)</title><rect x="52.3646%" y="453" width="0.0449%" height="15" fill="rgb(209,5,22)" fg:x="113152" fg:w="97"/><text x="52.6146%" y="463.50"></text></g><g><title>CHash256::Write (97 samples, 0.04%)</title><rect x="52.3646%" y="437" width="0.0449%" height="15" fill="rgb(250,174,19)" fg:x="113152" fg:w="97"/><text x="52.6146%" y="447.50"></text></g><g><title>CSHA256::Write (94 samples, 0.04%)</title><rect x="52.3660%" y="421" width="0.0435%" height="15" fill="rgb(217,3,49)" fg:x="113155" fg:w="94"/><text x="52.6160%" y="431.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="629" width="0.0532%" height="15" fill="rgb(218,225,5)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="639.50"></text></g><g><title>SerializeMany&lt;CHashWriter, CScript&gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="613" width="0.0532%" height="15" fill="rgb(236,89,11)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="623.50"></text></g><g><title>Serialize&lt;CHashWriter, CScript&gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="597" width="0.0532%" height="15" fill="rgb(206,33,28)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="607.50"></text></g><g><title>CScript::Serialize&lt;CHashWriter&gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="581" width="0.0532%" height="15" fill="rgb(241,56,42)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="591.50"></text></g><g><title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="565" width="0.0532%" height="15" fill="rgb(222,44,11)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="575.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="549" width="0.0532%" height="15" fill="rgb(234,111,20)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="559.50"></text></g><g><title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="533" width="0.0532%" height="15" fill="rgb(237,77,6)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="543.50"></text></g><g><title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="517" width="0.0532%" height="15" fill="rgb(235,111,23)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="527.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (115 samples, 0.05%)</title><rect x="52.3623%" y="501" width="0.0532%" height="15" fill="rgb(251,135,29)" fg:x="113147" fg:w="115"/><text x="52.6123%" y="511.50"></text></g><g><title>Round (63 samples, 0.03%)</title><rect x="52.4581%" y="517" width="0.0292%" height="15" fill="rgb(217,57,1)" fg:x="113354" fg:w="63"/><text x="52.7081%" y="527.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="52.4881%" y="517" width="0.0139%" height="15" fill="rgb(249,119,31)" fg:x="113419" fg:w="30"/><text x="52.7381%" y="527.50"></text></g><g><title>sigma0 (23 samples, 0.01%)</title><rect x="52.5034%" y="517" width="0.0106%" height="15" fill="rgb(233,164,33)" fg:x="113452" fg:w="23"/><text x="52.7534%" y="527.50"></text></g><g><title>DefaultFormatter::Ser&lt;CHashWriter, CTxIn&gt; (1,808 samples, 0.84%)</title><rect x="51.6848%" y="693" width="0.8367%" height="15" fill="rgb(250,217,43)" fg:x="111683" fg:w="1808"/><text x="51.9348%" y="703.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxIn&gt; (1,808 samples, 0.84%)</title><rect x="51.6848%" y="677" width="0.8367%" height="15" fill="rgb(232,154,50)" fg:x="111683" fg:w="1808"/><text x="51.9348%" y="687.50"></text></g><g><title>CTxIn::Serialize&lt;CHashWriter&gt; (1,808 samples, 0.84%)</title><rect x="51.6848%" y="661" width="0.8367%" height="15" fill="rgb(227,190,8)" fg:x="111683" fg:w="1808"/><text x="51.9348%" y="671.50"></text></g><g><title>CTxIn::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (1,808 samples, 0.84%)</title><rect x="51.6848%" y="645" width="0.8367%" height="15" fill="rgb(209,217,32)" fg:x="111683" fg:w="1808"/><text x="51.9348%" y="655.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, unsigned int&gt; (229 samples, 0.11%)</title><rect x="52.4155%" y="629" width="0.1060%" height="15" fill="rgb(243,203,50)" fg:x="113262" fg:w="229"/><text x="52.6655%" y="639.50"></text></g><g><title>SerializeMany&lt;CHashWriter, unsigned int&gt; (229 samples, 0.11%)</title><rect x="52.4155%" y="613" width="0.1060%" height="15" fill="rgb(232,152,27)" fg:x="113262" fg:w="229"/><text x="52.6655%" y="623.50"></text></g><g><title>Serialize&lt;CHashWriter&gt; (229 samples, 0.11%)</title><rect x="52.4155%" y="597" width="0.1060%" height="15" fill="rgb(240,34,29)" fg:x="113262" fg:w="229"/><text x="52.6655%" y="607.50"></text></g><g><title>ser_writedata32&lt;CHashWriter&gt; (229 samples, 0.11%)</title><rect x="52.4155%" y="581" width="0.1060%" height="15" fill="rgb(215,185,52)" fg:x="113262" fg:w="229"/><text x="52.6655%" y="591.50"></text></g><g><title>CHashWriter::write (229 samples, 0.11%)</title><rect x="52.4155%" y="565" width="0.1060%" height="15" fill="rgb(240,89,49)" fg:x="113262" fg:w="229"/><text x="52.6655%" y="575.50"></text></g><g><title>CHash256::Write (229 samples, 0.11%)</title><rect x="52.4155%" y="549" width="0.1060%" height="15" fill="rgb(225,12,52)" fg:x="113262" fg:w="229"/><text x="52.6655%" y="559.50"></text></g><g><title>CSHA256::Write (227 samples, 0.11%)</title><rect x="52.4164%" y="533" width="0.1051%" height="15" fill="rgb(239,128,45)" fg:x="113264" fg:w="227"/><text x="52.6664%" y="543.50"></text></g><g><title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (1,822 samples, 0.84%)</title><rect x="51.6801%" y="789" width="0.8432%" height="15" fill="rgb(211,78,47)" fg:x="111673" fg:w="1822"/><text x="51.9301%" y="799.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt; &gt; (1,822 samples, 0.84%)</title><rect x="51.6801%" y="773" width="0.8432%" height="15" fill="rgb(232,31,21)" fg:x="111673" fg:w="1822"/><text x="51.9301%" y="783.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, CTxIn, std::allocator&lt;CTxIn&gt;, CTxIn&gt; (1,822 samples, 0.84%)</title><rect x="51.6801%" y="757" width="0.8432%" height="15" fill="rgb(222,168,14)" fg:x="111673" fg:w="1822"/><text x="51.9301%" y="767.50"></text></g><g><title>Serialize&lt;CHashWriter, Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; const&amp;&gt; &gt; (1,822 samples, 0.84%)</title><rect x="51.6801%" y="741" width="0.8432%" height="15" fill="rgb(209,128,24)" fg:x="111673" fg:w="1822"/><text x="51.9301%" y="751.50"></text></g><g><title>Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; const&amp;&gt;::Serialize&lt;CHashWriter&gt; (1,822 samples, 0.84%)</title><rect x="51.6801%" y="725" width="0.8432%" height="15" fill="rgb(249,35,13)" fg:x="111673" fg:w="1822"/><text x="51.9301%" y="735.50"></text></g><g><title>VectorFormatter&lt;DefaultFormatter&gt;::Ser&lt;CHashWriter, std::vector&lt;CTxIn, std::allocator&lt;CTxIn&gt; &gt; &gt; (1,822 samples, 0.84%)</title><rect x="51.6801%" y="709" width="0.8432%" height="15" fill="rgb(218,7,2)" fg:x="111673" fg:w="1822"/><text x="51.9301%" y="719.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, CScript&gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="629" width="0.0106%" height="15" fill="rgb(238,107,27)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="639.50"></text></g><g><title>SerializeMany&lt;CHashWriter, CScript&gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="613" width="0.0106%" height="15" fill="rgb(217,88,38)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="623.50"></text></g><g><title>Serialize&lt;CHashWriter, CScript&gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="597" width="0.0106%" height="15" fill="rgb(230,207,0)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="607.50"></text></g><g><title>CScript::Serialize&lt;CHashWriter&gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="581" width="0.0106%" height="15" fill="rgb(249,64,54)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="591.50"></text></g><g><title>CScript::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="565" width="0.0106%" height="15" fill="rgb(231,7,11)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="575.50"></text></g><g><title>SerReadWriteMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt; &gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="549" width="0.0106%" height="15" fill="rgb(205,149,21)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="559.50"></text></g><g><title>SerializeMany&lt;CHashWriter, prevector&lt;28u, unsigned char, unsigned int, int&gt;&gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="533" width="0.0106%" height="15" fill="rgb(215,126,34)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="543.50"></text></g><g><title>Serialize&lt;CHashWriter, 28u, unsigned char&gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="517" width="0.0106%" height="15" fill="rgb(241,132,45)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="527.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, 28u, unsigned char&gt; (23 samples, 0.01%)</title><rect x="52.5233%" y="501" width="0.0106%" height="15" fill="rgb(252,69,32)" fg:x="113495" fg:w="23"/><text x="52.7733%" y="511.50"></text></g><g><title>DefaultFormatter::Ser&lt;CHashWriter, CTxOut&gt; (30 samples, 0.01%)</title><rect x="52.5233%" y="693" width="0.0139%" height="15" fill="rgb(232,204,19)" fg:x="113495" fg:w="30"/><text x="52.7733%" y="703.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxOut&gt; (30 samples, 0.01%)</title><rect x="52.5233%" y="677" width="0.0139%" height="15" fill="rgb(249,15,47)" fg:x="113495" fg:w="30"/><text x="52.7733%" y="687.50"></text></g><g><title>CTxOut::Serialize&lt;CHashWriter&gt; (30 samples, 0.01%)</title><rect x="52.5233%" y="661" width="0.0139%" height="15" fill="rgb(209,227,23)" fg:x="113495" fg:w="30"/><text x="52.7733%" y="671.50"></text></g><g><title>CTxOut::SerializationOp&lt;CHashWriter, CSerActionSerialize&gt; (30 samples, 0.01%)</title><rect x="52.5233%" y="645" width="0.0139%" height="15" fill="rgb(248,92,24)" fg:x="113495" fg:w="30"/><text x="52.7733%" y="655.50"></text></g><g><title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (31 samples, 0.01%)</title><rect x="52.5233%" y="789" width="0.0143%" height="15" fill="rgb(247,59,2)" fg:x="113495" fg:w="31"/><text x="52.7733%" y="799.50"></text></g><g><title>Serialize&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt; &gt; (31 samples, 0.01%)</title><rect x="52.5233%" y="773" width="0.0143%" height="15" fill="rgb(221,30,5)" fg:x="113495" fg:w="31"/><text x="52.7733%" y="783.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, CTxOut, std::allocator&lt;CTxOut&gt;, CTxOut&gt; (31 samples, 0.01%)</title><rect x="52.5233%" y="757" width="0.0143%" height="15" fill="rgb(208,108,53)" fg:x="113495" fg:w="31"/><text x="52.7733%" y="767.50"></text></g><g><title>Serialize&lt;CHashWriter, Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; const&amp;&gt; &gt; (31 samples, 0.01%)</title><rect x="52.5233%" y="741" width="0.0143%" height="15" fill="rgb(211,183,26)" fg:x="113495" fg:w="31"/><text x="52.7733%" y="751.50"></text></g><g><title>Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; const&amp;&gt;::Serialize&lt;CHashWriter&gt; (31 samples, 0.01%)</title><rect x="52.5233%" y="725" width="0.0143%" height="15" fill="rgb(232,132,4)" fg:x="113495" fg:w="31"/><text x="52.7733%" y="735.50"></text></g><g><title>VectorFormatter&lt;DefaultFormatter&gt;::Ser&lt;CHashWriter, std::vector&lt;CTxOut, std::allocator&lt;CTxOut&gt; &gt; &gt; (31 samples, 0.01%)</title><rect x="52.5233%" y="709" width="0.0143%" height="15" fill="rgb(253,128,37)" fg:x="113495" fg:w="31"/><text x="52.7733%" y="719.50"></text></g><g><title>ReadBE32 (48 samples, 0.02%)</title><rect x="53.1633%" y="597" width="0.0222%" height="15" fill="rgb(221,58,24)" fg:x="114878" fg:w="48"/><text x="53.4133%" y="607.50"></text></g><g><title>Ch (104 samples, 0.05%)</title><rect x="53.6585%" y="581" width="0.0481%" height="15" fill="rgb(230,54,45)" fg:x="115948" fg:w="104"/><text x="53.9085%" y="591.50"></text></g><g><title>Maj (185 samples, 0.09%)</title><rect x="53.7066%" y="581" width="0.0856%" height="15" fill="rgb(254,21,18)" fg:x="116052" fg:w="185"/><text x="53.9566%" y="591.50"></text></g><g><title>Sigma0 (338 samples, 0.16%)</title><rect x="53.7923%" y="581" width="0.1564%" height="15" fill="rgb(221,108,0)" fg:x="116237" fg:w="338"/><text x="54.0423%" y="591.50"></text></g><g><title>Sigma1 (293 samples, 0.14%)</title><rect x="53.9487%" y="581" width="0.1356%" height="15" fill="rgb(206,95,1)" fg:x="116575" fg:w="293"/><text x="54.1987%" y="591.50"></text></g><g><title>Round (1,956 samples, 0.91%)</title><rect x="53.1856%" y="597" width="0.9052%" height="15" fill="rgb(237,52,5)" fg:x="114926" fg:w="1956"/><text x="53.4356%" y="607.50"></text></g><g><title>Transform (49 samples, 0.02%)</title><rect x="54.0908%" y="597" width="0.0227%" height="15" fill="rgb(218,150,34)" fg:x="116882" fg:w="49"/><text x="54.3408%" y="607.50"></text></g><g><title>[libc.so.6] (148 samples, 0.07%)</title><rect x="54.1134%" y="597" width="0.0685%" height="15" fill="rgb(235,194,28)" fg:x="116931" fg:w="148"/><text x="54.3634%" y="607.50"></text></g><g><title>sigma0 (429 samples, 0.20%)</title><rect x="54.1907%" y="597" width="0.1985%" height="15" fill="rgb(245,92,18)" fg:x="117098" fg:w="429"/><text x="54.4407%" y="607.50"></text></g><g><title>CHashWriter::write (4,114 samples, 1.90%)</title><rect x="52.6321%" y="645" width="1.9039%" height="15" fill="rgb(253,203,53)" fg:x="113730" fg:w="4114"/><text x="52.8821%" y="655.50">C..</text></g><g><title>CHash256::Write (4,114 samples, 1.90%)</title><rect x="52.6321%" y="629" width="1.9039%" height="15" fill="rgb(249,185,47)" fg:x="113730" fg:w="4114"/><text x="52.8821%" y="639.50">C..</text></g><g><title>CSHA256::Write (4,114 samples, 1.90%)</title><rect x="52.6321%" y="613" width="1.9039%" height="15" fill="rgb(252,194,52)" fg:x="113730" fg:w="4114"/><text x="52.8821%" y="623.50">C..</text></g><g><title>sigma1 (317 samples, 0.15%)</title><rect x="54.3892%" y="597" width="0.1467%" height="15" fill="rgb(210,53,36)" fg:x="117527" fg:w="317"/><text x="54.6392%" y="607.50"></text></g><g><title>Round (68 samples, 0.03%)</title><rect x="54.5952%" y="565" width="0.0315%" height="15" fill="rgb(237,37,25)" fg:x="117972" fg:w="68"/><text x="54.8452%" y="575.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="54.6271%" y="565" width="0.0106%" height="15" fill="rgb(242,116,27)" fg:x="118041" fg:w="23"/><text x="54.8771%" y="575.50"></text></g><g><title>WriteCompactSize&lt;CHashWriter&gt; (255 samples, 0.12%)</title><rect x="54.5359%" y="645" width="0.1180%" height="15" fill="rgb(213,185,26)" fg:x="117844" fg:w="255"/><text x="54.7859%" y="655.50"></text></g><g><title>ser_writedata8&lt;CHashWriter&gt; (219 samples, 0.10%)</title><rect x="54.5526%" y="629" width="0.1013%" height="15" fill="rgb(225,204,8)" fg:x="117880" fg:w="219"/><text x="54.8026%" y="639.50"></text></g><g><title>CHashWriter::write (219 samples, 0.10%)</title><rect x="54.5526%" y="613" width="0.1013%" height="15" fill="rgb(254,111,37)" fg:x="117880" fg:w="219"/><text x="54.8026%" y="623.50"></text></g><g><title>CHash256::Write (219 samples, 0.10%)</title><rect x="54.5526%" y="597" width="0.1013%" height="15" fill="rgb(242,35,9)" fg:x="117880" fg:w="219"/><text x="54.8026%" y="607.50"></text></g><g><title>CSHA256::Write (215 samples, 0.10%)</title><rect x="54.5545%" y="581" width="0.0995%" height="15" fill="rgb(232,138,49)" fg:x="117884" fg:w="215"/><text x="54.8045%" y="591.50"></text></g><g><title>DefaultFormatter::Ser&lt;CHashWriter, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (4,569 samples, 2.11%)</title><rect x="52.5432%" y="693" width="2.1144%" height="15" fill="rgb(247,56,4)" fg:x="113538" fg:w="4569"/><text x="52.7932%" y="703.50">D..</text></g><g><title>Serialize&lt;CHashWriter, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (4,569 samples, 2.11%)</title><rect x="52.5432%" y="677" width="2.1144%" height="15" fill="rgb(226,179,17)" fg:x="113538" fg:w="4569"/><text x="52.7932%" y="687.50">S..</text></g><g><title>Serialize_impl&lt;CHashWriter, unsigned char, std::allocator&lt;unsigned char&gt; &gt; (4,569 samples, 2.11%)</title><rect x="52.5432%" y="661" width="2.1144%" height="15" fill="rgb(216,163,45)" fg:x="113538" fg:w="4569"/><text x="52.7932%" y="671.50">S..</text></g><g><title>WriteCompactSize&lt;CHashWriter&gt; (83 samples, 0.04%)</title><rect x="54.6577%" y="693" width="0.0384%" height="15" fill="rgb(211,157,3)" fg:x="118107" fg:w="83"/><text x="54.9077%" y="703.50"></text></g><g><title>ser_writedata8&lt;CHashWriter&gt; (58 samples, 0.03%)</title><rect x="54.6692%" y="677" width="0.0268%" height="15" fill="rgb(234,44,20)" fg:x="118132" fg:w="58"/><text x="54.9192%" y="687.50"></text></g><g><title>CHashWriter::write (58 samples, 0.03%)</title><rect x="54.6692%" y="661" width="0.0268%" height="15" fill="rgb(254,138,23)" fg:x="118132" fg:w="58"/><text x="54.9192%" y="671.50"></text></g><g><title>CHash256::Write (58 samples, 0.03%)</title><rect x="54.6692%" y="645" width="0.0268%" height="15" fill="rgb(206,119,39)" fg:x="118132" fg:w="58"/><text x="54.9192%" y="655.50"></text></g><g><title>CSHA256::Write (57 samples, 0.03%)</title><rect x="54.6697%" y="629" width="0.0264%" height="15" fill="rgb(231,105,52)" fg:x="118133" fg:w="57"/><text x="54.9197%" y="639.50"></text></g><g><title>Serialize_impl&lt;CHashWriter, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt;, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; (4,682 samples, 2.17%)</title><rect x="52.5377%" y="757" width="2.1667%" height="15" fill="rgb(250,20,5)" fg:x="113526" fg:w="4682"/><text x="52.7877%" y="767.50">S..</text></g><g><title>Serialize&lt;CHashWriter, Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; const&amp;&gt; &gt; (4,682 samples, 2.17%)</title><rect x="52.5377%" y="741" width="2.1667%" height="15" fill="rgb(215,198,30)" fg:x="113526" fg:w="4682"/><text x="52.7877%" y="751.50">S..</text></g><g><title>Wrapper&lt;VectorFormatter&lt;DefaultFormatter&gt;, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; const&amp;&gt;::Serialize&lt;CHashWriter&gt; (4,682 samples, 2.17%)</title><rect x="52.5377%" y="725" width="2.1667%" height="15" fill="rgb(246,142,8)" fg:x="113526" fg:w="4682"/><text x="52.7877%" y="735.50">W..</text></g><g><title>VectorFormatter&lt;DefaultFormatter&gt;::Ser&lt;CHashWriter, std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (4,682 samples, 2.17%)</title><rect x="52.5377%" y="709" width="2.1667%" height="15" fill="rgb(243,26,38)" fg:x="113526" fg:w="4682"/><text x="52.7877%" y="719.50">V..</text></g><g><title>CHashWriter::operator&lt;&lt; &lt;std::vector&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; (4,688 samples, 2.17%)</title><rect x="52.5377%" y="789" width="2.1695%" height="15" fill="rgb(205,133,28)" fg:x="113526" fg:w="4688"/><text x="52.7877%" y="799.50">C..</text></g><g><title>Serialize&lt;CHashWriter, std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;, std::allocator&lt;std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; (4,688 samples, 2.17%)</title><rect x="52.5377%" y="773" width="2.1695%" height="15" fill="rgb(212,34,0)" fg:x="113526" fg:w="4688"/><text x="52.7877%" y="783.50">S..</text></g><g><title>CTransaction::ComputeWitnessHash (6,597 samples, 3.05%)</title><rect x="51.6625%" y="885" width="3.0530%" height="15" fill="rgb(251,226,22)" fg:x="111635" fg:w="6597"/><text x="51.9125%" y="895.50">CTr..</text></g><g><title>SerializeHash&lt;CTransaction&gt; (6,597 samples, 3.05%)</title><rect x="51.6625%" y="869" width="3.0530%" height="15" fill="rgb(252,119,9)" fg:x="111635" fg:w="6597"/><text x="51.9125%" y="879.50">Ser..</text></g><g><title>CHashWriter::operator&lt;&lt; &lt;CTransaction&gt; (6,560 samples, 3.04%)</title><rect x="51.6797%" y="853" width="3.0358%" height="15" fill="rgb(213,150,50)" fg:x="111672" fg:w="6560"/><text x="51.9297%" y="863.50">CHa..</text></g><g><title>Serialize&lt;CHashWriter, CTransaction&gt; (6,560 samples, 3.04%)</title><rect x="51.6797%" y="837" width="3.0358%" height="15" fill="rgb(212,24,39)" fg:x="111672" fg:w="6560"/><text x="51.9297%" y="847.50">Ser..</text></g><g><title>CTransaction::Serialize&lt;CHashWriter&gt; (6,560 samples, 3.04%)</title><rect x="51.6797%" y="821" width="3.0358%" height="15" fill="rgb(213,46,39)" fg:x="111672" fg:w="6560"/><text x="51.9297%" y="831.50">CTr..</text></g><g><title>SerializeTransaction&lt;CHashWriter, CTransaction&gt; (6,560 samples, 3.04%)</title><rect x="51.6797%" y="805" width="3.0358%" height="15" fill="rgb(239,106,12)" fg:x="111672" fg:w="6560"/><text x="51.9297%" y="815.50">Ser..</text></g><g><title>bitcoin::blockdata::script::Script::verify_with_flags (17,582 samples, 8.14%)</title><rect x="46.5794%" y="981" width="8.1366%" height="15" fill="rgb(249,229,21)" fg:x="100651" fg:w="17582"/><text x="46.8294%" y="991.50">bitcoin::bl..</text></g><g><title>bitcoinconsensus::verify_with_flags (17,581 samples, 8.14%)</title><rect x="46.5798%" y="965" width="8.1362%" height="15" fill="rgb(212,158,3)" fg:x="100652" fg:w="17581"/><text x="46.8298%" y="975.50">bitcoincons..</text></g><g><title>verify_script (17,580 samples, 8.14%)</title><rect x="46.5803%" y="949" width="8.1357%" height="15" fill="rgb(253,26,48)" fg:x="100653" fg:w="17580"/><text x="46.8303%" y="959.50">verify_scri..</text></g><g><title>verify_script (8,588 samples, 3.97%)</title><rect x="50.7416%" y="933" width="3.9744%" height="15" fill="rgb(238,178,20)" fg:x="109645" fg:w="8588"/><text x="50.9916%" y="943.50">veri..</text></g><g><title>CTransaction::CTransaction (8,586 samples, 3.97%)</title><rect x="50.7425%" y="917" width="3.9734%" height="15" fill="rgb(208,86,15)" fg:x="109647" fg:w="8586"/><text x="50.9925%" y="927.50">CTra..</text></g><g><title>CTransaction::ComputeWitnessHash (6,600 samples, 3.05%)</title><rect x="51.6616%" y="901" width="3.0544%" height="15" fill="rgb(239,42,53)" fg:x="111633" fg:w="6600"/><text x="51.9116%" y="911.50">CTr..</text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (22 samples, 0.01%)</title><rect x="54.7275%" y="949" width="0.0102%" height="15" fill="rgb(245,226,8)" fg:x="118258" fg:w="22"/><text x="54.9775%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (22 samples, 0.01%)</title><rect x="54.7275%" y="933" width="0.0102%" height="15" fill="rgb(216,176,32)" fg:x="118258" fg:w="22"/><text x="54.9775%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (22 samples, 0.01%)</title><rect x="54.7275%" y="917" width="0.0102%" height="15" fill="rgb(231,186,21)" fg:x="118258" fg:w="22"/><text x="54.9775%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.01%)</title><rect x="54.7275%" y="901" width="0.0102%" height="15" fill="rgb(205,95,49)" fg:x="118258" fg:w="22"/><text x="54.9775%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.01%)</title><rect x="54.7275%" y="885" width="0.0102%" height="15" fill="rgb(217,145,8)" fg:x="118258" fg:w="22"/><text x="54.9775%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.01%)</title><rect x="54.7275%" y="869" width="0.0102%" height="15" fill="rgb(239,144,48)" fg:x="118258" fg:w="22"/><text x="54.9775%" y="879.50"></text></g><g><title>bitcoin::consensus::encode::serialize (48 samples, 0.02%)</title><rect x="54.7160%" y="981" width="0.0222%" height="15" fill="rgb(214,189,23)" fg:x="118233" fg:w="48"/><text x="54.9660%" y="991.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (48 samples, 0.02%)</title><rect x="54.7160%" y="965" width="0.0222%" height="15" fill="rgb(229,157,17)" fg:x="118233" fg:w="48"/><text x="54.9660%" y="975.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::verify_with_flags (17,641 samples, 8.16%)</title><rect x="46.5794%" y="997" width="8.1639%" height="15" fill="rgb(230,5,48)" fg:x="100651" fg:w="17641"/><text x="46.8294%" y="1007.50">bitcoin::bl..</text></g><g><title>cfree (66 samples, 0.03%)</title><rect x="54.7433%" y="997" width="0.0305%" height="15" fill="rgb(224,156,48)" fg:x="118292" fg:w="66"/><text x="54.9933%" y="1007.50"></text></g><g><title>[libc.so.6] (65 samples, 0.03%)</title><rect x="54.7437%" y="981" width="0.0301%" height="15" fill="rgb(223,14,29)" fg:x="118293" fg:w="65"/><text x="54.9937%" y="991.50"></text></g><g><title>[libc.so.6] (58 samples, 0.03%)</title><rect x="54.7470%" y="965" width="0.0268%" height="15" fill="rgb(229,96,36)" fg:x="118300" fg:w="58"/><text x="54.9970%" y="975.50"></text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="54.7479%" y="949" width="0.0259%" height="15" fill="rgb(231,102,53)" fg:x="118302" fg:w="56"/><text x="54.9979%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.02%)</title><rect x="54.7794%" y="885" width="0.0167%" height="15" fill="rgb(210,77,38)" fg:x="118370" fg:w="36"/><text x="55.0294%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (36 samples, 0.02%)</title><rect x="54.7794%" y="869" width="0.0167%" height="15" fill="rgb(235,131,6)" fg:x="118370" fg:w="36"/><text x="55.0294%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (36 samples, 0.02%)</title><rect x="54.7794%" y="853" width="0.0167%" height="15" fill="rgb(252,55,38)" fg:x="118370" fg:w="36"/><text x="55.0294%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.01%)</title><rect x="54.8132%" y="725" width="0.0120%" height="15" fill="rgb(246,38,14)" fg:x="118443" fg:w="26"/><text x="55.0632%" y="735.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::hash::Hash&gt;::hash (57 samples, 0.03%)</title><rect x="54.8007%" y="853" width="0.0264%" height="15" fill="rgb(242,27,5)" fg:x="118416" fg:w="57"/><text x="55.0507%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as core::hash::Hash&gt;::hash (57 samples, 0.03%)</title><rect x="54.8007%" y="837" width="0.0264%" height="15" fill="rgb(228,65,35)" fg:x="118416" fg:w="57"/><text x="55.0507%" y="847.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (57 samples, 0.03%)</title><rect x="54.8007%" y="821" width="0.0264%" height="15" fill="rgb(245,93,11)" fg:x="118416" fg:w="57"/><text x="55.0507%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (57 samples, 0.03%)</title><rect x="54.8007%" y="805" width="0.0264%" height="15" fill="rgb(213,1,31)" fg:x="118416" fg:w="57"/><text x="55.0507%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (41 samples, 0.02%)</title><rect x="54.8081%" y="789" width="0.0190%" height="15" fill="rgb(237,205,14)" fg:x="118432" fg:w="41"/><text x="55.0581%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (40 samples, 0.02%)</title><rect x="54.8085%" y="773" width="0.0185%" height="15" fill="rgb(232,118,45)" fg:x="118433" fg:w="40"/><text x="55.0585%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (40 samples, 0.02%)</title><rect x="54.8085%" y="757" width="0.0185%" height="15" fill="rgb(218,5,6)" fg:x="118433" fg:w="40"/><text x="55.0585%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (40 samples, 0.02%)</title><rect x="54.8085%" y="741" width="0.0185%" height="15" fill="rgb(251,87,51)" fg:x="118433" fg:w="40"/><text x="55.0585%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (113 samples, 0.05%)</title><rect x="54.7771%" y="917" width="0.0523%" height="15" fill="rgb(207,225,20)" fg:x="118365" fg:w="113"/><text x="55.0271%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (112 samples, 0.05%)</title><rect x="54.7775%" y="901" width="0.0518%" height="15" fill="rgb(222,78,54)" fg:x="118366" fg:w="112"/><text x="55.0275%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (67 samples, 0.03%)</title><rect x="54.7983%" y="885" width="0.0310%" height="15" fill="rgb(232,85,16)" fg:x="118411" fg:w="67"/><text x="55.0483%" y="895.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as core::hash::Hash&gt;::hash (67 samples, 0.03%)</title><rect x="54.7983%" y="869" width="0.0310%" height="15" fill="rgb(244,25,33)" fg:x="118411" fg:w="67"/><text x="55.0483%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (80 samples, 0.04%)</title><rect x="54.8358%" y="853" width="0.0370%" height="15" fill="rgb(233,24,36)" fg:x="118492" fg:w="80"/><text x="55.0858%" y="863.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as core::cmp::PartialEq&gt;::eq (80 samples, 0.04%)</title><rect x="54.8358%" y="837" width="0.0370%" height="15" fill="rgb(253,49,54)" fg:x="118492" fg:w="80"/><text x="55.0858%" y="847.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::cmp::PartialEq&gt;::eq (80 samples, 0.04%)</title><rect x="54.8358%" y="821" width="0.0370%" height="15" fill="rgb(245,12,22)" fg:x="118492" fg:w="80"/><text x="55.0858%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as core::cmp::PartialEq&gt;::eq (80 samples, 0.04%)</title><rect x="54.8358%" y="805" width="0.0370%" height="15" fill="rgb(253,141,28)" fg:x="118492" fg:w="80"/><text x="55.0858%" y="815.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (80 samples, 0.04%)</title><rect x="54.8358%" y="789" width="0.0370%" height="15" fill="rgb(225,207,27)" fg:x="118492" fg:w="80"/><text x="55.0858%" y="799.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (80 samples, 0.04%)</title><rect x="54.8358%" y="773" width="0.0370%" height="15" fill="rgb(220,84,2)" fg:x="118492" fg:w="80"/><text x="55.0858%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (81 samples, 0.04%)</title><rect x="54.8358%" y="869" width="0.0375%" height="15" fill="rgb(224,37,37)" fg:x="118492" fg:w="81"/><text x="55.0858%" y="879.50"></text></g><g><title>floresta_chain::pruned_utreexo::consensus::Consensus::verify_block_transactions (18,362 samples, 8.50%)</title><rect x="46.3780%" y="1013" width="8.4976%" height="15" fill="rgb(220,143,18)" fg:x="100216" fg:w="18362"/><text x="46.6280%" y="1023.50">floresta_cha..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (220 samples, 0.10%)</title><rect x="54.7738%" y="997" width="0.1018%" height="15" fill="rgb(210,88,33)" fg:x="118358" fg:w="220"/><text x="55.0238%" y="1007.50"></text></g><g><title>floresta_chain::pruned_utreexo::consensus::Consensus::verify_block_transactions::{{closure}} (213 samples, 0.10%)</title><rect x="54.7771%" y="981" width="0.0986%" height="15" fill="rgb(219,87,51)" fg:x="118365" fg:w="213"/><text x="55.0271%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (213 samples, 0.10%)</title><rect x="54.7771%" y="965" width="0.0986%" height="15" fill="rgb(211,7,35)" fg:x="118365" fg:w="213"/><text x="55.0271%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (213 samples, 0.10%)</title><rect x="54.7771%" y="949" width="0.0986%" height="15" fill="rgb(232,77,2)" fg:x="118365" fg:w="213"/><text x="55.0271%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (213 samples, 0.10%)</title><rect x="54.7771%" y="933" width="0.0986%" height="15" fill="rgb(249,94,25)" fg:x="118365" fg:w="213"/><text x="55.0271%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (100 samples, 0.05%)</title><rect x="54.8293%" y="917" width="0.0463%" height="15" fill="rgb(215,112,2)" fg:x="118478" fg:w="100"/><text x="55.0793%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (100 samples, 0.05%)</title><rect x="54.8293%" y="901" width="0.0463%" height="15" fill="rgb(226,115,48)" fg:x="118478" fg:w="100"/><text x="55.0793%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (100 samples, 0.05%)</title><rect x="54.8293%" y="885" width="0.0463%" height="15" fill="rgb(249,196,10)" fg:x="118478" fg:w="100"/><text x="55.0793%" y="895.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::validate_block (36,496 samples, 16.89%)</title><rect x="37.9864%" y="1029" width="16.8896%" height="15" fill="rgb(237,109,14)" fg:x="82083" fg:w="36496"/><text x="38.2364%" y="1039.50">floresta_chain::pruned_utr..</text></g><g><title>[libc.so.6] (161 samples, 0.07%)</title><rect x="54.9127%" y="885" width="0.0745%" height="15" fill="rgb(217,103,53)" fg:x="118658" fg:w="161"/><text x="55.1627%" y="895.50"></text></g><g><title>[libc.so.6] (160 samples, 0.07%)</title><rect x="54.9131%" y="869" width="0.0740%" height="15" fill="rgb(244,137,9)" fg:x="118659" fg:w="160"/><text x="55.1631%" y="879.50"></text></g><g><title>[libc.so.6] (43 samples, 0.02%)</title><rect x="54.9673%" y="853" width="0.0199%" height="15" fill="rgb(227,201,3)" fg:x="118776" fg:w="43"/><text x="55.2173%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (174 samples, 0.08%)</title><rect x="54.9085%" y="949" width="0.0805%" height="15" fill="rgb(243,94,6)" fg:x="118649" fg:w="174"/><text x="55.1585%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (174 samples, 0.08%)</title><rect x="54.9085%" y="933" width="0.0805%" height="15" fill="rgb(235,118,5)" fg:x="118649" fg:w="174"/><text x="55.1585%" y="943.50"></text></g><g><title>alloc::alloc::realloc (174 samples, 0.08%)</title><rect x="54.9085%" y="917" width="0.0805%" height="15" fill="rgb(247,10,30)" fg:x="118649" fg:w="174"/><text x="55.1585%" y="927.50"></text></g><g><title>realloc (174 samples, 0.08%)</title><rect x="54.9085%" y="901" width="0.0805%" height="15" fill="rgb(205,26,28)" fg:x="118649" fg:w="174"/><text x="55.1585%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 samples, 0.08%)</title><rect x="54.9080%" y="965" width="0.0847%" height="15" fill="rgb(206,99,35)" fg:x="118648" fg:w="183"/><text x="55.1580%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 samples, 0.09%)</title><rect x="54.9071%" y="997" width="0.0861%" height="15" fill="rgb(238,130,40)" fg:x="118646" fg:w="186"/><text x="55.1571%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (186 samples, 0.09%)</title><rect x="54.9071%" y="981" width="0.0861%" height="15" fill="rgb(224,126,31)" fg:x="118646" fg:w="186"/><text x="55.1571%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (202 samples, 0.09%)</title><rect x="54.9066%" y="1013" width="0.0935%" height="15" fill="rgb(254,105,17)" fg:x="118645" fg:w="202"/><text x="55.1566%" y="1023.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (65 samples, 0.03%)</title><rect x="55.0061%" y="853" width="0.0301%" height="15" fill="rgb(216,87,36)" fg:x="118860" fg:w="65"/><text x="55.2561%" y="863.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="55.0043%" y="965" width="0.0333%" height="15" fill="rgb(240,21,12)" fg:x="118856" fg:w="72"/><text x="55.2543%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="55.0043%" y="949" width="0.0333%" height="15" fill="rgb(245,192,34)" fg:x="118856" fg:w="72"/><text x="55.2543%" y="959.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="55.0043%" y="933" width="0.0333%" height="15" fill="rgb(226,100,49)" fg:x="118856" fg:w="72"/><text x="55.2543%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (72 samples, 0.03%)</title><rect x="55.0043%" y="917" width="0.0333%" height="15" fill="rgb(245,188,27)" fg:x="118856" fg:w="72"/><text x="55.2543%" y="927.50"></text></g><g><title>std::io::Write::write_all (72 samples, 0.03%)</title><rect x="55.0043%" y="901" width="0.0333%" height="15" fill="rgb(212,170,8)" fg:x="118856" fg:w="72"/><text x="55.2543%" y="911.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (70 samples, 0.03%)</title><rect x="55.0052%" y="885" width="0.0324%" height="15" fill="rgb(217,113,29)" fg:x="118858" fg:w="70"/><text x="55.2552%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (69 samples, 0.03%)</title><rect x="55.0057%" y="869" width="0.0319%" height="15" fill="rgb(237,30,3)" fg:x="118859" fg:w="69"/><text x="55.2557%" y="879.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (103 samples, 0.05%)</title><rect x="55.0015%" y="981" width="0.0477%" height="15" fill="rgb(227,19,28)" fg:x="118850" fg:w="103"/><text x="55.2515%" y="991.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (59 samples, 0.03%)</title><rect x="55.0519%" y="917" width="0.0273%" height="15" fill="rgb(239,172,45)" fg:x="118959" fg:w="59"/><text x="55.3019%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (23 samples, 0.01%)</title><rect x="55.0686%" y="901" width="0.0106%" height="15" fill="rgb(254,55,39)" fg:x="118995" fg:w="23"/><text x="55.3186%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (67 samples, 0.03%)</title><rect x="55.0510%" y="933" width="0.0310%" height="15" fill="rgb(249,208,12)" fg:x="118957" fg:w="67"/><text x="55.3010%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (69 samples, 0.03%)</title><rect x="55.0506%" y="949" width="0.0319%" height="15" fill="rgb(240,52,13)" fg:x="118956" fg:w="69"/><text x="55.3006%" y="959.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (60 samples, 0.03%)</title><rect x="55.0843%" y="901" width="0.0278%" height="15" fill="rgb(252,149,13)" fg:x="119029" fg:w="60"/><text x="55.3343%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (27 samples, 0.01%)</title><rect x="55.0996%" y="885" width="0.0125%" height="15" fill="rgb(232,81,48)" fg:x="119062" fg:w="27"/><text x="55.3496%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (68 samples, 0.03%)</title><rect x="55.0830%" y="917" width="0.0315%" height="15" fill="rgb(222,144,2)" fg:x="119026" fg:w="68"/><text x="55.3330%" y="927.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (248 samples, 0.11%)</title><rect x="55.0001%" y="1013" width="0.1148%" height="15" fill="rgb(216,81,32)" fg:x="118847" fg:w="248"/><text x="55.2501%" y="1023.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (245 samples, 0.11%)</title><rect x="55.0015%" y="997" width="0.1134%" height="15" fill="rgb(244,78,51)" fg:x="118850" fg:w="245"/><text x="55.2515%" y="1007.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (141 samples, 0.07%)</title><rect x="55.0496%" y="981" width="0.0653%" height="15" fill="rgb(217,66,21)" fg:x="118954" fg:w="141"/><text x="55.2996%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (140 samples, 0.06%)</title><rect x="55.0501%" y="965" width="0.0648%" height="15" fill="rgb(247,101,42)" fg:x="118955" fg:w="140"/><text x="55.3001%" y="975.50"></text></g><g><title>bitcoin_hashes::Hash::hash (70 samples, 0.03%)</title><rect x="55.0825%" y="949" width="0.0324%" height="15" fill="rgb(227,81,39)" fg:x="119025" fg:w="70"/><text x="55.3325%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (70 samples, 0.03%)</title><rect x="55.0825%" y="933" width="0.0324%" height="15" fill="rgb(220,223,44)" fg:x="119025" fg:w="70"/><text x="55.3325%" y="943.50"></text></g><g><title>bitcoin::blockdata::script::Script::is_provably_unspendable (117 samples, 0.05%)</title><rect x="55.1149%" y="1013" width="0.0541%" height="15" fill="rgb(205,218,2)" fg:x="119095" fg:w="117"/><text x="55.3649%" y="1023.50"></text></g><g><title>bitcoin::blockdata::opcodes::All::classify (41 samples, 0.02%)</title><rect x="55.1501%" y="997" width="0.0190%" height="15" fill="rgb(212,207,28)" fg:x="119171" fg:w="41"/><text x="55.4001%" y="1007.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (46 samples, 0.02%)</title><rect x="55.2121%" y="917" width="0.0213%" height="15" fill="rgb(224,12,41)" fg:x="119305" fg:w="46"/><text x="55.4621%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (46 samples, 0.02%)</title><rect x="55.2121%" y="901" width="0.0213%" height="15" fill="rgb(216,118,12)" fg:x="119305" fg:w="46"/><text x="55.4621%" y="911.50"></text></g><g><title>std::io::Write::write_all (44 samples, 0.02%)</title><rect x="55.2130%" y="885" width="0.0204%" height="15" fill="rgb(252,97,46)" fg:x="119307" fg:w="44"/><text x="55.4630%" y="895.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (134 samples, 0.06%)</title><rect x="55.2514%" y="837" width="0.0620%" height="15" fill="rgb(244,206,19)" fg:x="119390" fg:w="134"/><text x="55.5014%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (116 samples, 0.05%)</title><rect x="55.2597%" y="821" width="0.0537%" height="15" fill="rgb(231,84,31)" fg:x="119408" fg:w="116"/><text x="55.5097%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (51 samples, 0.02%)</title><rect x="55.2898%" y="805" width="0.0236%" height="15" fill="rgb(244,133,0)" fg:x="119473" fg:w="51"/><text x="55.5398%" y="815.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (186 samples, 0.09%)</title><rect x="55.2334%" y="917" width="0.0861%" height="15" fill="rgb(223,15,50)" fg:x="119351" fg:w="186"/><text x="55.4834%" y="927.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (173 samples, 0.08%)</title><rect x="55.2394%" y="901" width="0.0801%" height="15" fill="rgb(250,118,49)" fg:x="119364" fg:w="173"/><text x="55.4894%" y="911.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (173 samples, 0.08%)</title><rect x="55.2394%" y="885" width="0.0801%" height="15" fill="rgb(248,25,38)" fg:x="119364" fg:w="173"/><text x="55.4894%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (172 samples, 0.08%)</title><rect x="55.2398%" y="869" width="0.0796%" height="15" fill="rgb(215,70,14)" fg:x="119365" fg:w="172"/><text x="55.4898%" y="879.50"></text></g><g><title>std::io::Write::write_all (169 samples, 0.08%)</title><rect x="55.2412%" y="853" width="0.0782%" height="15" fill="rgb(215,28,15)" fg:x="119368" fg:w="169"/><text x="55.4912%" y="863.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (268 samples, 0.12%)</title><rect x="55.1991%" y="965" width="0.1240%" height="15" fill="rgb(243,6,28)" fg:x="119277" fg:w="268"/><text x="55.4491%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (268 samples, 0.12%)</title><rect x="55.1991%" y="949" width="0.1240%" height="15" fill="rgb(222,130,1)" fg:x="119277" fg:w="268"/><text x="55.4491%" y="959.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (245 samples, 0.11%)</title><rect x="55.2098%" y="933" width="0.1134%" height="15" fill="rgb(236,166,44)" fg:x="119300" fg:w="245"/><text x="55.4598%" y="943.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (31 samples, 0.01%)</title><rect x="55.4601%" y="821" width="0.0143%" height="15" fill="rgb(221,108,14)" fg:x="119841" fg:w="31"/><text x="55.7101%" y="831.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (173 samples, 0.08%)</title><rect x="55.4745%" y="821" width="0.0801%" height="15" fill="rgb(252,3,45)" fg:x="119872" fg:w="173"/><text x="55.7245%" y="831.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (646 samples, 0.30%)</title><rect x="55.3634%" y="837" width="0.2990%" height="15" fill="rgb(237,68,30)" fg:x="119632" fg:w="646"/><text x="55.6134%" y="847.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (233 samples, 0.11%)</title><rect x="55.5545%" y="821" width="0.1078%" height="15" fill="rgb(211,79,22)" fg:x="120045" fg:w="233"/><text x="55.8045%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (72 samples, 0.03%)</title><rect x="55.6693%" y="837" width="0.0333%" height="15" fill="rgb(252,185,21)" fg:x="120293" fg:w="72"/><text x="55.9193%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 0.03%)</title><rect x="55.6693%" y="821" width="0.0333%" height="15" fill="rgb(225,189,26)" fg:x="120293" fg:w="72"/><text x="55.9193%" y="831.50"></text></g><g><title>[libc.so.6] (68 samples, 0.03%)</title><rect x="55.6711%" y="805" width="0.0315%" height="15" fill="rgb(241,30,40)" fg:x="120297" fg:w="68"/><text x="55.9211%" y="815.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (797 samples, 0.37%)</title><rect x="55.3403%" y="869" width="0.3688%" height="15" fill="rgb(235,215,44)" fg:x="119582" fg:w="797"/><text x="55.5903%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (778 samples, 0.36%)</title><rect x="55.3491%" y="853" width="0.3600%" height="15" fill="rgb(205,8,29)" fg:x="119601" fg:w="778"/><text x="55.5991%" y="863.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (837 samples, 0.39%)</title><rect x="55.3241%" y="917" width="0.3873%" height="15" fill="rgb(241,137,42)" fg:x="119547" fg:w="837"/><text x="55.5741%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (837 samples, 0.39%)</title><rect x="55.3241%" y="901" width="0.3873%" height="15" fill="rgb(237,155,2)" fg:x="119547" fg:w="837"/><text x="55.5741%" y="911.50"></text></g><g><title>std::io::Write::write_all (829 samples, 0.38%)</title><rect x="55.3278%" y="885" width="0.3836%" height="15" fill="rgb(245,29,42)" fg:x="119555" fg:w="829"/><text x="55.5778%" y="895.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (877 samples, 0.41%)</title><rect x="55.3231%" y="949" width="0.4059%" height="15" fill="rgb(234,101,35)" fg:x="119545" fg:w="877"/><text x="55.5731%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (877 samples, 0.41%)</title><rect x="55.3231%" y="933" width="0.4059%" height="15" fill="rgb(228,64,37)" fg:x="119545" fg:w="877"/><text x="55.5731%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::into_inner (38 samples, 0.02%)</title><rect x="55.7114%" y="917" width="0.0176%" height="15" fill="rgb(217,214,36)" fg:x="120384" fg:w="38"/><text x="55.9614%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (54 samples, 0.02%)</title><rect x="55.7623%" y="869" width="0.0250%" height="15" fill="rgb(243,70,3)" fg:x="120494" fg:w="54"/><text x="56.0123%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (25 samples, 0.01%)</title><rect x="55.7910%" y="869" width="0.0116%" height="15" fill="rgb(253,158,52)" fg:x="120556" fg:w="25"/><text x="56.0410%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.01%)</title><rect x="55.7910%" y="853" width="0.0116%" height="15" fill="rgb(234,111,54)" fg:x="120556" fg:w="25"/><text x="56.0410%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (145 samples, 0.07%)</title><rect x="55.7429%" y="901" width="0.0671%" height="15" fill="rgb(217,70,32)" fg:x="120452" fg:w="145"/><text x="55.9929%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (132 samples, 0.06%)</title><rect x="55.7489%" y="885" width="0.0611%" height="15" fill="rgb(234,18,33)" fg:x="120465" fg:w="132"/><text x="55.9989%" y="895.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,056 samples, 0.49%)</title><rect x="55.3231%" y="965" width="0.4887%" height="15" fill="rgb(234,12,49)" fg:x="119545" fg:w="1056"/><text x="55.5731%" y="975.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (179 samples, 0.08%)</title><rect x="55.7290%" y="949" width="0.0828%" height="15" fill="rgb(236,10,21)" fg:x="120422" fg:w="179"/><text x="55.9790%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (179 samples, 0.08%)</title><rect x="55.7290%" y="933" width="0.0828%" height="15" fill="rgb(248,182,45)" fg:x="120422" fg:w="179"/><text x="55.9790%" y="943.50"></text></g><g><title>std::io::Write::write_all (175 samples, 0.08%)</title><rect x="55.7308%" y="917" width="0.0810%" height="15" fill="rgb(217,95,36)" fg:x="120426" fg:w="175"/><text x="55.9808%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (26 samples, 0.01%)</title><rect x="55.8637%" y="853" width="0.0120%" height="15" fill="rgb(212,110,31)" fg:x="120713" fg:w="26"/><text x="56.1137%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (115 samples, 0.05%)</title><rect x="55.8442%" y="869" width="0.0532%" height="15" fill="rgb(206,32,53)" fg:x="120671" fg:w="115"/><text x="56.0942%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (47 samples, 0.02%)</title><rect x="55.8757%" y="853" width="0.0218%" height="15" fill="rgb(246,141,37)" fg:x="120739" fg:w="47"/><text x="56.1257%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (201 samples, 0.09%)</title><rect x="55.8299%" y="901" width="0.0930%" height="15" fill="rgb(219,16,7)" fg:x="120640" fg:w="201"/><text x="56.0799%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (189 samples, 0.09%)</title><rect x="55.8354%" y="885" width="0.0875%" height="15" fill="rgb(230,205,45)" fg:x="120652" fg:w="189"/><text x="56.0854%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (29 samples, 0.01%)</title><rect x="55.9095%" y="869" width="0.0134%" height="15" fill="rgb(231,43,49)" fg:x="120812" fg:w="29"/><text x="56.1595%" y="879.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (245 samples, 0.11%)</title><rect x="55.8118%" y="933" width="0.1134%" height="15" fill="rgb(212,106,34)" fg:x="120601" fg:w="245"/><text x="56.0618%" y="943.50"></text></g><g><title>std::io::Write::write_all (243 samples, 0.11%)</title><rect x="55.8128%" y="917" width="0.1125%" height="15" fill="rgb(206,83,17)" fg:x="120603" fg:w="243"/><text x="56.0628%" y="927.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,571 samples, 0.73%)</title><rect x="55.1986%" y="981" width="0.7270%" height="15" fill="rgb(244,154,49)" fg:x="119276" fg:w="1571"/><text x="55.4486%" y="991.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Sequence as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (246 samples, 0.11%)</title><rect x="55.8118%" y="965" width="0.1138%" height="15" fill="rgb(244,149,49)" fg:x="120601" fg:w="246"/><text x="56.0618%" y="975.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (246 samples, 0.11%)</title><rect x="55.8118%" y="949" width="0.1138%" height="15" fill="rgb(227,134,18)" fg:x="120601" fg:w="246"/><text x="56.0618%" y="959.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (50 samples, 0.02%)</title><rect x="55.9391%" y="917" width="0.0231%" height="15" fill="rgb(237,116,36)" fg:x="120876" fg:w="50"/><text x="56.1891%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (30 samples, 0.01%)</title><rect x="55.9484%" y="901" width="0.0139%" height="15" fill="rgb(205,129,40)" fg:x="120896" fg:w="30"/><text x="56.1984%" y="911.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (92 samples, 0.04%)</title><rect x="55.9257%" y="981" width="0.0426%" height="15" fill="rgb(236,178,4)" fg:x="120847" fg:w="92"/><text x="56.1757%" y="991.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (78 samples, 0.04%)</title><rect x="55.9322%" y="965" width="0.0361%" height="15" fill="rgb(251,76,53)" fg:x="120861" fg:w="78"/><text x="56.1822%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (78 samples, 0.04%)</title><rect x="55.9322%" y="949" width="0.0361%" height="15" fill="rgb(242,92,40)" fg:x="120861" fg:w="78"/><text x="56.1822%" y="959.50"></text></g><g><title>std::io::Write::write_all (77 samples, 0.04%)</title><rect x="55.9326%" y="933" width="0.0356%" height="15" fill="rgb(209,45,30)" fg:x="120862" fg:w="77"/><text x="56.1826%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,683 samples, 0.78%)</title><rect x="55.1912%" y="997" width="0.7789%" height="15" fill="rgb(218,157,36)" fg:x="119260" fg:w="1683"/><text x="55.4412%" y="1007.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (359 samples, 0.17%)</title><rect x="57.1650%" y="821" width="0.1661%" height="15" fill="rgb(222,186,16)" fg:x="123525" fg:w="359"/><text x="57.4150%" y="831.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (1,680 samples, 0.78%)</title><rect x="57.3311%" y="821" width="0.7775%" height="15" fill="rgb(254,72,35)" fg:x="123884" fg:w="1680"/><text x="57.5811%" y="831.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (6,237 samples, 2.89%)</title><rect x="56.1807%" y="837" width="2.8864%" height="15" fill="rgb(224,25,35)" fg:x="121398" fg:w="6237"/><text x="56.4307%" y="847.50">bi..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2,071 samples, 0.96%)</title><rect x="58.1086%" y="821" width="0.9584%" height="15" fill="rgb(206,135,52)" fg:x="125564" fg:w="2071"/><text x="58.3586%" y="831.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (65 samples, 0.03%)</title><rect x="59.0670%" y="837" width="0.0301%" height="15" fill="rgb(229,174,47)" fg:x="127635" fg:w="65"/><text x="59.3170%" y="847.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (65 samples, 0.03%)</title><rect x="59.0670%" y="821" width="0.0301%" height="15" fill="rgb(242,184,21)" fg:x="127635" fg:w="65"/><text x="59.3170%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (65 samples, 0.03%)</title><rect x="59.0670%" y="805" width="0.0301%" height="15" fill="rgb(213,22,45)" fg:x="127635" fg:w="65"/><text x="59.3170%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (42 samples, 0.02%)</title><rect x="59.0777%" y="789" width="0.0194%" height="15" fill="rgb(237,81,54)" fg:x="127658" fg:w="42"/><text x="59.3277%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (42 samples, 0.02%)</title><rect x="59.0777%" y="773" width="0.0194%" height="15" fill="rgb(248,177,18)" fg:x="127658" fg:w="42"/><text x="59.3277%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (42 samples, 0.02%)</title><rect x="59.0777%" y="757" width="0.0194%" height="15" fill="rgb(254,31,16)" fg:x="127658" fg:w="42"/><text x="59.3277%" y="767.50"></text></g><g><title>core::cmp::min (25 samples, 0.01%)</title><rect x="59.0971%" y="837" width="0.0116%" height="15" fill="rgb(235,20,31)" fg:x="127700" fg:w="25"/><text x="59.3471%" y="847.50"></text></g><g><title>core::cmp::Ord::min (25 samples, 0.01%)</title><rect x="59.0971%" y="821" width="0.0116%" height="15" fill="rgb(240,56,43)" fg:x="127700" fg:w="25"/><text x="59.3471%" y="831.50"></text></g><g><title>core::cmp::min_by (25 samples, 0.01%)</title><rect x="59.0971%" y="805" width="0.0116%" height="15" fill="rgb(237,197,51)" fg:x="127700" fg:w="25"/><text x="59.3471%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (420 samples, 0.19%)</title><rect x="59.1087%" y="837" width="0.1944%" height="15" fill="rgb(241,162,44)" fg:x="127725" fg:w="420"/><text x="59.3587%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (420 samples, 0.19%)</title><rect x="59.1087%" y="821" width="0.1944%" height="15" fill="rgb(224,23,20)" fg:x="127725" fg:w="420"/><text x="59.3587%" y="831.50"></text></g><g><title>[libc.so.6] (401 samples, 0.19%)</title><rect x="59.1175%" y="805" width="0.1856%" height="15" fill="rgb(250,109,34)" fg:x="127744" fg:w="401"/><text x="59.3675%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (80 samples, 0.04%)</title><rect x="59.3031%" y="837" width="0.0370%" height="15" fill="rgb(214,175,50)" fg:x="128145" fg:w="80"/><text x="59.5531%" y="847.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (7,096 samples, 3.28%)</title><rect x="56.0599%" y="869" width="3.2839%" height="15" fill="rgb(213,182,5)" fg:x="121137" fg:w="7096"/><text x="56.3099%" y="879.50">bit..</text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (7,002 samples, 3.24%)</title><rect x="56.1034%" y="853" width="3.2404%" height="15" fill="rgb(209,199,19)" fg:x="121231" fg:w="7002"/><text x="56.3534%" y="863.50">&lt;bi..</text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (36 samples, 0.02%)</title><rect x="59.3438%" y="869" width="0.0167%" height="15" fill="rgb(236,224,42)" fg:x="128233" fg:w="36"/><text x="59.5938%" y="879.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (7,293 samples, 3.38%)</title><rect x="55.9895%" y="917" width="3.3751%" height="15" fill="rgb(246,226,29)" fg:x="120985" fg:w="7293"/><text x="56.2395%" y="927.50">&lt;W ..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7,293 samples, 3.38%)</title><rect x="55.9895%" y="901" width="3.3751%" height="15" fill="rgb(227,223,11)" fg:x="120985" fg:w="7293"/><text x="56.2395%" y="911.50">std..</text></g><g><title>std::io::Write::write_all (7,292 samples, 3.37%)</title><rect x="55.9900%" y="885" width="3.3746%" height="15" fill="rgb(219,7,51)" fg:x="120986" fg:w="7292"/><text x="56.2400%" y="895.50">std..</text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (41 samples, 0.02%)</title><rect x="59.5793%" y="789" width="0.0190%" height="15" fill="rgb(245,167,10)" fg:x="128742" fg:w="41"/><text x="59.8293%" y="799.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (148 samples, 0.07%)</title><rect x="59.5511%" y="805" width="0.0685%" height="15" fill="rgb(237,224,16)" fg:x="128681" fg:w="148"/><text x="59.8011%" y="815.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (46 samples, 0.02%)</title><rect x="59.5983%" y="789" width="0.0213%" height="15" fill="rgb(226,132,13)" fg:x="128783" fg:w="46"/><text x="59.8483%" y="799.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (34 samples, 0.02%)</title><rect x="59.6196%" y="805" width="0.0157%" height="15" fill="rgb(214,140,3)" fg:x="128829" fg:w="34"/><text x="59.8696%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (34 samples, 0.02%)</title><rect x="59.6196%" y="789" width="0.0157%" height="15" fill="rgb(221,177,4)" fg:x="128829" fg:w="34"/><text x="59.8696%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (34 samples, 0.02%)</title><rect x="59.6196%" y="773" width="0.0157%" height="15" fill="rgb(238,139,3)" fg:x="128829" fg:w="34"/><text x="59.8696%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (63 samples, 0.03%)</title><rect x="59.6400%" y="805" width="0.0292%" height="15" fill="rgb(216,17,39)" fg:x="128873" fg:w="63"/><text x="59.8900%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.03%)</title><rect x="59.6400%" y="789" width="0.0292%" height="15" fill="rgb(238,120,9)" fg:x="128873" fg:w="63"/><text x="59.8900%" y="799.50"></text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="59.6432%" y="773" width="0.0259%" height="15" fill="rgb(244,92,53)" fg:x="128880" fg:w="56"/><text x="59.8932%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (144 samples, 0.07%)</title><rect x="59.6691%" y="805" width="0.0666%" height="15" fill="rgb(224,148,33)" fg:x="128936" fg:w="144"/><text x="59.9191%" y="815.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (594 samples, 0.27%)</title><rect x="59.4632%" y="837" width="0.2749%" height="15" fill="rgb(243,6,36)" fg:x="128491" fg:w="594"/><text x="59.7132%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (530 samples, 0.25%)</title><rect x="59.4928%" y="821" width="0.2453%" height="15" fill="rgb(230,102,11)" fg:x="128555" fg:w="530"/><text x="59.7428%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (25 samples, 0.01%)</title><rect x="59.7381%" y="837" width="0.0116%" height="15" fill="rgb(234,148,36)" fg:x="129085" fg:w="25"/><text x="59.9881%" y="847.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (773 samples, 0.36%)</title><rect x="59.3924%" y="885" width="0.3577%" height="15" fill="rgb(251,153,25)" fg:x="128338" fg:w="773"/><text x="59.6424%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (770 samples, 0.36%)</title><rect x="59.3938%" y="869" width="0.3563%" height="15" fill="rgb(215,129,8)" fg:x="128341" fg:w="770"/><text x="59.6438%" y="879.50"></text></g><g><title>std::io::Write::write_all (763 samples, 0.35%)</title><rect x="59.3970%" y="853" width="0.3531%" height="15" fill="rgb(224,128,35)" fg:x="128348" fg:w="763"/><text x="59.6470%" y="863.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (778 samples, 0.36%)</title><rect x="59.3914%" y="901" width="0.3600%" height="15" fill="rgb(237,56,52)" fg:x="128336" fg:w="778"/><text x="59.6414%" y="911.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (837 samples, 0.39%)</title><rect x="59.3646%" y="917" width="0.3873%" height="15" fill="rgb(234,213,19)" fg:x="128278" fg:w="837"/><text x="59.6146%" y="927.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (8,184 samples, 3.79%)</title><rect x="55.9710%" y="965" width="3.7874%" height="15" fill="rgb(252,82,23)" fg:x="120945" fg:w="8184"/><text x="56.2210%" y="975.50">&lt;bit..</text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (8,184 samples, 3.79%)</title><rect x="55.9710%" y="949" width="3.7874%" height="15" fill="rgb(254,201,21)" fg:x="120945" fg:w="8184"/><text x="56.2210%" y="959.50">&lt;all..</text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (8,171 samples, 3.78%)</title><rect x="55.9770%" y="933" width="3.7814%" height="15" fill="rgb(250,186,11)" fg:x="120958" fg:w="8171"/><text x="56.2270%" y="943.50">bitc..</text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (76 samples, 0.04%)</title><rect x="60.1421%" y="869" width="0.0352%" height="15" fill="rgb(211,174,5)" fg:x="129958" fg:w="76"/><text x="60.3921%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (349 samples, 0.16%)</title><rect x="60.1772%" y="869" width="0.1615%" height="15" fill="rgb(214,121,10)" fg:x="130034" fg:w="349"/><text x="60.4272%" y="879.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (1,333 samples, 0.62%)</title><rect x="59.9278%" y="885" width="0.6169%" height="15" fill="rgb(241,66,2)" fg:x="129495" fg:w="1333"/><text x="60.1778%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (445 samples, 0.21%)</title><rect x="60.3388%" y="869" width="0.2059%" height="15" fill="rgb(220,167,19)" fg:x="130383" fg:w="445"/><text x="60.5888%" y="879.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (34 samples, 0.02%)</title><rect x="60.5447%" y="885" width="0.0157%" height="15" fill="rgb(231,54,50)" fg:x="130828" fg:w="34"/><text x="60.7947%" y="895.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (34 samples, 0.02%)</title><rect x="60.5447%" y="869" width="0.0157%" height="15" fill="rgb(239,217,53)" fg:x="130828" fg:w="34"/><text x="60.7947%" y="879.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (34 samples, 0.02%)</title><rect x="60.5447%" y="853" width="0.0157%" height="15" fill="rgb(248,8,0)" fg:x="130828" fg:w="34"/><text x="60.7947%" y="863.50"></text></g><g><title>[libc.so.6] (132 samples, 0.06%)</title><rect x="60.5757%" y="853" width="0.0611%" height="15" fill="rgb(229,118,37)" fg:x="130895" fg:w="132"/><text x="60.8257%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (153 samples, 0.07%)</title><rect x="60.5664%" y="885" width="0.0708%" height="15" fill="rgb(253,223,43)" fg:x="130875" fg:w="153"/><text x="60.8164%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (153 samples, 0.07%)</title><rect x="60.5664%" y="869" width="0.0708%" height="15" fill="rgb(211,77,36)" fg:x="130875" fg:w="153"/><text x="60.8164%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (75 samples, 0.03%)</title><rect x="60.6372%" y="885" width="0.0347%" height="15" fill="rgb(219,3,53)" fg:x="131028" fg:w="75"/><text x="60.8872%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,743 samples, 0.81%)</title><rect x="59.8700%" y="901" width="0.8066%" height="15" fill="rgb(244,45,42)" fg:x="129370" fg:w="1743"/><text x="60.1200%" y="911.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,815 samples, 0.84%)</title><rect x="59.8371%" y="917" width="0.8399%" height="15" fill="rgb(225,95,27)" fg:x="129299" fg:w="1815"/><text x="60.0871%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (26 samples, 0.01%)</title><rect x="60.6770%" y="917" width="0.0120%" height="15" fill="rgb(207,74,8)" fg:x="131114" fg:w="26"/><text x="60.9270%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (2,024 samples, 0.94%)</title><rect x="59.7589%" y="949" width="0.9367%" height="15" fill="rgb(243,63,36)" fg:x="129130" fg:w="2024"/><text x="60.0089%" y="959.50"></text></g><g><title>std::io::Write::write_all (2,010 samples, 0.93%)</title><rect x="59.7654%" y="933" width="0.9302%" height="15" fill="rgb(211,180,12)" fg:x="129144" fg:w="2010"/><text x="60.0154%" y="943.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (10,211 samples, 4.73%)</title><rect x="55.9706%" y="981" width="4.7255%" height="15" fill="rgb(254,166,49)" fg:x="120944" fg:w="10211"/><text x="56.2206%" y="991.50">&lt;bitco..</text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2,026 samples, 0.94%)</title><rect x="59.7584%" y="965" width="0.9376%" height="15" fill="rgb(205,19,0)" fg:x="129129" fg:w="2026"/><text x="60.0084%" y="975.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (46 samples, 0.02%)</title><rect x="60.7062%" y="917" width="0.0213%" height="15" fill="rgb(224,172,32)" fg:x="131177" fg:w="46"/><text x="60.9562%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (33 samples, 0.02%)</title><rect x="60.7122%" y="901" width="0.0153%" height="15" fill="rgb(254,136,30)" fg:x="131190" fg:w="33"/><text x="60.9622%" y="911.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (75 samples, 0.03%)</title><rect x="60.6960%" y="981" width="0.0347%" height="15" fill="rgb(246,19,35)" fg:x="131155" fg:w="75"/><text x="60.9460%" y="991.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (68 samples, 0.03%)</title><rect x="60.6993%" y="965" width="0.0315%" height="15" fill="rgb(219,24,36)" fg:x="131162" fg:w="68"/><text x="60.9493%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (68 samples, 0.03%)</title><rect x="60.6993%" y="949" width="0.0315%" height="15" fill="rgb(251,55,1)" fg:x="131162" fg:w="68"/><text x="60.9493%" y="959.50"></text></g><g><title>std::io::Write::write_all (67 samples, 0.03%)</title><rect x="60.6997%" y="933" width="0.0310%" height="15" fill="rgb(218,117,39)" fg:x="131163" fg:w="67"/><text x="60.9497%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (10,288 samples, 4.76%)</title><rect x="55.9701%" y="997" width="4.7611%" height="15" fill="rgb(248,169,11)" fg:x="120943" fg:w="10288"/><text x="56.2201%" y="1007.50">&lt;alloc..</text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (49 samples, 0.02%)</title><rect x="60.7428%" y="933" width="0.0227%" height="15" fill="rgb(244,40,44)" fg:x="131256" fg:w="49"/><text x="60.9928%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (46 samples, 0.02%)</title><rect x="60.7442%" y="917" width="0.0213%" height="15" fill="rgb(234,62,37)" fg:x="131259" fg:w="46"/><text x="60.9942%" y="927.50"></text></g><g><title>&lt;bitcoin::blockdata::locktime::PackedLockTime as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (77 samples, 0.04%)</title><rect x="60.7312%" y="997" width="0.0356%" height="15" fill="rgb(207,117,42)" fg:x="131231" fg:w="77"/><text x="60.9812%" y="1007.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (77 samples, 0.04%)</title><rect x="60.7312%" y="981" width="0.0356%" height="15" fill="rgb(213,43,2)" fg:x="131231" fg:w="77"/><text x="60.9812%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (77 samples, 0.04%)</title><rect x="60.7312%" y="965" width="0.0356%" height="15" fill="rgb(244,202,51)" fg:x="131231" fg:w="77"/><text x="60.9812%" y="975.50"></text></g><g><title>std::io::Write::write_all (74 samples, 0.03%)</title><rect x="60.7326%" y="949" width="0.0342%" height="15" fill="rgb(253,174,46)" fg:x="131234" fg:w="74"/><text x="60.9826%" y="959.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (144 samples, 0.07%)</title><rect x="61.1722%" y="917" width="0.0666%" height="15" fill="rgb(251,23,1)" fg:x="132184" fg:w="144"/><text x="61.4222%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (609 samples, 0.28%)</title><rect x="61.2389%" y="917" width="0.2818%" height="15" fill="rgb(253,26,1)" fg:x="132328" fg:w="609"/><text x="61.4889%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (2,410 samples, 1.12%)</title><rect x="60.8210%" y="933" width="1.1153%" height="15" fill="rgb(216,89,31)" fg:x="131425" fg:w="2410"/><text x="61.0710%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (898 samples, 0.42%)</title><rect x="61.5207%" y="917" width="0.4156%" height="15" fill="rgb(209,109,5)" fg:x="132937" fg:w="898"/><text x="61.7707%" y="927.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="61.9515%" y="901" width="0.0167%" height="15" fill="rgb(229,63,13)" fg:x="133868" fg:w="36"/><text x="62.2015%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (43 samples, 0.02%)</title><rect x="61.9488%" y="933" width="0.0199%" height="15" fill="rgb(238,137,54)" fg:x="133862" fg:w="43"/><text x="62.1988%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.02%)</title><rect x="61.9488%" y="917" width="0.0199%" height="15" fill="rgb(228,1,9)" fg:x="133862" fg:w="43"/><text x="62.1988%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (38 samples, 0.02%)</title><rect x="61.9687%" y="933" width="0.0176%" height="15" fill="rgb(249,120,48)" fg:x="133905" fg:w="38"/><text x="62.2187%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2,567 samples, 1.19%)</title><rect x="60.7992%" y="949" width="1.1880%" height="15" fill="rgb(209,72,36)" fg:x="131378" fg:w="2567"/><text x="61.0492%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (2,624 samples, 1.21%)</title><rect x="60.7877%" y="965" width="1.2143%" height="15" fill="rgb(247,98,49)" fg:x="131353" fg:w="2624"/><text x="61.0377%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::midstate (32 samples, 0.01%)</title><rect x="61.9872%" y="949" width="0.0148%" height="15" fill="rgb(233,75,36)" fg:x="133945" fg:w="32"/><text x="62.2372%" y="959.50"></text></g><g><title>bitcoin_hashes::util::u32_to_array_be (28 samples, 0.01%)</title><rect x="61.9890%" y="933" width="0.0130%" height="15" fill="rgb(225,14,24)" fg:x="133949" fg:w="28"/><text x="62.2390%" y="943.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (71 samples, 0.03%)</title><rect x="62.2533%" y="901" width="0.0329%" height="15" fill="rgb(237,193,20)" fg:x="134520" fg:w="71"/><text x="62.5033%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (384 samples, 0.18%)</title><rect x="62.2861%" y="901" width="0.1777%" height="15" fill="rgb(239,122,19)" fg:x="134591" fg:w="384"/><text x="62.5361%" y="911.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (1,491 samples, 0.69%)</title><rect x="62.0261%" y="917" width="0.6900%" height="15" fill="rgb(231,220,10)" fg:x="134029" fg:w="1491"/><text x="62.2761%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (545 samples, 0.25%)</title><rect x="62.4638%" y="901" width="0.2522%" height="15" fill="rgb(220,66,15)" fg:x="134975" fg:w="545"/><text x="62.7138%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (83 samples, 0.04%)</title><rect x="62.7221%" y="917" width="0.0384%" height="15" fill="rgb(215,171,52)" fg:x="135533" fg:w="83"/><text x="62.9721%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (83 samples, 0.04%)</title><rect x="62.7221%" y="901" width="0.0384%" height="15" fill="rgb(241,169,50)" fg:x="135533" fg:w="83"/><text x="62.9721%" y="911.50"></text></g><g><title>[libc.so.6] (83 samples, 0.04%)</title><rect x="62.7221%" y="885" width="0.0384%" height="15" fill="rgb(236,189,0)" fg:x="135533" fg:w="83"/><text x="62.9721%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,639 samples, 0.76%)</title><rect x="62.0145%" y="933" width="0.7585%" height="15" fill="rgb(217,147,20)" fg:x="134004" fg:w="1639"/><text x="62.2645%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (27 samples, 0.01%)</title><rect x="62.7605%" y="917" width="0.0125%" height="15" fill="rgb(206,188,39)" fg:x="135616" fg:w="27"/><text x="63.0105%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,685 samples, 0.78%)</title><rect x="62.0075%" y="949" width="0.7798%" height="15" fill="rgb(227,118,25)" fg:x="133989" fg:w="1685"/><text x="62.2575%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::midstate (31 samples, 0.01%)</title><rect x="62.7730%" y="933" width="0.0143%" height="15" fill="rgb(248,171,40)" fg:x="135643" fg:w="31"/><text x="63.0230%" y="943.50"></text></g><g><title>bitcoin_hashes::util::u32_to_array_be (30 samples, 0.01%)</title><rect x="62.7734%" y="917" width="0.0139%" height="15" fill="rgb(251,90,54)" fg:x="135644" fg:w="30"/><text x="63.0234%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (40 samples, 0.02%)</title><rect x="62.7873%" y="949" width="0.0185%" height="15" fill="rgb(234,11,46)" fg:x="135674" fg:w="40"/><text x="63.0373%" y="959.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin_hashes::Hash&gt;::from_engine (4,398 samples, 2.04%)</title><rect x="60.7728%" y="997" width="2.0353%" height="15" fill="rgb(229,134,13)" fg:x="131321" fg:w="4398"/><text x="61.0228%" y="1007.50">&lt;..</text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (4,389 samples, 2.03%)</title><rect x="60.7770%" y="981" width="2.0311%" height="15" fill="rgb(223,129,3)" fg:x="131330" fg:w="4389"/><text x="61.0270%" y="991.50">&lt;..</text></g><g><title>bitcoin_hashes::Hash::hash (1,742 samples, 0.81%)</title><rect x="62.0020%" y="965" width="0.8062%" height="15" fill="rgb(221,124,13)" fg:x="133977" fg:w="1742"/><text x="62.2520%" y="975.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (55 samples, 0.03%)</title><rect x="62.8179%" y="949" width="0.0255%" height="15" fill="rgb(234,3,18)" fg:x="135740" fg:w="55"/><text x="63.0679%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (49 samples, 0.02%)</title><rect x="62.8206%" y="933" width="0.0227%" height="15" fill="rgb(249,199,20)" fg:x="135746" fg:w="49"/><text x="63.0706%" y="943.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (91 samples, 0.04%)</title><rect x="62.8082%" y="997" width="0.0421%" height="15" fill="rgb(224,134,6)" fg:x="135719" fg:w="91"/><text x="63.0582%" y="1007.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (91 samples, 0.04%)</title><rect x="62.8082%" y="981" width="0.0421%" height="15" fill="rgb(254,83,26)" fg:x="135719" fg:w="91"/><text x="63.0582%" y="991.50"></text></g><g><title>std::io::Write::write_all (91 samples, 0.04%)</title><rect x="62.8082%" y="965" width="0.0421%" height="15" fill="rgb(217,88,9)" fg:x="135719" fg:w="91"/><text x="63.0582%" y="975.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (16,601 samples, 7.68%)</title><rect x="55.1690%" y="1013" width="7.6826%" height="15" fill="rgb(225,73,2)" fg:x="119212" fg:w="16601"/><text x="55.4190%" y="1023.50">bitcoin::bl..</text></g><g><title>cfree (29 samples, 0.01%)</title><rect x="62.8517%" y="1013" width="0.0134%" height="15" fill="rgb(226,44,39)" fg:x="135813" fg:w="29"/><text x="63.1017%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (61 samples, 0.03%)</title><rect x="62.8655%" y="853" width="0.0282%" height="15" fill="rgb(228,53,17)" fg:x="135843" fg:w="61"/><text x="63.1155%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (61 samples, 0.03%)</title><rect x="62.8655%" y="837" width="0.0282%" height="15" fill="rgb(212,27,27)" fg:x="135843" fg:w="61"/><text x="63.1155%" y="847.50"></text></g><g><title>core::ptr::write (58 samples, 0.03%)</title><rect x="62.8669%" y="821" width="0.0268%" height="15" fill="rgb(241,50,6)" fg:x="135846" fg:w="58"/><text x="63.1169%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (74 samples, 0.03%)</title><rect x="62.8651%" y="949" width="0.0342%" height="15" fill="rgb(225,28,51)" fg:x="135842" fg:w="74"/><text x="63.1151%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (74 samples, 0.03%)</title><rect x="62.8651%" y="933" width="0.0342%" height="15" fill="rgb(215,33,16)" fg:x="135842" fg:w="74"/><text x="63.1151%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (74 samples, 0.03%)</title><rect x="62.8651%" y="917" width="0.0342%" height="15" fill="rgb(243,40,39)" fg:x="135842" fg:w="74"/><text x="63.1151%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (74 samples, 0.03%)</title><rect x="62.8651%" y="901" width="0.0342%" height="15" fill="rgb(225,11,42)" fg:x="135842" fg:w="74"/><text x="63.1151%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (74 samples, 0.03%)</title><rect x="62.8651%" y="885" width="0.0342%" height="15" fill="rgb(241,220,38)" fg:x="135842" fg:w="74"/><text x="63.1151%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (73 samples, 0.03%)</title><rect x="62.8655%" y="869" width="0.0338%" height="15" fill="rgb(244,52,35)" fg:x="135843" fg:w="73"/><text x="63.1155%" y="879.50"></text></g><g><title>[libc.so.6] (97 samples, 0.04%)</title><rect x="62.9618%" y="805" width="0.0449%" height="15" fill="rgb(246,42,46)" fg:x="136051" fg:w="97"/><text x="63.2118%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (307 samples, 0.14%)</title><rect x="62.8651%" y="1013" width="0.1421%" height="15" fill="rgb(205,184,13)" fg:x="135842" fg:w="307"/><text x="63.1151%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (307 samples, 0.14%)</title><rect x="62.8651%" y="997" width="0.1421%" height="15" fill="rgb(209,48,36)" fg:x="135842" fg:w="307"/><text x="63.1151%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (307 samples, 0.14%)</title><rect x="62.8651%" y="981" width="0.1421%" height="15" fill="rgb(244,34,51)" fg:x="135842" fg:w="307"/><text x="63.1151%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (307 samples, 0.14%)</title><rect x="62.8651%" y="965" width="0.1421%" height="15" fill="rgb(221,107,33)" fg:x="135842" fg:w="307"/><text x="63.1151%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (233 samples, 0.11%)</title><rect x="62.8993%" y="949" width="0.1078%" height="15" fill="rgb(224,203,12)" fg:x="135916" fg:w="233"/><text x="63.1493%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (233 samples, 0.11%)</title><rect x="62.8993%" y="933" width="0.1078%" height="15" fill="rgb(230,215,18)" fg:x="135916" fg:w="233"/><text x="63.1493%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (232 samples, 0.11%)</title><rect x="62.8998%" y="917" width="0.1074%" height="15" fill="rgb(206,185,35)" fg:x="135917" fg:w="232"/><text x="63.1498%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (232 samples, 0.11%)</title><rect x="62.8998%" y="901" width="0.1074%" height="15" fill="rgb(228,140,34)" fg:x="135917" fg:w="232"/><text x="63.1498%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (221 samples, 0.10%)</title><rect x="62.9049%" y="885" width="0.1023%" height="15" fill="rgb(208,93,13)" fg:x="135928" fg:w="221"/><text x="63.1549%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (221 samples, 0.10%)</title><rect x="62.9049%" y="869" width="0.1023%" height="15" fill="rgb(221,193,39)" fg:x="135928" fg:w="221"/><text x="63.1549%" y="879.50"></text></g><g><title>alloc::alloc::alloc (221 samples, 0.10%)</title><rect x="62.9049%" y="853" width="0.1023%" height="15" fill="rgb(241,132,34)" fg:x="135928" fg:w="221"/><text x="63.1549%" y="863.50"></text></g><g><title>malloc (218 samples, 0.10%)</title><rect x="62.9063%" y="837" width="0.1009%" height="15" fill="rgb(221,141,10)" fg:x="135931" fg:w="218"/><text x="63.1563%" y="847.50"></text></g><g><title>[libc.so.6] (204 samples, 0.09%)</title><rect x="62.9127%" y="821" width="0.0944%" height="15" fill="rgb(226,90,31)" fg:x="135945" fg:w="204"/><text x="63.1627%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustreexo::accumulator::proof::Proof&gt; (27 samples, 0.01%)</title><rect x="63.0071%" y="1013" width="0.0125%" height="15" fill="rgb(243,75,5)" fg:x="136149" fg:w="27"/><text x="63.2571%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.01%)</title><rect x="63.0196%" y="949" width="0.0130%" height="15" fill="rgb(227,156,21)" fg:x="136176" fg:w="28"/><text x="63.2696%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.01%)</title><rect x="63.0196%" y="933" width="0.0130%" height="15" fill="rgb(250,195,8)" fg:x="136176" fg:w="28"/><text x="63.2696%" y="943.50"></text></g><g><title>cfree (26 samples, 0.01%)</title><rect x="63.0206%" y="917" width="0.0120%" height="15" fill="rgb(220,134,5)" fg:x="136178" fg:w="26"/><text x="63.2706%" y="927.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="63.0224%" y="901" width="0.0102%" height="15" fill="rgb(246,106,34)" fg:x="136182" fg:w="22"/><text x="63.2724%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;&gt; (29 samples, 0.01%)</title><rect x="63.0196%" y="997" width="0.0134%" height="15" fill="rgb(205,1,4)" fg:x="136176" fg:w="29"/><text x="63.2696%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;&gt; (29 samples, 0.01%)</title><rect x="63.0196%" y="981" width="0.0134%" height="15" fill="rgb(224,151,29)" fg:x="136176" fg:w="29"/><text x="63.2696%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="63.0196%" y="965" width="0.0134%" height="15" fill="rgb(251,196,0)" fg:x="136176" fg:w="29"/><text x="63.2696%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustreexo::accumulator::stump::UpdateData&gt; (31 samples, 0.01%)</title><rect x="63.0196%" y="1013" width="0.0143%" height="15" fill="rgb(212,127,0)" fg:x="136176" fg:w="31"/><text x="63.2696%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (42 samples, 0.02%)</title><rect x="63.0710%" y="949" width="0.0194%" height="15" fill="rgb(236,71,53)" fg:x="136287" fg:w="42"/><text x="63.3210%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.02%)</title><rect x="63.0710%" y="933" width="0.0194%" height="15" fill="rgb(227,99,0)" fg:x="136287" fg:w="42"/><text x="63.3210%" y="943.50"></text></g><g><title>[libc.so.6] (42 samples, 0.02%)</title><rect x="63.0710%" y="917" width="0.0194%" height="15" fill="rgb(239,89,21)" fg:x="136287" fg:w="42"/><text x="63.3210%" y="927.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (75 samples, 0.03%)</title><rect x="63.0567%" y="981" width="0.0347%" height="15" fill="rgb(243,122,19)" fg:x="136256" fg:w="75"/><text x="63.3067%" y="991.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (75 samples, 0.03%)</title><rect x="63.0567%" y="965" width="0.0347%" height="15" fill="rgb(229,192,45)" fg:x="136256" fg:w="75"/><text x="63.3067%" y="975.50"></text></g><g><title>[libc.so.6] (211 samples, 0.10%)</title><rect x="63.0914%" y="981" width="0.0976%" height="15" fill="rgb(235,165,35)" fg:x="136331" fg:w="211"/><text x="63.3414%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (89 samples, 0.04%)</title><rect x="63.1895%" y="933" width="0.0412%" height="15" fill="rgb(253,202,0)" fg:x="136543" fg:w="89"/><text x="63.4395%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (89 samples, 0.04%)</title><rect x="63.1895%" y="917" width="0.0412%" height="15" fill="rgb(235,51,20)" fg:x="136543" fg:w="89"/><text x="63.4395%" y="927.50"></text></g><g><title>cfree (83 samples, 0.04%)</title><rect x="63.1923%" y="901" width="0.0384%" height="15" fill="rgb(218,95,46)" fg:x="136549" fg:w="83"/><text x="63.4423%" y="911.50"></text></g><g><title>[libc.so.6] (73 samples, 0.03%)</title><rect x="63.1969%" y="885" width="0.0338%" height="15" fill="rgb(212,81,10)" fg:x="136559" fg:w="73"/><text x="63.4469%" y="895.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::chain_update (414 samples, 0.19%)</title><rect x="63.0400%" y="997" width="0.1916%" height="15" fill="rgb(240,59,0)" fg:x="136220" fg:w="414"/><text x="63.2900%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (91 samples, 0.04%)</title><rect x="63.1895%" y="981" width="0.0421%" height="15" fill="rgb(212,191,42)" fg:x="136543" fg:w="91"/><text x="63.4395%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (91 samples, 0.04%)</title><rect x="63.1895%" y="965" width="0.0421%" height="15" fill="rgb(233,140,3)" fg:x="136543" fg:w="91"/><text x="63.4395%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.04%)</title><rect x="63.1895%" y="949" width="0.0421%" height="15" fill="rgb(215,69,23)" fg:x="136543" fg:w="91"/><text x="63.4395%" y="959.50"></text></g><g><title>sha2::sha512::x86::compress (28 samples, 0.01%)</title><rect x="63.2390%" y="869" width="0.0130%" height="15" fill="rgb(240,202,20)" fg:x="136650" fg:w="28"/><text x="63.4890%" y="879.50"></text></g><g><title>sha2::sha512::x86::accumulate_state (25 samples, 0.01%)</title><rect x="63.3214%" y="837" width="0.0116%" height="15" fill="rgb(209,146,50)" fg:x="136828" fg:w="25"/><text x="63.5714%" y="847.50"></text></g><g><title>sha2::sha512::x86::load_data_avx (41 samples, 0.02%)</title><rect x="63.3329%" y="837" width="0.0190%" height="15" fill="rgb(253,102,54)" fg:x="136853" fg:w="41"/><text x="63.5829%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (104 samples, 0.05%)</title><rect x="63.4172%" y="821" width="0.0481%" height="15" fill="rgb(250,173,47)" fg:x="137035" fg:w="104"/><text x="63.6672%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (104 samples, 0.05%)</title><rect x="63.4172%" y="805" width="0.0481%" height="15" fill="rgb(232,142,7)" fg:x="137035" fg:w="104"/><text x="63.6672%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (83 samples, 0.04%)</title><rect x="63.4269%" y="789" width="0.0384%" height="15" fill="rgb(230,157,47)" fg:x="137056" fg:w="83"/><text x="63.6769%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (163 samples, 0.08%)</title><rect x="63.4653%" y="805" width="0.0754%" height="15" fill="rgb(214,177,35)" fg:x="137139" fg:w="163"/><text x="63.7153%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi64 (104 samples, 0.05%)</title><rect x="63.5407%" y="805" width="0.0481%" height="15" fill="rgb(234,119,46)" fg:x="137302" fg:w="104"/><text x="63.7907%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi64 (118 samples, 0.05%)</title><rect x="63.5889%" y="805" width="0.0546%" height="15" fill="rgb(241,180,50)" fg:x="137406" fg:w="118"/><text x="63.8389%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (408 samples, 0.19%)</title><rect x="63.6435%" y="805" width="0.1888%" height="15" fill="rgb(221,54,25)" fg:x="137524" fg:w="408"/><text x="63.8935%" y="815.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (801 samples, 0.37%)</title><rect x="63.4653%" y="821" width="0.3707%" height="15" fill="rgb(209,157,44)" fg:x="137139" fg:w="801"/><text x="63.7153%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (249 samples, 0.12%)</title><rect x="63.9586%" y="805" width="0.1152%" height="15" fill="rgb(246,115,41)" fg:x="138205" fg:w="249"/><text x="64.2086%" y="815.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (1,675 samples, 0.78%)</title><rect x="63.3519%" y="837" width="0.7752%" height="15" fill="rgb(229,86,1)" fg:x="136894" fg:w="1675"/><text x="63.6019%" y="847.50"></text></g><g><title>sha2::sha512::x86::sha_round (629 samples, 0.29%)</title><rect x="63.8360%" y="821" width="0.2911%" height="15" fill="rgb(240,108,53)" fg:x="137940" fg:w="629"/><text x="64.0860%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (115 samples, 0.05%)</title><rect x="64.0739%" y="805" width="0.0532%" height="15" fill="rgb(227,134,2)" fg:x="138454" fg:w="115"/><text x="64.3239%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (78 samples, 0.04%)</title><rect x="64.1664%" y="805" width="0.0361%" height="15" fill="rgb(213,129,25)" fg:x="138654" fg:w="78"/><text x="64.4164%" y="815.50"></text></g><g><title>&lt;sha2::core_api::Sha512VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::{{closure}} (2,212 samples, 1.02%)</title><rect x="63.2353%" y="885" width="1.0237%" height="15" fill="rgb(226,35,21)" fg:x="136642" fg:w="2212"/><text x="63.4853%" y="895.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (2,176 samples, 1.01%)</title><rect x="63.2520%" y="869" width="1.0070%" height="15" fill="rgb(208,129,26)" fg:x="136678" fg:w="2176"/><text x="63.5020%" y="879.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (2,070 samples, 0.96%)</title><rect x="63.3010%" y="853" width="0.9580%" height="15" fill="rgb(224,83,6)" fg:x="136784" fg:w="2070"/><text x="63.5510%" y="863.50"></text></g><g><title>sha2::sha512::x86::rounds_64_79 (285 samples, 0.13%)</title><rect x="64.1271%" y="837" width="0.1319%" height="15" fill="rgb(227,52,39)" fg:x="138569" fg:w="285"/><text x="64.3771%" y="847.50"></text></g><g><title>sha2::sha512::x86::sha_round (278 samples, 0.13%)</title><rect x="64.1303%" y="821" width="0.1287%" height="15" fill="rgb(241,30,17)" fg:x="138576" fg:w="278"/><text x="64.3803%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (122 samples, 0.06%)</title><rect x="64.2025%" y="805" width="0.0565%" height="15" fill="rgb(246,186,42)" fg:x="138732" fg:w="122"/><text x="64.4525%" y="815.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len128_padding_be (2,240 samples, 1.04%)</title><rect x="63.2330%" y="917" width="1.0366%" height="15" fill="rgb(221,169,15)" fg:x="136637" fg:w="2240"/><text x="63.4830%" y="927.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::digest_pad (2,237 samples, 1.04%)</title><rect x="63.2344%" y="901" width="1.0352%" height="15" fill="rgb(235,108,21)" fg:x="136640" fg:w="2237"/><text x="63.4844%" y="911.50"></text></g><g><title>&lt;sha2::core_api::Sha512VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (2,246 samples, 1.04%)</title><rect x="63.2316%" y="933" width="1.0394%" height="15" fill="rgb(219,148,30)" fg:x="136634" fg:w="2246"/><text x="63.4816%" y="943.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (2,249 samples, 1.04%)</title><rect x="63.2316%" y="965" width="1.0408%" height="15" fill="rgb(220,109,5)" fg:x="136634" fg:w="2249"/><text x="63.4816%" y="975.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (2,249 samples, 1.04%)</title><rect x="63.2316%" y="949" width="1.0408%" height="15" fill="rgb(213,203,48)" fg:x="136634" fg:w="2249"/><text x="63.4816%" y="959.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (2,271 samples, 1.05%)</title><rect x="63.2316%" y="997" width="1.0510%" height="15" fill="rgb(244,71,33)" fg:x="136634" fg:w="2271"/><text x="63.4816%" y="1007.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (2,271 samples, 1.05%)</title><rect x="63.2316%" y="981" width="1.0510%" height="15" fill="rgb(209,23,2)" fg:x="136634" fg:w="2271"/><text x="63.4816%" y="991.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="64.4223%" y="661" width="0.0162%" height="15" fill="rgb(219,97,7)" fg:x="139207" fg:w="35"/><text x="64.6723%" y="671.50"></text></g><g><title>[libc.so.6] (168 samples, 0.08%)</title><rect x="64.3617%" y="693" width="0.0777%" height="15" fill="rgb(216,161,23)" fg:x="139076" fg:w="168"/><text x="64.6117%" y="703.50"></text></g><g><title>[libc.so.6] (145 samples, 0.07%)</title><rect x="64.3724%" y="677" width="0.0671%" height="15" fill="rgb(207,45,42)" fg:x="139099" fg:w="145"/><text x="64.6224%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (297 samples, 0.14%)</title><rect x="64.3071%" y="757" width="0.1374%" height="15" fill="rgb(241,61,4)" fg:x="138958" fg:w="297"/><text x="64.5571%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (297 samples, 0.14%)</title><rect x="64.3071%" y="741" width="0.1374%" height="15" fill="rgb(236,170,1)" fg:x="138958" fg:w="297"/><text x="64.5571%" y="751.50"></text></g><g><title>alloc::alloc::realloc (297 samples, 0.14%)</title><rect x="64.3071%" y="725" width="0.1374%" height="15" fill="rgb(239,72,5)" fg:x="138958" fg:w="297"/><text x="64.5571%" y="735.50"></text></g><g><title>realloc (281 samples, 0.13%)</title><rect x="64.3145%" y="709" width="0.1300%" height="15" fill="rgb(214,13,50)" fg:x="138974" fg:w="281"/><text x="64.5645%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (303 samples, 0.14%)</title><rect x="64.3048%" y="773" width="0.1402%" height="15" fill="rgb(224,88,9)" fg:x="138953" fg:w="303"/><text x="64.5548%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (325 samples, 0.15%)</title><rect x="64.2969%" y="837" width="0.1504%" height="15" fill="rgb(238,192,34)" fg:x="138936" fg:w="325"/><text x="64.5469%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (325 samples, 0.15%)</title><rect x="64.2969%" y="821" width="0.1504%" height="15" fill="rgb(217,203,50)" fg:x="138936" fg:w="325"/><text x="64.5469%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (321 samples, 0.15%)</title><rect x="64.2988%" y="805" width="0.1486%" height="15" fill="rgb(241,123,32)" fg:x="138940" fg:w="321"/><text x="64.5488%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (311 samples, 0.14%)</title><rect x="64.3034%" y="789" width="0.1439%" height="15" fill="rgb(248,151,39)" fg:x="138950" fg:w="311"/><text x="64.5534%" y="799.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (345 samples, 0.16%)</title><rect x="64.2951%" y="933" width="0.1597%" height="15" fill="rgb(208,89,6)" fg:x="138932" fg:w="345"/><text x="64.5451%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (345 samples, 0.16%)</title><rect x="64.2951%" y="917" width="0.1597%" height="15" fill="rgb(254,43,26)" fg:x="138932" fg:w="345"/><text x="64.5451%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (345 samples, 0.16%)</title><rect x="64.2951%" y="901" width="0.1597%" height="15" fill="rgb(216,158,13)" fg:x="138932" fg:w="345"/><text x="64.5451%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (345 samples, 0.16%)</title><rect x="64.2951%" y="885" width="0.1597%" height="15" fill="rgb(212,47,37)" fg:x="138932" fg:w="345"/><text x="64.5451%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (345 samples, 0.16%)</title><rect x="64.2951%" y="869" width="0.1597%" height="15" fill="rgb(254,16,10)" fg:x="138932" fg:w="345"/><text x="64.5451%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (345 samples, 0.16%)</title><rect x="64.2951%" y="853" width="0.1597%" height="15" fill="rgb(223,228,16)" fg:x="138932" fg:w="345"/><text x="64.5451%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (41 samples, 0.02%)</title><rect x="64.4723%" y="725" width="0.0190%" height="15" fill="rgb(249,108,50)" fg:x="139315" fg:w="41"/><text x="64.7223%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (41 samples, 0.02%)</title><rect x="64.4723%" y="709" width="0.0190%" height="15" fill="rgb(208,220,5)" fg:x="139315" fg:w="41"/><text x="64.7223%" y="719.50"></text></g><g><title>alloc::alloc::realloc (38 samples, 0.02%)</title><rect x="64.4737%" y="693" width="0.0176%" height="15" fill="rgb(217,89,48)" fg:x="139318" fg:w="38"/><text x="64.7237%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (55 samples, 0.03%)</title><rect x="64.4686%" y="741" width="0.0255%" height="15" fill="rgb(212,113,41)" fg:x="139307" fg:w="55"/><text x="64.7186%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (85 samples, 0.04%)</title><rect x="64.4570%" y="805" width="0.0393%" height="15" fill="rgb(231,127,5)" fg:x="139282" fg:w="85"/><text x="64.7070%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (85 samples, 0.04%)</title><rect x="64.4570%" y="789" width="0.0393%" height="15" fill="rgb(217,141,17)" fg:x="139282" fg:w="85"/><text x="64.7070%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (83 samples, 0.04%)</title><rect x="64.4580%" y="773" width="0.0384%" height="15" fill="rgb(245,125,54)" fg:x="139284" fg:w="83"/><text x="64.7080%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (83 samples, 0.04%)</title><rect x="64.4580%" y="757" width="0.0384%" height="15" fill="rgb(248,125,3)" fg:x="139284" fg:w="83"/><text x="64.7080%" y="767.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (450 samples, 0.21%)</title><rect x="64.2895%" y="981" width="0.2083%" height="15" fill="rgb(236,119,51)" fg:x="138920" fg:w="450"/><text x="64.5395%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (450 samples, 0.21%)</title><rect x="64.2895%" y="965" width="0.2083%" height="15" fill="rgb(239,99,8)" fg:x="138920" fg:w="450"/><text x="64.5395%" y="975.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (449 samples, 0.21%)</title><rect x="64.2900%" y="949" width="0.2078%" height="15" fill="rgb(224,228,4)" fg:x="138921" fg:w="449"/><text x="64.5400%" y="959.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (93 samples, 0.04%)</title><rect x="64.4547%" y="933" width="0.0430%" height="15" fill="rgb(220,131,45)" fg:x="139277" fg:w="93"/><text x="64.7047%" y="943.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (93 samples, 0.04%)</title><rect x="64.4547%" y="917" width="0.0430%" height="15" fill="rgb(215,62,5)" fg:x="139277" fg:w="93"/><text x="64.7047%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (93 samples, 0.04%)</title><rect x="64.4547%" y="901" width="0.0430%" height="15" fill="rgb(253,12,24)" fg:x="139277" fg:w="93"/><text x="64.7047%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (93 samples, 0.04%)</title><rect x="64.4547%" y="885" width="0.0430%" height="15" fill="rgb(248,120,50)" fg:x="139277" fg:w="93"/><text x="64.7047%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (93 samples, 0.04%)</title><rect x="64.4547%" y="869" width="0.0430%" height="15" fill="rgb(245,194,10)" fg:x="139277" fg:w="93"/><text x="64.7047%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (93 samples, 0.04%)</title><rect x="64.4547%" y="853" width="0.0430%" height="15" fill="rgb(241,149,38)" fg:x="139277" fg:w="93"/><text x="64.7047%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (93 samples, 0.04%)</title><rect x="64.4547%" y="837" width="0.0430%" height="15" fill="rgb(219,215,7)" fg:x="139277" fg:w="93"/><text x="64.7047%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (93 samples, 0.04%)</title><rect x="64.4547%" y="821" width="0.0430%" height="15" fill="rgb(208,120,31)" fg:x="139277" fg:w="93"/><text x="64.7047%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (59 samples, 0.03%)</title><rect x="64.5061%" y="821" width="0.0273%" height="15" fill="rgb(244,30,8)" fg:x="139388" fg:w="59"/><text x="64.7561%" y="831.50"></text></g><g><title>malloc (25 samples, 0.01%)</title><rect x="64.5218%" y="805" width="0.0116%" height="15" fill="rgb(238,35,44)" fg:x="139422" fg:w="25"/><text x="64.7718%" y="815.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (535 samples, 0.25%)</title><rect x="64.2891%" y="997" width="0.2476%" height="15" fill="rgb(243,218,37)" fg:x="138919" fg:w="535"/><text x="64.5391%" y="1007.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (81 samples, 0.04%)</title><rect x="64.4992%" y="981" width="0.0375%" height="15" fill="rgb(218,169,10)" fg:x="139373" fg:w="81"/><text x="64.7492%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (81 samples, 0.04%)</title><rect x="64.4992%" y="965" width="0.0375%" height="15" fill="rgb(221,144,10)" fg:x="139373" fg:w="81"/><text x="64.7492%" y="975.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (81 samples, 0.04%)</title><rect x="64.4992%" y="949" width="0.0375%" height="15" fill="rgb(226,41,38)" fg:x="139373" fg:w="81"/><text x="64.7492%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (81 samples, 0.04%)</title><rect x="64.4992%" y="933" width="0.0375%" height="15" fill="rgb(228,3,1)" fg:x="139373" fg:w="81"/><text x="64.7492%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (81 samples, 0.04%)</title><rect x="64.4992%" y="917" width="0.0375%" height="15" fill="rgb(209,129,12)" fg:x="139373" fg:w="81"/><text x="64.7492%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (81 samples, 0.04%)</title><rect x="64.4992%" y="901" width="0.0375%" height="15" fill="rgb(213,136,33)" fg:x="139373" fg:w="81"/><text x="64.7492%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (73 samples, 0.03%)</title><rect x="64.5029%" y="885" width="0.0338%" height="15" fill="rgb(209,181,29)" fg:x="139381" fg:w="73"/><text x="64.7529%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (73 samples, 0.03%)</title><rect x="64.5029%" y="869" width="0.0338%" height="15" fill="rgb(234,173,18)" fg:x="139381" fg:w="73"/><text x="64.7529%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (72 samples, 0.03%)</title><rect x="64.5033%" y="853" width="0.0333%" height="15" fill="rgb(227,73,47)" fg:x="139382" fg:w="72"/><text x="64.7533%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (70 samples, 0.03%)</title><rect x="64.5042%" y="837" width="0.0324%" height="15" fill="rgb(234,9,34)" fg:x="139384" fg:w="70"/><text x="64.7542%" y="847.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::is_coin_base (37 samples, 0.02%)</title><rect x="64.5380%" y="997" width="0.0171%" height="15" fill="rgb(235,172,15)" fg:x="139457" fg:w="37"/><text x="64.7880%" y="1007.50"></text></g><g><title>bitcoin::blockdata::transaction::OutPoint::is_null (26 samples, 0.01%)</title><rect x="64.5431%" y="981" width="0.0120%" height="15" fill="rgb(245,61,2)" fg:x="139468" fg:w="26"/><text x="64.7931%" y="991.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (110 samples, 0.05%)</title><rect x="64.6047%" y="821" width="0.0509%" height="15" fill="rgb(238,39,47)" fg:x="139601" fg:w="110"/><text x="64.8547%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (103 samples, 0.05%)</title><rect x="64.6079%" y="805" width="0.0477%" height="15" fill="rgb(234,37,24)" fg:x="139608" fg:w="103"/><text x="64.8579%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (42 samples, 0.02%)</title><rect x="64.6361%" y="789" width="0.0194%" height="15" fill="rgb(248,223,24)" fg:x="139669" fg:w="42"/><text x="64.8861%" y="799.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (151 samples, 0.07%)</title><rect x="64.5899%" y="901" width="0.0699%" height="15" fill="rgb(223,12,15)" fg:x="139569" fg:w="151"/><text x="64.8399%" y="911.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (145 samples, 0.07%)</title><rect x="64.5926%" y="885" width="0.0671%" height="15" fill="rgb(249,6,3)" fg:x="139575" fg:w="145"/><text x="64.8426%" y="895.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (145 samples, 0.07%)</title><rect x="64.5926%" y="869" width="0.0671%" height="15" fill="rgb(237,105,33)" fg:x="139575" fg:w="145"/><text x="64.8426%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (143 samples, 0.07%)</title><rect x="64.5936%" y="853" width="0.0662%" height="15" fill="rgb(252,208,35)" fg:x="139577" fg:w="143"/><text x="64.8436%" y="863.50"></text></g><g><title>std::io::Write::write_all (143 samples, 0.07%)</title><rect x="64.5936%" y="837" width="0.0662%" height="15" fill="rgb(215,181,35)" fg:x="139577" fg:w="143"/><text x="64.8436%" y="847.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (186 samples, 0.09%)</title><rect x="64.5774%" y="949" width="0.0861%" height="15" fill="rgb(246,212,3)" fg:x="139542" fg:w="186"/><text x="64.8274%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (186 samples, 0.09%)</title><rect x="64.5774%" y="933" width="0.0861%" height="15" fill="rgb(247,156,24)" fg:x="139542" fg:w="186"/><text x="64.8274%" y="943.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (182 samples, 0.08%)</title><rect x="64.5792%" y="917" width="0.0842%" height="15" fill="rgb(248,9,31)" fg:x="139546" fg:w="182"/><text x="64.8292%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (93 samples, 0.04%)</title><rect x="64.7606%" y="805" width="0.0430%" height="15" fill="rgb(234,26,45)" fg:x="139938" fg:w="93"/><text x="65.0106%" y="815.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (358 samples, 0.17%)</title><rect x="64.6977%" y="821" width="0.1657%" height="15" fill="rgb(249,11,32)" fg:x="139802" fg:w="358"/><text x="64.9477%" y="831.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (129 samples, 0.06%)</title><rect x="64.8037%" y="805" width="0.0597%" height="15" fill="rgb(249,162,33)" fg:x="140031" fg:w="129"/><text x="65.0537%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (40 samples, 0.02%)</title><rect x="64.8671%" y="821" width="0.0185%" height="15" fill="rgb(232,4,32)" fg:x="140168" fg:w="40"/><text x="65.1171%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.02%)</title><rect x="64.8671%" y="805" width="0.0185%" height="15" fill="rgb(212,5,45)" fg:x="140168" fg:w="40"/><text x="65.1171%" y="815.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="64.8671%" y="789" width="0.0185%" height="15" fill="rgb(227,95,13)" fg:x="140168" fg:w="40"/><text x="65.1171%" y="799.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (468 samples, 0.22%)</title><rect x="64.6773%" y="853" width="0.2166%" height="15" fill="rgb(223,205,10)" fg:x="139758" fg:w="468"/><text x="64.9273%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (450 samples, 0.21%)</title><rect x="64.6857%" y="837" width="0.2083%" height="15" fill="rgb(222,178,8)" fg:x="139776" fg:w="450"/><text x="64.9357%" y="847.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (503 samples, 0.23%)</title><rect x="64.6639%" y="901" width="0.2328%" height="15" fill="rgb(216,13,22)" fg:x="139729" fg:w="503"/><text x="64.9139%" y="911.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (503 samples, 0.23%)</title><rect x="64.6639%" y="885" width="0.2328%" height="15" fill="rgb(240,167,12)" fg:x="139729" fg:w="503"/><text x="64.9139%" y="895.50"></text></g><g><title>std::io::Write::write_all (496 samples, 0.23%)</title><rect x="64.6671%" y="869" width="0.2295%" height="15" fill="rgb(235,68,35)" fg:x="139736" fg:w="496"/><text x="64.9171%" y="879.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (511 samples, 0.24%)</title><rect x="64.6634%" y="933" width="0.2365%" height="15" fill="rgb(253,40,27)" fg:x="139728" fg:w="511"/><text x="64.9134%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (511 samples, 0.24%)</title><rect x="64.6634%" y="917" width="0.2365%" height="15" fill="rgb(214,19,28)" fg:x="139728" fg:w="511"/><text x="64.9134%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (40 samples, 0.02%)</title><rect x="64.9231%" y="853" width="0.0185%" height="15" fill="rgb(210,167,45)" fg:x="140289" fg:w="40"/><text x="65.1731%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (101 samples, 0.05%)</title><rect x="64.9106%" y="885" width="0.0467%" height="15" fill="rgb(232,97,40)" fg:x="140262" fg:w="101"/><text x="65.1606%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (94 samples, 0.04%)</title><rect x="64.9138%" y="869" width="0.0435%" height="15" fill="rgb(250,35,23)" fg:x="140269" fg:w="94"/><text x="65.1638%" y="879.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (642 samples, 0.30%)</title><rect x="64.6634%" y="949" width="0.2971%" height="15" fill="rgb(248,47,53)" fg:x="139728" fg:w="642"/><text x="64.9134%" y="959.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (131 samples, 0.06%)</title><rect x="64.8999%" y="933" width="0.0606%" height="15" fill="rgb(226,58,50)" fg:x="140239" fg:w="131"/><text x="65.1499%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (131 samples, 0.06%)</title><rect x="64.8999%" y="917" width="0.0606%" height="15" fill="rgb(217,105,26)" fg:x="140239" fg:w="131"/><text x="65.1499%" y="927.50"></text></g><g><title>std::io::Write::write_all (130 samples, 0.06%)</title><rect x="64.9004%" y="901" width="0.0602%" height="15" fill="rgb(208,64,1)" fg:x="140240" fg:w="130"/><text x="65.1504%" y="911.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (69 samples, 0.03%)</title><rect x="64.9879%" y="853" width="0.0319%" height="15" fill="rgb(214,80,1)" fg:x="140429" fg:w="69"/><text x="65.2379%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (140 samples, 0.06%)</title><rect x="64.9758%" y="869" width="0.0648%" height="15" fill="rgb(206,175,26)" fg:x="140403" fg:w="140"/><text x="65.2258%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (25 samples, 0.01%)</title><rect x="65.0290%" y="853" width="0.0116%" height="15" fill="rgb(235,156,37)" fg:x="140518" fg:w="25"/><text x="65.2790%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (149 samples, 0.07%)</title><rect x="64.9721%" y="885" width="0.0690%" height="15" fill="rgb(213,100,9)" fg:x="140395" fg:w="149"/><text x="65.2221%" y="895.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (179 samples, 0.08%)</title><rect x="64.9605%" y="917" width="0.0828%" height="15" fill="rgb(241,15,13)" fg:x="140370" fg:w="179"/><text x="65.2105%" y="927.50"></text></g><g><title>std::io::Write::write_all (177 samples, 0.08%)</title><rect x="64.9615%" y="901" width="0.0819%" height="15" fill="rgb(205,97,43)" fg:x="140372" fg:w="177"/><text x="65.2115%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,009 samples, 0.47%)</title><rect x="64.5774%" y="965" width="0.4669%" height="15" fill="rgb(216,106,32)" fg:x="139542" fg:w="1009"/><text x="64.8274%" y="975.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Sequence as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (181 samples, 0.08%)</title><rect x="64.9605%" y="949" width="0.0838%" height="15" fill="rgb(226,200,8)" fg:x="140370" fg:w="181"/><text x="65.2105%" y="959.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (181 samples, 0.08%)</title><rect x="64.9605%" y="933" width="0.0838%" height="15" fill="rgb(244,54,29)" fg:x="140370" fg:w="181"/><text x="65.2105%" y="943.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (53 samples, 0.02%)</title><rect x="65.0550%" y="901" width="0.0245%" height="15" fill="rgb(252,169,12)" fg:x="140574" fg:w="53"/><text x="65.3050%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (41 samples, 0.02%)</title><rect x="65.0605%" y="885" width="0.0190%" height="15" fill="rgb(231,199,11)" fg:x="140586" fg:w="41"/><text x="65.3105%" y="895.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (95 samples, 0.04%)</title><rect x="65.0443%" y="965" width="0.0440%" height="15" fill="rgb(233,191,18)" fg:x="140551" fg:w="95"/><text x="65.2943%" y="975.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (89 samples, 0.04%)</title><rect x="65.0471%" y="949" width="0.0412%" height="15" fill="rgb(215,83,47)" fg:x="140557" fg:w="89"/><text x="65.2971%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (89 samples, 0.04%)</title><rect x="65.0471%" y="933" width="0.0412%" height="15" fill="rgb(251,67,19)" fg:x="140557" fg:w="89"/><text x="65.2971%" y="943.50"></text></g><g><title>std::io::Write::write_all (85 samples, 0.04%)</title><rect x="65.0489%" y="917" width="0.0393%" height="15" fill="rgb(240,7,20)" fg:x="140561" fg:w="85"/><text x="65.2989%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,125 samples, 0.52%)</title><rect x="64.5704%" y="981" width="0.5206%" height="15" fill="rgb(210,150,26)" fg:x="139527" fg:w="1125"/><text x="64.8204%" y="991.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (344 samples, 0.16%)</title><rect x="66.1226%" y="805" width="0.1592%" height="15" fill="rgb(228,75,42)" fg:x="142881" fg:w="344"/><text x="66.3726%" y="815.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (1,535 samples, 0.71%)</title><rect x="66.2818%" y="805" width="0.7104%" height="15" fill="rgb(237,134,48)" fg:x="143225" fg:w="1535"/><text x="66.5318%" y="815.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (5,630 samples, 2.61%)</title><rect x="65.2748%" y="821" width="2.6055%" height="15" fill="rgb(205,80,50)" fg:x="141049" fg:w="5630"/><text x="65.5248%" y="831.50">bi..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1,919 samples, 0.89%)</title><rect x="66.9922%" y="805" width="0.8881%" height="15" fill="rgb(217,74,48)" fg:x="144760" fg:w="1919"/><text x="67.2422%" y="815.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (56 samples, 0.03%)</title><rect x="67.8802%" y="821" width="0.0259%" height="15" fill="rgb(205,82,50)" fg:x="146679" fg:w="56"/><text x="68.1302%" y="831.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (56 samples, 0.03%)</title><rect x="67.8802%" y="805" width="0.0259%" height="15" fill="rgb(228,1,33)" fg:x="146679" fg:w="56"/><text x="68.1302%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (56 samples, 0.03%)</title><rect x="67.8802%" y="789" width="0.0259%" height="15" fill="rgb(214,50,23)" fg:x="146679" fg:w="56"/><text x="68.1302%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (37 samples, 0.02%)</title><rect x="67.8890%" y="773" width="0.0171%" height="15" fill="rgb(210,62,9)" fg:x="146698" fg:w="37"/><text x="68.1390%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (37 samples, 0.02%)</title><rect x="67.8890%" y="757" width="0.0171%" height="15" fill="rgb(210,104,37)" fg:x="146698" fg:w="37"/><text x="68.1390%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (37 samples, 0.02%)</title><rect x="67.8890%" y="741" width="0.0171%" height="15" fill="rgb(232,104,43)" fg:x="146698" fg:w="37"/><text x="68.1390%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (370 samples, 0.17%)</title><rect x="67.9145%" y="821" width="0.1712%" height="15" fill="rgb(244,52,6)" fg:x="146753" fg:w="370"/><text x="68.1645%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (370 samples, 0.17%)</title><rect x="67.9145%" y="805" width="0.1712%" height="15" fill="rgb(211,174,52)" fg:x="146753" fg:w="370"/><text x="68.1645%" y="815.50"></text></g><g><title>[libc.so.6] (356 samples, 0.16%)</title><rect x="67.9210%" y="789" width="0.1647%" height="15" fill="rgb(229,48,4)" fg:x="146767" fg:w="356"/><text x="68.1710%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (61 samples, 0.03%)</title><rect x="68.0857%" y="821" width="0.0282%" height="15" fill="rgb(205,155,16)" fg:x="147123" fg:w="61"/><text x="68.3357%" y="831.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (6,368 samples, 2.95%)</title><rect x="65.1720%" y="853" width="2.9470%" height="15" fill="rgb(211,141,53)" fg:x="140827" fg:w="6368"/><text x="65.4220%" y="863.50">bi..</text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (6,296 samples, 2.91%)</title><rect x="65.2054%" y="837" width="2.9137%" height="15" fill="rgb(240,148,11)" fg:x="140899" fg:w="6296"/><text x="65.4554%" y="847.50">&lt;b..</text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (31 samples, 0.01%)</title><rect x="68.1190%" y="853" width="0.0143%" height="15" fill="rgb(214,45,23)" fg:x="147195" fg:w="31"/><text x="68.3690%" y="863.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (6,534 samples, 3.02%)</title><rect x="65.1133%" y="901" width="3.0238%" height="15" fill="rgb(248,74,26)" fg:x="140700" fg:w="6534"/><text x="65.3633%" y="911.50">&lt;W ..</text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (6,534 samples, 3.02%)</title><rect x="65.1133%" y="885" width="3.0238%" height="15" fill="rgb(218,121,16)" fg:x="140700" fg:w="6534"/><text x="65.3633%" y="895.50">std..</text></g><g><title>std::io::Write::write_all (6,533 samples, 3.02%)</title><rect x="65.1137%" y="869" width="3.0233%" height="15" fill="rgb(218,10,47)" fg:x="140701" fg:w="6533"/><text x="65.3637%" y="879.50">std..</text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (40 samples, 0.02%)</title><rect x="68.3319%" y="773" width="0.0185%" height="15" fill="rgb(227,99,14)" fg:x="147655" fg:w="40"/><text x="68.5819%" y="783.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (155 samples, 0.07%)</title><rect x="68.3037%" y="789" width="0.0717%" height="15" fill="rgb(229,83,46)" fg:x="147594" fg:w="155"/><text x="68.5537%" y="799.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (54 samples, 0.02%)</title><rect x="68.3504%" y="773" width="0.0250%" height="15" fill="rgb(228,25,1)" fg:x="147695" fg:w="54"/><text x="68.6004%" y="783.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (24 samples, 0.01%)</title><rect x="68.3754%" y="789" width="0.0111%" height="15" fill="rgb(252,190,15)" fg:x="147749" fg:w="24"/><text x="68.6254%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (24 samples, 0.01%)</title><rect x="68.3754%" y="773" width="0.0111%" height="15" fill="rgb(213,103,51)" fg:x="147749" fg:w="24"/><text x="68.6254%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (24 samples, 0.01%)</title><rect x="68.3754%" y="757" width="0.0111%" height="15" fill="rgb(220,38,44)" fg:x="147749" fg:w="24"/><text x="68.6254%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (53 samples, 0.02%)</title><rect x="68.3879%" y="789" width="0.0245%" height="15" fill="rgb(210,45,26)" fg:x="147776" fg:w="53"/><text x="68.6379%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.02%)</title><rect x="68.3879%" y="773" width="0.0245%" height="15" fill="rgb(205,95,48)" fg:x="147776" fg:w="53"/><text x="68.6379%" y="783.50"></text></g><g><title>[libc.so.6] (47 samples, 0.02%)</title><rect x="68.3907%" y="757" width="0.0218%" height="15" fill="rgb(225,179,37)" fg:x="147782" fg:w="47"/><text x="68.6407%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (124 samples, 0.06%)</title><rect x="68.4124%" y="789" width="0.0574%" height="15" fill="rgb(230,209,3)" fg:x="147829" fg:w="124"/><text x="68.6624%" y="799.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (531 samples, 0.25%)</title><rect x="68.2296%" y="821" width="0.2457%" height="15" fill="rgb(248,12,46)" fg:x="147434" fg:w="531"/><text x="68.4796%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (477 samples, 0.22%)</title><rect x="68.2546%" y="805" width="0.2207%" height="15" fill="rgb(234,18,0)" fg:x="147488" fg:w="477"/><text x="68.5046%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (29 samples, 0.01%)</title><rect x="68.4754%" y="821" width="0.0134%" height="15" fill="rgb(238,197,14)" fg:x="147965" fg:w="29"/><text x="68.7254%" y="831.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (718 samples, 0.33%)</title><rect x="68.1579%" y="869" width="0.3323%" height="15" fill="rgb(251,162,48)" fg:x="147279" fg:w="718"/><text x="68.4079%" y="879.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (712 samples, 0.33%)</title><rect x="68.1607%" y="853" width="0.3295%" height="15" fill="rgb(237,73,42)" fg:x="147285" fg:w="712"/><text x="68.4107%" y="863.50"></text></g><g><title>std::io::Write::write_all (705 samples, 0.33%)</title><rect x="68.1639%" y="837" width="0.3263%" height="15" fill="rgb(211,108,8)" fg:x="147292" fg:w="705"/><text x="68.4139%" y="847.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (722 samples, 0.33%)</title><rect x="68.1579%" y="885" width="0.3341%" height="15" fill="rgb(213,45,22)" fg:x="147279" fg:w="722"/><text x="68.4079%" y="895.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (769 samples, 0.36%)</title><rect x="68.1371%" y="901" width="0.3559%" height="15" fill="rgb(252,154,5)" fg:x="147234" fg:w="769"/><text x="68.3871%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (7,358 samples, 3.41%)</title><rect x="65.0938%" y="949" width="3.4051%" height="15" fill="rgb(221,79,52)" fg:x="140658" fg:w="7358"/><text x="65.3438%" y="959.50">&lt;bi..</text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (7,358 samples, 3.41%)</title><rect x="65.0938%" y="933" width="3.4051%" height="15" fill="rgb(229,220,36)" fg:x="140658" fg:w="7358"/><text x="65.3438%" y="943.50">&lt;al..</text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (7,347 samples, 3.40%)</title><rect x="65.0989%" y="917" width="3.4001%" height="15" fill="rgb(211,17,16)" fg:x="140669" fg:w="7347"/><text x="65.3489%" y="927.50">bit..</text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (76 samples, 0.04%)</title><rect x="68.8146%" y="853" width="0.0352%" height="15" fill="rgb(222,55,31)" fg:x="148698" fg:w="76"/><text x="69.0646%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (312 samples, 0.14%)</title><rect x="68.8498%" y="853" width="0.1444%" height="15" fill="rgb(221,221,31)" fg:x="148774" fg:w="312"/><text x="69.0998%" y="863.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (1,185 samples, 0.55%)</title><rect x="68.6161%" y="869" width="0.5484%" height="15" fill="rgb(227,168,26)" fg:x="148269" fg:w="1185"/><text x="68.8661%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (368 samples, 0.17%)</title><rect x="68.9941%" y="853" width="0.1703%" height="15" fill="rgb(224,139,9)" fg:x="149086" fg:w="368"/><text x="69.2441%" y="863.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (40 samples, 0.02%)</title><rect x="69.1644%" y="869" width="0.0185%" height="15" fill="rgb(254,172,0)" fg:x="149454" fg:w="40"/><text x="69.4144%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (40 samples, 0.02%)</title><rect x="69.1644%" y="853" width="0.0185%" height="15" fill="rgb(235,203,1)" fg:x="149454" fg:w="40"/><text x="69.4144%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (40 samples, 0.02%)</title><rect x="69.1644%" y="837" width="0.0185%" height="15" fill="rgb(216,205,24)" fg:x="149454" fg:w="40"/><text x="69.4144%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (131 samples, 0.06%)</title><rect x="69.1867%" y="869" width="0.0606%" height="15" fill="rgb(233,24,6)" fg:x="149502" fg:w="131"/><text x="69.4367%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (131 samples, 0.06%)</title><rect x="69.1867%" y="853" width="0.0606%" height="15" fill="rgb(244,110,9)" fg:x="149502" fg:w="131"/><text x="69.4367%" y="863.50"></text></g><g><title>[libc.so.6] (115 samples, 0.05%)</title><rect x="69.1941%" y="837" width="0.0532%" height="15" fill="rgb(239,222,42)" fg:x="149518" fg:w="115"/><text x="69.4441%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (64 samples, 0.03%)</title><rect x="69.2473%" y="869" width="0.0296%" height="15" fill="rgb(218,145,13)" fg:x="149633" fg:w="64"/><text x="69.4973%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,532 samples, 0.71%)</title><rect x="68.5716%" y="885" width="0.7090%" height="15" fill="rgb(207,69,11)" fg:x="148173" fg:w="1532"/><text x="68.8216%" y="895.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,582 samples, 0.73%)</title><rect x="68.5490%" y="901" width="0.7321%" height="15" fill="rgb(220,223,22)" fg:x="148124" fg:w="1582"/><text x="68.7990%" y="911.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (1,713 samples, 0.79%)</title><rect x="68.4999%" y="933" width="0.7927%" height="15" fill="rgb(245,102,5)" fg:x="148018" fg:w="1713"/><text x="68.7499%" y="943.50"></text></g><g><title>std::io::Write::write_all (1,706 samples, 0.79%)</title><rect x="68.5031%" y="917" width="0.7895%" height="15" fill="rgb(211,148,2)" fg:x="148025" fg:w="1706"/><text x="68.7531%" y="927.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (9,080 samples, 4.20%)</title><rect x="65.0924%" y="965" width="4.2021%" height="15" fill="rgb(241,13,44)" fg:x="140655" fg:w="9080"/><text x="65.3424%" y="975.50">&lt;bitc..</text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,719 samples, 0.80%)</title><rect x="68.4990%" y="949" width="0.7955%" height="15" fill="rgb(219,137,21)" fg:x="148016" fg:w="1719"/><text x="68.7490%" y="959.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (52 samples, 0.02%)</title><rect x="69.3037%" y="901" width="0.0241%" height="15" fill="rgb(242,206,5)" fg:x="149755" fg:w="52"/><text x="69.5537%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (44 samples, 0.02%)</title><rect x="69.3074%" y="885" width="0.0204%" height="15" fill="rgb(217,114,22)" fg:x="149763" fg:w="44"/><text x="69.5574%" y="895.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (78 samples, 0.04%)</title><rect x="69.2945%" y="965" width="0.0361%" height="15" fill="rgb(253,206,42)" fg:x="149735" fg:w="78"/><text x="69.5445%" y="975.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="69.2973%" y="949" width="0.0333%" height="15" fill="rgb(236,102,18)" fg:x="149741" fg:w="72"/><text x="69.5473%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (72 samples, 0.03%)</title><rect x="69.2973%" y="933" width="0.0333%" height="15" fill="rgb(208,59,49)" fg:x="149741" fg:w="72"/><text x="69.5473%" y="943.50"></text></g><g><title>std::io::Write::write_all (71 samples, 0.03%)</title><rect x="69.2977%" y="917" width="0.0329%" height="15" fill="rgb(215,194,28)" fg:x="149742" fg:w="71"/><text x="69.5477%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (9,164 samples, 4.24%)</title><rect x="65.0911%" y="981" width="4.2409%" height="15" fill="rgb(243,207,11)" fg:x="140652" fg:w="9164"/><text x="65.3411%" y="991.50">&lt;allo..</text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (44 samples, 0.02%)</title><rect x="69.3408%" y="917" width="0.0204%" height="15" fill="rgb(254,179,35)" fg:x="149835" fg:w="44"/><text x="69.5908%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (34 samples, 0.02%)</title><rect x="69.3454%" y="901" width="0.0157%" height="15" fill="rgb(235,97,3)" fg:x="149845" fg:w="34"/><text x="69.5954%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::locktime::PackedLockTime as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (66 samples, 0.03%)</title><rect x="69.3320%" y="981" width="0.0305%" height="15" fill="rgb(215,155,33)" fg:x="149816" fg:w="66"/><text x="69.5820%" y="991.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (65 samples, 0.03%)</title><rect x="69.3324%" y="965" width="0.0301%" height="15" fill="rgb(223,128,12)" fg:x="149817" fg:w="65"/><text x="69.5824%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (65 samples, 0.03%)</title><rect x="69.3324%" y="949" width="0.0301%" height="15" fill="rgb(208,157,18)" fg:x="149817" fg:w="65"/><text x="69.5824%" y="959.50"></text></g><g><title>std::io::Write::write_all (62 samples, 0.03%)</title><rect x="69.3338%" y="933" width="0.0287%" height="15" fill="rgb(249,70,54)" fg:x="149820" fg:w="62"/><text x="69.5838%" y="943.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (126 samples, 0.06%)</title><rect x="69.7064%" y="901" width="0.0583%" height="15" fill="rgb(244,118,24)" fg:x="150625" fg:w="126"/><text x="69.9564%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (514 samples, 0.24%)</title><rect x="69.7647%" y="901" width="0.2379%" height="15" fill="rgb(211,54,0)" fg:x="150751" fg:w="514"/><text x="70.0147%" y="911.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (1,970 samples, 0.91%)</title><rect x="69.4088%" y="917" width="0.9117%" height="15" fill="rgb(245,137,45)" fg:x="149982" fg:w="1970"/><text x="69.6588%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (687 samples, 0.32%)</title><rect x="70.0025%" y="901" width="0.3179%" height="15" fill="rgb(232,154,31)" fg:x="151265" fg:w="687"/><text x="70.2525%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (36 samples, 0.02%)</title><rect x="70.3293%" y="917" width="0.0167%" height="15" fill="rgb(253,6,39)" fg:x="151971" fg:w="36"/><text x="70.5793%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.02%)</title><rect x="70.3293%" y="901" width="0.0167%" height="15" fill="rgb(234,183,24)" fg:x="151971" fg:w="36"/><text x="70.5793%" y="911.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="70.3320%" y="885" width="0.0139%" height="15" fill="rgb(252,84,40)" fg:x="151977" fg:w="30"/><text x="70.5820%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (30 samples, 0.01%)</title><rect x="70.3459%" y="917" width="0.0139%" height="15" fill="rgb(224,65,2)" fg:x="152007" fg:w="30"/><text x="70.5959%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2,095 samples, 0.97%)</title><rect x="69.3907%" y="933" width="0.9695%" height="15" fill="rgb(229,38,24)" fg:x="149943" fg:w="2095"/><text x="69.6407%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::midstate (34 samples, 0.02%)</title><rect x="70.3603%" y="933" width="0.0157%" height="15" fill="rgb(218,131,50)" fg:x="152038" fg:w="34"/><text x="70.6103%" y="943.50"></text></g><g><title>bitcoin_hashes::util::u32_to_array_be (29 samples, 0.01%)</title><rect x="70.3626%" y="917" width="0.0134%" height="15" fill="rgb(233,106,18)" fg:x="152043" fg:w="29"/><text x="70.6126%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (2,159 samples, 1.00%)</title><rect x="69.3773%" y="949" width="0.9991%" height="15" fill="rgb(220,216,11)" fg:x="149914" fg:w="2159"/><text x="69.6273%" y="959.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (68 samples, 0.03%)</title><rect x="70.5894%" y="885" width="0.0315%" height="15" fill="rgb(251,100,45)" fg:x="152533" fg:w="68"/><text x="70.8394%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (315 samples, 0.15%)</title><rect x="70.6208%" y="885" width="0.1458%" height="15" fill="rgb(235,143,32)" fg:x="152601" fg:w="315"/><text x="70.8708%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (1,210 samples, 0.56%)</title><rect x="70.4052%" y="901" width="0.5600%" height="15" fill="rgb(248,124,34)" fg:x="152135" fg:w="1210"/><text x="70.6552%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (429 samples, 0.20%)</title><rect x="70.7666%" y="885" width="0.1985%" height="15" fill="rgb(225,221,4)" fg:x="152916" fg:w="429"/><text x="71.0166%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (63 samples, 0.03%)</title><rect x="70.9707%" y="901" width="0.0292%" height="15" fill="rgb(242,27,43)" fg:x="153357" fg:w="63"/><text x="71.2207%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.03%)</title><rect x="70.9707%" y="885" width="0.0292%" height="15" fill="rgb(227,54,8)" fg:x="153357" fg:w="63"/><text x="71.2207%" y="895.50"></text></g><g><title>[libc.so.6] (61 samples, 0.03%)</title><rect x="70.9716%" y="869" width="0.0282%" height="15" fill="rgb(253,139,49)" fg:x="153359" fg:w="61"/><text x="71.2216%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,336 samples, 0.62%)</title><rect x="70.3917%" y="917" width="0.6183%" height="15" fill="rgb(231,26,43)" fg:x="152106" fg:w="1336"/><text x="70.6417%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (22 samples, 0.01%)</title><rect x="70.9998%" y="901" width="0.0102%" height="15" fill="rgb(207,121,39)" fg:x="153420" fg:w="22"/><text x="71.2498%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,388 samples, 0.64%)</title><rect x="70.3848%" y="933" width="0.6423%" height="15" fill="rgb(223,101,35)" fg:x="152091" fg:w="1388"/><text x="70.6348%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::midstate (37 samples, 0.02%)</title><rect x="71.0100%" y="917" width="0.0171%" height="15" fill="rgb(232,87,23)" fg:x="153442" fg:w="37"/><text x="71.2600%" y="927.50"></text></g><g><title>bitcoin_hashes::util::u32_to_array_be (36 samples, 0.02%)</title><rect x="71.0105%" y="901" width="0.0167%" height="15" fill="rgb(225,180,29)" fg:x="153443" fg:w="36"/><text x="71.2605%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (29 samples, 0.01%)</title><rect x="71.0271%" y="933" width="0.0134%" height="15" fill="rgb(225,25,17)" fg:x="153479" fg:w="29"/><text x="71.2771%" y="943.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin_hashes::Hash&gt;::from_engine (3,618 samples, 1.67%)</title><rect x="69.3671%" y="981" width="1.6743%" height="15" fill="rgb(223,8,52)" fg:x="149892" fg:w="3618"/><text x="69.6171%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (3,609 samples, 1.67%)</title><rect x="69.3713%" y="965" width="1.6702%" height="15" fill="rgb(246,42,21)" fg:x="149901" fg:w="3609"/><text x="69.6213%" y="975.50"></text></g><g><title>bitcoin_hashes::Hash::hash (1,437 samples, 0.67%)</title><rect x="70.3765%" y="949" width="0.6650%" height="15" fill="rgb(205,64,43)" fg:x="152073" fg:w="1437"/><text x="70.6265%" y="959.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (39 samples, 0.02%)</title><rect x="71.0484%" y="933" width="0.0180%" height="15" fill="rgb(221,160,13)" fg:x="153525" fg:w="39"/><text x="71.2984%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (31 samples, 0.01%)</title><rect x="71.0521%" y="917" width="0.0143%" height="15" fill="rgb(239,58,35)" fg:x="153533" fg:w="31"/><text x="71.3021%" y="927.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (65 samples, 0.03%)</title><rect x="71.0415%" y="981" width="0.0301%" height="15" fill="rgb(251,26,40)" fg:x="153510" fg:w="65"/><text x="71.2915%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (65 samples, 0.03%)</title><rect x="71.0415%" y="965" width="0.0301%" height="15" fill="rgb(247,0,4)" fg:x="153510" fg:w="65"/><text x="71.2915%" y="975.50"></text></g><g><title>std::io::Write::write_all (65 samples, 0.03%)</title><rect x="71.0415%" y="949" width="0.0301%" height="15" fill="rgb(218,130,10)" fg:x="153510" fg:w="65"/><text x="71.2915%" y="959.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (14,085 samples, 6.52%)</title><rect x="64.5552%" y="997" width="6.5183%" height="15" fill="rgb(239,32,7)" fg:x="139494" fg:w="14085"/><text x="64.8052%" y="1007.50">bitcoin::..</text></g><g><title>bitcoin_hashes::sha256::Midstate::from_slice (29 samples, 0.01%)</title><rect x="71.0734%" y="997" width="0.0134%" height="15" fill="rgb(210,192,24)" fg:x="153579" fg:w="29"/><text x="71.3234%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (23 samples, 0.01%)</title><rect x="71.0762%" y="981" width="0.0106%" height="15" fill="rgb(226,212,17)" fg:x="153585" fg:w="23"/><text x="71.3262%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.01%)</title><rect x="71.0762%" y="965" width="0.0106%" height="15" fill="rgb(219,201,28)" fg:x="153585" fg:w="23"/><text x="71.3262%" y="975.50"></text></g><g><title>floresta_chain::pruned_utreexo::consensus::Consensus::get_leaf_hashes (17,413 samples, 8.06%)</title><rect x="63.0340%" y="1013" width="8.0584%" height="15" fill="rgb(235,207,41)" fg:x="136207" fg:w="17413"/><text x="63.2840%" y="1023.50">floresta_ch..</text></g><g><title>[libc.so.6] (112 samples, 0.05%)</title><rect x="71.1192%" y="853" width="0.0518%" height="15" fill="rgb(241,95,54)" fg:x="153678" fg:w="112"/><text x="71.3692%" y="863.50"></text></g><g><title>[libc.so.6] (119 samples, 0.06%)</title><rect x="71.1165%" y="869" width="0.0551%" height="15" fill="rgb(248,12,23)" fg:x="153672" fg:w="119"/><text x="71.3665%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (148 samples, 0.07%)</title><rect x="71.1077%" y="933" width="0.0685%" height="15" fill="rgb(228,173,4)" fg:x="153653" fg:w="148"/><text x="71.3577%" y="943.50"></text></g><g><title>alloc::alloc::Global::grow_impl (148 samples, 0.07%)</title><rect x="71.1077%" y="917" width="0.0685%" height="15" fill="rgb(254,99,5)" fg:x="153653" fg:w="148"/><text x="71.3577%" y="927.50"></text></g><g><title>alloc::alloc::realloc (147 samples, 0.07%)</title><rect x="71.1081%" y="901" width="0.0680%" height="15" fill="rgb(212,184,17)" fg:x="153654" fg:w="147"/><text x="71.3581%" y="911.50"></text></g><g><title>realloc (145 samples, 0.07%)</title><rect x="71.1091%" y="885" width="0.0671%" height="15" fill="rgb(252,174,1)" fg:x="153656" fg:w="145"/><text x="71.3591%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (154 samples, 0.07%)</title><rect x="71.1072%" y="949" width="0.0713%" height="15" fill="rgb(241,118,51)" fg:x="153652" fg:w="154"/><text x="71.3572%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (159 samples, 0.07%)</title><rect x="71.1058%" y="981" width="0.0736%" height="15" fill="rgb(227,94,47)" fg:x="153649" fg:w="159"/><text x="71.3558%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (159 samples, 0.07%)</title><rect x="71.1058%" y="965" width="0.0736%" height="15" fill="rgb(229,104,2)" fg:x="153649" fg:w="159"/><text x="71.3558%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (170 samples, 0.08%)</title><rect x="71.1035%" y="997" width="0.0787%" height="15" fill="rgb(219,28,31)" fg:x="153644" fg:w="170"/><text x="71.3535%" y="1007.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="71.3016%" y="773" width="0.0120%" height="15" fill="rgb(233,109,36)" fg:x="154072" fg:w="26"/><text x="71.5516%" y="783.50"></text></g><g><title>[libc.so.6] (111 samples, 0.05%)</title><rect x="71.2627%" y="789" width="0.0514%" height="15" fill="rgb(246,88,11)" fg:x="153988" fg:w="111"/><text x="71.5127%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (169 samples, 0.08%)</title><rect x="71.2363%" y="901" width="0.0782%" height="15" fill="rgb(209,212,17)" fg:x="153931" fg:w="169"/><text x="71.4863%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (169 samples, 0.08%)</title><rect x="71.2363%" y="885" width="0.0782%" height="15" fill="rgb(243,59,29)" fg:x="153931" fg:w="169"/><text x="71.4863%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (169 samples, 0.08%)</title><rect x="71.2363%" y="869" width="0.0782%" height="15" fill="rgb(244,205,48)" fg:x="153931" fg:w="169"/><text x="71.4863%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (164 samples, 0.08%)</title><rect x="71.2386%" y="853" width="0.0759%" height="15" fill="rgb(227,30,6)" fg:x="153936" fg:w="164"/><text x="71.4886%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (164 samples, 0.08%)</title><rect x="71.2386%" y="837" width="0.0759%" height="15" fill="rgb(220,205,48)" fg:x="153936" fg:w="164"/><text x="71.4886%" y="847.50"></text></g><g><title>alloc::alloc::alloc (162 samples, 0.07%)</title><rect x="71.2396%" y="821" width="0.0750%" height="15" fill="rgb(250,94,14)" fg:x="153938" fg:w="162"/><text x="71.4896%" y="831.50"></text></g><g><title>malloc (154 samples, 0.07%)</title><rect x="71.2433%" y="805" width="0.0713%" height="15" fill="rgb(216,119,42)" fg:x="153946" fg:w="154"/><text x="71.4933%" y="815.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (505 samples, 0.23%)</title><rect x="71.2359%" y="981" width="0.2337%" height="15" fill="rgb(232,155,0)" fg:x="153930" fg:w="505"/><text x="71.4859%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (505 samples, 0.23%)</title><rect x="71.2359%" y="965" width="0.2337%" height="15" fill="rgb(212,24,32)" fg:x="153930" fg:w="505"/><text x="71.4859%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (504 samples, 0.23%)</title><rect x="71.2363%" y="949" width="0.2332%" height="15" fill="rgb(216,69,20)" fg:x="153931" fg:w="504"/><text x="71.4863%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (504 samples, 0.23%)</title><rect x="71.2363%" y="933" width="0.2332%" height="15" fill="rgb(229,73,31)" fg:x="153931" fg:w="504"/><text x="71.4863%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (504 samples, 0.23%)</title><rect x="71.2363%" y="917" width="0.2332%" height="15" fill="rgb(224,219,20)" fg:x="153931" fg:w="504"/><text x="71.4863%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (335 samples, 0.16%)</title><rect x="71.3145%" y="901" width="0.1550%" height="15" fill="rgb(215,146,41)" fg:x="154100" fg:w="335"/><text x="71.5645%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (335 samples, 0.16%)</title><rect x="71.3145%" y="885" width="0.1550%" height="15" fill="rgb(244,71,31)" fg:x="154100" fg:w="335"/><text x="71.5645%" y="895.50"></text></g><g><title>[libc.so.6] (335 samples, 0.16%)</title><rect x="71.3145%" y="869" width="0.1550%" height="15" fill="rgb(224,24,11)" fg:x="154100" fg:w="335"/><text x="71.5645%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.01%)</title><rect x="71.5362%" y="917" width="0.0143%" height="15" fill="rgb(229,76,15)" fg:x="154579" fg:w="31"/><text x="71.7862%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (573 samples, 0.27%)</title><rect x="71.4774%" y="965" width="0.2652%" height="15" fill="rgb(209,93,2)" fg:x="154452" fg:w="573"/><text x="71.7274%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (573 samples, 0.27%)</title><rect x="71.4774%" y="949" width="0.2652%" height="15" fill="rgb(216,200,50)" fg:x="154452" fg:w="573"/><text x="71.7274%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (573 samples, 0.27%)</title><rect x="71.4774%" y="933" width="0.2652%" height="15" fill="rgb(211,67,34)" fg:x="154452" fg:w="573"/><text x="71.7274%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (414 samples, 0.19%)</title><rect x="71.5510%" y="917" width="0.1916%" height="15" fill="rgb(225,87,47)" fg:x="154611" fg:w="414"/><text x="71.8010%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (328 samples, 0.15%)</title><rect x="71.5908%" y="901" width="0.1518%" height="15" fill="rgb(217,185,16)" fg:x="154697" fg:w="328"/><text x="71.8408%" y="911.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}} (328 samples, 0.15%)</title><rect x="71.5908%" y="885" width="0.1518%" height="15" fill="rgb(205,0,0)" fg:x="154697" fg:w="328"/><text x="71.8408%" y="895.50"></text></g><g><title>rustreexo::accumulator::util::detect_row (327 samples, 0.15%)</title><rect x="71.5913%" y="869" width="0.1513%" height="15" fill="rgb(207,116,45)" fg:x="154698" fg:w="327"/><text x="71.8413%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (591 samples, 0.27%)</title><rect x="71.4728%" y="981" width="0.2735%" height="15" fill="rgb(221,156,26)" fg:x="154442" fg:w="591"/><text x="71.7228%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.01%)</title><rect x="71.7616%" y="917" width="0.0134%" height="15" fill="rgb(213,140,4)" fg:x="155066" fg:w="29"/><text x="72.0116%" y="927.50"></text></g><g><title>core::slice::sort::merge (62 samples, 0.03%)</title><rect x="71.7574%" y="933" width="0.0287%" height="15" fill="rgb(231,224,15)" fg:x="155057" fg:w="62"/><text x="72.0074%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (119 samples, 0.06%)</title><rect x="71.7500%" y="981" width="0.0551%" height="15" fill="rgb(244,76,20)" fg:x="155041" fg:w="119"/><text x="72.0000%" y="991.50"></text></g><g><title>alloc::slice::stable_sort (119 samples, 0.06%)</title><rect x="71.7500%" y="965" width="0.0551%" height="15" fill="rgb(238,117,7)" fg:x="155041" fg:w="119"/><text x="72.0000%" y="975.50"></text></g><g><title>core::slice::sort::merge_sort (111 samples, 0.05%)</title><rect x="71.7537%" y="949" width="0.0514%" height="15" fill="rgb(235,1,10)" fg:x="155049" fg:w="111"/><text x="72.0037%" y="959.50"></text></g><g><title>core::slice::sort::provide_sorted_batch (28 samples, 0.01%)</title><rect x="71.7921%" y="933" width="0.0130%" height="15" fill="rgb(216,165,6)" fg:x="155132" fg:w="28"/><text x="72.0421%" y="943.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (28 samples, 0.01%)</title><rect x="71.7921%" y="917" width="0.0130%" height="15" fill="rgb(246,91,35)" fg:x="155132" fg:w="28"/><text x="72.0421%" y="927.50"></text></g><g><title>core::slice::sort::insert_tail (25 samples, 0.01%)</title><rect x="71.7935%" y="901" width="0.0116%" height="15" fill="rgb(228,96,24)" fg:x="155135" fg:w="25"/><text x="72.0435%" y="911.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (32 samples, 0.01%)</title><rect x="71.8241%" y="949" width="0.0148%" height="15" fill="rgb(254,217,53)" fg:x="155201" fg:w="32"/><text x="72.0741%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.01%)</title><rect x="71.8241%" y="933" width="0.0148%" height="15" fill="rgb(209,60,0)" fg:x="155201" fg:w="32"/><text x="72.0741%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (32 samples, 0.01%)</title><rect x="71.8241%" y="917" width="0.0148%" height="15" fill="rgb(250,93,26)" fg:x="155201" fg:w="32"/><text x="72.0741%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (32 samples, 0.01%)</title><rect x="71.8241%" y="901" width="0.0148%" height="15" fill="rgb(211,9,40)" fg:x="155201" fg:w="32"/><text x="72.0741%" y="911.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (42 samples, 0.02%)</title><rect x="71.8199%" y="981" width="0.0194%" height="15" fill="rgb(242,57,20)" fg:x="155192" fg:w="42"/><text x="72.0699%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (42 samples, 0.02%)</title><rect x="71.8199%" y="965" width="0.0194%" height="15" fill="rgb(248,85,48)" fg:x="155192" fg:w="42"/><text x="72.0699%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.01%)</title><rect x="71.8426%" y="981" width="0.0120%" height="15" fill="rgb(212,117,2)" fg:x="155241" fg:w="26"/><text x="72.0926%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.01%)</title><rect x="71.8426%" y="965" width="0.0120%" height="15" fill="rgb(243,19,3)" fg:x="155241" fg:w="26"/><text x="72.0926%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.01%)</title><rect x="71.8426%" y="949" width="0.0120%" height="15" fill="rgb(232,217,24)" fg:x="155241" fg:w="26"/><text x="72.0926%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (25 samples, 0.01%)</title><rect x="71.8430%" y="933" width="0.0116%" height="15" fill="rgb(224,175,40)" fg:x="155242" fg:w="25"/><text x="72.0930%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64 samples, 0.03%)</title><rect x="71.8597%" y="853" width="0.0296%" height="15" fill="rgb(212,162,32)" fg:x="155278" fg:w="64"/><text x="72.1097%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (64 samples, 0.03%)</title><rect x="71.8597%" y="837" width="0.0296%" height="15" fill="rgb(215,9,4)" fg:x="155278" fg:w="64"/><text x="72.1097%" y="847.50"></text></g><g><title>cfree (56 samples, 0.03%)</title><rect x="71.8634%" y="821" width="0.0259%" height="15" fill="rgb(242,42,7)" fg:x="155286" fg:w="56"/><text x="72.1134%" y="831.50"></text></g><g><title>[libc.so.6] (47 samples, 0.02%)</title><rect x="71.8676%" y="805" width="0.0218%" height="15" fill="rgb(242,184,45)" fg:x="155295" fg:w="47"/><text x="72.1176%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::peekable::Peekable&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;,rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}}&gt;&gt;&gt; (70 samples, 0.03%)</title><rect x="71.8578%" y="981" width="0.0324%" height="15" fill="rgb(228,111,51)" fg:x="155274" fg:w="70"/><text x="72.1078%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;,rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}}&gt;&gt; (70 samples, 0.03%)</title><rect x="71.8578%" y="965" width="0.0324%" height="15" fill="rgb(236,147,17)" fg:x="155274" fg:w="70"/><text x="72.1078%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;&gt; (70 samples, 0.03%)</title><rect x="71.8578%" y="949" width="0.0324%" height="15" fill="rgb(210,75,22)" fg:x="155274" fg:w="70"/><text x="72.1078%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.03%)</title><rect x="71.8578%" y="933" width="0.0324%" height="15" fill="rgb(217,159,45)" fg:x="155274" fg:w="70"/><text x="72.1078%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(u64,rustreexo::accumulator::node_hash::NodeHash),alloc::alloc::Global&gt;&gt; (70 samples, 0.03%)</title><rect x="71.8578%" y="917" width="0.0324%" height="15" fill="rgb(245,165,53)" fg:x="155274" fg:w="70"/><text x="72.1078%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.03%)</title><rect x="71.8578%" y="901" width="0.0324%" height="15" fill="rgb(251,190,50)" fg:x="155274" fg:w="70"/><text x="72.1078%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;&gt; (66 samples, 0.03%)</title><rect x="71.8597%" y="885" width="0.0305%" height="15" fill="rgb(208,203,29)" fg:x="155278" fg:w="66"/><text x="72.1097%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.03%)</title><rect x="71.8597%" y="869" width="0.0305%" height="15" fill="rgb(207,209,35)" fg:x="155278" fg:w="66"/><text x="72.1097%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (44 samples, 0.02%)</title><rect x="71.8935%" y="965" width="0.0204%" height="15" fill="rgb(230,144,49)" fg:x="155351" fg:w="44"/><text x="72.1435%" y="975.50"></text></g><g><title>&lt;rustreexo::accumulator::node_hash::NodeHash as core::convert::From&lt;bitcoin_hashes::sha512_256::Hash&gt;&gt;::from (44 samples, 0.02%)</title><rect x="71.8935%" y="949" width="0.0204%" height="15" fill="rgb(229,31,6)" fg:x="155351" fg:w="44"/><text x="72.1435%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::to_byte_array (24 samples, 0.01%)</title><rect x="71.9027%" y="933" width="0.0111%" height="15" fill="rgb(251,129,24)" fg:x="155371" fg:w="24"/><text x="72.1527%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (82 samples, 0.04%)</title><rect x="71.9439%" y="949" width="0.0379%" height="15" fill="rgb(235,105,15)" fg:x="155460" fg:w="82"/><text x="72.1939%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (82 samples, 0.04%)</title><rect x="71.9439%" y="933" width="0.0379%" height="15" fill="rgb(216,52,43)" fg:x="155460" fg:w="82"/><text x="72.1939%" y="943.50"></text></g><g><title>[libc.so.6] (67 samples, 0.03%)</title><rect x="71.9509%" y="917" width="0.0310%" height="15" fill="rgb(238,144,41)" fg:x="155475" fg:w="67"/><text x="72.2009%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (155 samples, 0.07%)</title><rect x="71.9138%" y="965" width="0.0717%" height="15" fill="rgb(243,63,9)" fg:x="155395" fg:w="155"/><text x="72.1638%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::engine (47 samples, 0.02%)</title><rect x="71.9856%" y="965" width="0.0218%" height="15" fill="rgb(246,208,1)" fg:x="155550" fg:w="47"/><text x="72.2356%" y="975.50"></text></g><g><title>bitcoin_hashes::sha512_256::Hash::internal_engine (39 samples, 0.02%)</title><rect x="71.9893%" y="949" width="0.0180%" height="15" fill="rgb(233,182,18)" fg:x="155558" fg:w="39"/><text x="72.2393%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::HashEngine as core::default::Default&gt;::default (39 samples, 0.02%)</title><rect x="71.9893%" y="933" width="0.0180%" height="15" fill="rgb(242,224,8)" fg:x="155558" fg:w="39"/><text x="72.2393%" y="943.50"></text></g><g><title>[libc.so.6] (105 samples, 0.05%)</title><rect x="72.0119%" y="933" width="0.0486%" height="15" fill="rgb(243,54,37)" fg:x="155607" fg:w="105"/><text x="72.2619%" y="943.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (30 samples, 0.01%)</title><rect x="72.6344%" y="885" width="0.0139%" height="15" fill="rgb(233,192,12)" fg:x="156952" fg:w="30"/><text x="72.8844%" y="895.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (30 samples, 0.01%)</title><rect x="72.6344%" y="869" width="0.0139%" height="15" fill="rgb(251,192,53)" fg:x="156952" fg:w="30"/><text x="72.8844%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (30 samples, 0.01%)</title><rect x="72.6344%" y="853" width="0.0139%" height="15" fill="rgb(246,141,26)" fg:x="156952" fg:w="30"/><text x="72.8844%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (800 samples, 0.37%)</title><rect x="72.6626%" y="885" width="0.3702%" height="15" fill="rgb(239,195,19)" fg:x="157013" fg:w="800"/><text x="72.9126%" y="895.50"></text></g><g><title>bitcoin_hashes::sha512::HashEngine::process_block (3,043 samples, 1.41%)</title><rect x="72.1387%" y="901" width="1.4082%" height="15" fill="rgb(241,16,39)" fg:x="155881" fg:w="3043"/><text x="72.3887%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,111 samples, 0.51%)</title><rect x="73.0328%" y="885" width="0.5141%" height="15" fill="rgb(223,13,53)" fg:x="157813" fg:w="1111"/><text x="73.2828%" y="895.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (27 samples, 0.01%)</title><rect x="73.5470%" y="901" width="0.0125%" height="15" fill="rgb(214,227,0)" fg:x="158924" fg:w="27"/><text x="73.7970%" y="911.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (27 samples, 0.01%)</title><rect x="73.5470%" y="885" width="0.0125%" height="15" fill="rgb(228,103,26)" fg:x="158924" fg:w="27"/><text x="73.7970%" y="895.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (27 samples, 0.01%)</title><rect x="73.5470%" y="869" width="0.0125%" height="15" fill="rgb(254,177,53)" fg:x="158924" fg:w="27"/><text x="73.7970%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (91 samples, 0.04%)</title><rect x="73.5627%" y="901" width="0.0421%" height="15" fill="rgb(208,201,34)" fg:x="158958" fg:w="91"/><text x="73.8127%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (91 samples, 0.04%)</title><rect x="73.5627%" y="885" width="0.0421%" height="15" fill="rgb(212,39,5)" fg:x="158958" fg:w="91"/><text x="73.8127%" y="895.50"></text></g><g><title>[libc.so.6] (66 samples, 0.03%)</title><rect x="73.5743%" y="869" width="0.0305%" height="15" fill="rgb(246,117,3)" fg:x="158983" fg:w="66"/><text x="73.8243%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (3,284 samples, 1.52%)</title><rect x="72.0943%" y="917" width="1.5198%" height="15" fill="rgb(244,118,39)" fg:x="155785" fg:w="3284"/><text x="72.3443%" y="927.50"></text></g><g><title>bitcoin_hashes::sha512::from_engine (3,377 samples, 1.56%)</title><rect x="72.0605%" y="933" width="1.5628%" height="15" fill="rgb(241,64,10)" fg:x="155712" fg:w="3377"/><text x="72.3105%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::from_engine (3,547 samples, 1.64%)</title><rect x="72.0073%" y="965" width="1.6415%" height="15" fill="rgb(229,39,44)" fg:x="155597" fg:w="3547"/><text x="72.2573%" y="975.50"></text></g><g><title>bitcoin_hashes::sha512_256::from_engine (3,539 samples, 1.64%)</title><rect x="72.0110%" y="949" width="1.6378%" height="15" fill="rgb(230,226,3)" fg:x="155605" fg:w="3539"/><text x="72.2610%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (55 samples, 0.03%)</title><rect x="73.6233%" y="933" width="0.0255%" height="15" fill="rgb(222,13,42)" fg:x="159089" fg:w="55"/><text x="73.8733%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.03%)</title><rect x="73.6233%" y="917" width="0.0255%" height="15" fill="rgb(247,180,54)" fg:x="159089" fg:w="55"/><text x="73.8733%" y="927.50"></text></g><g><title>rustreexo::accumulator::node_hash::NodeHash::parent_hash (3,881 samples, 1.80%)</title><rect x="71.8912%" y="981" width="1.7961%" height="15" fill="rgb(205,96,16)" fg:x="155346" fg:w="3881"/><text x="72.1412%" y="991.50">r..</text></g><g><title>[libc.so.6] (57 samples, 0.03%)</title><rect x="73.6608%" y="965" width="0.0264%" height="15" fill="rgb(205,100,21)" fg:x="159170" fg:w="57"/><text x="73.9108%" y="975.50"></text></g><g><title>[libc.so.6] (62 samples, 0.03%)</title><rect x="73.7441%" y="773" width="0.0287%" height="15" fill="rgb(248,51,4)" fg:x="159350" fg:w="62"/><text x="73.9941%" y="783.50"></text></g><g><title>[libc.so.6] (177 samples, 0.08%)</title><rect x="73.6955%" y="805" width="0.0819%" height="15" fill="rgb(217,197,30)" fg:x="159245" fg:w="177"/><text x="73.9455%" y="815.50"></text></g><g><title>[libc.so.6] (174 samples, 0.08%)</title><rect x="73.6969%" y="789" width="0.0805%" height="15" fill="rgb(240,179,40)" fg:x="159248" fg:w="174"/><text x="73.9469%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (194 samples, 0.09%)</title><rect x="73.6886%" y="949" width="0.0898%" height="15" fill="rgb(212,185,35)" fg:x="159230" fg:w="194"/><text x="73.9386%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (194 samples, 0.09%)</title><rect x="73.6886%" y="933" width="0.0898%" height="15" fill="rgb(251,222,31)" fg:x="159230" fg:w="194"/><text x="73.9386%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (194 samples, 0.09%)</title><rect x="73.6886%" y="917" width="0.0898%" height="15" fill="rgb(208,140,36)" fg:x="159230" fg:w="194"/><text x="73.9386%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (193 samples, 0.09%)</title><rect x="73.6891%" y="901" width="0.0893%" height="15" fill="rgb(220,148,1)" fg:x="159231" fg:w="193"/><text x="73.9391%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (191 samples, 0.09%)</title><rect x="73.6900%" y="885" width="0.0884%" height="15" fill="rgb(254,4,28)" fg:x="159233" fg:w="191"/><text x="73.9400%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (190 samples, 0.09%)</title><rect x="73.6904%" y="869" width="0.0879%" height="15" fill="rgb(222,185,44)" fg:x="159234" fg:w="190"/><text x="73.9404%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (190 samples, 0.09%)</title><rect x="73.6904%" y="853" width="0.0879%" height="15" fill="rgb(215,74,39)" fg:x="159234" fg:w="190"/><text x="73.9404%" y="863.50"></text></g><g><title>alloc::alloc::realloc (190 samples, 0.09%)</title><rect x="73.6904%" y="837" width="0.0879%" height="15" fill="rgb(247,86,4)" fg:x="159234" fg:w="190"/><text x="73.9404%" y="847.50"></text></g><g><title>realloc (188 samples, 0.09%)</title><rect x="73.6914%" y="821" width="0.0870%" height="15" fill="rgb(231,105,32)" fg:x="159236" fg:w="188"/><text x="73.9414%" y="831.50"></text></g><g><title>core::intrinsics::copy (707 samples, 0.33%)</title><rect x="73.7784%" y="949" width="0.3272%" height="15" fill="rgb(222,65,35)" fg:x="159424" fg:w="707"/><text x="74.0284%" y="959.50"></text></g><g><title>[libc.so.6] (703 samples, 0.33%)</title><rect x="73.7802%" y="933" width="0.3253%" height="15" fill="rgb(218,145,35)" fg:x="159428" fg:w="703"/><text x="74.0302%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (916 samples, 0.42%)</title><rect x="73.6872%" y="965" width="0.4239%" height="15" fill="rgb(208,7,15)" fg:x="159227" fg:w="916"/><text x="73.9372%" y="975.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::sorted_push (1,026 samples, 0.47%)</title><rect x="73.6872%" y="981" width="0.4748%" height="15" fill="rgb(209,83,13)" fg:x="159227" fg:w="1026"/><text x="73.9372%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (110 samples, 0.05%)</title><rect x="74.1111%" y="965" width="0.0509%" height="15" fill="rgb(218,3,10)" fg:x="160143" fg:w="110"/><text x="74.3611%" y="975.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::sorted_push::{{closure}} (39 samples, 0.02%)</title><rect x="74.1440%" y="949" width="0.0180%" height="15" fill="rgb(211,219,4)" fg:x="160214" fg:w="39"/><text x="74.3940%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (39 samples, 0.02%)</title><rect x="74.1440%" y="933" width="0.0180%" height="15" fill="rgb(228,194,12)" fg:x="160214" fg:w="39"/><text x="74.3940%" y="943.50"></text></g><g><title>rustreexo::accumulator::util::is_root_position (23 samples, 0.01%)</title><rect x="74.1625%" y="981" width="0.0106%" height="15" fill="rgb(210,175,7)" fg:x="160254" fg:w="23"/><text x="74.4125%" y="991.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes (6,432 samples, 2.98%)</title><rect x="71.1988%" y="997" width="2.9766%" height="15" fill="rgb(243,132,6)" fg:x="153850" fg:w="6432"/><text x="71.4488%" y="1007.50">rus..</text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="74.2638%" y="917" width="0.0259%" height="15" fill="rgb(207,72,18)" fg:x="160473" fg:w="56"/><text x="74.5138%" y="927.50"></text></g><g><title>[libc.so.6] (49 samples, 0.02%)</title><rect x="74.2671%" y="901" width="0.0227%" height="15" fill="rgb(236,1,18)" fg:x="160480" fg:w="49"/><text x="74.5171%" y="911.50"></text></g><g><title>cfree (133 samples, 0.06%)</title><rect x="74.2291%" y="949" width="0.0615%" height="15" fill="rgb(227,0,18)" fg:x="160398" fg:w="133"/><text x="74.4791%" y="959.50"></text></g><g><title>[libc.so.6] (116 samples, 0.05%)</title><rect x="74.2370%" y="933" width="0.0537%" height="15" fill="rgb(247,37,5)" fg:x="160415" fg:w="116"/><text x="74.4870%" y="943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (22 samples, 0.01%)</title><rect x="74.3032%" y="917" width="0.0102%" height="15" fill="rgb(237,179,24)" fg:x="160558" fg:w="22"/><text x="74.5532%" y="927.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (U,T)&gt;::lt (22 samples, 0.01%)</title><rect x="74.3032%" y="901" width="0.0102%" height="15" fill="rgb(226,53,20)" fg:x="160558" fg:w="22"/><text x="74.5532%" y="911.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (66 samples, 0.03%)</title><rect x="74.2907%" y="949" width="0.0305%" height="15" fill="rgb(247,75,7)" fg:x="160531" fg:w="66"/><text x="74.5407%" y="959.50"></text></g><g><title>core::slice::sort::insert_tail (53 samples, 0.02%)</title><rect x="74.2967%" y="933" width="0.0245%" height="15" fill="rgb(233,96,12)" fg:x="160544" fg:w="53"/><text x="74.5467%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::slice::sort::merge_sort::RunVec&lt;alloc::slice::stable_sort&lt;(u64,rustreexo::accumulator::node_hash::NodeHash),&lt;(u64,rustreexo::accumulator::node_hash::NodeHash) as core::cmp::PartialOrd&gt;::lt&gt;::{{closure}},alloc::slice::stable_sort&lt;(u64,rustreexo::accumulator::node_hash::NodeHash),&lt;(u64,rustreexo::accumulator::node_hash::NodeHash) as core::cmp::PartialOrd&gt;::lt&gt;::{{closure}}&gt;&gt; (32 samples, 0.01%)</title><rect x="74.3448%" y="933" width="0.0148%" height="15" fill="rgb(224,125,0)" fg:x="160648" fg:w="32"/><text x="74.5948%" y="943.50"></text></g><g><title>&lt;core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="74.3448%" y="917" width="0.0148%" height="15" fill="rgb(224,92,25)" fg:x="160648" fg:w="32"/><text x="74.5948%" y="927.50"></text></g><g><title>alloc::slice::stable_sort::{{closure}} (32 samples, 0.01%)</title><rect x="74.3448%" y="901" width="0.0148%" height="15" fill="rgb(224,42,24)" fg:x="160648" fg:w="32"/><text x="74.5948%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.01%)</title><rect x="74.3448%" y="885" width="0.0148%" height="15" fill="rgb(234,132,49)" fg:x="160648" fg:w="32"/><text x="74.5948%" y="895.50"></text></g><g><title>cfree (32 samples, 0.01%)</title><rect x="74.3448%" y="869" width="0.0148%" height="15" fill="rgb(248,100,35)" fg:x="160648" fg:w="32"/><text x="74.5948%" y="879.50"></text></g><g><title>core::slice::sort::find_streak (639 samples, 0.30%)</title><rect x="74.3606%" y="933" width="0.2957%" height="15" fill="rgb(239,94,40)" fg:x="160682" fg:w="639"/><text x="74.6106%" y="943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (435 samples, 0.20%)</title><rect x="74.4550%" y="917" width="0.2013%" height="15" fill="rgb(235,139,28)" fg:x="160886" fg:w="435"/><text x="74.7050%" y="927.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (U,T)&gt;::lt (435 samples, 0.20%)</title><rect x="74.4550%" y="901" width="0.2013%" height="15" fill="rgb(217,144,7)" fg:x="160886" fg:w="435"/><text x="74.7050%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (392 samples, 0.18%)</title><rect x="74.4749%" y="885" width="0.1814%" height="15" fill="rgb(227,55,4)" fg:x="160929" fg:w="392"/><text x="74.7249%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (392 samples, 0.18%)</title><rect x="74.4749%" y="869" width="0.1814%" height="15" fill="rgb(252,82,54)" fg:x="160929" fg:w="392"/><text x="74.7249%" y="879.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="74.9034%" y="901" width="0.0167%" height="15" fill="rgb(245,172,4)" fg:x="161855" fg:w="36"/><text x="75.1534%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (345 samples, 0.16%)</title><rect x="74.7613%" y="917" width="0.1597%" height="15" fill="rgb(207,26,27)" fg:x="161548" fg:w="345"/><text x="75.0113%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (186 samples, 0.09%)</title><rect x="74.9210%" y="917" width="0.0861%" height="15" fill="rgb(252,98,18)" fg:x="161893" fg:w="186"/><text x="75.1710%" y="927.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialOrd for (U,T)&gt;::lt (186 samples, 0.09%)</title><rect x="74.9210%" y="901" width="0.0861%" height="15" fill="rgb(244,8,26)" fg:x="161893" fg:w="186"/><text x="75.1710%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (84 samples, 0.04%)</title><rect x="74.9682%" y="885" width="0.0389%" height="15" fill="rgb(237,173,45)" fg:x="161995" fg:w="84"/><text x="75.2182%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (84 samples, 0.04%)</title><rect x="74.9682%" y="869" width="0.0389%" height="15" fill="rgb(208,213,49)" fg:x="161995" fg:w="84"/><text x="75.2182%" y="879.50"></text></g><g><title>core::slice::sort::merge (781 samples, 0.36%)</title><rect x="74.6563%" y="933" width="0.3614%" height="15" fill="rgb(212,122,37)" fg:x="161321" fg:w="781"/><text x="74.9063%" y="943.50"></text></g><g><title>[libc.so.6] (146 samples, 0.07%)</title><rect x="75.3204%" y="853" width="0.0676%" height="15" fill="rgb(213,80,17)" fg:x="162756" fg:w="146"/><text x="75.5704%" y="863.50"></text></g><g><title>[libc.so.6] (701 samples, 0.32%)</title><rect x="75.0663%" y="869" width="0.3244%" height="15" fill="rgb(206,210,43)" fg:x="162207" fg:w="701"/><text x="75.3163%" y="879.50"></text></g><g><title>alloc::alloc::alloc (808 samples, 0.37%)</title><rect x="75.0177%" y="901" width="0.3739%" height="15" fill="rgb(229,214,3)" fg:x="162102" fg:w="808"/><text x="75.2677%" y="911.50"></text></g><g><title>malloc (803 samples, 0.37%)</title><rect x="75.0200%" y="885" width="0.3716%" height="15" fill="rgb(235,213,29)" fg:x="162107" fg:w="803"/><text x="75.2700%" y="895.50"></text></g><g><title>alloc::slice::stable_sort::{{closure}} (810 samples, 0.37%)</title><rect x="75.0177%" y="917" width="0.3749%" height="15" fill="rgb(248,135,26)" fg:x="162102" fg:w="810"/><text x="75.2677%" y="927.50"></text></g><g><title>core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt;::new (811 samples, 0.38%)</title><rect x="75.0177%" y="933" width="0.3753%" height="15" fill="rgb(242,188,12)" fg:x="162102" fg:w="811"/><text x="75.2677%" y="943.50"></text></g><g><title>core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt;::push (24 samples, 0.01%)</title><rect x="75.3990%" y="933" width="0.0111%" height="15" fill="rgb(245,38,12)" fg:x="162926" fg:w="24"/><text x="75.6490%" y="943.50"></text></g><g><title>core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt;::remove (29 samples, 0.01%)</title><rect x="75.4101%" y="933" width="0.0134%" height="15" fill="rgb(218,42,13)" fg:x="162950" fg:w="29"/><text x="75.6601%" y="943.50"></text></g><g><title>core::intrinsics::copy (29 samples, 0.01%)</title><rect x="75.4101%" y="917" width="0.0134%" height="15" fill="rgb(238,132,49)" fg:x="162950" fg:w="29"/><text x="75.6601%" y="927.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="75.4101%" y="901" width="0.0134%" height="15" fill="rgb(209,196,19)" fg:x="162950" fg:w="29"/><text x="75.6601%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (2,616 samples, 1.21%)</title><rect x="74.2287%" y="981" width="1.2106%" height="15" fill="rgb(244,131,22)" fg:x="160397" fg:w="2616"/><text x="74.4787%" y="991.50"></text></g><g><title>alloc::slice::stable_sort (2,616 samples, 1.21%)</title><rect x="74.2287%" y="965" width="1.2106%" height="15" fill="rgb(223,18,34)" fg:x="160397" fg:w="2616"/><text x="74.4787%" y="975.50"></text></g><g><title>core::slice::sort::merge_sort (2,416 samples, 1.12%)</title><rect x="74.3212%" y="949" width="1.1181%" height="15" fill="rgb(252,124,54)" fg:x="160597" fg:w="2416"/><text x="74.5712%" y="959.50"></text></g><g><title>&lt;rustreexo::accumulator::node_hash::NodeHash as core::cmp::PartialEq&gt;::eq (52 samples, 0.02%)</title><rect x="75.7447%" y="901" width="0.0241%" height="15" fill="rgb(229,106,42)" fg:x="163673" fg:w="52"/><text x="75.9947%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup::{{closure}} (734 samples, 0.34%)</title><rect x="75.4481%" y="949" width="0.3397%" height="15" fill="rgb(221,129,1)" fg:x="163032" fg:w="734"/><text x="75.6981%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;mut B&gt; for &amp;mut A&gt;::eq (734 samples, 0.34%)</title><rect x="75.4481%" y="933" width="0.3397%" height="15" fill="rgb(229,74,15)" fg:x="163032" fg:w="734"/><text x="75.6981%" y="943.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (734 samples, 0.34%)</title><rect x="75.4481%" y="917" width="0.3397%" height="15" fill="rgb(210,206,50)" fg:x="163032" fg:w="734"/><text x="75.6981%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (37 samples, 0.02%)</title><rect x="75.7706%" y="901" width="0.0171%" height="15" fill="rgb(251,114,31)" fg:x="163729" fg:w="37"/><text x="76.0206%" y="911.50"></text></g><g><title>core::intrinsics::copy (283 samples, 0.13%)</title><rect x="75.7882%" y="949" width="0.1310%" height="15" fill="rgb(215,225,28)" fg:x="163767" fg:w="283"/><text x="76.0382%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup (1,090 samples, 0.50%)</title><rect x="75.4393%" y="981" width="0.5044%" height="15" fill="rgb(237,109,14)" fg:x="163013" fg:w="1090"/><text x="75.6893%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::dedup_by (1,090 samples, 0.50%)</title><rect x="75.4393%" y="965" width="0.5044%" height="15" fill="rgb(230,13,37)" fg:x="163013" fg:w="1090"/><text x="75.6893%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (47 samples, 0.02%)</title><rect x="75.9220%" y="949" width="0.0218%" height="15" fill="rgb(231,40,28)" fg:x="164056" fg:w="47"/><text x="76.1720%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (47 samples, 0.02%)</title><rect x="75.9220%" y="933" width="0.0218%" height="15" fill="rgb(231,202,18)" fg:x="164056" fg:w="47"/><text x="76.1720%" y="943.50"></text></g><g><title>[libc.so.6] (80 samples, 0.04%)</title><rect x="76.0668%" y="821" width="0.0370%" height="15" fill="rgb(225,33,18)" fg:x="164369" fg:w="80"/><text x="76.3168%" y="831.50"></text></g><g><title>[libc.so.6] (312 samples, 0.14%)</title><rect x="75.9608%" y="853" width="0.1444%" height="15" fill="rgb(223,64,47)" fg:x="164140" fg:w="312"/><text x="76.2108%" y="863.50"></text></g><g><title>[libc.so.6] (300 samples, 0.14%)</title><rect x="75.9664%" y="837" width="0.1388%" height="15" fill="rgb(234,114,13)" fg:x="164152" fg:w="300"/><text x="76.2164%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (331 samples, 0.15%)</title><rect x="75.9544%" y="917" width="0.1532%" height="15" fill="rgb(248,56,40)" fg:x="164126" fg:w="331"/><text x="76.2044%" y="927.50"></text></g><g><title>alloc::alloc::Global::grow_impl (331 samples, 0.15%)</title><rect x="75.9544%" y="901" width="0.1532%" height="15" fill="rgb(221,194,21)" fg:x="164126" fg:w="331"/><text x="76.2044%" y="911.50"></text></g><g><title>alloc::alloc::realloc (331 samples, 0.15%)</title><rect x="75.9544%" y="885" width="0.1532%" height="15" fill="rgb(242,108,46)" fg:x="164126" fg:w="331"/><text x="76.2044%" y="895.50"></text></g><g><title>realloc (330 samples, 0.15%)</title><rect x="75.9548%" y="869" width="0.1527%" height="15" fill="rgb(220,106,10)" fg:x="164127" fg:w="330"/><text x="76.2048%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (351 samples, 0.16%)</title><rect x="75.9525%" y="965" width="0.1624%" height="15" fill="rgb(211,88,4)" fg:x="164122" fg:w="351"/><text x="76.2025%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (351 samples, 0.16%)</title><rect x="75.9525%" y="949" width="0.1624%" height="15" fill="rgb(214,95,34)" fg:x="164122" fg:w="351"/><text x="76.2025%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (348 samples, 0.16%)</title><rect x="75.9539%" y="933" width="0.1610%" height="15" fill="rgb(250,160,33)" fg:x="164125" fg:w="348"/><text x="76.2039%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (418 samples, 0.19%)</title><rect x="75.9507%" y="981" width="0.1934%" height="15" fill="rgb(225,29,10)" fg:x="164118" fg:w="418"/><text x="76.2007%" y="991.50"></text></g><g><title>core::ptr::write (60 samples, 0.03%)</title><rect x="76.1163%" y="965" width="0.0278%" height="15" fill="rgb(224,28,30)" fg:x="164476" fg:w="60"/><text x="76.3663%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (35 samples, 0.02%)</title><rect x="76.1487%" y="965" width="0.0162%" height="15" fill="rgb(231,77,4)" fg:x="164546" fg:w="35"/><text x="76.3987%" y="975.50"></text></g><g><title>&lt;rustreexo::accumulator::node_hash::NodeHash as core::convert::From&lt;bitcoin_hashes::sha512_256::Hash&gt;&gt;::from (35 samples, 0.02%)</title><rect x="76.1487%" y="949" width="0.0162%" height="15" fill="rgb(209,63,21)" fg:x="164546" fg:w="35"/><text x="76.3987%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (29 samples, 0.01%)</title><rect x="76.1816%" y="949" width="0.0134%" height="15" fill="rgb(226,22,11)" fg:x="164617" fg:w="29"/><text x="76.4316%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.01%)</title><rect x="76.1816%" y="933" width="0.0134%" height="15" fill="rgb(216,82,30)" fg:x="164617" fg:w="29"/><text x="76.4316%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (69 samples, 0.03%)</title><rect x="76.1649%" y="965" width="0.0319%" height="15" fill="rgb(246,227,38)" fg:x="164581" fg:w="69"/><text x="76.4149%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::engine (26 samples, 0.01%)</title><rect x="76.1969%" y="965" width="0.0120%" height="15" fill="rgb(251,203,53)" fg:x="164650" fg:w="26"/><text x="76.4469%" y="975.50"></text></g><g><title>bitcoin_hashes::sha512_256::Hash::internal_engine (22 samples, 0.01%)</title><rect x="76.1987%" y="949" width="0.0102%" height="15" fill="rgb(254,101,1)" fg:x="164654" fg:w="22"/><text x="76.4487%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::HashEngine as core::default::Default&gt;::default (22 samples, 0.01%)</title><rect x="76.1987%" y="933" width="0.0102%" height="15" fill="rgb(241,180,5)" fg:x="164654" fg:w="22"/><text x="76.4487%" y="943.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="76.2098%" y="933" width="0.0236%" height="15" fill="rgb(218,168,4)" fg:x="164678" fg:w="51"/><text x="76.4598%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (377 samples, 0.17%)</title><rect x="76.5453%" y="885" width="0.1745%" height="15" fill="rgb(224,223,32)" fg:x="165403" fg:w="377"/><text x="76.7953%" y="895.50"></text></g><g><title>bitcoin_hashes::sha512::HashEngine::process_block (1,471 samples, 0.68%)</title><rect x="76.2783%" y="901" width="0.6808%" height="15" fill="rgb(236,106,22)" fg:x="164826" fg:w="1471"/><text x="76.5283%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (517 samples, 0.24%)</title><rect x="76.7198%" y="885" width="0.2393%" height="15" fill="rgb(206,121,5)" fg:x="165780" fg:w="517"/><text x="76.9698%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (84 samples, 0.04%)</title><rect x="76.9623%" y="901" width="0.0389%" height="15" fill="rgb(233,87,28)" fg:x="166304" fg:w="84"/><text x="77.2123%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (84 samples, 0.04%)</title><rect x="76.9623%" y="885" width="0.0389%" height="15" fill="rgb(236,137,17)" fg:x="166304" fg:w="84"/><text x="77.2123%" y="895.50"></text></g><g><title>[libc.so.6] (65 samples, 0.03%)</title><rect x="76.9711%" y="869" width="0.0301%" height="15" fill="rgb(209,183,38)" fg:x="166323" fg:w="65"/><text x="77.2211%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,628 samples, 0.75%)</title><rect x="76.2510%" y="917" width="0.7534%" height="15" fill="rgb(206,162,44)" fg:x="164767" fg:w="1628"/><text x="76.5010%" y="927.50"></text></g><g><title>bitcoin_hashes::sha512::from_engine (1,673 samples, 0.77%)</title><rect x="76.2334%" y="933" width="0.7742%" height="15" fill="rgb(237,70,39)" fg:x="164729" fg:w="1673"/><text x="76.4834%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,751 samples, 0.81%)</title><rect x="76.2089%" y="965" width="0.8103%" height="15" fill="rgb(212,176,5)" fg:x="164676" fg:w="1751"/><text x="76.4589%" y="975.50"></text></g><g><title>bitcoin_hashes::sha512_256::from_engine (1,749 samples, 0.81%)</title><rect x="76.2098%" y="949" width="0.8094%" height="15" fill="rgb(232,95,16)" fg:x="164678" fg:w="1749"/><text x="76.4598%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (25 samples, 0.01%)</title><rect x="77.0077%" y="933" width="0.0116%" height="15" fill="rgb(219,115,35)" fg:x="166402" fg:w="25"/><text x="77.2577%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.01%)</title><rect x="77.0077%" y="917" width="0.0116%" height="15" fill="rgb(251,67,27)" fg:x="166402" fg:w="25"/><text x="77.2577%" y="927.50"></text></g><g><title>rustreexo::accumulator::node_hash::NodeHash::parent_hash (1,929 samples, 0.89%)</title><rect x="76.1460%" y="981" width="0.8927%" height="15" fill="rgb(222,95,40)" fg:x="164540" fg:w="1929"/><text x="76.3960%" y="991.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="77.0225%" y="965" width="0.0162%" height="15" fill="rgb(250,35,16)" fg:x="166434" fg:w="35"/><text x="77.2725%" y="975.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="77.3501%" y="789" width="0.0143%" height="15" fill="rgb(224,86,44)" fg:x="167142" fg:w="31"/><text x="77.6001%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.06%)</title><rect x="77.3011%" y="853" width="0.0639%" height="15" fill="rgb(237,53,53)" fg:x="167036" fg:w="138"/><text x="77.5511%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.06%)</title><rect x="77.3011%" y="837" width="0.0639%" height="15" fill="rgb(208,171,33)" fg:x="167036" fg:w="138"/><text x="77.5511%" y="847.50"></text></g><g><title>alloc::alloc::alloc (137 samples, 0.06%)</title><rect x="77.3015%" y="821" width="0.0634%" height="15" fill="rgb(222,64,27)" fg:x="167037" fg:w="137"/><text x="77.5515%" y="831.50"></text></g><g><title>malloc (115 samples, 0.05%)</title><rect x="77.3117%" y="805" width="0.0532%" height="15" fill="rgb(221,121,35)" fg:x="167059" fg:w="115"/><text x="77.5617%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (140 samples, 0.06%)</title><rect x="77.3011%" y="901" width="0.0648%" height="15" fill="rgb(228,137,42)" fg:x="167036" fg:w="140"/><text x="77.5511%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (140 samples, 0.06%)</title><rect x="77.3011%" y="885" width="0.0648%" height="15" fill="rgb(227,54,21)" fg:x="167036" fg:w="140"/><text x="77.5511%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (140 samples, 0.06%)</title><rect x="77.3011%" y="869" width="0.0648%" height="15" fill="rgb(240,168,33)" fg:x="167036" fg:w="140"/><text x="77.5511%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (218 samples, 0.10%)</title><rect x="77.2969%" y="965" width="0.1009%" height="15" fill="rgb(243,159,6)" fg:x="167027" fg:w="218"/><text x="77.5469%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (218 samples, 0.10%)</title><rect x="77.2969%" y="949" width="0.1009%" height="15" fill="rgb(205,211,41)" fg:x="167027" fg:w="218"/><text x="77.5469%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (218 samples, 0.10%)</title><rect x="77.2969%" y="933" width="0.1009%" height="15" fill="rgb(253,30,1)" fg:x="167027" fg:w="218"/><text x="77.5469%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (218 samples, 0.10%)</title><rect x="77.2969%" y="917" width="0.1009%" height="15" fill="rgb(226,80,18)" fg:x="167027" fg:w="218"/><text x="77.5469%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (69 samples, 0.03%)</title><rect x="77.3659%" y="901" width="0.0319%" height="15" fill="rgb(253,156,46)" fg:x="167176" fg:w="69"/><text x="77.6159%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.03%)</title><rect x="77.3659%" y="885" width="0.0319%" height="15" fill="rgb(248,87,27)" fg:x="167176" fg:w="69"/><text x="77.6159%" y="895.50"></text></g><g><title>[libc.so.6] (69 samples, 0.03%)</title><rect x="77.3659%" y="869" width="0.0319%" height="15" fill="rgb(227,122,2)" fg:x="167176" fg:w="69"/><text x="77.6159%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (84 samples, 0.04%)</title><rect x="77.3978%" y="965" width="0.0389%" height="15" fill="rgb(229,94,39)" fg:x="167245" fg:w="84"/><text x="77.6478%" y="975.50"></text></g><g><title>__rdl_realloc (47 samples, 0.02%)</title><rect x="77.5667%" y="853" width="0.0218%" height="15" fill="rgb(225,173,31)" fg:x="167610" fg:w="47"/><text x="77.8167%" y="863.50"></text></g><g><title>[libc.so.6] (27 samples, 0.01%)</title><rect x="78.7982%" y="789" width="0.0125%" height="15" fill="rgb(239,176,30)" fg:x="170271" fg:w="27"/><text x="79.0482%" y="799.50"></text></g><g><title>[libc.so.6] (331 samples, 0.15%)</title><rect x="78.6593%" y="805" width="0.1532%" height="15" fill="rgb(212,104,21)" fg:x="169971" fg:w="331"/><text x="78.9093%" y="815.50"></text></g><g><title>[libc.so.6] (2,269 samples, 1.05%)</title><rect x="77.7689%" y="821" width="1.0500%" height="15" fill="rgb(240,209,40)" fg:x="168047" fg:w="2269"/><text x="78.0189%" y="831.50"></text></g><g><title>[libc.so.6] (2,351 samples, 1.09%)</title><rect x="77.7324%" y="837" width="1.0880%" height="15" fill="rgb(234,195,5)" fg:x="167968" fg:w="2351"/><text x="77.9824%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,743 samples, 1.27%)</title><rect x="77.5644%" y="901" width="1.2694%" height="15" fill="rgb(238,213,1)" fg:x="167605" fg:w="2743"/><text x="77.8144%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,743 samples, 1.27%)</title><rect x="77.5644%" y="885" width="1.2694%" height="15" fill="rgb(235,182,54)" fg:x="167605" fg:w="2743"/><text x="77.8144%" y="895.50"></text></g><g><title>alloc::alloc::realloc (2,739 samples, 1.27%)</title><rect x="77.5662%" y="869" width="1.2676%" height="15" fill="rgb(229,50,46)" fg:x="167609" fg:w="2739"/><text x="77.8162%" y="879.50"></text></g><g><title>realloc (2,673 samples, 1.24%)</title><rect x="77.5968%" y="853" width="1.2370%" height="15" fill="rgb(219,145,13)" fg:x="167675" fg:w="2673"/><text x="77.8468%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,794 samples, 1.29%)</title><rect x="77.5454%" y="917" width="1.2930%" height="15" fill="rgb(220,226,10)" fg:x="167564" fg:w="2794"/><text x="77.7954%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2,850 samples, 1.32%)</title><rect x="77.5375%" y="949" width="1.3189%" height="15" fill="rgb(248,47,30)" fg:x="167547" fg:w="2850"/><text x="77.7875%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,848 samples, 1.32%)</title><rect x="77.5385%" y="933" width="1.3180%" height="15" fill="rgb(231,209,44)" fg:x="167549" fg:w="2848"/><text x="77.7885%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (24 samples, 0.01%)</title><rect x="78.8565%" y="949" width="0.0111%" height="15" fill="rgb(209,80,30)" fg:x="170397" fg:w="24"/><text x="79.1065%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (24 samples, 0.01%)</title><rect x="78.8565%" y="933" width="0.0111%" height="15" fill="rgb(232,9,14)" fg:x="170397" fg:w="24"/><text x="79.1065%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,096 samples, 1.43%)</title><rect x="77.4367%" y="965" width="1.4328%" height="15" fill="rgb(243,91,43)" fg:x="167329" fg:w="3096"/><text x="77.6867%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (53 samples, 0.02%)</title><rect x="78.8741%" y="965" width="0.0245%" height="15" fill="rgb(231,90,52)" fg:x="170435" fg:w="53"/><text x="79.1241%" y="975.50"></text></g><g><title>[libc.so.6] (41 samples, 0.02%)</title><rect x="78.9638%" y="853" width="0.0190%" height="15" fill="rgb(253,192,44)" fg:x="170629" fg:w="41"/><text x="79.2138%" y="863.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="78.9689%" y="837" width="0.0139%" height="15" fill="rgb(241,66,31)" fg:x="170640" fg:w="30"/><text x="79.2189%" y="847.50"></text></g><g><title>[libc.so.6] (147 samples, 0.07%)</title><rect x="78.9171%" y="869" width="0.0680%" height="15" fill="rgb(235,81,37)" fg:x="170528" fg:w="147"/><text x="79.1671%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (188 samples, 0.09%)</title><rect x="78.8986%" y="917" width="0.0870%" height="15" fill="rgb(223,221,9)" fg:x="170488" fg:w="188"/><text x="79.1486%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (188 samples, 0.09%)</title><rect x="78.8986%" y="901" width="0.0870%" height="15" fill="rgb(242,180,7)" fg:x="170488" fg:w="188"/><text x="79.1486%" y="911.50"></text></g><g><title>cfree (169 samples, 0.08%)</title><rect x="78.9074%" y="885" width="0.0782%" height="15" fill="rgb(243,78,19)" fg:x="170507" fg:w="169"/><text x="79.1574%" y="895.50"></text></g><g><title>rustreexo::accumulator::util::roots_to_destroy (4,232 samples, 1.96%)</title><rect x="77.0401%" y="981" width="1.9585%" height="15" fill="rgb(233,23,17)" fg:x="166472" fg:w="4232"/><text x="77.2901%" y="991.50">r..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rustreexo::accumulator::node_hash::NodeHash&gt;&gt; (216 samples, 0.10%)</title><rect x="78.8986%" y="965" width="0.1000%" height="15" fill="rgb(252,122,45)" fg:x="170488" fg:w="216"/><text x="79.1486%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rustreexo::accumulator::node_hash::NodeHash&gt;&gt; (216 samples, 0.10%)</title><rect x="78.8986%" y="949" width="0.1000%" height="15" fill="rgb(247,108,20)" fg:x="170488" fg:w="216"/><text x="79.1486%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (216 samples, 0.10%)</title><rect x="78.8986%" y="933" width="0.1000%" height="15" fill="rgb(235,84,21)" fg:x="170488" fg:w="216"/><text x="79.1486%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (28 samples, 0.01%)</title><rect x="78.9856%" y="917" width="0.0130%" height="15" fill="rgb(247,129,10)" fg:x="170676" fg:w="28"/><text x="79.2356%" y="927.50"></text></g><g><title>rustreexo::accumulator::stump::Stump::add (10,425 samples, 4.82%)</title><rect x="74.1754%" y="997" width="4.8245%" height="15" fill="rgb(208,173,14)" fg:x="160282" fg:w="10425"/><text x="74.4254%" y="1007.50">rustre..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (133 samples, 0.06%)</title><rect x="79.0448%" y="885" width="0.0615%" height="15" fill="rgb(236,31,38)" fg:x="170804" fg:w="133"/><text x="79.2948%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (133 samples, 0.06%)</title><rect x="79.0448%" y="869" width="0.0615%" height="15" fill="rgb(232,65,17)" fg:x="170804" fg:w="133"/><text x="79.2948%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (133 samples, 0.06%)</title><rect x="79.0448%" y="853" width="0.0615%" height="15" fill="rgb(224,45,49)" fg:x="170804" fg:w="133"/><text x="79.2948%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (132 samples, 0.06%)</title><rect x="79.0453%" y="837" width="0.0611%" height="15" fill="rgb(225,2,53)" fg:x="170805" fg:w="132"/><text x="79.2953%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (132 samples, 0.06%)</title><rect x="79.0453%" y="821" width="0.0611%" height="15" fill="rgb(248,210,53)" fg:x="170805" fg:w="132"/><text x="79.2953%" y="831.50"></text></g><g><title>alloc::alloc::alloc (132 samples, 0.06%)</title><rect x="79.0453%" y="805" width="0.0611%" height="15" fill="rgb(211,1,30)" fg:x="170805" fg:w="132"/><text x="79.2953%" y="815.50"></text></g><g><title>malloc (126 samples, 0.06%)</title><rect x="79.0481%" y="789" width="0.0583%" height="15" fill="rgb(224,96,15)" fg:x="170811" fg:w="126"/><text x="79.2981%" y="799.50"></text></g><g><title>[libc.so.6] (95 samples, 0.04%)</title><rect x="79.0624%" y="773" width="0.0440%" height="15" fill="rgb(252,45,11)" fg:x="170842" fg:w="95"/><text x="79.3124%" y="783.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (458 samples, 0.21%)</title><rect x="79.0448%" y="965" width="0.2120%" height="15" fill="rgb(220,125,38)" fg:x="170804" fg:w="458"/><text x="79.2948%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (458 samples, 0.21%)</title><rect x="79.0448%" y="949" width="0.2120%" height="15" fill="rgb(243,161,33)" fg:x="170804" fg:w="458"/><text x="79.2948%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (458 samples, 0.21%)</title><rect x="79.0448%" y="933" width="0.2120%" height="15" fill="rgb(248,197,34)" fg:x="170804" fg:w="458"/><text x="79.2948%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (458 samples, 0.21%)</title><rect x="79.0448%" y="917" width="0.2120%" height="15" fill="rgb(228,165,23)" fg:x="170804" fg:w="458"/><text x="79.2948%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (458 samples, 0.21%)</title><rect x="79.0448%" y="901" width="0.2120%" height="15" fill="rgb(236,94,38)" fg:x="170804" fg:w="458"/><text x="79.2948%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (325 samples, 0.15%)</title><rect x="79.1064%" y="885" width="0.1504%" height="15" fill="rgb(220,13,23)" fg:x="170937" fg:w="325"/><text x="79.3564%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (325 samples, 0.15%)</title><rect x="79.1064%" y="869" width="0.1504%" height="15" fill="rgb(234,26,39)" fg:x="170937" fg:w="325"/><text x="79.3564%" y="879.50"></text></g><g><title>[libc.so.6] (325 samples, 0.15%)</title><rect x="79.1064%" y="853" width="0.1504%" height="15" fill="rgb(205,117,44)" fg:x="170937" fg:w="325"/><text x="79.3564%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (579 samples, 0.27%)</title><rect x="79.2637%" y="949" width="0.2680%" height="15" fill="rgb(250,42,2)" fg:x="171277" fg:w="579"/><text x="79.5137%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (579 samples, 0.27%)</title><rect x="79.2637%" y="933" width="0.2680%" height="15" fill="rgb(223,83,14)" fg:x="171277" fg:w="579"/><text x="79.5137%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (579 samples, 0.27%)</title><rect x="79.2637%" y="917" width="0.2680%" height="15" fill="rgb(241,147,50)" fg:x="171277" fg:w="579"/><text x="79.5137%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (444 samples, 0.21%)</title><rect x="79.3262%" y="901" width="0.2055%" height="15" fill="rgb(218,90,6)" fg:x="171412" fg:w="444"/><text x="79.5762%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (355 samples, 0.16%)</title><rect x="79.3674%" y="885" width="0.1643%" height="15" fill="rgb(210,191,5)" fg:x="171501" fg:w="355"/><text x="79.6174%" y="895.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}} (355 samples, 0.16%)</title><rect x="79.3674%" y="869" width="0.1643%" height="15" fill="rgb(225,139,19)" fg:x="171501" fg:w="355"/><text x="79.6174%" y="879.50"></text></g><g><title>rustreexo::accumulator::util::detect_row (353 samples, 0.16%)</title><rect x="79.3683%" y="853" width="0.1634%" height="15" fill="rgb(210,1,33)" fg:x="171503" fg:w="353"/><text x="79.6183%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (599 samples, 0.28%)</title><rect x="79.2591%" y="965" width="0.2772%" height="15" fill="rgb(213,50,3)" fg:x="171267" fg:w="599"/><text x="79.5091%" y="975.50"></text></g><g><title>[libc.so.6] (103 samples, 0.05%)</title><rect x="79.5405%" y="965" width="0.0477%" height="15" fill="rgb(234,227,4)" fg:x="171875" fg:w="103"/><text x="79.7905%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.01%)</title><rect x="79.6006%" y="901" width="0.0102%" height="15" fill="rgb(246,63,5)" fg:x="172005" fg:w="22"/><text x="79.8506%" y="911.50"></text></g><g><title>core::slice::sort::merge (53 samples, 0.02%)</title><rect x="79.5965%" y="917" width="0.0245%" height="15" fill="rgb(245,136,27)" fg:x="171996" fg:w="53"/><text x="79.8465%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (112 samples, 0.05%)</title><rect x="79.5891%" y="965" width="0.0518%" height="15" fill="rgb(247,199,27)" fg:x="171980" fg:w="112"/><text x="79.8391%" y="975.50"></text></g><g><title>alloc::slice::stable_sort (112 samples, 0.05%)</title><rect x="79.5891%" y="949" width="0.0518%" height="15" fill="rgb(252,158,49)" fg:x="171980" fg:w="112"/><text x="79.8391%" y="959.50"></text></g><g><title>core::slice::sort::merge_sort (103 samples, 0.05%)</title><rect x="79.5932%" y="933" width="0.0477%" height="15" fill="rgb(254,73,1)" fg:x="171989" fg:w="103"/><text x="79.8432%" y="943.50"></text></g><g><title>core::slice::sort::provide_sorted_batch (38 samples, 0.02%)</title><rect x="79.6233%" y="917" width="0.0176%" height="15" fill="rgb(248,93,19)" fg:x="172054" fg:w="38"/><text x="79.8733%" y="927.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (38 samples, 0.02%)</title><rect x="79.6233%" y="901" width="0.0176%" height="15" fill="rgb(206,67,5)" fg:x="172054" fg:w="38"/><text x="79.8733%" y="911.50"></text></g><g><title>core::slice::sort::insert_tail (33 samples, 0.02%)</title><rect x="79.6256%" y="885" width="0.0153%" height="15" fill="rgb(209,210,4)" fg:x="172059" fg:w="33"/><text x="79.8756%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (24 samples, 0.01%)</title><rect x="79.6409%" y="965" width="0.0111%" height="15" fill="rgb(214,185,36)" fg:x="172092" fg:w="24"/><text x="79.8909%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.01%)</title><rect x="79.6409%" y="949" width="0.0111%" height="15" fill="rgb(233,191,26)" fg:x="172092" fg:w="24"/><text x="79.8909%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.01%)</title><rect x="79.6409%" y="933" width="0.0111%" height="15" fill="rgb(248,94,17)" fg:x="172092" fg:w="24"/><text x="79.8909%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.01%)</title><rect x="79.6409%" y="917" width="0.0111%" height="15" fill="rgb(250,64,4)" fg:x="172092" fg:w="24"/><text x="79.8909%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.01%)</title><rect x="79.6409%" y="901" width="0.0111%" height="15" fill="rgb(218,41,53)" fg:x="172092" fg:w="24"/><text x="79.8909%" y="911.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (46 samples, 0.02%)</title><rect x="79.6677%" y="933" width="0.0213%" height="15" fill="rgb(251,176,28)" fg:x="172150" fg:w="46"/><text x="79.9177%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.02%)</title><rect x="79.6677%" y="917" width="0.0213%" height="15" fill="rgb(247,22,9)" fg:x="172150" fg:w="46"/><text x="79.9177%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (46 samples, 0.02%)</title><rect x="79.6677%" y="901" width="0.0213%" height="15" fill="rgb(218,201,14)" fg:x="172150" fg:w="46"/><text x="79.9177%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (46 samples, 0.02%)</title><rect x="79.6677%" y="885" width="0.0213%" height="15" fill="rgb(218,94,10)" fg:x="172150" fg:w="46"/><text x="79.9177%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (28 samples, 0.01%)</title><rect x="79.6761%" y="869" width="0.0130%" height="15" fill="rgb(222,183,52)" fg:x="172168" fg:w="28"/><text x="79.9261%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.01%)</title><rect x="79.6779%" y="853" width="0.0111%" height="15" fill="rgb(242,140,25)" fg:x="172172" fg:w="24"/><text x="79.9279%" y="863.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}} (24 samples, 0.01%)</title><rect x="79.6779%" y="837" width="0.0111%" height="15" fill="rgb(235,197,38)" fg:x="172172" fg:w="24"/><text x="79.9279%" y="847.50"></text></g><g><title>rustreexo::accumulator::util::detect_row (23 samples, 0.01%)</title><rect x="79.6784%" y="821" width="0.0106%" height="15" fill="rgb(237,136,15)" fg:x="172173" fg:w="23"/><text x="79.9284%" y="831.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (60 samples, 0.03%)</title><rect x="79.6617%" y="965" width="0.0278%" height="15" fill="rgb(223,44,49)" fg:x="172137" fg:w="60"/><text x="79.9117%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (60 samples, 0.03%)</title><rect x="79.6617%" y="949" width="0.0278%" height="15" fill="rgb(227,71,15)" fg:x="172137" fg:w="60"/><text x="79.9117%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 0.01%)</title><rect x="79.6927%" y="901" width="0.0102%" height="15" fill="rgb(225,153,20)" fg:x="172204" fg:w="22"/><text x="79.9427%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (22 samples, 0.01%)</title><rect x="79.6927%" y="885" width="0.0102%" height="15" fill="rgb(210,190,26)" fg:x="172204" fg:w="22"/><text x="79.9427%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22 samples, 0.01%)</title><rect x="79.6927%" y="869" width="0.0102%" height="15" fill="rgb(223,147,5)" fg:x="172204" fg:w="22"/><text x="79.9427%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (22 samples, 0.01%)</title><rect x="79.6927%" y="853" width="0.0102%" height="15" fill="rgb(207,14,23)" fg:x="172204" fg:w="22"/><text x="79.9427%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (33 samples, 0.02%)</title><rect x="79.6909%" y="965" width="0.0153%" height="15" fill="rgb(211,195,53)" fg:x="172200" fg:w="33"/><text x="79.9409%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (33 samples, 0.02%)</title><rect x="79.6909%" y="949" width="0.0153%" height="15" fill="rgb(237,75,46)" fg:x="172200" fg:w="33"/><text x="79.9409%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.01%)</title><rect x="79.6913%" y="933" width="0.0148%" height="15" fill="rgb(254,55,14)" fg:x="172201" fg:w="32"/><text x="79.9413%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (29 samples, 0.01%)</title><rect x="79.6927%" y="917" width="0.0134%" height="15" fill="rgb(230,185,30)" fg:x="172204" fg:w="29"/><text x="79.9427%" y="927.50"></text></g><g><title>[libc.so.6] (43 samples, 0.02%)</title><rect x="79.7168%" y="789" width="0.0199%" height="15" fill="rgb(220,14,11)" fg:x="172256" fg:w="43"/><text x="79.9668%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (61 samples, 0.03%)</title><rect x="79.7089%" y="837" width="0.0282%" height="15" fill="rgb(215,169,44)" fg:x="172239" fg:w="61"/><text x="79.9589%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (61 samples, 0.03%)</title><rect x="79.7089%" y="821" width="0.0282%" height="15" fill="rgb(253,203,20)" fg:x="172239" fg:w="61"/><text x="79.9589%" y="831.50"></text></g><g><title>cfree (59 samples, 0.03%)</title><rect x="79.7098%" y="805" width="0.0273%" height="15" fill="rgb(229,225,17)" fg:x="172241" fg:w="59"/><text x="79.9598%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::peekable::Peekable&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;,rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}}&gt;&gt;&gt; (65 samples, 0.03%)</title><rect x="79.7084%" y="965" width="0.0301%" height="15" fill="rgb(236,76,26)" fg:x="172238" fg:w="65"/><text x="79.9584%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;,rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}}&gt;&gt; (65 samples, 0.03%)</title><rect x="79.7084%" y="949" width="0.0301%" height="15" fill="rgb(234,15,30)" fg:x="172238" fg:w="65"/><text x="79.9584%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;&gt; (65 samples, 0.03%)</title><rect x="79.7084%" y="933" width="0.0301%" height="15" fill="rgb(211,113,48)" fg:x="172238" fg:w="65"/><text x="79.9584%" y="943.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.03%)</title><rect x="79.7084%" y="917" width="0.0301%" height="15" fill="rgb(221,31,36)" fg:x="172238" fg:w="65"/><text x="79.9584%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(u64,rustreexo::accumulator::node_hash::NodeHash),alloc::alloc::Global&gt;&gt; (65 samples, 0.03%)</title><rect x="79.7084%" y="901" width="0.0301%" height="15" fill="rgb(215,118,52)" fg:x="172238" fg:w="65"/><text x="79.9584%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.03%)</title><rect x="79.7084%" y="885" width="0.0301%" height="15" fill="rgb(241,151,27)" fg:x="172238" fg:w="65"/><text x="79.9584%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;&gt; (64 samples, 0.03%)</title><rect x="79.7089%" y="869" width="0.0296%" height="15" fill="rgb(253,51,3)" fg:x="172239" fg:w="64"/><text x="79.9589%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.03%)</title><rect x="79.7089%" y="853" width="0.0296%" height="15" fill="rgb(216,201,24)" fg:x="172239" fg:w="64"/><text x="79.9589%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.01%)</title><rect x="79.7445%" y="949" width="0.0125%" height="15" fill="rgb(231,107,4)" fg:x="172316" fg:w="27"/><text x="79.9945%" y="959.50"></text></g><g><title>&lt;rustreexo::accumulator::node_hash::NodeHash as core::convert::From&lt;bitcoin_hashes::sha512_256::Hash&gt;&gt;::from (27 samples, 0.01%)</title><rect x="79.7445%" y="933" width="0.0125%" height="15" fill="rgb(243,97,54)" fg:x="172316" fg:w="27"/><text x="79.9945%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (41 samples, 0.02%)</title><rect x="79.7737%" y="933" width="0.0190%" height="15" fill="rgb(221,32,51)" fg:x="172379" fg:w="41"/><text x="80.0237%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.02%)</title><rect x="79.7737%" y="917" width="0.0190%" height="15" fill="rgb(218,171,35)" fg:x="172379" fg:w="41"/><text x="80.0237%" y="927.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="79.7793%" y="901" width="0.0134%" height="15" fill="rgb(214,20,53)" fg:x="172391" fg:w="29"/><text x="80.0293%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (82 samples, 0.04%)</title><rect x="79.7570%" y="949" width="0.0379%" height="15" fill="rgb(239,9,52)" fg:x="172343" fg:w="82"/><text x="80.0070%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::engine (38 samples, 0.02%)</title><rect x="79.7950%" y="949" width="0.0176%" height="15" fill="rgb(215,114,45)" fg:x="172425" fg:w="38"/><text x="80.0450%" y="959.50"></text></g><g><title>bitcoin_hashes::sha512_256::Hash::internal_engine (25 samples, 0.01%)</title><rect x="79.8010%" y="933" width="0.0116%" height="15" fill="rgb(208,118,9)" fg:x="172438" fg:w="25"/><text x="80.0510%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::HashEngine as core::default::Default&gt;::default (25 samples, 0.01%)</title><rect x="79.8010%" y="917" width="0.0116%" height="15" fill="rgb(235,7,39)" fg:x="172438" fg:w="25"/><text x="80.0510%" y="927.50"></text></g><g><title>[libc.so.6] (72 samples, 0.03%)</title><rect x="79.8158%" y="917" width="0.0333%" height="15" fill="rgb(243,225,15)" fg:x="172470" fg:w="72"/><text x="80.0658%" y="927.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (29 samples, 0.01%)</title><rect x="80.2740%" y="869" width="0.0134%" height="15" fill="rgb(225,216,18)" fg:x="173460" fg:w="29"/><text x="80.5240%" y="879.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (29 samples, 0.01%)</title><rect x="80.2740%" y="853" width="0.0134%" height="15" fill="rgb(233,36,38)" fg:x="173460" fg:w="29"/><text x="80.5240%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (29 samples, 0.01%)</title><rect x="80.2740%" y="837" width="0.0134%" height="15" fill="rgb(239,88,23)" fg:x="173460" fg:w="29"/><text x="80.5240%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be_bytes (22 samples, 0.01%)</title><rect x="80.2892%" y="869" width="0.0102%" height="15" fill="rgb(219,181,35)" fg:x="173493" fg:w="22"/><text x="80.5392%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be (22 samples, 0.01%)</title><rect x="80.2892%" y="853" width="0.0102%" height="15" fill="rgb(215,18,46)" fg:x="173493" fg:w="22"/><text x="80.5392%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (22 samples, 0.01%)</title><rect x="80.2892%" y="837" width="0.0102%" height="15" fill="rgb(241,38,11)" fg:x="173493" fg:w="22"/><text x="80.5392%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (578 samples, 0.27%)</title><rect x="80.2994%" y="869" width="0.2675%" height="15" fill="rgb(248,169,45)" fg:x="173515" fg:w="578"/><text x="80.5494%" y="879.50"></text></g><g><title>bitcoin_hashes::sha512::HashEngine::process_block (2,141 samples, 0.99%)</title><rect x="79.9047%" y="885" width="0.9908%" height="15" fill="rgb(239,50,49)" fg:x="172662" fg:w="2141"/><text x="80.1547%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (710 samples, 0.33%)</title><rect x="80.5669%" y="869" width="0.3286%" height="15" fill="rgb(231,96,31)" fg:x="174093" fg:w="710"/><text x="80.8169%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (63 samples, 0.03%)</title><rect x="80.9052%" y="885" width="0.0292%" height="15" fill="rgb(224,193,37)" fg:x="174824" fg:w="63"/><text x="81.1552%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.03%)</title><rect x="80.9052%" y="869" width="0.0292%" height="15" fill="rgb(227,153,50)" fg:x="174824" fg:w="63"/><text x="81.1552%" y="879.50"></text></g><g><title>[libc.so.6] (49 samples, 0.02%)</title><rect x="80.9117%" y="853" width="0.0227%" height="15" fill="rgb(249,228,3)" fg:x="174838" fg:w="49"/><text x="81.1617%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2,314 samples, 1.07%)</title><rect x="79.8686%" y="901" width="1.0709%" height="15" fill="rgb(219,164,43)" fg:x="172584" fg:w="2314"/><text x="80.1186%" y="911.50"></text></g><g><title>bitcoin_hashes::sha512::from_engine (2,366 samples, 1.09%)</title><rect x="79.8491%" y="917" width="1.0949%" height="15" fill="rgb(216,45,41)" fg:x="172542" fg:w="2366"/><text x="80.0991%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::from_engine (2,485 samples, 1.15%)</title><rect x="79.8126%" y="949" width="1.1500%" height="15" fill="rgb(210,226,51)" fg:x="172463" fg:w="2485"/><text x="80.0626%" y="959.50"></text></g><g><title>bitcoin_hashes::sha512_256::from_engine (2,478 samples, 1.15%)</title><rect x="79.8158%" y="933" width="1.1468%" height="15" fill="rgb(209,117,49)" fg:x="172470" fg:w="2478"/><text x="80.0658%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (40 samples, 0.02%)</title><rect x="80.9441%" y="917" width="0.0185%" height="15" fill="rgb(206,196,24)" fg:x="174908" fg:w="40"/><text x="81.1941%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (40 samples, 0.02%)</title><rect x="80.9441%" y="901" width="0.0185%" height="15" fill="rgb(253,218,3)" fg:x="174908" fg:w="40"/><text x="81.1941%" y="911.50"></text></g><g><title>rustreexo::accumulator::node_hash::NodeHash::parent_hash (2,703 samples, 1.25%)</title><rect x="79.7399%" y="965" width="1.2509%" height="15" fill="rgb(252,166,2)" fg:x="172306" fg:w="2703"/><text x="79.9899%" y="975.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="80.9695%" y="949" width="0.0213%" height="15" fill="rgb(236,218,26)" fg:x="174963" fg:w="46"/><text x="81.2195%" y="959.50"></text></g><g><title>[libc.so.6] (62 samples, 0.03%)</title><rect x="81.0038%" y="789" width="0.0287%" height="15" fill="rgb(254,84,19)" fg:x="175037" fg:w="62"/><text x="81.2538%" y="799.50"></text></g><g><title>[libc.so.6] (60 samples, 0.03%)</title><rect x="81.0047%" y="773" width="0.0278%" height="15" fill="rgb(219,137,29)" fg:x="175039" fg:w="60"/><text x="81.2547%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (75 samples, 0.03%)</title><rect x="80.9987%" y="869" width="0.0347%" height="15" fill="rgb(227,47,52)" fg:x="175026" fg:w="75"/><text x="81.2487%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (75 samples, 0.03%)</title><rect x="80.9987%" y="853" width="0.0347%" height="15" fill="rgb(229,167,24)" fg:x="175026" fg:w="75"/><text x="81.2487%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (75 samples, 0.03%)</title><rect x="80.9987%" y="837" width="0.0347%" height="15" fill="rgb(233,164,1)" fg:x="175026" fg:w="75"/><text x="81.2487%" y="847.50"></text></g><g><title>alloc::alloc::realloc (75 samples, 0.03%)</title><rect x="80.9987%" y="821" width="0.0347%" height="15" fill="rgb(218,88,48)" fg:x="175026" fg:w="75"/><text x="81.2487%" y="831.50"></text></g><g><title>realloc (74 samples, 0.03%)</title><rect x="80.9991%" y="805" width="0.0342%" height="15" fill="rgb(226,214,24)" fg:x="175027" fg:w="74"/><text x="81.2491%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (81 samples, 0.04%)</title><rect x="80.9982%" y="933" width="0.0375%" height="15" fill="rgb(233,29,12)" fg:x="175025" fg:w="81"/><text x="81.2482%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (81 samples, 0.04%)</title><rect x="80.9982%" y="917" width="0.0375%" height="15" fill="rgb(219,120,34)" fg:x="175025" fg:w="81"/><text x="81.2482%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.04%)</title><rect x="80.9987%" y="901" width="0.0370%" height="15" fill="rgb(226,78,44)" fg:x="175026" fg:w="80"/><text x="81.2487%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 0.04%)</title><rect x="80.9987%" y="885" width="0.0370%" height="15" fill="rgb(240,15,48)" fg:x="175026" fg:w="80"/><text x="81.2487%" y="895.50"></text></g><g><title>core::intrinsics::copy (730 samples, 0.34%)</title><rect x="81.0362%" y="933" width="0.3378%" height="15" fill="rgb(253,176,7)" fg:x="175107" fg:w="730"/><text x="81.2862%" y="943.50"></text></g><g><title>[libc.so.6] (727 samples, 0.34%)</title><rect x="81.0376%" y="917" width="0.3364%" height="15" fill="rgb(206,166,28)" fg:x="175110" fg:w="727"/><text x="81.2876%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (832 samples, 0.39%)</title><rect x="80.9941%" y="949" width="0.3850%" height="15" fill="rgb(241,53,51)" fg:x="175016" fg:w="832"/><text x="81.2441%" y="959.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::sorted_push (987 samples, 0.46%)</title><rect x="80.9908%" y="965" width="0.4568%" height="15" fill="rgb(249,112,30)" fg:x="175009" fg:w="987"/><text x="81.2408%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (148 samples, 0.07%)</title><rect x="81.3791%" y="949" width="0.0685%" height="15" fill="rgb(217,85,30)" fg:x="175848" fg:w="148"/><text x="81.6291%" y="959.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::sorted_push::{{closure}} (43 samples, 0.02%)</title><rect x="81.4277%" y="933" width="0.0199%" height="15" fill="rgb(233,49,7)" fg:x="175953" fg:w="43"/><text x="81.6777%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (43 samples, 0.02%)</title><rect x="81.4277%" y="917" width="0.0199%" height="15" fill="rgb(234,109,9)" fg:x="175953" fg:w="43"/><text x="81.6777%" y="927.50"></text></g><g><title>rustreexo::accumulator::util::is_root_position (28 samples, 0.01%)</title><rect x="81.4485%" y="965" width="0.0130%" height="15" fill="rgb(253,95,22)" fg:x="175998" fg:w="28"/><text x="81.6985%" y="975.50"></text></g><g><title>rustreexo::accumulator::stump::Stump::modify (22,408 samples, 10.37%)</title><rect x="71.0924%" y="1013" width="10.3700%" height="15" fill="rgb(233,176,25)" fg:x="153620" fg:w="22408"/><text x="71.3424%" y="1023.50">rustreexo::accu..</text></g><g><title>rustreexo::accumulator::stump::Stump::remove (5,321 samples, 2.46%)</title><rect x="78.9999%" y="997" width="2.4625%" height="15" fill="rgb(236,33,39)" fg:x="170707" fg:w="5321"/><text x="79.2499%" y="1007.50">ru..</text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes (5,289 samples, 2.45%)</title><rect x="79.0147%" y="981" width="2.4476%" height="15" fill="rgb(223,226,42)" fg:x="170739" fg:w="5289"/><text x="79.2647%" y="991.50">ru..</text></g><g><title>[libc.so.6] (92 samples, 0.04%)</title><rect x="81.6776%" y="757" width="0.0426%" height="15" fill="rgb(216,99,33)" fg:x="176493" fg:w="92"/><text x="81.9276%" y="767.50"></text></g><g><title>[libc.so.6] (391 samples, 0.18%)</title><rect x="81.5420%" y="773" width="0.1809%" height="15" fill="rgb(235,84,23)" fg:x="176200" fg:w="391"/><text x="81.7920%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (453 samples, 0.21%)</title><rect x="81.5138%" y="837" width="0.2096%" height="15" fill="rgb(232,2,27)" fg:x="176139" fg:w="453"/><text x="81.7638%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (453 samples, 0.21%)</title><rect x="81.5138%" y="821" width="0.2096%" height="15" fill="rgb(241,23,22)" fg:x="176139" fg:w="453"/><text x="81.7638%" y="831.50"></text></g><g><title>alloc::alloc::alloc (453 samples, 0.21%)</title><rect x="81.5138%" y="805" width="0.2096%" height="15" fill="rgb(211,73,27)" fg:x="176139" fg:w="453"/><text x="81.7638%" y="815.50"></text></g><g><title>malloc (447 samples, 0.21%)</title><rect x="81.5165%" y="789" width="0.2069%" height="15" fill="rgb(235,109,49)" fg:x="176145" fg:w="447"/><text x="81.7665%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (456 samples, 0.21%)</title><rect x="81.5128%" y="885" width="0.2110%" height="15" fill="rgb(230,99,29)" fg:x="176137" fg:w="456"/><text x="81.7628%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (456 samples, 0.21%)</title><rect x="81.5128%" y="869" width="0.2110%" height="15" fill="rgb(245,199,7)" fg:x="176137" fg:w="456"/><text x="81.7628%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (456 samples, 0.21%)</title><rect x="81.5128%" y="853" width="0.2110%" height="15" fill="rgb(217,179,10)" fg:x="176137" fg:w="456"/><text x="81.7628%" y="863.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (938 samples, 0.43%)</title><rect x="81.5128%" y="965" width="0.4341%" height="15" fill="rgb(254,99,47)" fg:x="176137" fg:w="938"/><text x="81.7628%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (938 samples, 0.43%)</title><rect x="81.5128%" y="949" width="0.4341%" height="15" fill="rgb(251,121,7)" fg:x="176137" fg:w="938"/><text x="81.7628%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (938 samples, 0.43%)</title><rect x="81.5128%" y="933" width="0.4341%" height="15" fill="rgb(250,177,26)" fg:x="176137" fg:w="938"/><text x="81.7628%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (938 samples, 0.43%)</title><rect x="81.5128%" y="917" width="0.4341%" height="15" fill="rgb(232,88,15)" fg:x="176137" fg:w="938"/><text x="81.7628%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (938 samples, 0.43%)</title><rect x="81.5128%" y="901" width="0.4341%" height="15" fill="rgb(251,54,54)" fg:x="176137" fg:w="938"/><text x="81.7628%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (482 samples, 0.22%)</title><rect x="81.7239%" y="885" width="0.2231%" height="15" fill="rgb(208,177,15)" fg:x="176593" fg:w="482"/><text x="81.9739%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (482 samples, 0.22%)</title><rect x="81.7239%" y="869" width="0.2231%" height="15" fill="rgb(205,97,32)" fg:x="176593" fg:w="482"/><text x="81.9739%" y="879.50"></text></g><g><title>[libc.so.6] (481 samples, 0.22%)</title><rect x="81.7243%" y="853" width="0.2226%" height="15" fill="rgb(217,192,13)" fg:x="176594" fg:w="481"/><text x="81.9743%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.02%)</title><rect x="82.0224%" y="901" width="0.0162%" height="15" fill="rgb(215,163,41)" fg:x="177238" fg:w="35"/><text x="82.2724%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (632 samples, 0.29%)</title><rect x="81.9576%" y="949" width="0.2925%" height="15" fill="rgb(246,83,29)" fg:x="177098" fg:w="632"/><text x="82.2076%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (632 samples, 0.29%)</title><rect x="81.9576%" y="933" width="0.2925%" height="15" fill="rgb(219,2,45)" fg:x="177098" fg:w="632"/><text x="82.2076%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (632 samples, 0.29%)</title><rect x="81.9576%" y="917" width="0.2925%" height="15" fill="rgb(242,215,33)" fg:x="177098" fg:w="632"/><text x="82.2076%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (457 samples, 0.21%)</title><rect x="82.0385%" y="901" width="0.2115%" height="15" fill="rgb(217,1,6)" fg:x="177273" fg:w="457"/><text x="82.2885%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (353 samples, 0.16%)</title><rect x="82.0867%" y="885" width="0.1634%" height="15" fill="rgb(207,85,52)" fg:x="177377" fg:w="353"/><text x="82.3367%" y="895.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}} (353 samples, 0.16%)</title><rect x="82.0867%" y="869" width="0.1634%" height="15" fill="rgb(231,171,19)" fg:x="177377" fg:w="353"/><text x="82.3367%" y="879.50"></text></g><g><title>rustreexo::accumulator::util::detect_row (351 samples, 0.16%)</title><rect x="82.0876%" y="853" width="0.1624%" height="15" fill="rgb(207,128,4)" fg:x="177379" fg:w="351"/><text x="82.3376%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (661 samples, 0.31%)</title><rect x="81.9497%" y="965" width="0.3059%" height="15" fill="rgb(219,208,4)" fg:x="177081" fg:w="661"/><text x="82.1997%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.02%)</title><rect x="82.2778%" y="901" width="0.0199%" height="15" fill="rgb(235,161,42)" fg:x="177790" fg:w="43"/><text x="82.5278%" y="911.50"></text></g><g><title>core::slice::sort::merge (76 samples, 0.04%)</title><rect x="82.2755%" y="917" width="0.0352%" height="15" fill="rgb(247,218,18)" fg:x="177785" fg:w="76"/><text x="82.5255%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (175 samples, 0.08%)</title><rect x="82.2598%" y="965" width="0.0810%" height="15" fill="rgb(232,114,51)" fg:x="177751" fg:w="175"/><text x="82.5098%" y="975.50"></text></g><g><title>alloc::slice::stable_sort (175 samples, 0.08%)</title><rect x="82.2598%" y="949" width="0.0810%" height="15" fill="rgb(222,95,3)" fg:x="177751" fg:w="175"/><text x="82.5098%" y="959.50"></text></g><g><title>core::slice::sort::merge_sort (158 samples, 0.07%)</title><rect x="82.2676%" y="933" width="0.0731%" height="15" fill="rgb(240,65,29)" fg:x="177768" fg:w="158"/><text x="82.5176%" y="943.50"></text></g><g><title>core::slice::sort::provide_sorted_batch (41 samples, 0.02%)</title><rect x="82.3218%" y="917" width="0.0190%" height="15" fill="rgb(249,209,20)" fg:x="177885" fg:w="41"/><text x="82.5718%" y="927.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (39 samples, 0.02%)</title><rect x="82.3227%" y="901" width="0.0180%" height="15" fill="rgb(241,48,37)" fg:x="177887" fg:w="39"/><text x="82.5727%" y="911.50"></text></g><g><title>core::slice::sort::insert_tail (33 samples, 0.02%)</title><rect x="82.3255%" y="885" width="0.0153%" height="15" fill="rgb(230,140,42)" fg:x="177893" fg:w="33"/><text x="82.5755%" y="895.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (46 samples, 0.02%)</title><rect x="82.3680%" y="933" width="0.0213%" height="15" fill="rgb(230,176,45)" fg:x="177985" fg:w="46"/><text x="82.6180%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.02%)</title><rect x="82.3680%" y="917" width="0.0213%" height="15" fill="rgb(245,112,21)" fg:x="177985" fg:w="46"/><text x="82.6180%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (46 samples, 0.02%)</title><rect x="82.3680%" y="901" width="0.0213%" height="15" fill="rgb(207,183,35)" fg:x="177985" fg:w="46"/><text x="82.6180%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (46 samples, 0.02%)</title><rect x="82.3680%" y="885" width="0.0213%" height="15" fill="rgb(227,44,33)" fg:x="177985" fg:w="46"/><text x="82.6180%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (29 samples, 0.01%)</title><rect x="82.3759%" y="869" width="0.0134%" height="15" fill="rgb(246,120,21)" fg:x="178002" fg:w="29"/><text x="82.6259%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.01%)</title><rect x="82.3787%" y="853" width="0.0106%" height="15" fill="rgb(235,57,52)" fg:x="178008" fg:w="23"/><text x="82.6287%" y="863.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}} (23 samples, 0.01%)</title><rect x="82.3787%" y="837" width="0.0106%" height="15" fill="rgb(238,84,10)" fg:x="178008" fg:w="23"/><text x="82.6287%" y="847.50"></text></g><g><title>rustreexo::accumulator::util::detect_row (23 samples, 0.01%)</title><rect x="82.3787%" y="821" width="0.0106%" height="15" fill="rgb(251,200,32)" fg:x="178008" fg:w="23"/><text x="82.6287%" y="831.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (68 samples, 0.03%)</title><rect x="82.3583%" y="965" width="0.0315%" height="15" fill="rgb(247,159,13)" fg:x="177964" fg:w="68"/><text x="82.6083%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (68 samples, 0.03%)</title><rect x="82.3583%" y="949" width="0.0315%" height="15" fill="rgb(238,64,4)" fg:x="177964" fg:w="68"/><text x="82.6083%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 0.01%)</title><rect x="82.3917%" y="901" width="0.0102%" height="15" fill="rgb(221,131,51)" fg:x="178036" fg:w="22"/><text x="82.6417%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (22 samples, 0.01%)</title><rect x="82.3917%" y="885" width="0.0102%" height="15" fill="rgb(242,5,29)" fg:x="178036" fg:w="22"/><text x="82.6417%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22 samples, 0.01%)</title><rect x="82.3917%" y="869" width="0.0102%" height="15" fill="rgb(214,130,32)" fg:x="178036" fg:w="22"/><text x="82.6417%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (22 samples, 0.01%)</title><rect x="82.3917%" y="853" width="0.0102%" height="15" fill="rgb(244,210,16)" fg:x="178036" fg:w="22"/><text x="82.6417%" y="863.50"></text></g><g><title>[libc.so.6] (62 samples, 0.03%)</title><rect x="82.4078%" y="773" width="0.0287%" height="15" fill="rgb(234,48,26)" fg:x="178071" fg:w="62"/><text x="82.6578%" y="783.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="82.4190%" y="757" width="0.0176%" height="15" fill="rgb(231,82,38)" fg:x="178095" fg:w="38"/><text x="82.6690%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (101 samples, 0.05%)</title><rect x="82.3903%" y="965" width="0.0467%" height="15" fill="rgb(254,128,41)" fg:x="178033" fg:w="101"/><text x="82.6403%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (101 samples, 0.05%)</title><rect x="82.3903%" y="949" width="0.0467%" height="15" fill="rgb(212,73,49)" fg:x="178033" fg:w="101"/><text x="82.6403%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (101 samples, 0.05%)</title><rect x="82.3903%" y="933" width="0.0467%" height="15" fill="rgb(205,62,54)" fg:x="178033" fg:w="101"/><text x="82.6403%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (98 samples, 0.05%)</title><rect x="82.3917%" y="917" width="0.0454%" height="15" fill="rgb(228,0,8)" fg:x="178036" fg:w="98"/><text x="82.6417%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (73 samples, 0.03%)</title><rect x="82.4032%" y="901" width="0.0338%" height="15" fill="rgb(251,28,17)" fg:x="178061" fg:w="73"/><text x="82.6532%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (73 samples, 0.03%)</title><rect x="82.4032%" y="885" width="0.0338%" height="15" fill="rgb(238,105,27)" fg:x="178061" fg:w="73"/><text x="82.6532%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (73 samples, 0.03%)</title><rect x="82.4032%" y="869" width="0.0338%" height="15" fill="rgb(237,216,33)" fg:x="178061" fg:w="73"/><text x="82.6532%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (73 samples, 0.03%)</title><rect x="82.4032%" y="853" width="0.0338%" height="15" fill="rgb(229,228,25)" fg:x="178061" fg:w="73"/><text x="82.6532%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71 samples, 0.03%)</title><rect x="82.4041%" y="837" width="0.0329%" height="15" fill="rgb(233,75,23)" fg:x="178063" fg:w="71"/><text x="82.6541%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (71 samples, 0.03%)</title><rect x="82.4041%" y="821" width="0.0329%" height="15" fill="rgb(231,207,16)" fg:x="178063" fg:w="71"/><text x="82.6541%" y="831.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.03%)</title><rect x="82.4041%" y="805" width="0.0329%" height="15" fill="rgb(231,191,45)" fg:x="178063" fg:w="71"/><text x="82.6541%" y="815.50"></text></g><g><title>malloc (69 samples, 0.03%)</title><rect x="82.4051%" y="789" width="0.0319%" height="15" fill="rgb(224,133,17)" fg:x="178065" fg:w="69"/><text x="82.6551%" y="799.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="82.4541%" y="789" width="0.0222%" height="15" fill="rgb(209,178,27)" fg:x="178171" fg:w="48"/><text x="82.7041%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (74 samples, 0.03%)</title><rect x="82.4426%" y="837" width="0.0342%" height="15" fill="rgb(218,37,11)" fg:x="178146" fg:w="74"/><text x="82.6926%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (74 samples, 0.03%)</title><rect x="82.4426%" y="821" width="0.0342%" height="15" fill="rgb(251,226,25)" fg:x="178146" fg:w="74"/><text x="82.6926%" y="831.50"></text></g><g><title>cfree (66 samples, 0.03%)</title><rect x="82.4463%" y="805" width="0.0305%" height="15" fill="rgb(209,222,27)" fg:x="178154" fg:w="66"/><text x="82.6963%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::peekable::Peekable&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;,rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}}&gt;&gt;&gt; (79 samples, 0.04%)</title><rect x="82.4412%" y="965" width="0.0366%" height="15" fill="rgb(238,22,21)" fg:x="178143" fg:w="79"/><text x="82.6912%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;,rustreexo::accumulator::proof::Proof::calculate_hashes::{{closure}}&gt;&gt; (79 samples, 0.04%)</title><rect x="82.4412%" y="949" width="0.0366%" height="15" fill="rgb(233,161,25)" fg:x="178143" fg:w="79"/><text x="82.6912%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;&gt; (79 samples, 0.04%)</title><rect x="82.4412%" y="933" width="0.0366%" height="15" fill="rgb(226,122,53)" fg:x="178143" fg:w="79"/><text x="82.6912%" y="943.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.04%)</title><rect x="82.4412%" y="917" width="0.0366%" height="15" fill="rgb(220,123,17)" fg:x="178143" fg:w="79"/><text x="82.6912%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(u64,rustreexo::accumulator::node_hash::NodeHash),alloc::alloc::Global&gt;&gt; (79 samples, 0.04%)</title><rect x="82.4412%" y="901" width="0.0366%" height="15" fill="rgb(230,224,35)" fg:x="178143" fg:w="79"/><text x="82.6912%" y="911.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.04%)</title><rect x="82.4412%" y="885" width="0.0366%" height="15" fill="rgb(246,83,8)" fg:x="178143" fg:w="79"/><text x="82.6912%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u64,rustreexo::accumulator::node_hash::NodeHash)&gt;&gt; (76 samples, 0.04%)</title><rect x="82.4426%" y="869" width="0.0352%" height="15" fill="rgb(230,214,17)" fg:x="178146" fg:w="76"/><text x="82.6926%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.04%)</title><rect x="82.4426%" y="853" width="0.0352%" height="15" fill="rgb(222,97,18)" fg:x="178146" fg:w="76"/><text x="82.6926%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (44 samples, 0.02%)</title><rect x="82.4861%" y="949" width="0.0204%" height="15" fill="rgb(206,79,1)" fg:x="178240" fg:w="44"/><text x="82.7361%" y="959.50"></text></g><g><title>&lt;rustreexo::accumulator::node_hash::NodeHash as core::convert::From&lt;bitcoin_hashes::sha512_256::Hash&gt;&gt;::from (44 samples, 0.02%)</title><rect x="82.4861%" y="933" width="0.0204%" height="15" fill="rgb(214,121,34)" fg:x="178240" fg:w="44"/><text x="82.7361%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::to_byte_array (27 samples, 0.01%)</title><rect x="82.4939%" y="917" width="0.0125%" height="15" fill="rgb(249,199,46)" fg:x="178257" fg:w="27"/><text x="82.7439%" y="927.50"></text></g><g><title>[libc.so.6] (53 samples, 0.02%)</title><rect x="82.5467%" y="901" width="0.0245%" height="15" fill="rgb(214,222,46)" fg:x="178371" fg:w="53"/><text x="82.7967%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (75 samples, 0.03%)</title><rect x="82.5370%" y="933" width="0.0347%" height="15" fill="rgb(248,168,30)" fg:x="178350" fg:w="75"/><text x="82.7870%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (75 samples, 0.03%)</title><rect x="82.5370%" y="917" width="0.0347%" height="15" fill="rgb(226,14,28)" fg:x="178350" fg:w="75"/><text x="82.7870%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (150 samples, 0.07%)</title><rect x="82.5064%" y="949" width="0.0694%" height="15" fill="rgb(253,123,1)" fg:x="178284" fg:w="150"/><text x="82.7564%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::engine (45 samples, 0.02%)</title><rect x="82.5758%" y="949" width="0.0208%" height="15" fill="rgb(225,24,42)" fg:x="178434" fg:w="45"/><text x="82.8258%" y="959.50"></text></g><g><title>bitcoin_hashes::sha512_256::Hash::internal_engine (32 samples, 0.01%)</title><rect x="82.5819%" y="933" width="0.0148%" height="15" fill="rgb(216,161,37)" fg:x="178447" fg:w="32"/><text x="82.8319%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::HashEngine as core::default::Default&gt;::default (32 samples, 0.01%)</title><rect x="82.5819%" y="917" width="0.0148%" height="15" fill="rgb(251,164,26)" fg:x="178447" fg:w="32"/><text x="82.8319%" y="927.50"></text></g><g><title>[libc.so.6] (115 samples, 0.05%)</title><rect x="82.6055%" y="917" width="0.0532%" height="15" fill="rgb(219,177,3)" fg:x="178498" fg:w="115"/><text x="82.8555%" y="927.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (44 samples, 0.02%)</title><rect x="83.2524%" y="869" width="0.0204%" height="15" fill="rgb(222,65,0)" fg:x="179896" fg:w="44"/><text x="83.5024%" y="879.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (44 samples, 0.02%)</title><rect x="83.2524%" y="853" width="0.0204%" height="15" fill="rgb(223,69,54)" fg:x="179896" fg:w="44"/><text x="83.5024%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (44 samples, 0.02%)</title><rect x="83.2524%" y="837" width="0.0204%" height="15" fill="rgb(235,30,27)" fg:x="179896" fg:w="44"/><text x="83.5024%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (781 samples, 0.36%)</title><rect x="83.2867%" y="869" width="0.3614%" height="15" fill="rgb(220,183,50)" fg:x="179970" fg:w="781"/><text x="83.5367%" y="879.50"></text></g><g><title>bitcoin_hashes::sha512::HashEngine::process_block (3,020 samples, 1.40%)</title><rect x="82.7406%" y="885" width="1.3976%" height="15" fill="rgb(248,198,15)" fg:x="178790" fg:w="3020"/><text x="82.9906%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,059 samples, 0.49%)</title><rect x="83.6481%" y="869" width="0.4901%" height="15" fill="rgb(222,211,4)" fg:x="180751" fg:w="1059"/><text x="83.8981%" y="879.50"></text></g><g><title>[libc.so.6] (104 samples, 0.05%)</title><rect x="84.1636%" y="853" width="0.0481%" height="15" fill="rgb(214,102,34)" fg:x="181865" fg:w="104"/><text x="84.4136%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (144 samples, 0.07%)</title><rect x="84.1456%" y="885" width="0.0666%" height="15" fill="rgb(245,92,5)" fg:x="181826" fg:w="144"/><text x="84.3956%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (144 samples, 0.07%)</title><rect x="84.1456%" y="869" width="0.0666%" height="15" fill="rgb(252,72,51)" fg:x="181826" fg:w="144"/><text x="84.3956%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::sha512::HashEngine as bitcoin_hashes::HashEngine&gt;::input (3,310 samples, 1.53%)</title><rect x="82.6883%" y="901" width="1.5318%" height="15" fill="rgb(252,208,19)" fg:x="178677" fg:w="3310"/><text x="82.9383%" y="911.50"></text></g><g><title>bitcoin_hashes::sha512::from_engine (3,388 samples, 1.57%)</title><rect x="82.6587%" y="917" width="1.5679%" height="15" fill="rgb(211,69,7)" fg:x="178613" fg:w="3388"/><text x="82.9087%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha512_256::Hash as bitcoin_hashes::Hash&gt;::from_engine (3,566 samples, 1.65%)</title><rect x="82.5967%" y="949" width="1.6503%" height="15" fill="rgb(211,27,16)" fg:x="178479" fg:w="3566"/><text x="82.8467%" y="959.50"></text></g><g><title>bitcoin_hashes::sha512_256::from_engine (3,550 samples, 1.64%)</title><rect x="82.6041%" y="933" width="1.6429%" height="15" fill="rgb(219,216,14)" fg:x="178495" fg:w="3550"/><text x="82.8541%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (44 samples, 0.02%)</title><rect x="84.2266%" y="917" width="0.0204%" height="15" fill="rgb(219,71,8)" fg:x="182001" fg:w="44"/><text x="84.4766%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.02%)</title><rect x="84.2266%" y="901" width="0.0204%" height="15" fill="rgb(223,170,53)" fg:x="182001" fg:w="44"/><text x="84.4766%" y="911.50"></text></g><g><title>rustreexo::accumulator::node_hash::NodeHash::parent_hash (3,909 samples, 1.81%)</title><rect x="82.4810%" y="965" width="1.8090%" height="15" fill="rgb(246,21,26)" fg:x="178229" fg:w="3909"/><text x="82.7310%" y="975.50">r..</text></g><g><title>[libc.so.6] (65 samples, 0.03%)</title><rect x="84.2599%" y="949" width="0.0301%" height="15" fill="rgb(248,20,46)" fg:x="182073" fg:w="65"/><text x="84.5099%" y="959.50"></text></g><g><title>[libc.so.6] (97 samples, 0.04%)</title><rect x="84.4024%" y="757" width="0.0449%" height="15" fill="rgb(252,94,11)" fg:x="182381" fg:w="97"/><text x="84.6524%" y="767.50"></text></g><g><title>[libc.so.6] (323 samples, 0.15%)</title><rect x="84.3025%" y="789" width="0.1495%" height="15" fill="rgb(236,163,8)" fg:x="182165" fg:w="323"/><text x="84.5525%" y="799.50"></text></g><g><title>[libc.so.6] (317 samples, 0.15%)</title><rect x="84.3053%" y="773" width="0.1467%" height="15" fill="rgb(217,221,45)" fg:x="182171" fg:w="317"/><text x="84.5553%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (347 samples, 0.16%)</title><rect x="84.2937%" y="869" width="0.1606%" height="15" fill="rgb(238,38,17)" fg:x="182146" fg:w="347"/><text x="84.5437%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (344 samples, 0.16%)</title><rect x="84.2951%" y="853" width="0.1592%" height="15" fill="rgb(242,210,23)" fg:x="182149" fg:w="344"/><text x="84.5451%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (344 samples, 0.16%)</title><rect x="84.2951%" y="837" width="0.1592%" height="15" fill="rgb(250,86,53)" fg:x="182149" fg:w="344"/><text x="84.5451%" y="847.50"></text></g><g><title>alloc::alloc::realloc (344 samples, 0.16%)</title><rect x="84.2951%" y="821" width="0.1592%" height="15" fill="rgb(223,168,25)" fg:x="182149" fg:w="344"/><text x="84.5451%" y="831.50"></text></g><g><title>realloc (340 samples, 0.16%)</title><rect x="84.2969%" y="805" width="0.1573%" height="15" fill="rgb(251,189,4)" fg:x="182153" fg:w="340"/><text x="84.5469%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (351 samples, 0.16%)</title><rect x="84.2923%" y="933" width="0.1624%" height="15" fill="rgb(245,19,28)" fg:x="182143" fg:w="351"/><text x="84.5423%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (351 samples, 0.16%)</title><rect x="84.2923%" y="917" width="0.1624%" height="15" fill="rgb(207,10,34)" fg:x="182143" fg:w="351"/><text x="84.5423%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (350 samples, 0.16%)</title><rect x="84.2928%" y="901" width="0.1620%" height="15" fill="rgb(235,153,31)" fg:x="182144" fg:w="350"/><text x="84.5428%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (350 samples, 0.16%)</title><rect x="84.2928%" y="885" width="0.1620%" height="15" fill="rgb(228,72,37)" fg:x="182144" fg:w="350"/><text x="84.5428%" y="895.50"></text></g><g><title>core::intrinsics::copy (778 samples, 0.36%)</title><rect x="84.4547%" y="933" width="0.3600%" height="15" fill="rgb(215,15,16)" fg:x="182494" fg:w="778"/><text x="84.7047%" y="943.50"></text></g><g><title>[libc.so.6] (776 samples, 0.36%)</title><rect x="84.4557%" y="917" width="0.3591%" height="15" fill="rgb(250,119,29)" fg:x="182496" fg:w="776"/><text x="84.7057%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1,146 samples, 0.53%)</title><rect x="84.2900%" y="949" width="0.5303%" height="15" fill="rgb(214,59,1)" fg:x="182138" fg:w="1146"/><text x="84.5400%" y="959.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::sorted_push (1,255 samples, 0.58%)</title><rect x="84.2900%" y="965" width="0.5808%" height="15" fill="rgb(223,109,25)" fg:x="182138" fg:w="1255"/><text x="84.5400%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (109 samples, 0.05%)</title><rect x="84.8203%" y="949" width="0.0504%" height="15" fill="rgb(230,198,22)" fg:x="183284" fg:w="109"/><text x="85.0703%" y="959.50"></text></g><g><title>rustreexo::accumulator::proof::Proof::sorted_push::{{closure}} (28 samples, 0.01%)</title><rect x="84.8578%" y="933" width="0.0130%" height="15" fill="rgb(245,184,46)" fg:x="183365" fg:w="28"/><text x="85.1078%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (28 samples, 0.01%)</title><rect x="84.8578%" y="917" width="0.0130%" height="15" fill="rgb(253,73,16)" fg:x="183365" fg:w="28"/><text x="85.1078%" y="927.50"></text></g><g><title>rustreexo::accumulator::util::is_root_position (39 samples, 0.02%)</title><rect x="84.8731%" y="965" width="0.0180%" height="15" fill="rgb(206,94,45)" fg:x="183398" fg:w="39"/><text x="85.1231%" y="975.50"></text></g><g><title>rustreexo::accumulator::stump::Stump::verify (7,414 samples, 3.43%)</title><rect x="81.4624%" y="1013" width="3.4311%" height="15" fill="rgb(236,83,27)" fg:x="176028" fg:w="7414"/><text x="81.7124%" y="1023.50">rus..</text></g><g><title>rustreexo::accumulator::proof::Proof::verify (7,412 samples, 3.43%)</title><rect x="81.4633%" y="997" width="3.4301%" height="15" fill="rgb(220,196,8)" fg:x="176030" fg:w="7412"/><text x="81.7133%" y="1007.50">rus..</text></g><g><title>rustreexo::accumulator::proof::Proof::calculate_hashes (7,370 samples, 3.41%)</title><rect x="81.4827%" y="981" width="3.4107%" height="15" fill="rgb(254,185,14)" fg:x="176072" fg:w="7370"/><text x="81.7327%" y="991.50">rus..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (37 samples, 0.02%)</title><rect x="84.8967%" y="917" width="0.0171%" height="15" fill="rgb(226,50,22)" fg:x="183449" fg:w="37"/><text x="85.1467%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (37 samples, 0.02%)</title><rect x="84.8967%" y="901" width="0.0171%" height="15" fill="rgb(253,147,0)" fg:x="183449" fg:w="37"/><text x="85.1467%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (37 samples, 0.02%)</title><rect x="84.8967%" y="885" width="0.0171%" height="15" fill="rgb(252,46,33)" fg:x="183449" fg:w="37"/><text x="85.1467%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (43 samples, 0.02%)</title><rect x="84.9305%" y="757" width="0.0199%" height="15" fill="rgb(242,22,54)" fg:x="183522" fg:w="43"/><text x="85.1805%" y="767.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::hash::Hash&gt;::hash (80 samples, 0.04%)</title><rect x="84.9152%" y="885" width="0.0370%" height="15" fill="rgb(223,178,32)" fg:x="183489" fg:w="80"/><text x="85.1652%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as core::hash::Hash&gt;::hash (80 samples, 0.04%)</title><rect x="84.9152%" y="869" width="0.0370%" height="15" fill="rgb(214,106,53)" fg:x="183489" fg:w="80"/><text x="85.1652%" y="879.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (80 samples, 0.04%)</title><rect x="84.9152%" y="853" width="0.0370%" height="15" fill="rgb(232,65,50)" fg:x="183489" fg:w="80"/><text x="85.1652%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (80 samples, 0.04%)</title><rect x="84.9152%" y="837" width="0.0370%" height="15" fill="rgb(231,110,28)" fg:x="183489" fg:w="80"/><text x="85.1652%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (61 samples, 0.03%)</title><rect x="84.9240%" y="821" width="0.0282%" height="15" fill="rgb(216,71,40)" fg:x="183508" fg:w="61"/><text x="85.1740%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (59 samples, 0.03%)</title><rect x="84.9249%" y="805" width="0.0273%" height="15" fill="rgb(229,89,53)" fg:x="183510" fg:w="59"/><text x="85.1749%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (59 samples, 0.03%)</title><rect x="84.9249%" y="789" width="0.0273%" height="15" fill="rgb(210,124,14)" fg:x="183510" fg:w="59"/><text x="85.1749%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 samples, 0.03%)</title><rect x="84.9249%" y="773" width="0.0273%" height="15" fill="rgb(236,213,6)" fg:x="183510" fg:w="59"/><text x="85.1749%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (131 samples, 0.06%)</title><rect x="84.8948%" y="949" width="0.0606%" height="15" fill="rgb(228,41,5)" fg:x="183445" fg:w="131"/><text x="85.1448%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (131 samples, 0.06%)</title><rect x="84.8948%" y="933" width="0.0606%" height="15" fill="rgb(221,167,25)" fg:x="183445" fg:w="131"/><text x="85.1448%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (87 samples, 0.04%)</title><rect x="84.9152%" y="917" width="0.0403%" height="15" fill="rgb(228,144,37)" fg:x="183489" fg:w="87"/><text x="85.1652%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (87 samples, 0.04%)</title><rect x="84.9152%" y="901" width="0.0403%" height="15" fill="rgb(227,189,38)" fg:x="183489" fg:w="87"/><text x="85.1652%" y="911.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (183 samples, 0.08%)</title><rect x="84.8939%" y="1013" width="0.0847%" height="15" fill="rgb(218,8,2)" fg:x="183443" fg:w="183"/><text x="85.1439%" y="1023.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (183 samples, 0.08%)</title><rect x="84.8939%" y="997" width="0.0847%" height="15" fill="rgb(209,61,28)" fg:x="183443" fg:w="183"/><text x="85.1439%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (183 samples, 0.08%)</title><rect x="84.8939%" y="981" width="0.0847%" height="15" fill="rgb(233,140,39)" fg:x="183443" fg:w="183"/><text x="85.1439%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (183 samples, 0.08%)</title><rect x="84.8939%" y="965" width="0.0847%" height="15" fill="rgb(251,66,48)" fg:x="183443" fg:w="183"/><text x="85.1439%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (50 samples, 0.02%)</title><rect x="84.9555%" y="949" width="0.0231%" height="15" fill="rgb(210,44,45)" fg:x="183576" fg:w="50"/><text x="85.2055%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (50 samples, 0.02%)</title><rect x="84.9555%" y="933" width="0.0231%" height="15" fill="rgb(214,136,46)" fg:x="183576" fg:w="50"/><text x="85.2055%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (50 samples, 0.02%)</title><rect x="84.9555%" y="917" width="0.0231%" height="15" fill="rgb(207,130,50)" fg:x="183576" fg:w="50"/><text x="85.2055%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (23 samples, 0.01%)</title><rect x="84.9823%" y="933" width="0.0106%" height="15" fill="rgb(228,102,49)" fg:x="183634" fg:w="23"/><text x="85.2323%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (23 samples, 0.01%)</title><rect x="84.9823%" y="917" width="0.0106%" height="15" fill="rgb(253,55,1)" fg:x="183634" fg:w="23"/><text x="85.2323%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (23 samples, 0.01%)</title><rect x="84.9823%" y="901" width="0.0106%" height="15" fill="rgb(238,222,9)" fg:x="183634" fg:w="23"/><text x="85.2323%" y="911.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::hash::Hash&gt;::hash (60 samples, 0.03%)</title><rect x="84.9953%" y="901" width="0.0278%" height="15" fill="rgb(246,99,6)" fg:x="183662" fg:w="60"/><text x="85.2453%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as core::hash::Hash&gt;::hash (60 samples, 0.03%)</title><rect x="84.9953%" y="885" width="0.0278%" height="15" fill="rgb(219,110,26)" fg:x="183662" fg:w="60"/><text x="85.2453%" y="895.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (60 samples, 0.03%)</title><rect x="84.9953%" y="869" width="0.0278%" height="15" fill="rgb(239,160,33)" fg:x="183662" fg:w="60"/><text x="85.2453%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (60 samples, 0.03%)</title><rect x="84.9953%" y="853" width="0.0278%" height="15" fill="rgb(220,202,23)" fg:x="183662" fg:w="60"/><text x="85.2453%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (41 samples, 0.02%)</title><rect x="85.0040%" y="837" width="0.0190%" height="15" fill="rgb(208,80,26)" fg:x="183681" fg:w="41"/><text x="85.2540%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (37 samples, 0.02%)</title><rect x="85.0059%" y="821" width="0.0171%" height="15" fill="rgb(243,85,7)" fg:x="183685" fg:w="37"/><text x="85.2559%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (37 samples, 0.02%)</title><rect x="85.0059%" y="805" width="0.0171%" height="15" fill="rgb(228,77,47)" fg:x="183685" fg:w="37"/><text x="85.2559%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37 samples, 0.02%)</title><rect x="85.0059%" y="789" width="0.0171%" height="15" fill="rgb(212,226,8)" fg:x="183685" fg:w="37"/><text x="85.2559%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (93 samples, 0.04%)</title><rect x="84.9804%" y="965" width="0.0430%" height="15" fill="rgb(241,120,54)" fg:x="183630" fg:w="93"/><text x="85.2304%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (93 samples, 0.04%)</title><rect x="84.9804%" y="949" width="0.0430%" height="15" fill="rgb(226,80,16)" fg:x="183630" fg:w="93"/><text x="85.2304%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (62 samples, 0.03%)</title><rect x="84.9948%" y="933" width="0.0287%" height="15" fill="rgb(240,76,13)" fg:x="183661" fg:w="62"/><text x="85.2448%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (62 samples, 0.03%)</title><rect x="84.9948%" y="917" width="0.0287%" height="15" fill="rgb(252,74,8)" fg:x="183661" fg:w="62"/><text x="85.2448%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.02%)</title><rect x="85.0596%" y="821" width="0.0157%" height="15" fill="rgb(244,155,2)" fg:x="183801" fg:w="34"/><text x="85.3096%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.02%)</title><rect x="85.0596%" y="805" width="0.0157%" height="15" fill="rgb(215,81,35)" fg:x="183801" fg:w="34"/><text x="85.3096%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.02%)</title><rect x="85.0596%" y="789" width="0.0157%" height="15" fill="rgb(206,55,2)" fg:x="183801" fg:w="34"/><text x="85.3096%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (23 samples, 0.01%)</title><rect x="85.1160%" y="645" width="0.0106%" height="15" fill="rgb(231,2,34)" fg:x="183923" fg:w="23"/><text x="85.3660%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (44 samples, 0.02%)</title><rect x="85.1114%" y="661" width="0.0204%" height="15" fill="rgb(242,176,48)" fg:x="183913" fg:w="44"/><text x="85.3614%" y="671.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::hash::Hash&gt;::hash (114 samples, 0.05%)</title><rect x="85.0804%" y="789" width="0.0528%" height="15" fill="rgb(249,31,36)" fg:x="183846" fg:w="114"/><text x="85.3304%" y="799.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as core::hash::Hash&gt;::hash (114 samples, 0.05%)</title><rect x="85.0804%" y="773" width="0.0528%" height="15" fill="rgb(205,18,17)" fg:x="183846" fg:w="114"/><text x="85.3304%" y="783.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (114 samples, 0.05%)</title><rect x="85.0804%" y="757" width="0.0528%" height="15" fill="rgb(254,130,5)" fg:x="183846" fg:w="114"/><text x="85.3304%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (114 samples, 0.05%)</title><rect x="85.0804%" y="741" width="0.0528%" height="15" fill="rgb(229,42,45)" fg:x="183846" fg:w="114"/><text x="85.3304%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (97 samples, 0.04%)</title><rect x="85.0883%" y="725" width="0.0449%" height="15" fill="rgb(245,95,25)" fg:x="183863" fg:w="97"/><text x="85.3383%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (92 samples, 0.04%)</title><rect x="85.0906%" y="709" width="0.0426%" height="15" fill="rgb(249,193,38)" fg:x="183868" fg:w="92"/><text x="85.3406%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (91 samples, 0.04%)</title><rect x="85.0911%" y="693" width="0.0421%" height="15" fill="rgb(241,140,43)" fg:x="183869" fg:w="91"/><text x="85.3411%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (91 samples, 0.04%)</title><rect x="85.0911%" y="677" width="0.0421%" height="15" fill="rgb(245,78,48)" fg:x="183869" fg:w="91"/><text x="85.3411%" y="687.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (172 samples, 0.08%)</title><rect x="85.0587%" y="869" width="0.0796%" height="15" fill="rgb(214,92,39)" fg:x="183799" fg:w="172"/><text x="85.3087%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (172 samples, 0.08%)</title><rect x="85.0587%" y="853" width="0.0796%" height="15" fill="rgb(211,189,14)" fg:x="183799" fg:w="172"/><text x="85.3087%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (172 samples, 0.08%)</title><rect x="85.0587%" y="837" width="0.0796%" height="15" fill="rgb(218,7,24)" fg:x="183799" fg:w="172"/><text x="85.3087%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (125 samples, 0.06%)</title><rect x="85.0804%" y="821" width="0.0578%" height="15" fill="rgb(224,200,49)" fg:x="183846" fg:w="125"/><text x="85.3304%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (125 samples, 0.06%)</title><rect x="85.0804%" y="805" width="0.0578%" height="15" fill="rgb(218,210,14)" fg:x="183846" fg:w="125"/><text x="85.3304%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (174 samples, 0.08%)</title><rect x="85.0587%" y="885" width="0.0805%" height="15" fill="rgb(234,142,31)" fg:x="183799" fg:w="174"/><text x="85.3087%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (24 samples, 0.01%)</title><rect x="85.1410%" y="869" width="0.0111%" height="15" fill="rgb(227,165,2)" fg:x="183977" fg:w="24"/><text x="85.3910%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (26 samples, 0.01%)</title><rect x="85.1410%" y="885" width="0.0120%" height="15" fill="rgb(232,44,46)" fg:x="183977" fg:w="26"/><text x="85.3910%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (85 samples, 0.04%)</title><rect x="85.1540%" y="853" width="0.0393%" height="15" fill="rgb(236,149,47)" fg:x="184005" fg:w="85"/><text x="85.4040%" y="863.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (82 samples, 0.04%)</title><rect x="85.1554%" y="837" width="0.0379%" height="15" fill="rgb(227,45,31)" fg:x="184008" fg:w="82"/><text x="85.4054%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (82 samples, 0.04%)</title><rect x="85.1554%" y="821" width="0.0379%" height="15" fill="rgb(240,176,51)" fg:x="184008" fg:w="82"/><text x="85.4054%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (82 samples, 0.04%)</title><rect x="85.1554%" y="805" width="0.0379%" height="15" fill="rgb(249,146,41)" fg:x="184008" fg:w="82"/><text x="85.4054%" y="815.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.04%)</title><rect x="85.1558%" y="789" width="0.0375%" height="15" fill="rgb(213,208,4)" fg:x="184009" fg:w="81"/><text x="85.4058%" y="799.50"></text></g><g><title>malloc (77 samples, 0.04%)</title><rect x="85.1577%" y="773" width="0.0356%" height="15" fill="rgb(245,84,36)" fg:x="184013" fg:w="77"/><text x="85.4077%" y="783.50"></text></g><g><title>[libc.so.6] (64 samples, 0.03%)</title><rect x="85.1637%" y="757" width="0.0296%" height="15" fill="rgb(254,84,18)" fg:x="184026" fg:w="64"/><text x="85.4137%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (334 samples, 0.15%)</title><rect x="85.0406%" y="901" width="0.1546%" height="15" fill="rgb(225,38,54)" fg:x="183760" fg:w="334"/><text x="85.2906%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (91 samples, 0.04%)</title><rect x="85.1531%" y="885" width="0.0421%" height="15" fill="rgb(246,50,30)" fg:x="184003" fg:w="91"/><text x="85.4031%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (91 samples, 0.04%)</title><rect x="85.1531%" y="869" width="0.0421%" height="15" fill="rgb(246,148,9)" fg:x="184003" fg:w="91"/><text x="85.4031%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (346 samples, 0.16%)</title><rect x="85.0360%" y="949" width="0.1601%" height="15" fill="rgb(223,75,4)" fg:x="183750" fg:w="346"/><text x="85.2860%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (345 samples, 0.16%)</title><rect x="85.0364%" y="933" width="0.1597%" height="15" fill="rgb(239,148,41)" fg:x="183751" fg:w="345"/><text x="85.2864%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (342 samples, 0.16%)</title><rect x="85.0378%" y="917" width="0.1583%" height="15" fill="rgb(205,195,3)" fg:x="183754" fg:w="342"/><text x="85.2878%" y="927.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (487 samples, 0.23%)</title><rect x="84.9786%" y="1013" width="0.2254%" height="15" fill="rgb(254,161,1)" fg:x="183626" fg:w="487"/><text x="85.2286%" y="1023.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (487 samples, 0.23%)</title><rect x="84.9786%" y="997" width="0.2254%" height="15" fill="rgb(211,229,8)" fg:x="183626" fg:w="487"/><text x="85.2286%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (487 samples, 0.23%)</title><rect x="84.9786%" y="981" width="0.2254%" height="15" fill="rgb(220,97,9)" fg:x="183626" fg:w="487"/><text x="85.2286%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (374 samples, 0.17%)</title><rect x="85.0309%" y="965" width="0.1731%" height="15" fill="rgb(240,218,8)" fg:x="183739" fg:w="374"/><text x="85.2809%" y="975.50"></text></g><g><title>floresta_chain::pruned_utreexo::consensus::Consensus::update_acc (65,543 samples, 30.33%)</title><rect x="54.8761%" y="1029" width="30.3320%" height="15" fill="rgb(250,44,0)" fg:x="118579" fg:w="65543"/><text x="55.1261%" y="1039.50">floresta_chain::pruned_utreexo::consensus::Consen..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (31 samples, 0.01%)</title><rect x="85.2586%" y="837" width="0.0143%" height="15" fill="rgb(236,41,53)" fg:x="184231" fg:w="31"/><text x="85.5086%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.01%)</title><rect x="85.2600%" y="821" width="0.0130%" height="15" fill="rgb(218,227,13)" fg:x="184234" fg:w="28"/><text x="85.5100%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="85.2600%" y="805" width="0.0130%" height="15" fill="rgb(217,94,32)" fg:x="184234" fg:w="28"/><text x="85.5100%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="85.2600%" y="789" width="0.0130%" height="15" fill="rgb(213,217,12)" fg:x="184234" fg:w="28"/><text x="85.5100%" y="799.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="85.2600%" y="773" width="0.0130%" height="15" fill="rgb(229,13,46)" fg:x="184234" fg:w="28"/><text x="85.5100%" y="783.50"></text></g><g><title>malloc (28 samples, 0.01%)</title><rect x="85.2600%" y="757" width="0.0130%" height="15" fill="rgb(243,139,5)" fg:x="184234" fg:w="28"/><text x="85.5100%" y="767.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="85.2600%" y="741" width="0.0130%" height="15" fill="rgb(249,38,45)" fg:x="184234" fg:w="28"/><text x="85.5100%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (77 samples, 0.04%)</title><rect x="85.2438%" y="869" width="0.0356%" height="15" fill="rgb(216,70,11)" fg:x="184199" fg:w="77"/><text x="85.4938%" y="879.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (72 samples, 0.03%)</title><rect x="85.2461%" y="853" width="0.0333%" height="15" fill="rgb(253,101,25)" fg:x="184204" fg:w="72"/><text x="85.4961%" y="863.50"></text></g><g><title>&lt;F as async_task::runnable::Schedule&lt;M&gt;&gt;::schedule (45 samples, 0.02%)</title><rect x="85.3062%" y="789" width="0.0208%" height="15" fill="rgb(207,197,30)" fg:x="184334" fg:w="45"/><text x="85.5562%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (41 samples, 0.02%)</title><rect x="85.3081%" y="773" width="0.0190%" height="15" fill="rgb(238,87,13)" fg:x="184338" fg:w="41"/><text x="85.5581%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (35 samples, 0.02%)</title><rect x="85.3109%" y="757" width="0.0162%" height="15" fill="rgb(215,155,8)" fg:x="184344" fg:w="35"/><text x="85.5609%" y="767.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (22 samples, 0.01%)</title><rect x="85.3169%" y="741" width="0.0102%" height="15" fill="rgb(239,166,38)" fg:x="184357" fg:w="22"/><text x="85.5669%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::notify (91 samples, 0.04%)</title><rect x="85.3349%" y="757" width="0.0421%" height="15" fill="rgb(240,194,35)" fg:x="184396" fg:w="91"/><text x="85.5849%" y="767.50"></text></g><g><title>polling::Poller::notify (91 samples, 0.04%)</title><rect x="85.3349%" y="741" width="0.0421%" height="15" fill="rgb(219,10,44)" fg:x="184396" fg:w="91"/><text x="85.5849%" y="751.50"></text></g><g><title>polling::epoll::Poller::notify (88 samples, 0.04%)</title><rect x="85.3363%" y="725" width="0.0407%" height="15" fill="rgb(251,220,35)" fg:x="184399" fg:w="88"/><text x="85.5863%" y="735.50"></text></g><g><title>write (86 samples, 0.04%)</title><rect x="85.3373%" y="709" width="0.0398%" height="15" fill="rgb(218,117,13)" fg:x="184401" fg:w="86"/><text x="85.5873%" y="719.50"></text></g><g><title>[unknown] (80 samples, 0.04%)</title><rect x="85.3400%" y="693" width="0.0370%" height="15" fill="rgb(221,213,40)" fg:x="184407" fg:w="80"/><text x="85.5900%" y="703.50"></text></g><g><title>[unknown] (76 samples, 0.04%)</title><rect x="85.3419%" y="677" width="0.0352%" height="15" fill="rgb(251,224,35)" fg:x="184411" fg:w="76"/><text x="85.5919%" y="687.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="85.3433%" y="661" width="0.0338%" height="15" fill="rgb(241,33,39)" fg:x="184414" fg:w="73"/><text x="85.5933%" y="671.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="85.3451%" y="645" width="0.0319%" height="15" fill="rgb(222,74,17)" fg:x="184418" fg:w="69"/><text x="85.5951%" y="655.50"></text></g><g><title>[unknown] (63 samples, 0.03%)</title><rect x="85.3479%" y="629" width="0.0292%" height="15" fill="rgb(225,103,0)" fg:x="184424" fg:w="63"/><text x="85.5979%" y="639.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="85.3521%" y="613" width="0.0250%" height="15" fill="rgb(240,0,12)" fg:x="184433" fg:w="54"/><text x="85.6021%" y="623.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="85.3562%" y="597" width="0.0208%" height="15" fill="rgb(233,213,37)" fg:x="184442" fg:w="45"/><text x="85.6062%" y="607.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="85.3581%" y="581" width="0.0190%" height="15" fill="rgb(225,84,52)" fg:x="184446" fg:w="41"/><text x="85.6081%" y="591.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="85.3613%" y="565" width="0.0157%" height="15" fill="rgb(247,160,51)" fg:x="184453" fg:w="34"/><text x="85.6113%" y="575.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="85.3622%" y="549" width="0.0148%" height="15" fill="rgb(244,60,51)" fg:x="184455" fg:w="32"/><text x="85.6122%" y="559.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="85.3627%" y="533" width="0.0143%" height="15" fill="rgb(233,114,7)" fg:x="184456" fg:w="31"/><text x="85.6127%" y="543.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="85.3664%" y="517" width="0.0106%" height="15" fill="rgb(246,136,16)" fg:x="184464" fg:w="23"/><text x="85.6164%" y="527.50"></text></g><g><title>parking::Unparker::unpark (335 samples, 0.16%)</title><rect x="85.3794%" y="757" width="0.1550%" height="15" fill="rgb(243,114,45)" fg:x="184492" fg:w="335"/><text x="85.6294%" y="767.50"></text></g><g><title>parking::Inner::unpark (316 samples, 0.15%)</title><rect x="85.3882%" y="741" width="0.1462%" height="15" fill="rgb(247,183,43)" fg:x="184511" fg:w="316"/><text x="85.6382%" y="751.50"></text></g><g><title>syscall (311 samples, 0.14%)</title><rect x="85.3905%" y="725" width="0.1439%" height="15" fill="rgb(251,210,42)" fg:x="184516" fg:w="311"/><text x="85.6405%" y="735.50"></text></g><g><title>[unknown] (303 samples, 0.14%)</title><rect x="85.3942%" y="709" width="0.1402%" height="15" fill="rgb(221,88,35)" fg:x="184524" fg:w="303"/><text x="85.6442%" y="719.50"></text></g><g><title>[unknown] (266 samples, 0.12%)</title><rect x="85.4113%" y="693" width="0.1231%" height="15" fill="rgb(242,21,20)" fg:x="184561" fg:w="266"/><text x="85.6613%" y="703.50"></text></g><g><title>[unknown] (241 samples, 0.11%)</title><rect x="85.4229%" y="677" width="0.1115%" height="15" fill="rgb(233,226,36)" fg:x="184586" fg:w="241"/><text x="85.6729%" y="687.50"></text></g><g><title>[unknown] (218 samples, 0.10%)</title><rect x="85.4335%" y="661" width="0.1009%" height="15" fill="rgb(243,189,34)" fg:x="184609" fg:w="218"/><text x="85.6835%" y="671.50"></text></g><g><title>[unknown] (213 samples, 0.10%)</title><rect x="85.4358%" y="645" width="0.0986%" height="15" fill="rgb(207,145,50)" fg:x="184614" fg:w="213"/><text x="85.6858%" y="655.50"></text></g><g><title>[unknown] (192 samples, 0.09%)</title><rect x="85.4455%" y="629" width="0.0889%" height="15" fill="rgb(242,1,50)" fg:x="184635" fg:w="192"/><text x="85.6955%" y="639.50"></text></g><g><title>[unknown] (140 samples, 0.06%)</title><rect x="85.4696%" y="613" width="0.0648%" height="15" fill="rgb(231,65,32)" fg:x="184687" fg:w="140"/><text x="85.7196%" y="623.50"></text></g><g><title>[unknown] (107 samples, 0.05%)</title><rect x="85.4849%" y="597" width="0.0495%" height="15" fill="rgb(208,68,49)" fg:x="184720" fg:w="107"/><text x="85.7349%" y="607.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="85.5080%" y="581" width="0.0264%" height="15" fill="rgb(253,54,49)" fg:x="184770" fg:w="57"/><text x="85.7580%" y="591.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="85.5191%" y="565" width="0.0153%" height="15" fill="rgb(245,186,24)" fg:x="184794" fg:w="33"/><text x="85.7691%" y="575.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (436 samples, 0.20%)</title><rect x="85.3335%" y="773" width="0.2018%" height="15" fill="rgb(209,2,41)" fg:x="184393" fg:w="436"/><text x="85.5835%" y="783.50"></text></g><g><title>event_listener::Event::notify (558 samples, 0.26%)</title><rect x="85.2794%" y="869" width="0.2582%" height="15" fill="rgb(242,208,54)" fg:x="184276" fg:w="558"/><text x="85.5294%" y="879.50"></text></g><g><title>event_listener::List::notify (535 samples, 0.25%)</title><rect x="85.2900%" y="853" width="0.2476%" height="15" fill="rgb(225,9,51)" fg:x="184299" fg:w="535"/><text x="85.5400%" y="863.50"></text></g><g><title>core::task::wake::Waker::wake (530 samples, 0.25%)</title><rect x="85.2924%" y="837" width="0.2453%" height="15" fill="rgb(207,207,25)" fg:x="184304" fg:w="530"/><text x="85.5424%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake (519 samples, 0.24%)</title><rect x="85.2975%" y="821" width="0.2402%" height="15" fill="rgb(253,96,18)" fg:x="184315" fg:w="519"/><text x="85.5475%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S,M&gt;::wake_by_ref (507 samples, 0.23%)</title><rect x="85.3030%" y="805" width="0.2346%" height="15" fill="rgb(252,215,20)" fg:x="184327" fg:w="507"/><text x="85.5530%" y="815.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (445 samples, 0.21%)</title><rect x="85.3317%" y="789" width="0.2059%" height="15" fill="rgb(245,227,26)" fg:x="184389" fg:w="445"/><text x="85.5817%" y="799.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (643 samples, 0.30%)</title><rect x="85.2419%" y="885" width="0.2976%" height="15" fill="rgb(241,208,0)" fg:x="184195" fg:w="643"/><text x="85.4919%" y="895.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (649 samples, 0.30%)</title><rect x="85.2401%" y="917" width="0.3003%" height="15" fill="rgb(224,130,10)" fg:x="184191" fg:w="649"/><text x="85.4901%" y="927.50"></text></g><g><title>async_channel::Send&lt;T&gt;::run_with_strategy (645 samples, 0.30%)</title><rect x="85.2419%" y="901" width="0.2985%" height="15" fill="rgb(237,29,0)" fg:x="184195" fg:w="645"/><text x="85.4919%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="85.5520%" y="709" width="0.0148%" height="15" fill="rgb(219,27,41)" fg:x="184865" fg:w="32"/><text x="85.8020%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="85.5520%" y="693" width="0.0148%" height="15" fill="rgb(245,101,19)" fg:x="184865" fg:w="32"/><text x="85.8020%" y="703.50"></text></g><g><title>[libc.so.6] (43 samples, 0.02%)</title><rect x="85.8065%" y="501" width="0.0199%" height="15" fill="rgb(243,44,37)" fg:x="185415" fg:w="43"/><text x="86.0565%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (562 samples, 0.26%)</title><rect x="85.5677%" y="629" width="0.2601%" height="15" fill="rgb(228,213,43)" fg:x="184899" fg:w="562"/><text x="85.8177%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (562 samples, 0.26%)</title><rect x="85.5677%" y="613" width="0.2601%" height="15" fill="rgb(219,163,21)" fg:x="184899" fg:w="562"/><text x="85.8177%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (562 samples, 0.26%)</title><rect x="85.5677%" y="597" width="0.2601%" height="15" fill="rgb(234,86,24)" fg:x="184899" fg:w="562"/><text x="85.8177%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (561 samples, 0.26%)</title><rect x="85.5682%" y="581" width="0.2596%" height="15" fill="rgb(225,10,24)" fg:x="184900" fg:w="561"/><text x="85.8182%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (561 samples, 0.26%)</title><rect x="85.5682%" y="565" width="0.2596%" height="15" fill="rgb(218,109,7)" fg:x="184900" fg:w="561"/><text x="85.8182%" y="575.50"></text></g><g><title>alloc::alloc::alloc (561 samples, 0.26%)</title><rect x="85.5682%" y="549" width="0.2596%" height="15" fill="rgb(210,20,26)" fg:x="184900" fg:w="561"/><text x="85.8182%" y="559.50"></text></g><g><title>malloc (555 samples, 0.26%)</title><rect x="85.5710%" y="533" width="0.2568%" height="15" fill="rgb(216,18,1)" fg:x="184906" fg:w="555"/><text x="85.8210%" y="543.50"></text></g><g><title>[libc.so.6] (476 samples, 0.22%)</title><rect x="85.6075%" y="517" width="0.2203%" height="15" fill="rgb(206,163,23)" fg:x="184985" fg:w="476"/><text x="85.8575%" y="527.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as core::clone::Clone&gt;::clone (683 samples, 0.32%)</title><rect x="85.5511%" y="725" width="0.3161%" height="15" fill="rgb(229,150,31)" fg:x="184863" fg:w="683"/><text x="85.8011%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as core::clone::Clone&gt;::clone (647 samples, 0.30%)</title><rect x="85.5677%" y="709" width="0.2994%" height="15" fill="rgb(231,10,5)" fg:x="184899" fg:w="647"/><text x="85.8177%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (647 samples, 0.30%)</title><rect x="85.5677%" y="693" width="0.2994%" height="15" fill="rgb(250,40,50)" fg:x="184899" fg:w="647"/><text x="85.8177%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (647 samples, 0.30%)</title><rect x="85.5677%" y="677" width="0.2994%" height="15" fill="rgb(217,119,7)" fg:x="184899" fg:w="647"/><text x="85.8177%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (647 samples, 0.30%)</title><rect x="85.5677%" y="661" width="0.2994%" height="15" fill="rgb(245,214,40)" fg:x="184899" fg:w="647"/><text x="85.8177%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (647 samples, 0.30%)</title><rect x="85.5677%" y="645" width="0.2994%" height="15" fill="rgb(216,187,1)" fg:x="184899" fg:w="647"/><text x="85.8177%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (85 samples, 0.04%)</title><rect x="85.8278%" y="629" width="0.0393%" height="15" fill="rgb(237,146,21)" fg:x="185461" fg:w="85"/><text x="86.0778%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (85 samples, 0.04%)</title><rect x="85.8278%" y="613" width="0.0393%" height="15" fill="rgb(210,174,47)" fg:x="185461" fg:w="85"/><text x="86.0778%" y="623.50"></text></g><g><title>[libc.so.6] (83 samples, 0.04%)</title><rect x="85.8287%" y="597" width="0.0384%" height="15" fill="rgb(218,111,39)" fg:x="185463" fg:w="83"/><text x="86.0787%" y="607.50"></text></g><g><title>[libc.so.6] (151 samples, 0.07%)</title><rect x="86.1698%" y="501" width="0.0699%" height="15" fill="rgb(224,95,19)" fg:x="186200" fg:w="151"/><text x="86.4198%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (782 samples, 0.36%)</title><rect x="85.8787%" y="629" width="0.3619%" height="15" fill="rgb(234,15,38)" fg:x="185571" fg:w="782"/><text x="86.1287%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (782 samples, 0.36%)</title><rect x="85.8787%" y="613" width="0.3619%" height="15" fill="rgb(246,56,12)" fg:x="185571" fg:w="782"/><text x="86.1287%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (782 samples, 0.36%)</title><rect x="85.8787%" y="597" width="0.3619%" height="15" fill="rgb(247,16,17)" fg:x="185571" fg:w="782"/><text x="86.1287%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (777 samples, 0.36%)</title><rect x="85.8810%" y="581" width="0.3596%" height="15" fill="rgb(215,151,11)" fg:x="185576" fg:w="777"/><text x="86.1310%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (777 samples, 0.36%)</title><rect x="85.8810%" y="565" width="0.3596%" height="15" fill="rgb(225,16,24)" fg:x="185576" fg:w="777"/><text x="86.1310%" y="575.50"></text></g><g><title>alloc::alloc::alloc (777 samples, 0.36%)</title><rect x="85.8810%" y="549" width="0.3596%" height="15" fill="rgb(217,117,5)" fg:x="185576" fg:w="777"/><text x="86.1310%" y="559.50"></text></g><g><title>malloc (773 samples, 0.36%)</title><rect x="85.8829%" y="533" width="0.3577%" height="15" fill="rgb(246,187,53)" fg:x="185580" fg:w="773"/><text x="86.1329%" y="543.50"></text></g><g><title>[libc.so.6] (653 samples, 0.30%)</title><rect x="85.9384%" y="517" width="0.3022%" height="15" fill="rgb(241,71,40)" fg:x="185700" fg:w="653"/><text x="86.1884%" y="527.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as core::clone::Clone&gt;::clone (844 samples, 0.39%)</title><rect x="85.8671%" y="725" width="0.3906%" height="15" fill="rgb(231,67,39)" fg:x="185546" fg:w="844"/><text x="86.1171%" y="735.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as core::clone::Clone&gt;::clone (844 samples, 0.39%)</title><rect x="85.8671%" y="709" width="0.3906%" height="15" fill="rgb(222,120,24)" fg:x="185546" fg:w="844"/><text x="86.1171%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (844 samples, 0.39%)</title><rect x="85.8671%" y="693" width="0.3906%" height="15" fill="rgb(248,3,3)" fg:x="185546" fg:w="844"/><text x="86.1171%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (819 samples, 0.38%)</title><rect x="85.8787%" y="677" width="0.3790%" height="15" fill="rgb(228,218,5)" fg:x="185571" fg:w="819"/><text x="86.1287%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (819 samples, 0.38%)</title><rect x="85.8787%" y="661" width="0.3790%" height="15" fill="rgb(212,202,43)" fg:x="185571" fg:w="819"/><text x="86.1287%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (819 samples, 0.38%)</title><rect x="85.8787%" y="645" width="0.3790%" height="15" fill="rgb(235,183,2)" fg:x="185571" fg:w="819"/><text x="86.1287%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (37 samples, 0.02%)</title><rect x="86.2406%" y="629" width="0.0171%" height="15" fill="rgb(230,165,10)" fg:x="186353" fg:w="37"/><text x="86.4906%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.02%)</title><rect x="86.2406%" y="613" width="0.0171%" height="15" fill="rgb(219,54,40)" fg:x="186353" fg:w="37"/><text x="86.4906%" y="623.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="86.2415%" y="597" width="0.0162%" height="15" fill="rgb(244,73,9)" fg:x="186355" fg:w="35"/><text x="86.4915%" y="607.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="86.6460%" y="597" width="0.0236%" height="15" fill="rgb(212,32,45)" fg:x="187229" fg:w="51"/><text x="86.8960%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (866 samples, 0.40%)</title><rect x="86.2707%" y="677" width="0.4008%" height="15" fill="rgb(205,58,31)" fg:x="186418" fg:w="866"/><text x="86.5207%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (866 samples, 0.40%)</title><rect x="86.2707%" y="661" width="0.4008%" height="15" fill="rgb(250,120,43)" fg:x="186418" fg:w="866"/><text x="86.5207%" y="671.50"></text></g><g><title>alloc::alloc::alloc (864 samples, 0.40%)</title><rect x="86.2716%" y="645" width="0.3998%" height="15" fill="rgb(235,13,10)" fg:x="186420" fg:w="864"/><text x="86.5216%" y="655.50"></text></g><g><title>malloc (851 samples, 0.39%)</title><rect x="86.2776%" y="629" width="0.3938%" height="15" fill="rgb(232,219,31)" fg:x="186433" fg:w="851"/><text x="86.5276%" y="639.50"></text></g><g><title>[libc.so.6] (732 samples, 0.34%)</title><rect x="86.3327%" y="613" width="0.3388%" height="15" fill="rgb(218,157,51)" fg:x="186552" fg:w="732"/><text x="86.5827%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (890 samples, 0.41%)</title><rect x="86.2605%" y="725" width="0.4119%" height="15" fill="rgb(211,91,52)" fg:x="186396" fg:w="890"/><text x="86.5105%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (880 samples, 0.41%)</title><rect x="86.2651%" y="709" width="0.4072%" height="15" fill="rgb(240,173,1)" fg:x="186406" fg:w="880"/><text x="86.5151%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (880 samples, 0.41%)</title><rect x="86.2651%" y="693" width="0.4072%" height="15" fill="rgb(248,20,47)" fg:x="186406" fg:w="880"/><text x="86.5151%" y="703.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as core::clone::Clone&gt;::clone (2,458 samples, 1.14%)</title><rect x="85.5413%" y="805" width="1.1375%" height="15" fill="rgb(217,221,40)" fg:x="184842" fg:w="2458"/><text x="85.7913%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,454 samples, 1.14%)</title><rect x="85.5432%" y="789" width="1.1357%" height="15" fill="rgb(226,149,51)" fg:x="184846" fg:w="2454"/><text x="85.7932%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,441 samples, 1.13%)</title><rect x="85.5492%" y="773" width="1.1296%" height="15" fill="rgb(252,193,7)" fg:x="184859" fg:w="2441"/><text x="85.7992%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (2,441 samples, 1.13%)</title><rect x="85.5492%" y="757" width="1.1296%" height="15" fill="rgb(205,123,0)" fg:x="184859" fg:w="2441"/><text x="85.7992%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,441 samples, 1.13%)</title><rect x="85.5492%" y="741" width="1.1296%" height="15" fill="rgb(233,173,25)" fg:x="184859" fg:w="2441"/><text x="85.7992%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.01%)</title><rect x="86.6793%" y="805" width="0.0120%" height="15" fill="rgb(216,63,32)" fg:x="187301" fg:w="26"/><text x="86.9293%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.01%)</title><rect x="86.6793%" y="789" width="0.0120%" height="15" fill="rgb(209,56,45)" fg:x="187301" fg:w="26"/><text x="86.9293%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (26 samples, 0.01%)</title><rect x="86.6793%" y="773" width="0.0120%" height="15" fill="rgb(226,111,49)" fg:x="187301" fg:w="26"/><text x="86.9293%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.01%)</title><rect x="86.6793%" y="757" width="0.0120%" height="15" fill="rgb(244,181,21)" fg:x="187301" fg:w="26"/><text x="86.9293%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.01%)</title><rect x="86.6793%" y="741" width="0.0120%" height="15" fill="rgb(222,126,15)" fg:x="187301" fg:w="26"/><text x="86.9293%" y="751.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="86.6793%" y="725" width="0.0120%" height="15" fill="rgb(222,95,17)" fg:x="187301" fg:w="26"/><text x="86.9293%" y="735.50"></text></g><g><title>malloc (25 samples, 0.01%)</title><rect x="86.6798%" y="709" width="0.0116%" height="15" fill="rgb(254,46,5)" fg:x="187302" fg:w="25"/><text x="86.9298%" y="719.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::Notification as core::clone::Clone&gt;::clone (2,509 samples, 1.16%)</title><rect x="85.5409%" y="917" width="1.1611%" height="15" fill="rgb(236,216,35)" fg:x="184841" fg:w="2509"/><text x="85.7909%" y="927.50"></text></g><g><title>core::clone::Clone::clone (2,509 samples, 1.16%)</title><rect x="85.5409%" y="901" width="1.1611%" height="15" fill="rgb(217,187,26)" fg:x="184841" fg:w="2509"/><text x="85.7909%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::block::Block as core::clone::Clone&gt;::clone (2,509 samples, 1.16%)</title><rect x="85.5409%" y="885" width="1.1611%" height="15" fill="rgb(207,192,25)" fg:x="184841" fg:w="2509"/><text x="85.7909%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,509 samples, 1.16%)</title><rect x="85.5409%" y="869" width="1.1611%" height="15" fill="rgb(253,135,27)" fg:x="184841" fg:w="2509"/><text x="85.7909%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,509 samples, 1.16%)</title><rect x="85.5409%" y="853" width="1.1611%" height="15" fill="rgb(211,122,29)" fg:x="184841" fg:w="2509"/><text x="85.7909%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (2,509 samples, 1.16%)</title><rect x="85.5409%" y="837" width="1.1611%" height="15" fill="rgb(233,162,40)" fg:x="184841" fg:w="2509"/><text x="85.7909%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,509 samples, 1.16%)</title><rect x="85.5409%" y="821" width="1.1611%" height="15" fill="rgb(222,184,47)" fg:x="184841" fg:w="2509"/><text x="85.7909%" y="831.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (23 samples, 0.01%)</title><rect x="86.6913%" y="805" width="0.0106%" height="15" fill="rgb(249,99,23)" fg:x="187327" fg:w="23"/><text x="86.9413%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::script::Script&gt; (74 samples, 0.03%)</title><rect x="86.7052%" y="741" width="0.0342%" height="15" fill="rgb(214,60,12)" fg:x="187357" fg:w="74"/><text x="86.9552%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (74 samples, 0.03%)</title><rect x="86.7052%" y="725" width="0.0342%" height="15" fill="rgb(250,229,36)" fg:x="187357" fg:w="74"/><text x="86.9552%" y="735.50"></text></g><g><title>alloc::alloc::box_free (74 samples, 0.03%)</title><rect x="86.7052%" y="709" width="0.0342%" height="15" fill="rgb(232,195,10)" fg:x="187357" fg:w="74"/><text x="86.9552%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (74 samples, 0.03%)</title><rect x="86.7052%" y="693" width="0.0342%" height="15" fill="rgb(205,213,31)" fg:x="187357" fg:w="74"/><text x="86.9552%" y="703.50"></text></g><g><title>[libc.so.6] (83 samples, 0.04%)</title><rect x="86.7918%" y="629" width="0.0384%" height="15" fill="rgb(237,43,8)" fg:x="187544" fg:w="83"/><text x="87.0418%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (198 samples, 0.09%)</title><rect x="86.7395%" y="677" width="0.0916%" height="15" fill="rgb(216,208,3)" fg:x="187431" fg:w="198"/><text x="86.9895%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (198 samples, 0.09%)</title><rect x="86.7395%" y="661" width="0.0916%" height="15" fill="rgb(228,179,44)" fg:x="187431" fg:w="198"/><text x="86.9895%" y="671.50"></text></g><g><title>cfree (194 samples, 0.09%)</title><rect x="86.7413%" y="645" width="0.0898%" height="15" fill="rgb(230,192,27)" fg:x="187435" fg:w="194"/><text x="86.9913%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (276 samples, 0.13%)</title><rect x="86.7048%" y="789" width="0.1277%" height="15" fill="rgb(251,30,38)" fg:x="187356" fg:w="276"/><text x="86.9548%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::TxIn]&gt; (276 samples, 0.13%)</title><rect x="86.7048%" y="773" width="0.1277%" height="15" fill="rgb(246,55,52)" fg:x="187356" fg:w="276"/><text x="86.9548%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::TxIn&gt; (275 samples, 0.13%)</title><rect x="86.7052%" y="757" width="0.1273%" height="15" fill="rgb(249,79,26)" fg:x="187357" fg:w="275"/><text x="86.9552%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::witness::Witness&gt; (201 samples, 0.09%)</title><rect x="86.7395%" y="741" width="0.0930%" height="15" fill="rgb(220,202,16)" fg:x="187431" fg:w="201"/><text x="86.9895%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (201 samples, 0.09%)</title><rect x="86.7395%" y="725" width="0.0930%" height="15" fill="rgb(250,170,23)" fg:x="187431" fg:w="201"/><text x="86.9895%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (201 samples, 0.09%)</title><rect x="86.7395%" y="709" width="0.0930%" height="15" fill="rgb(230,7,37)" fg:x="187431" fg:w="201"/><text x="86.9895%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (201 samples, 0.09%)</title><rect x="86.7395%" y="693" width="0.0930%" height="15" fill="rgb(213,71,1)" fg:x="187431" fg:w="201"/><text x="86.9895%" y="703.50"></text></g><g><title>[libc.so.6] (53 samples, 0.02%)</title><rect x="86.8427%" y="709" width="0.0245%" height="15" fill="rgb(227,87,39)" fg:x="187654" fg:w="53"/><text x="87.0927%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt;&gt; (352 samples, 0.16%)</title><rect x="86.7048%" y="805" width="0.1629%" height="15" fill="rgb(210,41,29)" fg:x="187356" fg:w="352"/><text x="86.9548%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bitcoin::blockdata::transaction::TxIn&gt;&gt; (76 samples, 0.04%)</title><rect x="86.8325%" y="789" width="0.0352%" height="15" fill="rgb(206,191,31)" fg:x="187632" fg:w="76"/><text x="87.0825%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.04%)</title><rect x="86.8325%" y="773" width="0.0352%" height="15" fill="rgb(247,75,54)" fg:x="187632" fg:w="76"/><text x="87.0825%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (76 samples, 0.04%)</title><rect x="86.8325%" y="757" width="0.0352%" height="15" fill="rgb(208,54,50)" fg:x="187632" fg:w="76"/><text x="87.0825%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (76 samples, 0.04%)</title><rect x="86.8325%" y="741" width="0.0352%" height="15" fill="rgb(214,90,37)" fg:x="187632" fg:w="76"/><text x="87.0825%" y="751.50"></text></g><g><title>cfree (76 samples, 0.04%)</title><rect x="86.8325%" y="725" width="0.0352%" height="15" fill="rgb(220,132,6)" fg:x="187632" fg:w="76"/><text x="87.0825%" y="735.50"></text></g><g><title>[libc.so.6] (88 samples, 0.04%)</title><rect x="86.9542%" y="645" width="0.0407%" height="15" fill="rgb(213,167,7)" fg:x="187895" fg:w="88"/><text x="87.2042%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (277 samples, 0.13%)</title><rect x="86.8677%" y="789" width="0.1282%" height="15" fill="rgb(243,36,27)" fg:x="187708" fg:w="277"/><text x="87.1177%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::TxOut]&gt; (277 samples, 0.13%)</title><rect x="86.8677%" y="773" width="0.1282%" height="15" fill="rgb(235,147,12)" fg:x="187708" fg:w="277"/><text x="87.1177%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::TxOut&gt; (277 samples, 0.13%)</title><rect x="86.8677%" y="757" width="0.1282%" height="15" fill="rgb(212,198,44)" fg:x="187708" fg:w="277"/><text x="87.1177%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::script::Script&gt; (277 samples, 0.13%)</title><rect x="86.8677%" y="741" width="0.1282%" height="15" fill="rgb(218,68,50)" fg:x="187708" fg:w="277"/><text x="87.1177%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (277 samples, 0.13%)</title><rect x="86.8677%" y="725" width="0.1282%" height="15" fill="rgb(224,79,48)" fg:x="187708" fg:w="277"/><text x="87.1177%" y="735.50"></text></g><g><title>alloc::alloc::box_free (277 samples, 0.13%)</title><rect x="86.8677%" y="709" width="0.1282%" height="15" fill="rgb(213,191,50)" fg:x="187708" fg:w="277"/><text x="87.1177%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (277 samples, 0.13%)</title><rect x="86.8677%" y="693" width="0.1282%" height="15" fill="rgb(254,146,10)" fg:x="187708" fg:w="277"/><text x="87.1177%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (244 samples, 0.11%)</title><rect x="86.8829%" y="677" width="0.1129%" height="15" fill="rgb(215,175,11)" fg:x="187741" fg:w="244"/><text x="87.1329%" y="687.50"></text></g><g><title>cfree (240 samples, 0.11%)</title><rect x="86.8848%" y="661" width="0.1111%" height="15" fill="rgb(207,49,7)" fg:x="187745" fg:w="240"/><text x="87.1348%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (692 samples, 0.32%)</title><rect x="86.7029%" y="853" width="0.3202%" height="15" fill="rgb(234,144,29)" fg:x="187352" fg:w="692"/><text x="86.9529%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (692 samples, 0.32%)</title><rect x="86.7029%" y="837" width="0.3202%" height="15" fill="rgb(213,222,48)" fg:x="187352" fg:w="692"/><text x="86.9529%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::Transaction&gt; (688 samples, 0.32%)</title><rect x="86.7048%" y="821" width="0.3184%" height="15" fill="rgb(222,8,6)" fg:x="187356" fg:w="688"/><text x="86.9548%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt;&gt; (336 samples, 0.16%)</title><rect x="86.8677%" y="805" width="0.1555%" height="15" fill="rgb(221,114,49)" fg:x="187708" fg:w="336"/><text x="87.1177%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bitcoin::blockdata::transaction::TxOut&gt;&gt; (59 samples, 0.03%)</title><rect x="86.9959%" y="789" width="0.0273%" height="15" fill="rgb(250,140,42)" fg:x="187985" fg:w="59"/><text x="87.2459%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.03%)</title><rect x="86.9959%" y="773" width="0.0273%" height="15" fill="rgb(250,150,27)" fg:x="187985" fg:w="59"/><text x="87.2459%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59 samples, 0.03%)</title><rect x="86.9959%" y="757" width="0.0273%" height="15" fill="rgb(252,159,3)" fg:x="187985" fg:w="59"/><text x="87.2459%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (59 samples, 0.03%)</title><rect x="86.9959%" y="741" width="0.0273%" height="15" fill="rgb(241,182,3)" fg:x="187985" fg:w="59"/><text x="87.2459%" y="751.50"></text></g><g><title>cfree (56 samples, 0.03%)</title><rect x="86.9972%" y="725" width="0.0259%" height="15" fill="rgb(236,3,9)" fg:x="187988" fg:w="56"/><text x="87.2472%" y="735.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="87.0088%" y="709" width="0.0143%" height="15" fill="rgb(223,227,51)" fg:x="188013" fg:w="31"/><text x="87.2588%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;floresta_chain::pruned_utreexo::Notification&gt; (709 samples, 0.33%)</title><rect x="86.7020%" y="917" width="0.3281%" height="15" fill="rgb(232,133,30)" fg:x="187350" fg:w="709"/><text x="86.9520%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bitcoin::blockdata::block::Block,u32)&gt; (709 samples, 0.33%)</title><rect x="86.7020%" y="901" width="0.3281%" height="15" fill="rgb(209,93,27)" fg:x="187350" fg:w="709"/><text x="86.9520%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::block::Block&gt; (709 samples, 0.33%)</title><rect x="86.7020%" y="885" width="0.3281%" height="15" fill="rgb(208,108,34)" fg:x="187350" fg:w="709"/><text x="86.9520%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::Transaction&gt;&gt; (707 samples, 0.33%)</title><rect x="86.7029%" y="869" width="0.3272%" height="15" fill="rgb(215,189,13)" fg:x="187352" fg:w="707"/><text x="86.9529%" y="879.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::UpdatableChainstate&gt;::connect_block (115,757 samples, 53.57%)</title><rect x="33.4618%" y="1045" width="53.5701%" height="15" fill="rgb(206,88,23)" fg:x="72306" fg:w="115757"/><text x="33.7118%" y="1055.50">&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_cha..</text></g><g><title>futures_executor::local_pool::block_on (3,940 samples, 1.82%)</title><rect x="85.2086%" y="1029" width="1.8234%" height="15" fill="rgb(240,173,0)" fg:x="184123" fg:w="3940"/><text x="85.4586%" y="1039.50">f..</text></g><g><title>futures_executor::local_pool::run_executor (3,924 samples, 1.82%)</title><rect x="85.2160%" y="1013" width="1.8160%" height="15" fill="rgb(223,106,52)" fg:x="184139" fg:w="3924"/><text x="85.4660%" y="1023.50">f..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,901 samples, 1.81%)</title><rect x="85.2266%" y="997" width="1.8053%" height="15" fill="rgb(206,130,16)" fg:x="184162" fg:w="3901"/><text x="85.4766%" y="1007.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,896 samples, 1.80%)</title><rect x="85.2290%" y="981" width="1.8030%" height="15" fill="rgb(220,54,25)" fg:x="184167" fg:w="3896"/><text x="85.4790%" y="991.50">s..</text></g><g><title>futures_executor::local_pool::run_executor::{{closure}} (3,886 samples, 1.80%)</title><rect x="85.2336%" y="965" width="1.7984%" height="15" fill="rgb(210,4,38)" fg:x="184177" fg:w="3886"/><text x="85.4836%" y="975.50">f..</text></g><g><title>futures_executor::local_pool::block_on::{{closure}} (3,886 samples, 1.80%)</title><rect x="85.2336%" y="949" width="1.7984%" height="15" fill="rgb(238,94,39)" fg:x="184177" fg:w="3886"/><text x="85.4836%" y="959.50">f..</text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::notify::{{closure}} (3,886 samples, 1.80%)</title><rect x="85.2336%" y="933" width="1.7984%" height="15" fill="rgb(234,124,34)" fg:x="184177" fg:w="3886"/><text x="85.4836%" y="943.50">f..</text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (62 samples, 0.03%)</title><rect x="87.0389%" y="885" width="0.0287%" height="15" fill="rgb(221,91,40)" fg:x="188078" fg:w="62"/><text x="87.2889%" y="895.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (66 samples, 0.03%)</title><rect x="87.0375%" y="997" width="0.0305%" height="15" fill="rgb(246,53,28)" fg:x="188075" fg:w="66"/><text x="87.2875%" y="1007.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (66 samples, 0.03%)</title><rect x="87.0375%" y="981" width="0.0305%" height="15" fill="rgb(229,109,7)" fg:x="188075" fg:w="66"/><text x="87.2875%" y="991.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (65 samples, 0.03%)</title><rect x="87.0380%" y="965" width="0.0301%" height="15" fill="rgb(249,117,8)" fg:x="188076" fg:w="65"/><text x="87.2880%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (65 samples, 0.03%)</title><rect x="87.0380%" y="949" width="0.0301%" height="15" fill="rgb(210,181,1)" fg:x="188076" fg:w="65"/><text x="87.2880%" y="959.50"></text></g><g><title>std::io::Write::write_all (65 samples, 0.03%)</title><rect x="87.0380%" y="933" width="0.0301%" height="15" fill="rgb(211,66,1)" fg:x="188076" fg:w="65"/><text x="87.2880%" y="943.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (64 samples, 0.03%)</title><rect x="87.0384%" y="917" width="0.0296%" height="15" fill="rgb(221,90,14)" fg:x="188077" fg:w="64"/><text x="87.2884%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (63 samples, 0.03%)</title><rect x="87.0389%" y="901" width="0.0292%" height="15" fill="rgb(219,222,44)" fg:x="188078" fg:w="63"/><text x="87.2889%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (82 samples, 0.04%)</title><rect x="87.0347%" y="1013" width="0.0379%" height="15" fill="rgb(246,34,33)" fg:x="188069" fg:w="82"/><text x="87.2847%" y="1023.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (59 samples, 0.03%)</title><rect x="87.0736%" y="949" width="0.0273%" height="15" fill="rgb(227,135,41)" fg:x="188153" fg:w="59"/><text x="87.3236%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (63 samples, 0.03%)</title><rect x="87.0736%" y="965" width="0.0292%" height="15" fill="rgb(226,15,14)" fg:x="188153" fg:w="63"/><text x="87.3236%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (65 samples, 0.03%)</title><rect x="87.0736%" y="981" width="0.0301%" height="15" fill="rgb(236,148,47)" fg:x="188153" fg:w="65"/><text x="87.3236%" y="991.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (76 samples, 0.04%)</title><rect x="87.1041%" y="933" width="0.0352%" height="15" fill="rgb(233,162,52)" fg:x="188219" fg:w="76"/><text x="87.3541%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (36 samples, 0.02%)</title><rect x="87.1227%" y="917" width="0.0167%" height="15" fill="rgb(244,35,28)" fg:x="188259" fg:w="36"/><text x="87.3727%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (80 samples, 0.04%)</title><rect x="87.1041%" y="949" width="0.0370%" height="15" fill="rgb(205,121,10)" fg:x="188219" fg:w="80"/><text x="87.3541%" y="959.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (232 samples, 0.11%)</title><rect x="87.0343%" y="1045" width="0.1074%" height="15" fill="rgb(250,58,18)" fg:x="188068" fg:w="232"/><text x="87.2843%" y="1055.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (232 samples, 0.11%)</title><rect x="87.0343%" y="1029" width="0.1074%" height="15" fill="rgb(216,37,13)" fg:x="188068" fg:w="232"/><text x="87.2843%" y="1039.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (148 samples, 0.07%)</title><rect x="87.0731%" y="1013" width="0.0685%" height="15" fill="rgb(221,215,42)" fg:x="188152" fg:w="148"/><text x="87.3231%" y="1023.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (147 samples, 0.07%)</title><rect x="87.0736%" y="997" width="0.0680%" height="15" fill="rgb(217,214,19)" fg:x="188153" fg:w="147"/><text x="87.3236%" y="1007.50"></text></g><g><title>bitcoin_hashes::Hash::hash (82 samples, 0.04%)</title><rect x="87.1037%" y="981" width="0.0379%" height="15" fill="rgb(233,139,13)" fg:x="188218" fg:w="82"/><text x="87.3537%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (82 samples, 0.04%)</title><rect x="87.1037%" y="965" width="0.0379%" height="15" fill="rgb(247,168,23)" fg:x="188218" fg:w="82"/><text x="87.3537%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::script::Script&gt; (37 samples, 0.02%)</title><rect x="87.1555%" y="901" width="0.0171%" height="15" fill="rgb(207,202,1)" fg:x="188330" fg:w="37"/><text x="87.4055%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (37 samples, 0.02%)</title><rect x="87.1555%" y="885" width="0.0171%" height="15" fill="rgb(220,155,48)" fg:x="188330" fg:w="37"/><text x="87.4055%" y="895.50"></text></g><g><title>alloc::alloc::box_free (37 samples, 0.02%)</title><rect x="87.1555%" y="869" width="0.0171%" height="15" fill="rgb(250,43,26)" fg:x="188330" fg:w="37"/><text x="87.4055%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.02%)</title><rect x="87.1555%" y="853" width="0.0171%" height="15" fill="rgb(212,190,23)" fg:x="188330" fg:w="37"/><text x="87.4055%" y="863.50"></text></g><g><title>[libc.so.6] (67 samples, 0.03%)</title><rect x="87.2596%" y="757" width="0.0310%" height="15" fill="rgb(216,39,24)" fg:x="188555" fg:w="67"/><text x="87.5096%" y="767.50"></text></g><g><title>[libc.so.6] (97 samples, 0.04%)</title><rect x="87.2462%" y="773" width="0.0449%" height="15" fill="rgb(252,113,16)" fg:x="188526" fg:w="97"/><text x="87.4962%" y="783.50"></text></g><g><title>[libc.so.6] (199 samples, 0.09%)</title><rect x="87.2092%" y="789" width="0.0921%" height="15" fill="rgb(208,113,19)" fg:x="188446" fg:w="199"/><text x="87.4592%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (285 samples, 0.13%)</title><rect x="87.1726%" y="837" width="0.1319%" height="15" fill="rgb(234,107,25)" fg:x="188367" fg:w="285"/><text x="87.4226%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (285 samples, 0.13%)</title><rect x="87.1726%" y="821" width="0.1319%" height="15" fill="rgb(234,217,51)" fg:x="188367" fg:w="285"/><text x="87.4226%" y="831.50"></text></g><g><title>cfree (284 samples, 0.13%)</title><rect x="87.1731%" y="805" width="0.1314%" height="15" fill="rgb(251,29,42)" fg:x="188368" fg:w="284"/><text x="87.4231%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (335 samples, 0.16%)</title><rect x="87.1509%" y="949" width="0.1550%" height="15" fill="rgb(221,62,51)" fg:x="188320" fg:w="335"/><text x="87.4009%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::TxIn]&gt; (335 samples, 0.16%)</title><rect x="87.1509%" y="933" width="0.1550%" height="15" fill="rgb(240,192,43)" fg:x="188320" fg:w="335"/><text x="87.4009%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::TxIn&gt; (325 samples, 0.15%)</title><rect x="87.1555%" y="917" width="0.1504%" height="15" fill="rgb(224,157,47)" fg:x="188330" fg:w="325"/><text x="87.4055%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::witness::Witness&gt; (288 samples, 0.13%)</title><rect x="87.1726%" y="901" width="0.1333%" height="15" fill="rgb(226,84,45)" fg:x="188367" fg:w="288"/><text x="87.4226%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (288 samples, 0.13%)</title><rect x="87.1726%" y="885" width="0.1333%" height="15" fill="rgb(208,207,23)" fg:x="188367" fg:w="288"/><text x="87.4226%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (288 samples, 0.13%)</title><rect x="87.1726%" y="869" width="0.1333%" height="15" fill="rgb(253,34,51)" fg:x="188367" fg:w="288"/><text x="87.4226%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (288 samples, 0.13%)</title><rect x="87.1726%" y="853" width="0.1333%" height="15" fill="rgb(227,26,34)" fg:x="188367" fg:w="288"/><text x="87.4226%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (48 samples, 0.02%)</title><rect x="87.3059%" y="917" width="0.0222%" height="15" fill="rgb(245,75,19)" fg:x="188655" fg:w="48"/><text x="87.5559%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (48 samples, 0.02%)</title><rect x="87.3059%" y="901" width="0.0222%" height="15" fill="rgb(250,191,31)" fg:x="188655" fg:w="48"/><text x="87.5559%" y="911.50"></text></g><g><title>cfree (46 samples, 0.02%)</title><rect x="87.3068%" y="885" width="0.0213%" height="15" fill="rgb(224,11,50)" fg:x="188657" fg:w="46"/><text x="87.5568%" y="895.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="87.3096%" y="869" width="0.0185%" height="15" fill="rgb(231,171,7)" fg:x="188663" fg:w="40"/><text x="87.5596%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt;&gt; (384 samples, 0.18%)</title><rect x="87.1509%" y="965" width="0.1777%" height="15" fill="rgb(252,214,10)" fg:x="188320" fg:w="384"/><text x="87.4009%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bitcoin::blockdata::transaction::TxIn&gt;&gt; (49 samples, 0.02%)</title><rect x="87.3059%" y="949" width="0.0227%" height="15" fill="rgb(249,45,46)" fg:x="188655" fg:w="49"/><text x="87.5559%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.02%)</title><rect x="87.3059%" y="933" width="0.0227%" height="15" fill="rgb(240,173,7)" fg:x="188655" fg:w="49"/><text x="87.5559%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (170 samples, 0.08%)</title><rect x="87.3286%" y="949" width="0.0787%" height="15" fill="rgb(235,214,13)" fg:x="188704" fg:w="170"/><text x="87.5786%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::TxOut]&gt; (170 samples, 0.08%)</title><rect x="87.3286%" y="933" width="0.0787%" height="15" fill="rgb(245,156,8)" fg:x="188704" fg:w="170"/><text x="87.5786%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::TxOut&gt; (170 samples, 0.08%)</title><rect x="87.3286%" y="917" width="0.0787%" height="15" fill="rgb(235,46,12)" fg:x="188704" fg:w="170"/><text x="87.5786%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::script::Script&gt; (170 samples, 0.08%)</title><rect x="87.3286%" y="901" width="0.0787%" height="15" fill="rgb(221,81,14)" fg:x="188704" fg:w="170"/><text x="87.5786%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (170 samples, 0.08%)</title><rect x="87.3286%" y="885" width="0.0787%" height="15" fill="rgb(238,207,9)" fg:x="188704" fg:w="170"/><text x="87.5786%" y="895.50"></text></g><g><title>alloc::alloc::box_free (170 samples, 0.08%)</title><rect x="87.3286%" y="869" width="0.0787%" height="15" fill="rgb(224,129,35)" fg:x="188704" fg:w="170"/><text x="87.5786%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (170 samples, 0.08%)</title><rect x="87.3286%" y="853" width="0.0787%" height="15" fill="rgb(243,218,34)" fg:x="188704" fg:w="170"/><text x="87.5786%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (152 samples, 0.07%)</title><rect x="87.3369%" y="837" width="0.0703%" height="15" fill="rgb(220,166,13)" fg:x="188722" fg:w="152"/><text x="87.5869%" y="847.50"></text></g><g><title>cfree (150 samples, 0.07%)</title><rect x="87.3379%" y="821" width="0.0694%" height="15" fill="rgb(227,167,49)" fg:x="188724" fg:w="150"/><text x="87.5879%" y="831.50"></text></g><g><title>[libc.so.6] (59 samples, 0.03%)</title><rect x="87.3800%" y="805" width="0.0273%" height="15" fill="rgb(234,142,12)" fg:x="188815" fg:w="59"/><text x="87.6300%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (58 samples, 0.03%)</title><rect x="87.4073%" y="917" width="0.0268%" height="15" fill="rgb(207,100,48)" fg:x="188874" fg:w="58"/><text x="87.6573%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 0.03%)</title><rect x="87.4073%" y="901" width="0.0268%" height="15" fill="rgb(210,25,14)" fg:x="188874" fg:w="58"/><text x="87.6573%" y="911.50"></text></g><g><title>cfree (56 samples, 0.03%)</title><rect x="87.4082%" y="885" width="0.0259%" height="15" fill="rgb(246,116,27)" fg:x="188876" fg:w="56"/><text x="87.6582%" y="895.50"></text></g><g><title>[libc.so.6] (37 samples, 0.02%)</title><rect x="87.4170%" y="869" width="0.0171%" height="15" fill="rgb(214,193,42)" fg:x="188895" fg:w="37"/><text x="87.6670%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (624 samples, 0.29%)</title><rect x="87.1467%" y="1013" width="0.2888%" height="15" fill="rgb(214,122,8)" fg:x="188311" fg:w="624"/><text x="87.3967%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::blockdata::transaction::Transaction]&gt; (618 samples, 0.29%)</title><rect x="87.1495%" y="997" width="0.2860%" height="15" fill="rgb(244,173,18)" fg:x="188317" fg:w="618"/><text x="87.3995%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::transaction::Transaction&gt; (615 samples, 0.28%)</title><rect x="87.1509%" y="981" width="0.2846%" height="15" fill="rgb(232,68,19)" fg:x="188320" fg:w="615"/><text x="87.4009%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt;&gt; (231 samples, 0.11%)</title><rect x="87.3286%" y="965" width="0.1069%" height="15" fill="rgb(236,224,1)" fg:x="188704" fg:w="231"/><text x="87.5786%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bitcoin::blockdata::transaction::TxOut&gt;&gt; (61 samples, 0.03%)</title><rect x="87.4073%" y="949" width="0.0282%" height="15" fill="rgb(240,11,8)" fg:x="188874" fg:w="61"/><text x="87.6573%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.03%)</title><rect x="87.4073%" y="933" width="0.0282%" height="15" fill="rgb(244,159,20)" fg:x="188874" fg:w="61"/><text x="87.6573%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::blockdata::block::Block&gt; (634 samples, 0.29%)</title><rect x="87.1467%" y="1045" width="0.2934%" height="15" fill="rgb(240,223,54)" fg:x="188311" fg:w="634"/><text x="87.3967%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::Transaction&gt;&gt; (634 samples, 0.29%)</title><rect x="87.1467%" y="1029" width="0.2934%" height="15" fill="rgb(237,146,5)" fg:x="188311" fg:w="634"/><text x="87.3967%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bitcoin::network::utreexo::CompactLeafData&gt;&gt; (27 samples, 0.01%)</title><rect x="87.4401%" y="1029" width="0.0125%" height="15" fill="rgb(218,221,32)" fg:x="188945" fg:w="27"/><text x="87.6901%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.01%)</title><rect x="87.4401%" y="1013" width="0.0125%" height="15" fill="rgb(244,96,26)" fg:x="188945" fg:w="27"/><text x="87.6901%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bitcoin::network::utreexo::CompactLeafData]&gt; (27 samples, 0.01%)</title><rect x="87.4401%" y="997" width="0.0125%" height="15" fill="rgb(245,184,37)" fg:x="188945" fg:w="27"/><text x="87.6901%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::network::utreexo::CompactLeafData&gt; (27 samples, 0.01%)</title><rect x="87.4401%" y="981" width="0.0125%" height="15" fill="rgb(248,91,47)" fg:x="188945" fg:w="27"/><text x="87.6901%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::network::utreexo::ScriptPubkeyType&gt; (27 samples, 0.01%)</title><rect x="87.4401%" y="965" width="0.0125%" height="15" fill="rgb(243,199,8)" fg:x="188945" fg:w="27"/><text x="87.6901%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (25 samples, 0.01%)</title><rect x="87.4411%" y="949" width="0.0116%" height="15" fill="rgb(249,12,15)" fg:x="188947" fg:w="25"/><text x="87.6911%" y="959.50"></text></g><g><title>alloc::alloc::box_free (25 samples, 0.01%)</title><rect x="87.4411%" y="933" width="0.0116%" height="15" fill="rgb(245,97,12)" fg:x="188947" fg:w="25"/><text x="87.6911%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.01%)</title><rect x="87.4411%" y="917" width="0.0116%" height="15" fill="rgb(244,61,1)" fg:x="188947" fg:w="25"/><text x="87.6911%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.01%)</title><rect x="87.4411%" y="901" width="0.0116%" height="15" fill="rgb(222,194,10)" fg:x="188947" fg:w="25"/><text x="87.6911%" y="911.50"></text></g><g><title>cfree (24 samples, 0.01%)</title><rect x="87.4415%" y="885" width="0.0111%" height="15" fill="rgb(226,178,8)" fg:x="188948" fg:w="24"/><text x="87.6915%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::network::utreexo::UData&gt; (49 samples, 0.02%)</title><rect x="87.4401%" y="1045" width="0.0227%" height="15" fill="rgb(241,32,34)" fg:x="188945" fg:w="49"/><text x="87.6901%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bitcoin::network::utreexo::BatchProof&gt; (22 samples, 0.01%)</title><rect x="87.4526%" y="1029" width="0.0102%" height="15" fill="rgb(254,26,6)" fg:x="188972" fg:w="22"/><text x="87.7026%" y="1039.50"></text></g><g><title>[libc.so.6] (93 samples, 0.04%)</title><rect x="87.6322%" y="805" width="0.0430%" height="15" fill="rgb(249,71,11)" fg:x="189360" fg:w="93"/><text x="87.8822%" y="815.50"></text></g><g><title>[libc.so.6] (306 samples, 0.14%)</title><rect x="87.5341%" y="821" width="0.1416%" height="15" fill="rgb(232,170,27)" fg:x="189148" fg:w="306"/><text x="87.7841%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (392 samples, 0.18%)</title><rect x="87.4966%" y="933" width="0.1814%" height="15" fill="rgb(214,223,17)" fg:x="189067" fg:w="392"/><text x="87.7466%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (392 samples, 0.18%)</title><rect x="87.4966%" y="917" width="0.1814%" height="15" fill="rgb(250,18,15)" fg:x="189067" fg:w="392"/><text x="87.7466%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (392 samples, 0.18%)</title><rect x="87.4966%" y="901" width="0.1814%" height="15" fill="rgb(212,153,51)" fg:x="189067" fg:w="392"/><text x="87.7466%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (387 samples, 0.18%)</title><rect x="87.4989%" y="885" width="0.1791%" height="15" fill="rgb(219,194,12)" fg:x="189072" fg:w="387"/><text x="87.7489%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (387 samples, 0.18%)</title><rect x="87.4989%" y="869" width="0.1791%" height="15" fill="rgb(212,58,17)" fg:x="189072" fg:w="387"/><text x="87.7489%" y="879.50"></text></g><g><title>alloc::alloc::alloc (387 samples, 0.18%)</title><rect x="87.4989%" y="853" width="0.1791%" height="15" fill="rgb(254,5,10)" fg:x="189072" fg:w="387"/><text x="87.7489%" y="863.50"></text></g><g><title>malloc (374 samples, 0.17%)</title><rect x="87.5049%" y="837" width="0.1731%" height="15" fill="rgb(246,91,7)" fg:x="189085" fg:w="374"/><text x="87.7549%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (415 samples, 0.19%)</title><rect x="87.4961%" y="981" width="0.1921%" height="15" fill="rgb(218,108,49)" fg:x="189066" fg:w="415"/><text x="87.7461%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (415 samples, 0.19%)</title><rect x="87.4961%" y="965" width="0.1921%" height="15" fill="rgb(238,123,20)" fg:x="189066" fg:w="415"/><text x="87.7461%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (415 samples, 0.19%)</title><rect x="87.4961%" y="949" width="0.1921%" height="15" fill="rgb(231,69,23)" fg:x="189066" fg:w="415"/><text x="87.7461%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (22 samples, 0.01%)</title><rect x="87.6780%" y="933" width="0.0102%" height="15" fill="rgb(230,209,3)" fg:x="189459" fg:w="22"/><text x="87.9280%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.01%)</title><rect x="87.6780%" y="917" width="0.0102%" height="15" fill="rgb(231,19,0)" fg:x="189459" fg:w="22"/><text x="87.9280%" y="927.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="87.6780%" y="901" width="0.0102%" height="15" fill="rgb(226,192,25)" fg:x="189459" fg:w="22"/><text x="87.9280%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as core::clone::Clone&gt;::clone (438 samples, 0.20%)</title><rect x="87.4952%" y="1029" width="0.2027%" height="15" fill="rgb(223,175,53)" fg:x="189064" fg:w="438"/><text x="87.7452%" y="1039.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as core::clone::Clone&gt;::clone (437 samples, 0.20%)</title><rect x="87.4957%" y="1013" width="0.2022%" height="15" fill="rgb(248,35,51)" fg:x="189065" fg:w="437"/><text x="87.7457%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (437 samples, 0.20%)</title><rect x="87.4957%" y="997" width="0.2022%" height="15" fill="rgb(230,37,26)" fg:x="189065" fg:w="437"/><text x="87.7457%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.02%)</title><rect x="87.6993%" y="901" width="0.0194%" height="15" fill="rgb(206,120,22)" fg:x="189505" fg:w="42"/><text x="87.9493%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.02%)</title><rect x="87.6993%" y="885" width="0.0194%" height="15" fill="rgb(207,165,28)" fg:x="189505" fg:w="42"/><text x="87.9493%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 0.02%)</title><rect x="87.6993%" y="869" width="0.0194%" height="15" fill="rgb(226,23,46)" fg:x="189505" fg:w="42"/><text x="87.9493%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.02%)</title><rect x="87.6993%" y="853" width="0.0194%" height="15" fill="rgb(208,130,44)" fg:x="189505" fg:w="42"/><text x="87.9493%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.02%)</title><rect x="87.6993%" y="837" width="0.0194%" height="15" fill="rgb(231,67,8)" fg:x="189505" fg:w="42"/><text x="87.9493%" y="847.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.02%)</title><rect x="87.6993%" y="821" width="0.0194%" height="15" fill="rgb(205,183,22)" fg:x="189505" fg:w="42"/><text x="87.9493%" y="831.50"></text></g><g><title>malloc (41 samples, 0.02%)</title><rect x="87.6997%" y="805" width="0.0190%" height="15" fill="rgb(224,47,9)" fg:x="189506" fg:w="41"/><text x="87.9497%" y="815.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="87.7021%" y="789" width="0.0167%" height="15" fill="rgb(250,183,49)" fg:x="189511" fg:w="36"/><text x="87.9521%" y="799.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="87.7044%" y="773" width="0.0143%" height="15" fill="rgb(220,151,39)" fg:x="189516" fg:w="31"/><text x="87.9544%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (71 samples, 0.03%)</title><rect x="87.6993%" y="949" width="0.0329%" height="15" fill="rgb(220,118,20)" fg:x="189505" fg:w="71"/><text x="87.9493%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (71 samples, 0.03%)</title><rect x="87.6993%" y="933" width="0.0329%" height="15" fill="rgb(231,65,51)" fg:x="189505" fg:w="71"/><text x="87.9493%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (71 samples, 0.03%)</title><rect x="87.6993%" y="917" width="0.0329%" height="15" fill="rgb(253,125,37)" fg:x="189505" fg:w="71"/><text x="87.9493%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (29 samples, 0.01%)</title><rect x="87.7187%" y="901" width="0.0134%" height="15" fill="rgb(232,102,6)" fg:x="189547" fg:w="29"/><text x="87.9687%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.01%)</title><rect x="87.7187%" y="885" width="0.0134%" height="15" fill="rgb(251,105,13)" fg:x="189547" fg:w="29"/><text x="87.9687%" y="895.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="87.7187%" y="869" width="0.0134%" height="15" fill="rgb(222,179,29)" fg:x="189547" fg:w="29"/><text x="87.9687%" y="879.50"></text></g><g><title>&lt;bitcoin::network::utreexo::ScriptPubkeyType as core::clone::Clone&gt;::clone (75 samples, 0.03%)</title><rect x="87.6979%" y="981" width="0.0347%" height="15" fill="rgb(229,180,53)" fg:x="189502" fg:w="75"/><text x="87.9479%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.03%)</title><rect x="87.6988%" y="965" width="0.0338%" height="15" fill="rgb(238,104,13)" fg:x="189504" fg:w="73"/><text x="87.9488%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (123 samples, 0.06%)</title><rect x="87.6979%" y="1029" width="0.0569%" height="15" fill="rgb(210,130,5)" fg:x="189502" fg:w="123"/><text x="87.9479%" y="1039.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (123 samples, 0.06%)</title><rect x="87.6979%" y="1013" width="0.0569%" height="15" fill="rgb(233,87,49)" fg:x="189502" fg:w="123"/><text x="87.9479%" y="1023.50"></text></g><g><title>&lt;bitcoin::network::utreexo::CompactLeafData as core::clone::Clone&gt;::clone (123 samples, 0.06%)</title><rect x="87.6979%" y="997" width="0.0569%" height="15" fill="rgb(243,34,9)" fg:x="189502" fg:w="123"/><text x="87.9479%" y="1007.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (48 samples, 0.02%)</title><rect x="87.7326%" y="981" width="0.0222%" height="15" fill="rgb(235,225,10)" fg:x="189577" fg:w="48"/><text x="87.9826%" y="991.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_inner (25 samples, 0.01%)</title><rect x="87.7863%" y="933" width="0.0116%" height="15" fill="rgb(212,0,30)" fg:x="189693" fg:w="25"/><text x="88.0363%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_inner (25 samples, 0.01%)</title><rect x="87.7863%" y="917" width="0.0116%" height="15" fill="rgb(211,177,0)" fg:x="189693" fg:w="25"/><text x="88.0363%" y="927.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (48 samples, 0.02%)</title><rect x="87.7766%" y="997" width="0.0222%" height="15" fill="rgb(225,220,11)" fg:x="189672" fg:w="48"/><text x="88.0266%" y="1007.50"></text></g><g><title>bitcoin::consensus::encode::deserialize_partial (31 samples, 0.01%)</title><rect x="87.7844%" y="981" width="0.0143%" height="15" fill="rgb(215,10,13)" fg:x="189689" fg:w="31"/><text x="88.0344%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (30 samples, 0.01%)</title><rect x="87.7849%" y="965" width="0.0139%" height="15" fill="rgb(240,177,14)" fg:x="189690" fg:w="30"/><text x="88.0349%" y="975.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (30 samples, 0.01%)</title><rect x="87.7849%" y="949" width="0.0139%" height="15" fill="rgb(243,7,39)" fg:x="189690" fg:w="30"/><text x="88.0349%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;kv::bucket::Bucket&lt;kv::key::Integer,alloc::vec::Vec&lt;u8&gt;&gt;&gt; (22 samples, 0.01%)</title><rect x="87.8039%" y="997" width="0.0102%" height="15" fill="rgb(212,99,0)" fg:x="189731" fg:w="22"/><text x="88.0539%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::tree::Tree&gt; (22 samples, 0.01%)</title><rect x="87.8039%" y="981" width="0.0102%" height="15" fill="rgb(225,162,48)" fg:x="189731" fg:w="22"/><text x="88.0539%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::arc::Arc&lt;sled::tree::TreeInner&gt;&gt; (22 samples, 0.01%)</title><rect x="87.8039%" y="965" width="0.0102%" height="15" fill="rgb(246,16,25)" fg:x="189731" fg:w="22"/><text x="88.0539%" y="975.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="87.8039%" y="949" width="0.0102%" height="15" fill="rgb(220,150,2)" fg:x="189731" fg:w="22"/><text x="88.0539%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (138 samples, 0.06%)</title><rect x="87.8529%" y="901" width="0.0639%" height="15" fill="rgb(237,113,11)" fg:x="189837" fg:w="138"/><text x="88.1029%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (138 samples, 0.06%)</title><rect x="87.8529%" y="885" width="0.0639%" height="15" fill="rgb(236,70,20)" fg:x="189837" fg:w="138"/><text x="88.1029%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (138 samples, 0.06%)</title><rect x="87.8529%" y="869" width="0.0639%" height="15" fill="rgb(234,94,7)" fg:x="189837" fg:w="138"/><text x="88.1029%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (135 samples, 0.06%)</title><rect x="87.8543%" y="853" width="0.0625%" height="15" fill="rgb(250,221,0)" fg:x="189840" fg:w="135"/><text x="88.1043%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (135 samples, 0.06%)</title><rect x="87.8543%" y="837" width="0.0625%" height="15" fill="rgb(245,149,46)" fg:x="189840" fg:w="135"/><text x="88.1043%" y="847.50"></text></g><g><title>alloc::alloc::alloc (135 samples, 0.06%)</title><rect x="87.8543%" y="821" width="0.0625%" height="15" fill="rgb(215,37,27)" fg:x="189840" fg:w="135"/><text x="88.1043%" y="831.50"></text></g><g><title>malloc (122 samples, 0.06%)</title><rect x="87.8603%" y="805" width="0.0565%" height="15" fill="rgb(232,65,3)" fg:x="189853" fg:w="122"/><text x="88.1103%" y="815.50"></text></g><g><title>[libc.so.6] (104 samples, 0.05%)</title><rect x="87.8687%" y="789" width="0.0481%" height="15" fill="rgb(214,2,16)" fg:x="189871" fg:w="104"/><text x="88.1187%" y="799.50"></text></g><g><title>[libc.so.6] (95 samples, 0.04%)</title><rect x="87.8728%" y="773" width="0.0440%" height="15" fill="rgb(227,131,50)" fg:x="189880" fg:w="95"/><text x="88.1228%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (151 samples, 0.07%)</title><rect x="87.8529%" y="965" width="0.0699%" height="15" fill="rgb(247,131,45)" fg:x="189837" fg:w="151"/><text x="88.1029%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (151 samples, 0.07%)</title><rect x="87.8529%" y="949" width="0.0699%" height="15" fill="rgb(215,97,47)" fg:x="189837" fg:w="151"/><text x="88.1029%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (151 samples, 0.07%)</title><rect x="87.8529%" y="933" width="0.0699%" height="15" fill="rgb(233,143,12)" fg:x="189837" fg:w="151"/><text x="88.1029%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (151 samples, 0.07%)</title><rect x="87.8529%" y="917" width="0.0699%" height="15" fill="rgb(222,57,17)" fg:x="189837" fg:w="151"/><text x="88.1029%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as kv::value::Value&gt;::from_raw_value (193 samples, 0.09%)</title><rect x="87.8427%" y="981" width="0.0893%" height="15" fill="rgb(214,119,38)" fg:x="189815" fg:w="193"/><text x="88.0927%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (44 samples, 0.02%)</title><rect x="87.9455%" y="965" width="0.0204%" height="15" fill="rgb(217,28,47)" fg:x="190037" fg:w="44"/><text x="88.1955%" y="975.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (44 samples, 0.02%)</title><rect x="87.9455%" y="949" width="0.0204%" height="15" fill="rgb(231,14,52)" fg:x="190037" fg:w="44"/><text x="88.1955%" y="959.50"></text></g><g><title>sled::ivec::IVec::inline (39 samples, 0.02%)</title><rect x="87.9478%" y="933" width="0.0180%" height="15" fill="rgb(220,158,18)" fg:x="190042" fg:w="39"/><text x="88.1978%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (23 samples, 0.01%)</title><rect x="87.9552%" y="917" width="0.0106%" height="15" fill="rgb(222,143,46)" fg:x="190058" fg:w="23"/><text x="88.2052%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.01%)</title><rect x="87.9552%" y="901" width="0.0106%" height="15" fill="rgb(227,165,5)" fg:x="190058" fg:w="23"/><text x="88.2052%" y="911.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="87.9552%" y="885" width="0.0106%" height="15" fill="rgb(216,222,49)" fg:x="190058" fg:w="23"/><text x="88.2052%" y="895.50"></text></g><g><title>kv::key::Key::to_raw_key (70 samples, 0.03%)</title><rect x="87.9353%" y="981" width="0.0324%" height="15" fill="rgb(238,73,39)" fg:x="190015" fg:w="70"/><text x="88.1853%" y="991.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (28 samples, 0.01%)</title><rect x="87.9779%" y="965" width="0.0130%" height="15" fill="rgb(252,115,9)" fg:x="190107" fg:w="28"/><text x="88.2279%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (31 samples, 0.01%)</title><rect x="87.9922%" y="949" width="0.0143%" height="15" fill="rgb(238,202,4)" fg:x="190138" fg:w="31"/><text x="88.2422%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (31 samples, 0.01%)</title><rect x="87.9922%" y="933" width="0.0143%" height="15" fill="rgb(252,153,44)" fg:x="190138" fg:w="31"/><text x="88.2422%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="87.9922%" y="917" width="0.0143%" height="15" fill="rgb(235,128,27)" fg:x="190138" fg:w="31"/><text x="88.2422%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.01%)</title><rect x="87.9927%" y="901" width="0.0139%" height="15" fill="rgb(221,121,47)" fg:x="190139" fg:w="30"/><text x="88.2427%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.01%)</title><rect x="87.9927%" y="885" width="0.0139%" height="15" fill="rgb(247,211,47)" fg:x="190139" fg:w="30"/><text x="88.2427%" y="895.50"></text></g><g><title>cfree (23 samples, 0.01%)</title><rect x="87.9959%" y="869" width="0.0106%" height="15" fill="rgb(252,47,49)" fg:x="190146" fg:w="23"/><text x="88.2459%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::Guard&gt; (33 samples, 0.02%)</title><rect x="87.9922%" y="965" width="0.0153%" height="15" fill="rgb(219,119,53)" fg:x="190138" fg:w="33"/><text x="88.2422%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::concurrency_control::Protector&gt; (33 samples, 0.02%)</title><rect x="88.0075%" y="965" width="0.0153%" height="15" fill="rgb(243,165,53)" fg:x="190171" fg:w="33"/><text x="88.2575%" y="975.50"></text></g><g><title>&lt;sled::concurrency_control::Protector as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="88.0084%" y="949" width="0.0143%" height="15" fill="rgb(230,12,35)" fg:x="190173" fg:w="31"/><text x="88.2584%" y="959.50"></text></g><g><title>sled::concurrency_control::read (31 samples, 0.01%)</title><rect x="88.0228%" y="965" width="0.0143%" height="15" fill="rgb(239,57,49)" fg:x="190204" fg:w="31"/><text x="88.2728%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (33 samples, 0.02%)</title><rect x="88.0399%" y="837" width="0.0153%" height="15" fill="rgb(231,154,7)" fg:x="190241" fg:w="33"/><text x="88.2899%" y="847.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="88.0700%" y="725" width="0.0120%" height="15" fill="rgb(248,81,34)" fg:x="190306" fg:w="26"/><text x="88.3200%" y="735.50"></text></g><g><title>cfree (39 samples, 0.02%)</title><rect x="88.0649%" y="741" width="0.0180%" height="15" fill="rgb(247,9,5)" fg:x="190295" fg:w="39"/><text x="88.3149%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::pagecache::CacheInfo&gt;&gt; (37 samples, 0.02%)</title><rect x="88.0899%" y="597" width="0.0171%" height="15" fill="rgb(228,172,27)" fg:x="190349" fg:w="37"/><text x="88.3399%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sled::pagecache::CacheInfo&gt;&gt; (37 samples, 0.02%)</title><rect x="88.0899%" y="581" width="0.0171%" height="15" fill="rgb(230,57,44)" fg:x="190349" fg:w="37"/><text x="88.3399%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.02%)</title><rect x="88.0899%" y="565" width="0.0171%" height="15" fill="rgb(249,35,22)" fg:x="190349" fg:w="37"/><text x="88.3399%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.02%)</title><rect x="88.0899%" y="549" width="0.0171%" height="15" fill="rgb(250,137,27)" fg:x="190349" fg:w="37"/><text x="88.3399%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.02%)</title><rect x="88.0899%" y="533" width="0.0171%" height="15" fill="rgb(251,57,31)" fg:x="190349" fg:w="37"/><text x="88.3399%" y="543.50"></text></g><g><title>cfree (37 samples, 0.02%)</title><rect x="88.0899%" y="517" width="0.0171%" height="15" fill="rgb(238,60,0)" fg:x="190349" fg:w="37"/><text x="88.3399%" y="527.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="88.0964%" y="501" width="0.0106%" height="15" fill="rgb(242,185,39)" fg:x="190363" fg:w="23"/><text x="88.3464%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (266 samples, 0.12%)</title><rect x="88.1431%" y="501" width="0.1231%" height="15" fill="rgb(240,63,43)" fg:x="190464" fg:w="266"/><text x="88.3931%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (266 samples, 0.12%)</title><rect x="88.1431%" y="485" width="0.1231%" height="15" fill="rgb(236,155,6)" fg:x="190464" fg:w="266"/><text x="88.3931%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (265 samples, 0.12%)</title><rect x="88.1436%" y="469" width="0.1226%" height="15" fill="rgb(215,11,29)" fg:x="190465" fg:w="265"/><text x="88.3936%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (265 samples, 0.12%)</title><rect x="88.1436%" y="453" width="0.1226%" height="15" fill="rgb(228,180,48)" fg:x="190465" fg:w="265"/><text x="88.3936%" y="463.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (212 samples, 0.10%)</title><rect x="88.1681%" y="437" width="0.0981%" height="15" fill="rgb(241,102,12)" fg:x="190518" fg:w="212"/><text x="88.4181%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (274 samples, 0.13%)</title><rect x="88.1431%" y="549" width="0.1268%" height="15" fill="rgb(246,213,4)" fg:x="190464" fg:w="274"/><text x="88.3931%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (274 samples, 0.13%)</title><rect x="88.1431%" y="533" width="0.1268%" height="15" fill="rgb(218,134,35)" fg:x="190464" fg:w="274"/><text x="88.3931%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (274 samples, 0.13%)</title><rect x="88.1431%" y="517" width="0.1268%" height="15" fill="rgb(251,117,35)" fg:x="190464" fg:w="274"/><text x="88.3931%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (406 samples, 0.19%)</title><rect x="88.0829%" y="693" width="0.1879%" height="15" fill="rgb(206,156,45)" fg:x="190334" fg:w="406"/><text x="88.3329%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (406 samples, 0.19%)</title><rect x="88.0829%" y="677" width="0.1879%" height="15" fill="rgb(218,52,27)" fg:x="190334" fg:w="406"/><text x="88.3329%" y="687.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (406 samples, 0.19%)</title><rect x="88.0829%" y="661" width="0.1879%" height="15" fill="rgb(238,83,36)" fg:x="190334" fg:w="406"/><text x="88.3329%" y="671.50"></text></g><g><title>core::mem::drop (406 samples, 0.19%)</title><rect x="88.0829%" y="645" width="0.1879%" height="15" fill="rgb(218,53,43)" fg:x="190334" fg:w="406"/><text x="88.3329%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (406 samples, 0.19%)</title><rect x="88.0829%" y="629" width="0.1879%" height="15" fill="rgb(239,54,39)" fg:x="190334" fg:w="406"/><text x="88.3329%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (406 samples, 0.19%)</title><rect x="88.0829%" y="613" width="0.1879%" height="15" fill="rgb(212,198,13)" fg:x="190334" fg:w="406"/><text x="88.3329%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (354 samples, 0.16%)</title><rect x="88.1070%" y="597" width="0.1638%" height="15" fill="rgb(234,54,46)" fg:x="190386" fg:w="354"/><text x="88.3570%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (321 samples, 0.15%)</title><rect x="88.1223%" y="581" width="0.1486%" height="15" fill="rgb(217,120,7)" fg:x="190419" fg:w="321"/><text x="88.3723%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (320 samples, 0.15%)</title><rect x="88.1227%" y="565" width="0.1481%" height="15" fill="rgb(246,39,15)" fg:x="190420" fg:w="320"/><text x="88.3727%" y="575.50"></text></g><g><title>core::mem::drop (34 samples, 0.02%)</title><rect x="88.2717%" y="581" width="0.0157%" height="15" fill="rgb(242,143,31)" fg:x="190742" fg:w="34"/><text x="88.5217%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::stack::Node&lt;sled::pagecache::segment::SegmentOp&gt;&gt;&gt; (34 samples, 0.02%)</title><rect x="88.2717%" y="565" width="0.0157%" height="15" fill="rgb(252,60,24)" fg:x="190742" fg:w="34"/><text x="88.5217%" y="575.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.02%)</title><rect x="88.2717%" y="549" width="0.0157%" height="15" fill="rgb(249,220,7)" fg:x="190742" fg:w="34"/><text x="88.5217%" y="559.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (34 samples, 0.02%)</title><rect x="88.2717%" y="533" width="0.0157%" height="15" fill="rgb(236,67,13)" fg:x="190742" fg:w="34"/><text x="88.5217%" y="543.50"></text></g><g><title>core::mem::drop (34 samples, 0.02%)</title><rect x="88.2717%" y="517" width="0.0157%" height="15" fill="rgb(210,62,39)" fg:x="190742" fg:w="34"/><text x="88.5217%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::stack::Node&lt;sled::pagecache::segment::SegmentOp&gt;&gt;&gt; (34 samples, 0.02%)</title><rect x="88.2717%" y="501" width="0.0157%" height="15" fill="rgb(219,122,53)" fg:x="190742" fg:w="34"/><text x="88.5217%" y="511.50"></text></g><g><title>core::mem::drop (482 samples, 0.22%)</title><rect x="88.0649%" y="821" width="0.2231%" height="15" fill="rgb(218,87,25)" fg:x="190295" fg:w="482"/><text x="88.3149%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (482 samples, 0.22%)</title><rect x="88.0649%" y="805" width="0.2231%" height="15" fill="rgb(234,179,48)" fg:x="190295" fg:w="482"/><text x="88.3149%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (482 samples, 0.22%)</title><rect x="88.0649%" y="789" width="0.2231%" height="15" fill="rgb(248,90,0)" fg:x="190295" fg:w="482"/><text x="88.3149%" y="799.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (482 samples, 0.22%)</title><rect x="88.0649%" y="773" width="0.2231%" height="15" fill="rgb(207,228,37)" fg:x="190295" fg:w="482"/><text x="88.3149%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (482 samples, 0.22%)</title><rect x="88.0649%" y="757" width="0.2231%" height="15" fill="rgb(235,214,15)" fg:x="190295" fg:w="482"/><text x="88.3149%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (443 samples, 0.21%)</title><rect x="88.0829%" y="741" width="0.2050%" height="15" fill="rgb(210,144,39)" fg:x="190334" fg:w="443"/><text x="88.3329%" y="751.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (443 samples, 0.21%)</title><rect x="88.0829%" y="725" width="0.2050%" height="15" fill="rgb(222,67,41)" fg:x="190334" fg:w="443"/><text x="88.3329%" y="735.50"></text></g><g><title>core::mem::drop (443 samples, 0.21%)</title><rect x="88.0829%" y="709" width="0.2050%" height="15" fill="rgb(205,35,37)" fg:x="190334" fg:w="443"/><text x="88.3329%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::stack::Node&lt;sled::pagecache::segment::SegmentOp&gt;&gt;&gt; (37 samples, 0.02%)</title><rect x="88.2708%" y="693" width="0.0171%" height="15" fill="rgb(216,125,40)" fg:x="190740" fg:w="37"/><text x="88.5208%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.02%)</title><rect x="88.2708%" y="677" width="0.0171%" height="15" fill="rgb(228,227,20)" fg:x="190740" fg:w="37"/><text x="88.5208%" y="687.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (37 samples, 0.02%)</title><rect x="88.2708%" y="661" width="0.0171%" height="15" fill="rgb(242,173,45)" fg:x="190740" fg:w="37"/><text x="88.5208%" y="671.50"></text></g><g><title>core::mem::drop (37 samples, 0.02%)</title><rect x="88.2708%" y="645" width="0.0171%" height="15" fill="rgb(215,79,24)" fg:x="190740" fg:w="37"/><text x="88.5208%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::stack::Node&lt;sled::pagecache::segment::SegmentOp&gt;&gt;&gt; (37 samples, 0.02%)</title><rect x="88.2708%" y="629" width="0.0171%" height="15" fill="rgb(238,164,38)" fg:x="190740" fg:w="37"/><text x="88.5208%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::stack::Node&lt;sled::pagecache::segment::SegmentOp&gt;&gt; (37 samples, 0.02%)</title><rect x="88.2708%" y="613" width="0.0171%" height="15" fill="rgb(245,196,38)" fg:x="190740" fg:w="37"/><text x="88.5208%" y="623.50"></text></g><g><title>&lt;sled::stack::Node&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.02%)</title><rect x="88.2713%" y="597" width="0.0167%" height="15" fill="rgb(231,217,29)" fg:x="190741" fg:w="36"/><text x="88.5213%" y="607.50"></text></g><g><title>&lt;crossbeam_epoch::sync::list::Iter&lt;T,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.02%)</title><rect x="88.2903%" y="805" width="0.0176%" height="15" fill="rgb(245,6,4)" fg:x="190782" fg:w="38"/><text x="88.5403%" y="815.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::tag (37 samples, 0.02%)</title><rect x="88.2907%" y="789" width="0.0171%" height="15" fill="rgb(214,76,49)" fg:x="190783" fg:w="37"/><text x="88.5407%" y="799.50"></text></g><g><title>crossbeam_epoch::atomic::decompose_tag (37 samples, 0.02%)</title><rect x="88.2907%" y="773" width="0.0171%" height="15" fill="rgb(205,96,12)" fg:x="190783" fg:w="37"/><text x="88.5407%" y="783.50"></text></g><g><title>crossbeam_epoch::internal::Global::try_advance (46 samples, 0.02%)</title><rect x="88.2879%" y="821" width="0.0213%" height="15" fill="rgb(243,131,4)" fg:x="190777" fg:w="46"/><text x="88.5379%" y="831.50"></text></g><g><title>sled::pin (595 samples, 0.28%)</title><rect x="88.0371%" y="965" width="0.2754%" height="15" fill="rgb(214,114,4)" fg:x="190235" fg:w="595"/><text x="88.2871%" y="975.50"></text></g><g><title>crossbeam_epoch::default::pin (591 samples, 0.27%)</title><rect x="88.0390%" y="949" width="0.2735%" height="15" fill="rgb(234,215,15)" fg:x="190239" fg:w="591"/><text x="88.2890%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle (591 samples, 0.27%)</title><rect x="88.0390%" y="933" width="0.2735%" height="15" fill="rgb(250,216,45)" fg:x="190239" fg:w="591"/><text x="88.2890%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (591 samples, 0.27%)</title><rect x="88.0390%" y="917" width="0.2735%" height="15" fill="rgb(236,128,4)" fg:x="190239" fg:w="591"/><text x="88.2890%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (589 samples, 0.27%)</title><rect x="88.0399%" y="901" width="0.2726%" height="15" fill="rgb(234,50,33)" fg:x="190241" fg:w="589"/><text x="88.2899%" y="911.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (589 samples, 0.27%)</title><rect x="88.0399%" y="885" width="0.2726%" height="15" fill="rgb(253,131,37)" fg:x="190241" fg:w="589"/><text x="88.2899%" y="895.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (589 samples, 0.27%)</title><rect x="88.0399%" y="869" width="0.2726%" height="15" fill="rgb(218,55,27)" fg:x="190241" fg:w="589"/><text x="88.2899%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (589 samples, 0.27%)</title><rect x="88.0399%" y="853" width="0.2726%" height="15" fill="rgb(241,220,28)" fg:x="190241" fg:w="589"/><text x="88.2899%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (539 samples, 0.25%)</title><rect x="88.0630%" y="837" width="0.2494%" height="15" fill="rgb(241,90,48)" fg:x="190291" fg:w="539"/><text x="88.3130%" y="847.50"></text></g><g><title>[libc.so.6] (93 samples, 0.04%)</title><rect x="88.3652%" y="853" width="0.0430%" height="15" fill="rgb(216,43,37)" fg:x="190944" fg:w="93"/><text x="88.6152%" y="863.50"></text></g><g><title>[libc.so.6] (130 samples, 0.06%)</title><rect x="88.3486%" y="869" width="0.0602%" height="15" fill="rgb(207,173,9)" fg:x="190908" fg:w="130"/><text x="88.5986%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 samples, 0.08%)</title><rect x="88.3250%" y="901" width="0.0847%" height="15" fill="rgb(240,126,30)" fg:x="190857" fg:w="183"/><text x="88.5750%" y="911.50"></text></g><g><title>malloc (167 samples, 0.08%)</title><rect x="88.3324%" y="885" width="0.0773%" height="15" fill="rgb(228,178,53)" fg:x="190873" fg:w="167"/><text x="88.5824%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 samples, 0.09%)</title><rect x="88.3231%" y="933" width="0.0875%" height="15" fill="rgb(217,33,4)" fg:x="190853" fg:w="189"/><text x="88.5731%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (188 samples, 0.09%)</title><rect x="88.3236%" y="917" width="0.0870%" height="15" fill="rgb(206,124,34)" fg:x="190854" fg:w="188"/><text x="88.5736%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (193 samples, 0.09%)</title><rect x="88.3217%" y="949" width="0.0893%" height="15" fill="rgb(208,122,53)" fg:x="190850" fg:w="193"/><text x="88.5717%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (150 samples, 0.07%)</title><rect x="88.4115%" y="949" width="0.0694%" height="15" fill="rgb(215,202,26)" fg:x="191044" fg:w="150"/><text x="88.6615%" y="959.50"></text></g><g><title>sled::tree::Tree::get_inner::{{closure}} (148 samples, 0.07%)</title><rect x="88.4124%" y="933" width="0.0685%" height="15" fill="rgb(232,198,31)" fg:x="191046" fg:w="148"/><text x="88.6624%" y="943.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (148 samples, 0.07%)</title><rect x="88.4124%" y="917" width="0.0685%" height="15" fill="rgb(222,23,35)" fg:x="191046" fg:w="148"/><text x="88.6624%" y="927.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (148 samples, 0.07%)</title><rect x="88.4124%" y="901" width="0.0685%" height="15" fill="rgb(242,27,53)" fg:x="191046" fg:w="148"/><text x="88.6624%" y="911.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (95 samples, 0.04%)</title><rect x="88.4370%" y="885" width="0.0440%" height="15" fill="rgb(210,216,42)" fg:x="191099" fg:w="95"/><text x="88.6870%" y="895.50"></text></g><g><title>&lt;sled::ivec::IVec as core::ops::deref::Deref&gt;::deref (85 samples, 0.04%)</title><rect x="88.4990%" y="901" width="0.0393%" height="15" fill="rgb(234,39,38)" fg:x="191233" fg:w="85"/><text x="88.7490%" y="911.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (85 samples, 0.04%)</title><rect x="88.4990%" y="885" width="0.0393%" height="15" fill="rgb(235,126,54)" fg:x="191233" fg:w="85"/><text x="88.7490%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (126 samples, 0.06%)</title><rect x="88.4888%" y="933" width="0.0583%" height="15" fill="rgb(235,150,33)" fg:x="191211" fg:w="126"/><text x="88.7388%" y="943.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key::{{closure}} (104 samples, 0.05%)</title><rect x="88.4990%" y="917" width="0.0481%" height="15" fill="rgb(249,49,53)" fg:x="191233" fg:w="104"/><text x="88.7490%" y="927.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (147 samples, 0.07%)</title><rect x="88.4809%" y="949" width="0.0680%" height="15" fill="rgb(238,60,50)" fg:x="191194" fg:w="147"/><text x="88.7309%" y="959.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (23 samples, 0.01%)</title><rect x="88.5948%" y="933" width="0.0106%" height="15" fill="rgb(210,5,2)" fg:x="191440" fg:w="23"/><text x="88.8448%" y="943.50"></text></g><g><title>&lt;sled::tree::View as core::ops::deref::Deref&gt;::deref (27 samples, 0.01%)</title><rect x="88.6105%" y="933" width="0.0125%" height="15" fill="rgb(214,207,24)" fg:x="191474" fg:w="27"/><text x="88.8605%" y="943.50"></text></g><g><title>&lt;sled::pagecache::NodeView as core::ops::deref::Deref&gt;::deref (27 samples, 0.01%)</title><rect x="88.6105%" y="917" width="0.0125%" height="15" fill="rgb(228,173,2)" fg:x="191474" fg:w="27"/><text x="88.8605%" y="927.50"></text></g><g><title>sled::pagecache::Page::as_node (24 samples, 0.01%)</title><rect x="88.6119%" y="901" width="0.0111%" height="15" fill="rgb(244,26,8)" fg:x="191477" fg:w="24"/><text x="88.8619%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (38 samples, 0.02%)</title><rect x="88.6235%" y="933" width="0.0176%" height="15" fill="rgb(249,153,35)" fg:x="191502" fg:w="38"/><text x="88.8735%" y="943.50"></text></g><g><title>core::cmp::PartialOrd::ge (38 samples, 0.02%)</title><rect x="88.6235%" y="917" width="0.0176%" height="15" fill="rgb(221,215,40)" fg:x="191502" fg:w="38"/><text x="88.8735%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (33 samples, 0.02%)</title><rect x="88.6258%" y="901" width="0.0153%" height="15" fill="rgb(238,106,35)" fg:x="191507" fg:w="33"/><text x="88.8758%" y="911.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (33 samples, 0.02%)</title><rect x="88.6258%" y="885" width="0.0153%" height="15" fill="rgb(207,195,21)" fg:x="191507" fg:w="33"/><text x="88.8758%" y="895.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (33 samples, 0.02%)</title><rect x="88.6258%" y="869" width="0.0153%" height="15" fill="rgb(205,43,29)" fg:x="191507" fg:w="33"/><text x="88.8758%" y="879.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="88.6295%" y="853" width="0.0116%" height="15" fill="rgb(236,35,21)" fg:x="191515" fg:w="25"/><text x="88.8795%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (59 samples, 0.03%)</title><rect x="88.6410%" y="933" width="0.0273%" height="15" fill="rgb(244,74,8)" fg:x="191540" fg:w="59"/><text x="88.8910%" y="943.50"></text></g><g><title>core::cmp::PartialOrd::lt (59 samples, 0.03%)</title><rect x="88.6410%" y="917" width="0.0273%" height="15" fill="rgb(241,229,7)" fg:x="191540" fg:w="59"/><text x="88.8910%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (59 samples, 0.03%)</title><rect x="88.6410%" y="901" width="0.0273%" height="15" fill="rgb(212,223,25)" fg:x="191540" fg:w="59"/><text x="88.8910%" y="911.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (59 samples, 0.03%)</title><rect x="88.6410%" y="885" width="0.0273%" height="15" fill="rgb(234,58,53)" fg:x="191540" fg:w="59"/><text x="88.8910%" y="895.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (59 samples, 0.03%)</title><rect x="88.6410%" y="869" width="0.0273%" height="15" fill="rgb(244,36,1)" fg:x="191540" fg:w="59"/><text x="88.8910%" y="879.50"></text></g><g><title>[libc.so.6] (47 samples, 0.02%)</title><rect x="88.6466%" y="853" width="0.0218%" height="15" fill="rgb(222,40,54)" fg:x="191552" fg:w="47"/><text x="88.8966%" y="863.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (86 samples, 0.04%)</title><rect x="88.7216%" y="885" width="0.0398%" height="15" fill="rgb(210,207,39)" fg:x="191714" fg:w="86"/><text x="88.9716%" y="895.50"></text></g><g><title>&lt;sled::ivec::IVec as core::ops::deref::Deref&gt;::deref (37 samples, 0.02%)</title><rect x="88.7614%" y="885" width="0.0171%" height="15" fill="rgb(234,52,14)" fg:x="191800" fg:w="37"/><text x="89.0114%" y="895.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (37 samples, 0.02%)</title><rect x="88.7614%" y="869" width="0.0171%" height="15" fill="rgb(239,108,46)" fg:x="191800" fg:w="37"/><text x="89.0114%" y="879.50"></text></g><g><title>core::cmp::PartialOrd::lt (26 samples, 0.01%)</title><rect x="88.7785%" y="885" width="0.0120%" height="15" fill="rgb(252,223,5)" fg:x="191837" fg:w="26"/><text x="89.0285%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (26 samples, 0.01%)</title><rect x="88.7785%" y="869" width="0.0120%" height="15" fill="rgb(227,181,11)" fg:x="191837" fg:w="26"/><text x="89.0285%" y="879.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (26 samples, 0.01%)</title><rect x="88.7785%" y="853" width="0.0120%" height="15" fill="rgb(248,126,40)" fg:x="191837" fg:w="26"/><text x="89.0285%" y="863.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (26 samples, 0.01%)</title><rect x="88.7785%" y="837" width="0.0120%" height="15" fill="rgb(243,1,18)" fg:x="191837" fg:w="26"/><text x="89.0285%" y="847.50"></text></g><g><title>[libc.so.6] (276 samples, 0.13%)</title><rect x="88.8053%" y="869" width="0.1277%" height="15" fill="rgb(214,145,23)" fg:x="191895" fg:w="276"/><text x="89.0553%" y="879.50"></text></g><g><title>sled::binary_search::binary_search_lub (519 samples, 0.24%)</title><rect x="88.6957%" y="917" width="0.2402%" height="15" fill="rgb(241,218,11)" fg:x="191658" fg:w="519"/><text x="88.9457%" y="927.50"></text></g><g><title>sled::binary_search::binary_search (492 samples, 0.23%)</title><rect x="88.7081%" y="901" width="0.2277%" height="15" fill="rgb(214,219,24)" fg:x="191685" fg:w="492"/><text x="88.9581%" y="911.50"></text></g><g><title>sled::fastcmp::fastcmp (302 samples, 0.14%)</title><rect x="88.7961%" y="885" width="0.1398%" height="15" fill="rgb(235,32,7)" fg:x="191875" fg:w="302"/><text x="89.0461%" y="895.50"></text></g><g><title>sled::node::Node::index_next_node (577 samples, 0.27%)</title><rect x="88.6734%" y="933" width="0.2670%" height="15" fill="rgb(227,121,28)" fg:x="191610" fg:w="577"/><text x="88.9234%" y="943.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (43 samples, 0.02%)</title><rect x="89.0238%" y="901" width="0.0199%" height="15" fill="rgb(216,129,49)" fg:x="192367" fg:w="43"/><text x="89.2738%" y="911.50"></text></g><g><title>&lt;sled::lru::CacheAccessIter as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.01%)</title><rect x="89.0571%" y="885" width="0.0139%" height="15" fill="rgb(207,194,50)" fg:x="192439" fg:w="30"/><text x="89.3071%" y="895.50"></text></g><g><title>sled::lru::AccessQueue::push (166 samples, 0.08%)</title><rect x="89.0719%" y="885" width="0.0768%" height="15" fill="rgb(207,4,18)" fg:x="192471" fg:w="166"/><text x="89.3219%" y="895.50"></text></g><g><title>sled::lru::Lru::accessed (311 samples, 0.14%)</title><rect x="89.0483%" y="901" width="0.1439%" height="15" fill="rgb(213,50,30)" fg:x="192420" fg:w="311"/><text x="89.2983%" y="911.50"></text></g><g><title>sled::lru::Shard::accessed (80 samples, 0.04%)</title><rect x="89.1552%" y="885" width="0.0370%" height="15" fill="rgb(208,77,22)" fg:x="192651" fg:w="80"/><text x="89.4052%" y="895.50"></text></g><g><title>sled::pagecache::Page::is_free (193 samples, 0.09%)</title><rect x="89.1922%" y="901" width="0.0893%" height="15" fill="rgb(244,204,34)" fg:x="192731" fg:w="193"/><text x="89.4422%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (95 samples, 0.04%)</title><rect x="89.2376%" y="885" width="0.0440%" height="15" fill="rgb(230,20,17)" fg:x="192829" fg:w="95"/><text x="89.4876%" y="895.50"></text></g><g><title>sled::pagecache::Page::log_size (22 samples, 0.01%)</title><rect x="89.2815%" y="901" width="0.0102%" height="15" fill="rgb(237,83,15)" fg:x="192924" fg:w="22"/><text x="89.5315%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (22 samples, 0.01%)</title><rect x="89.2815%" y="885" width="0.0102%" height="15" fill="rgb(221,109,25)" fg:x="192924" fg:w="22"/><text x="89.5315%" y="895.50"></text></g><g><title>&lt;u64 as core::iter::traits::accum::Sum&gt;::sum (22 samples, 0.01%)</title><rect x="89.2815%" y="869" width="0.0102%" height="15" fill="rgb(205,194,52)" fg:x="192924" fg:w="22"/><text x="89.5315%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.01%)</title><rect x="89.2815%" y="853" width="0.0102%" height="15" fill="rgb(244,173,54)" fg:x="192924" fg:w="22"/><text x="89.5315%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (22 samples, 0.01%)</title><rect x="89.2815%" y="837" width="0.0102%" height="15" fill="rgb(227,181,18)" fg:x="192924" fg:w="22"/><text x="89.5315%" y="847.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::is_null (49 samples, 0.02%)</title><rect x="89.2987%" y="885" width="0.0227%" height="15" fill="rgb(238,36,30)" fg:x="192961" fg:w="49"/><text x="89.5487%" y="895.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (3,267 samples, 1.51%)</title><rect x="87.8233%" y="997" width="1.5119%" height="15" fill="rgb(254,85,0)" fg:x="189773" fg:w="3267"/><text x="88.0733%" y="1007.50"></text></g><g><title>sled::tree::Tree::get (2,955 samples, 1.37%)</title><rect x="87.9677%" y="981" width="1.3675%" height="15" fill="rgb(247,63,33)" fg:x="190085" fg:w="2955"/><text x="88.2177%" y="991.50"></text></g><g><title>sled::tree::Tree::get_inner (2,210 samples, 1.02%)</title><rect x="88.3125%" y="965" width="1.0227%" height="15" fill="rgb(220,7,54)" fg:x="190830" fg:w="2210"/><text x="88.5625%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_key (1,699 samples, 0.79%)</title><rect x="88.5490%" y="949" width="0.7863%" height="15" fill="rgb(238,227,21)" fg:x="191341" fg:w="1699"/><text x="88.7990%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_pid (850 samples, 0.39%)</title><rect x="88.9419%" y="933" width="0.3934%" height="15" fill="rgb(237,29,31)" fg:x="192190" fg:w="850"/><text x="89.1919%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::get (707 samples, 0.33%)</title><rect x="89.0080%" y="917" width="0.3272%" height="15" fill="rgb(211,21,50)" fg:x="192333" fg:w="707"/><text x="89.2580%" y="927.50"></text></g><g><title>sled::pagecache::pagetable::PageTable::get (94 samples, 0.04%)</title><rect x="89.2917%" y="901" width="0.0435%" height="15" fill="rgb(239,119,2)" fg:x="192946" fg:w="94"/><text x="89.5417%" y="911.50"></text></g><g><title>sled::pagecache::pagetable::PageTable::traverse (30 samples, 0.01%)</title><rect x="89.3213%" y="885" width="0.0139%" height="15" fill="rgb(250,2,39)" fg:x="193010" fg:w="30"/><text x="89.5713%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;sled::ivec::IVec,sled::tree::Tree,core::hash::BuildHasherDefault&lt;fxhash::FxHasher64&gt;&gt;&gt;&gt; (27 samples, 0.01%)</title><rect x="89.3477%" y="965" width="0.0125%" height="15" fill="rgb(244,46,53)" fg:x="193067" fg:w="27"/><text x="89.5977%" y="975.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.01%)</title><rect x="89.3477%" y="949" width="0.0125%" height="15" fill="rgb(209,21,19)" fg:x="193067" fg:w="27"/><text x="89.5977%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (27 samples, 0.01%)</title><rect x="89.3477%" y="933" width="0.0125%" height="15" fill="rgb(236,145,4)" fg:x="193067" fg:w="27"/><text x="89.5977%" y="943.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (34 samples, 0.02%)</title><rect x="89.3602%" y="965" width="0.0157%" height="15" fill="rgb(220,133,36)" fg:x="193094" fg:w="34"/><text x="89.6102%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (34 samples, 0.02%)</title><rect x="89.3602%" y="949" width="0.0157%" height="15" fill="rgb(244,18,3)" fg:x="193094" fg:w="34"/><text x="89.6102%" y="959.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_block_hash (3,491 samples, 1.62%)</title><rect x="87.7724%" y="1013" width="1.6156%" height="15" fill="rgb(232,171,48)" fg:x="189663" fg:w="3491"/><text x="88.0224%" y="1023.50"></text></g><g><title>kv::store::Store::bucket (114 samples, 0.05%)</title><rect x="89.3352%" y="997" width="0.0528%" height="15" fill="rgb(223,223,53)" fg:x="193040" fg:w="114"/><text x="89.5852%" y="1007.50"></text></g><g><title>sled::db::Db::open_tree (110 samples, 0.05%)</title><rect x="89.3371%" y="981" width="0.0509%" height="15" fill="rgb(246,92,13)" fg:x="193044" fg:w="110"/><text x="89.5871%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.01%)</title><rect x="89.3759%" y="965" width="0.0120%" height="15" fill="rgb(229,171,10)" fg:x="193128" fg:w="26"/><text x="89.6259%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.01%)</title><rect x="89.3759%" y="949" width="0.0120%" height="15" fill="rgb(213,131,26)" fg:x="193128" fg:w="26"/><text x="89.6259%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.01%)</title><rect x="89.3759%" y="933" width="0.0120%" height="15" fill="rgb(242,87,54)" fg:x="193128" fg:w="26"/><text x="89.6259%" y="943.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_block_hash (3,562 samples, 1.65%)</title><rect x="87.7557%" y="1029" width="1.6484%" height="15" fill="rgb(237,21,35)" fg:x="189627" fg:w="3562"/><text x="88.0057%" y="1039.50"></text></g><g><title>spin::rwlock::RwLock&lt;T,R&gt;::read (35 samples, 0.02%)</title><rect x="89.3880%" y="1013" width="0.0162%" height="15" fill="rgb(253,13,47)" fg:x="193154" fg:w="35"/><text x="89.6380%" y="1023.50"></text></g><g><title>spin::rwlock::RwLock&lt;T,R&gt;::try_read (35 samples, 0.02%)</title><rect x="89.3880%" y="997" width="0.0162%" height="15" fill="rgb(215,122,49)" fg:x="193154" fg:w="35"/><text x="89.6380%" y="1007.50"></text></g><g><title>spin::rwlock::RwLock&lt;T,R&gt;::acquire_reader (34 samples, 0.02%)</title><rect x="89.3884%" y="981" width="0.0157%" height="15" fill="rgb(209,179,30)" fg:x="193155" fg:w="34"/><text x="89.6384%" y="991.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="89.4139%" y="901" width="0.0116%" height="15" fill="rgb(235,100,24)" fg:x="193210" fg:w="25"/><text x="89.6639%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.01%)</title><rect x="89.4139%" y="885" width="0.0116%" height="15" fill="rgb(209,67,24)" fg:x="193210" fg:w="25"/><text x="89.6639%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.01%)</title><rect x="89.4139%" y="869" width="0.0116%" height="15" fill="rgb(206,74,32)" fg:x="193210" fg:w="25"/><text x="89.6639%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.01%)</title><rect x="89.4139%" y="853" width="0.0116%" height="15" fill="rgb(212,45,25)" fg:x="193210" fg:w="25"/><text x="89.6639%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.01%)</title><rect x="89.4139%" y="837" width="0.0116%" height="15" fill="rgb(239,26,3)" fg:x="193210" fg:w="25"/><text x="89.6639%" y="847.50"></text></g><g><title>&lt;bitcoin::blockdata::block::Block as core::clone::Clone&gt;::clone (30 samples, 0.01%)</title><rect x="89.4139%" y="981" width="0.0139%" height="15" fill="rgb(218,36,15)" fg:x="193210" fg:w="30"/><text x="89.6639%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.01%)</title><rect x="89.4139%" y="965" width="0.0139%" height="15" fill="rgb(206,108,24)" fg:x="193210" fg:w="30"/><text x="89.6639%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.01%)</title><rect x="89.4139%" y="949" width="0.0139%" height="15" fill="rgb(234,204,42)" fg:x="193210" fg:w="30"/><text x="89.6639%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.01%)</title><rect x="89.4139%" y="933" width="0.0139%" height="15" fill="rgb(229,2,11)" fg:x="193210" fg:w="30"/><text x="89.6639%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.01%)</title><rect x="89.4139%" y="917" width="0.0139%" height="15" fill="rgb(221,20,48)" fg:x="193210" fg:w="30"/><text x="89.6639%" y="927.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::chain_params (40 samples, 0.02%)</title><rect x="89.4134%" y="1013" width="0.0185%" height="15" fill="rgb(244,164,10)" fg:x="193209" fg:w="40"/><text x="89.6634%" y="1023.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainparams::ChainParams as core::clone::Clone&gt;::clone (39 samples, 0.02%)</title><rect x="89.4139%" y="997" width="0.0180%" height="15" fill="rgb(243,229,2)" fg:x="193210" fg:w="39"/><text x="89.6639%" y="1007.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (28 samples, 0.01%)</title><rect x="89.4329%" y="981" width="0.0130%" height="15" fill="rgb(232,131,37)" fg:x="193251" fg:w="28"/><text x="89.6829%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::deserialize_partial (24 samples, 0.01%)</title><rect x="89.4347%" y="965" width="0.0111%" height="15" fill="rgb(217,156,11)" fg:x="193255" fg:w="24"/><text x="89.6847%" y="975.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (22 samples, 0.01%)</title><rect x="89.4356%" y="949" width="0.0102%" height="15" fill="rgb(239,99,48)" fg:x="193257" fg:w="22"/><text x="89.6856%" y="959.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (22 samples, 0.01%)</title><rect x="89.4356%" y="933" width="0.0102%" height="15" fill="rgb(231,209,9)" fg:x="193257" fg:w="22"/><text x="89.6856%" y="943.50"></text></g><g><title>sled::node::Node::index_next_node (22 samples, 0.01%)</title><rect x="89.4833%" y="917" width="0.0102%" height="15" fill="rgb(254,97,27)" fg:x="193360" fg:w="22"/><text x="89.7333%" y="927.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (123 samples, 0.06%)</title><rect x="89.4500%" y="981" width="0.0569%" height="15" fill="rgb(223,151,38)" fg:x="193288" fg:w="123"/><text x="89.7000%" y="991.50"></text></g><g><title>sled::tree::Tree::get (102 samples, 0.05%)</title><rect x="89.4597%" y="965" width="0.0472%" height="15" fill="rgb(219,206,35)" fg:x="193309" fg:w="102"/><text x="89.7097%" y="975.50"></text></g><g><title>sled::tree::Tree::get_inner (83 samples, 0.04%)</title><rect x="89.4685%" y="949" width="0.0384%" height="15" fill="rgb(216,130,31)" fg:x="193328" fg:w="83"/><text x="89.7185%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_key (68 samples, 0.03%)</title><rect x="89.4754%" y="933" width="0.0315%" height="15" fill="rgb(251,97,34)" fg:x="193343" fg:w="68"/><text x="89.7254%" y="943.50"></text></g><g><title>sled::tree::Tree::view_for_pid (29 samples, 0.01%)</title><rect x="89.4935%" y="917" width="0.0134%" height="15" fill="rgb(246,159,47)" fg:x="193382" fg:w="29"/><text x="89.7435%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::get (26 samples, 0.01%)</title><rect x="89.4949%" y="901" width="0.0120%" height="15" fill="rgb(232,87,10)" fg:x="193385" fg:w="26"/><text x="89.7449%" y="911.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_header (167 samples, 0.08%)</title><rect x="89.4324%" y="997" width="0.0773%" height="15" fill="rgb(249,1,37)" fg:x="193250" fg:w="167"/><text x="89.6824%" y="1007.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (173 samples, 0.08%)</title><rect x="89.4319%" y="1013" width="0.0801%" height="15" fill="rgb(239,135,14)" fg:x="193249" fg:w="173"/><text x="89.6819%" y="1023.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::is_coinbase_mature (234 samples, 0.11%)</title><rect x="89.4042%" y="1029" width="0.1083%" height="15" fill="rgb(253,116,46)" fg:x="193189" fg:w="234"/><text x="89.6542%" y="1039.50"></text></g><g><title>[libc.so.6] (72 samples, 0.03%)</title><rect x="89.5694%" y="869" width="0.0333%" height="15" fill="rgb(222,217,37)" fg:x="193546" fg:w="72"/><text x="89.8194%" y="879.50"></text></g><g><title>[libc.so.6] (177 samples, 0.08%)</title><rect x="89.5217%" y="901" width="0.0819%" height="15" fill="rgb(252,96,8)" fg:x="193443" fg:w="177"/><text x="89.7717%" y="911.50"></text></g><g><title>[libc.so.6] (174 samples, 0.08%)</title><rect x="89.5231%" y="885" width="0.0805%" height="15" fill="rgb(254,103,41)" fg:x="193446" fg:w="174"/><text x="89.7731%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (198 samples, 0.09%)</title><rect x="89.5152%" y="965" width="0.0916%" height="15" fill="rgb(218,213,19)" fg:x="193429" fg:w="198"/><text x="89.7652%" y="975.50"></text></g><g><title>alloc::alloc::Global::grow_impl (198 samples, 0.09%)</title><rect x="89.5152%" y="949" width="0.0916%" height="15" fill="rgb(253,95,21)" fg:x="193429" fg:w="198"/><text x="89.7652%" y="959.50"></text></g><g><title>alloc::alloc::realloc (198 samples, 0.09%)</title><rect x="89.5152%" y="933" width="0.0916%" height="15" fill="rgb(229,26,28)" fg:x="193429" fg:w="198"/><text x="89.7652%" y="943.50"></text></g><g><title>realloc (197 samples, 0.09%)</title><rect x="89.5157%" y="917" width="0.0912%" height="15" fill="rgb(230,129,16)" fg:x="193430" fg:w="197"/><text x="89.7657%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (203 samples, 0.09%)</title><rect x="89.5152%" y="981" width="0.0939%" height="15" fill="rgb(236,126,17)" fg:x="193429" fg:w="203"/><text x="89.7652%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (209 samples, 0.10%)</title><rect x="89.5138%" y="1013" width="0.0967%" height="15" fill="rgb(209,33,33)" fg:x="193426" fg:w="209"/><text x="89.7638%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (209 samples, 0.10%)</title><rect x="89.5138%" y="997" width="0.0967%" height="15" fill="rgb(227,85,29)" fg:x="193426" fg:w="209"/><text x="89.7638%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (222 samples, 0.10%)</title><rect x="89.5125%" y="1029" width="0.1027%" height="15" fill="rgb(241,53,46)" fg:x="193423" fg:w="222"/><text x="89.7625%" y="1039.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (44 samples, 0.02%)</title><rect x="89.6684%" y="853" width="0.0204%" height="15" fill="rgb(228,167,53)" fg:x="193760" fg:w="44"/><text x="89.9184%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (33 samples, 0.02%)</title><rect x="89.6735%" y="837" width="0.0153%" height="15" fill="rgb(238,195,45)" fg:x="193771" fg:w="33"/><text x="89.9235%" y="847.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (53 samples, 0.02%)</title><rect x="89.6656%" y="917" width="0.0245%" height="15" fill="rgb(252,124,45)" fg:x="193754" fg:w="53"/><text x="89.9156%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (53 samples, 0.02%)</title><rect x="89.6656%" y="901" width="0.0245%" height="15" fill="rgb(251,38,35)" fg:x="193754" fg:w="53"/><text x="89.9156%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (53 samples, 0.02%)</title><rect x="89.6656%" y="885" width="0.0245%" height="15" fill="rgb(227,33,2)" fg:x="193754" fg:w="53"/><text x="89.9156%" y="895.50"></text></g><g><title>std::io::Write::write_all (53 samples, 0.02%)</title><rect x="89.6656%" y="869" width="0.0245%" height="15" fill="rgb(223,157,46)" fg:x="193754" fg:w="53"/><text x="89.9156%" y="879.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (65 samples, 0.03%)</title><rect x="89.6606%" y="933" width="0.0301%" height="15" fill="rgb(222,78,41)" fg:x="193743" fg:w="65"/><text x="89.9106%" y="943.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (132 samples, 0.06%)</title><rect x="89.6309%" y="981" width="0.0611%" height="15" fill="rgb(248,176,11)" fg:x="193679" fg:w="132"/><text x="89.8809%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (132 samples, 0.06%)</title><rect x="89.6309%" y="965" width="0.0611%" height="15" fill="rgb(241,221,18)" fg:x="193679" fg:w="132"/><text x="89.8809%" y="975.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (85 samples, 0.04%)</title><rect x="89.6527%" y="949" width="0.0393%" height="15" fill="rgb(218,85,22)" fg:x="193726" fg:w="85"/><text x="89.9027%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (47 samples, 0.02%)</title><rect x="89.7309%" y="837" width="0.0218%" height="15" fill="rgb(222,223,7)" fg:x="193895" fg:w="47"/><text x="89.9809%" y="847.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (176 samples, 0.08%)</title><rect x="89.7008%" y="853" width="0.0814%" height="15" fill="rgb(254,59,39)" fg:x="193830" fg:w="176"/><text x="89.9508%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (64 samples, 0.03%)</title><rect x="89.7526%" y="837" width="0.0296%" height="15" fill="rgb(247,100,27)" fg:x="193942" fg:w="64"/><text x="90.0026%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (38 samples, 0.02%)</title><rect x="89.7832%" y="853" width="0.0176%" height="15" fill="rgb(237,207,10)" fg:x="194008" fg:w="38"/><text x="90.0332%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.02%)</title><rect x="89.7832%" y="837" width="0.0176%" height="15" fill="rgb(220,121,28)" fg:x="194008" fg:w="38"/><text x="90.0332%" y="847.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="89.7855%" y="821" width="0.0153%" height="15" fill="rgb(213,223,20)" fg:x="194013" fg:w="33"/><text x="90.0355%" y="831.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (229 samples, 0.11%)</title><rect x="89.6966%" y="885" width="0.1060%" height="15" fill="rgb(205,121,27)" fg:x="193821" fg:w="229"/><text x="89.9466%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (227 samples, 0.11%)</title><rect x="89.6976%" y="869" width="0.1051%" height="15" fill="rgb(253,24,53)" fg:x="193823" fg:w="227"/><text x="89.9476%" y="879.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (240 samples, 0.11%)</title><rect x="89.6920%" y="917" width="0.1111%" height="15" fill="rgb(224,224,47)" fg:x="193811" fg:w="240"/><text x="89.9420%" y="927.50"></text></g><g><title>std::io::Write::write_all (240 samples, 0.11%)</title><rect x="89.6920%" y="901" width="0.1111%" height="15" fill="rgb(250,125,36)" fg:x="193811" fg:w="240"/><text x="89.9420%" y="911.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (241 samples, 0.11%)</title><rect x="89.6920%" y="933" width="0.1115%" height="15" fill="rgb(240,144,38)" fg:x="193811" fg:w="241"/><text x="89.9420%" y="943.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (464 samples, 0.21%)</title><rect x="89.6920%" y="965" width="0.2147%" height="15" fill="rgb(250,15,50)" fg:x="193811" fg:w="464"/><text x="89.9420%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (464 samples, 0.21%)</title><rect x="89.6920%" y="949" width="0.2147%" height="15" fill="rgb(210,24,26)" fg:x="193811" fg:w="464"/><text x="89.9420%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::into_inner (223 samples, 0.10%)</title><rect x="89.8035%" y="933" width="0.1032%" height="15" fill="rgb(234,53,53)" fg:x="194052" fg:w="223"/><text x="90.0535%" y="943.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (53 samples, 0.02%)</title><rect x="89.9128%" y="917" width="0.0245%" height="15" fill="rgb(208,108,28)" fg:x="194288" fg:w="53"/><text x="90.1628%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (51 samples, 0.02%)</title><rect x="89.9137%" y="901" width="0.0236%" height="15" fill="rgb(227,143,7)" fg:x="194290" fg:w="51"/><text x="90.1637%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (532 samples, 0.25%)</title><rect x="89.6920%" y="981" width="0.2462%" height="15" fill="rgb(238,189,38)" fg:x="193811" fg:w="532"/><text x="89.9420%" y="991.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (68 samples, 0.03%)</title><rect x="89.9067%" y="965" width="0.0315%" height="15" fill="rgb(222,69,15)" fg:x="194275" fg:w="68"/><text x="90.1567%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (68 samples, 0.03%)</title><rect x="89.9067%" y="949" width="0.0315%" height="15" fill="rgb(213,169,7)" fg:x="194275" fg:w="68"/><text x="90.1567%" y="959.50"></text></g><g><title>std::io::Write::write_all (66 samples, 0.03%)</title><rect x="89.9077%" y="933" width="0.0305%" height="15" fill="rgb(251,219,4)" fg:x="194277" fg:w="66"/><text x="90.1577%" y="943.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (28 samples, 0.01%)</title><rect x="89.9516%" y="885" width="0.0130%" height="15" fill="rgb(241,55,40)" fg:x="194372" fg:w="28"/><text x="90.2016%" y="895.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (68 samples, 0.03%)</title><rect x="89.9438%" y="917" width="0.0315%" height="15" fill="rgb(243,57,30)" fg:x="194355" fg:w="68"/><text x="90.1938%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (62 samples, 0.03%)</title><rect x="89.9465%" y="901" width="0.0287%" height="15" fill="rgb(234,50,30)" fg:x="194361" fg:w="62"/><text x="90.1965%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (747 samples, 0.35%)</title><rect x="89.6309%" y="997" width="0.3457%" height="15" fill="rgb(239,23,42)" fg:x="193679" fg:w="747"/><text x="89.8809%" y="1007.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Sequence as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (83 samples, 0.04%)</title><rect x="89.9382%" y="981" width="0.0384%" height="15" fill="rgb(217,38,19)" fg:x="194343" fg:w="83"/><text x="90.1882%" y="991.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (83 samples, 0.04%)</title><rect x="89.9382%" y="965" width="0.0384%" height="15" fill="rgb(215,179,16)" fg:x="194343" fg:w="83"/><text x="90.1882%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (83 samples, 0.04%)</title><rect x="89.9382%" y="949" width="0.0384%" height="15" fill="rgb(254,21,37)" fg:x="194343" fg:w="83"/><text x="90.1882%" y="959.50"></text></g><g><title>std::io::Write::write_all (81 samples, 0.04%)</title><rect x="89.9391%" y="933" width="0.0375%" height="15" fill="rgb(219,207,48)" fg:x="194345" fg:w="81"/><text x="90.1891%" y="943.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (29 samples, 0.01%)</title><rect x="89.9854%" y="933" width="0.0134%" height="15" fill="rgb(227,225,41)" fg:x="194445" fg:w="29"/><text x="90.2354%" y="943.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (51 samples, 0.02%)</title><rect x="89.9766%" y="997" width="0.0236%" height="15" fill="rgb(223,130,1)" fg:x="194426" fg:w="51"/><text x="90.2266%" y="1007.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (44 samples, 0.02%)</title><rect x="89.9799%" y="981" width="0.0204%" height="15" fill="rgb(249,54,42)" fg:x="194433" fg:w="44"/><text x="90.2299%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (44 samples, 0.02%)</title><rect x="89.9799%" y="965" width="0.0204%" height="15" fill="rgb(248,69,25)" fg:x="194433" fg:w="44"/><text x="90.2299%" y="975.50"></text></g><g><title>std::io::Write::write_all (44 samples, 0.02%)</title><rect x="89.9799%" y="949" width="0.0204%" height="15" fill="rgb(234,21,32)" fg:x="194433" fg:w="44"/><text x="90.2299%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (814 samples, 0.38%)</title><rect x="89.6268%" y="1013" width="0.3767%" height="15" fill="rgb(252,136,6)" fg:x="193670" fg:w="814"/><text x="89.8768%" y="1023.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (43 samples, 0.02%)</title><rect x="90.1497%" y="837" width="0.0199%" height="15" fill="rgb(245,87,12)" fg:x="194800" fg:w="43"/><text x="90.3997%" y="847.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (190 samples, 0.09%)</title><rect x="90.1696%" y="837" width="0.0879%" height="15" fill="rgb(208,12,15)" fg:x="194843" fg:w="190"/><text x="90.4196%" y="847.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (747 samples, 0.35%)</title><rect x="90.0289%" y="853" width="0.3457%" height="15" fill="rgb(250,98,2)" fg:x="194539" fg:w="747"/><text x="90.2789%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (253 samples, 0.12%)</title><rect x="90.2575%" y="837" width="0.1171%" height="15" fill="rgb(205,213,15)" fg:x="195033" fg:w="253"/><text x="90.5075%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (350 samples, 0.16%)</title><rect x="90.3797%" y="853" width="0.1620%" height="15" fill="rgb(248,192,44)" fg:x="195297" fg:w="350"/><text x="90.6297%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (350 samples, 0.16%)</title><rect x="90.3797%" y="837" width="0.1620%" height="15" fill="rgb(221,89,17)" fg:x="195297" fg:w="350"/><text x="90.6297%" y="847.50"></text></g><g><title>[libc.so.6] (350 samples, 0.16%)</title><rect x="90.3797%" y="821" width="0.1620%" height="15" fill="rgb(209,55,3)" fg:x="195297" fg:w="350"/><text x="90.6297%" y="831.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (1,138 samples, 0.53%)</title><rect x="90.0215%" y="885" width="0.5266%" height="15" fill="rgb(247,23,45)" fg:x="194523" fg:w="1138"/><text x="90.2715%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,133 samples, 0.52%)</title><rect x="90.0238%" y="869" width="0.5243%" height="15" fill="rgb(235,152,23)" fg:x="194528" fg:w="1133"/><text x="90.2738%" y="879.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (1,152 samples, 0.53%)</title><rect x="90.0164%" y="933" width="0.5331%" height="15" fill="rgb(244,63,13)" fg:x="194512" fg:w="1152"/><text x="90.2664%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (1,152 samples, 0.53%)</title><rect x="90.0164%" y="917" width="0.5331%" height="15" fill="rgb(227,30,37)" fg:x="194512" fg:w="1152"/><text x="90.2664%" y="927.50"></text></g><g><title>std::io::Write::write_all (1,152 samples, 0.53%)</title><rect x="90.0164%" y="901" width="0.5331%" height="15" fill="rgb(224,49,42)" fg:x="194512" fg:w="1152"/><text x="90.2664%" y="911.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (59 samples, 0.03%)</title><rect x="90.5593%" y="853" width="0.0273%" height="15" fill="rgb(218,129,5)" fg:x="195685" fg:w="59"/><text x="90.8093%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (53 samples, 0.02%)</title><rect x="90.5620%" y="837" width="0.0245%" height="15" fill="rgb(240,199,54)" fg:x="195691" fg:w="53"/><text x="90.8120%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (25 samples, 0.01%)</title><rect x="90.5750%" y="821" width="0.0116%" height="15" fill="rgb(234,31,13)" fg:x="195719" fg:w="25"/><text x="90.8250%" y="831.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (86 samples, 0.04%)</title><rect x="90.5496%" y="933" width="0.0398%" height="15" fill="rgb(219,73,54)" fg:x="195664" fg:w="86"/><text x="90.7996%" y="943.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (80 samples, 0.04%)</title><rect x="90.5523%" y="917" width="0.0370%" height="15" fill="rgb(251,162,10)" fg:x="195670" fg:w="80"/><text x="90.8023%" y="927.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (80 samples, 0.04%)</title><rect x="90.5523%" y="901" width="0.0370%" height="15" fill="rgb(240,138,47)" fg:x="195670" fg:w="80"/><text x="90.8023%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (78 samples, 0.04%)</title><rect x="90.5533%" y="885" width="0.0361%" height="15" fill="rgb(216,138,26)" fg:x="195672" fg:w="78"/><text x="90.8033%" y="895.50"></text></g><g><title>std::io::Write::write_all (78 samples, 0.04%)</title><rect x="90.5533%" y="869" width="0.0361%" height="15" fill="rgb(243,17,35)" fg:x="195672" fg:w="78"/><text x="90.8033%" y="879.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,266 samples, 0.59%)</title><rect x="90.0049%" y="981" width="0.5859%" height="15" fill="rgb(241,60,18)" fg:x="194487" fg:w="1266"/><text x="90.2549%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,266 samples, 0.59%)</title><rect x="90.0049%" y="965" width="0.5859%" height="15" fill="rgb(234,2,44)" fg:x="194487" fg:w="1266"/><text x="90.2549%" y="975.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (1,249 samples, 0.58%)</title><rect x="90.0127%" y="949" width="0.5780%" height="15" fill="rgb(225,225,33)" fg:x="194504" fg:w="1249"/><text x="90.2627%" y="959.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (44 samples, 0.02%)</title><rect x="90.6759%" y="933" width="0.0204%" height="15" fill="rgb(234,50,31)" fg:x="195937" fg:w="44"/><text x="90.9259%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (36 samples, 0.02%)</title><rect x="90.6796%" y="917" width="0.0167%" height="15" fill="rgb(249,6,25)" fg:x="195945" fg:w="36"/><text x="90.9296%" y="927.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,502 samples, 0.70%)</title><rect x="90.0044%" y="997" width="0.6951%" height="15" fill="rgb(241,5,17)" fg:x="194486" fg:w="1502"/><text x="90.2544%" y="1007.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (235 samples, 0.11%)</title><rect x="90.5907%" y="981" width="0.1088%" height="15" fill="rgb(207,116,10)" fg:x="195753" fg:w="235"/><text x="90.8407%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (235 samples, 0.11%)</title><rect x="90.5907%" y="965" width="0.1088%" height="15" fill="rgb(222,128,18)" fg:x="195753" fg:w="235"/><text x="90.8407%" y="975.50"></text></g><g><title>std::io::Write::write_all (67 samples, 0.03%)</title><rect x="90.6685%" y="949" width="0.0310%" height="15" fill="rgb(229,109,25)" fg:x="195921" fg:w="67"/><text x="90.9185%" y="959.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (27 samples, 0.01%)</title><rect x="90.7050%" y="933" width="0.0125%" height="15" fill="rgb(222,102,25)" fg:x="196000" fg:w="27"/><text x="90.9550%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (24 samples, 0.01%)</title><rect x="90.7064%" y="917" width="0.0111%" height="15" fill="rgb(239,211,5)" fg:x="196003" fg:w="24"/><text x="90.9564%" y="927.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (41 samples, 0.02%)</title><rect x="90.6995%" y="997" width="0.0190%" height="15" fill="rgb(223,136,26)" fg:x="195988" fg:w="41"/><text x="90.9495%" y="1007.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="90.7023%" y="981" width="0.0162%" height="15" fill="rgb(227,30,15)" fg:x="195994" fg:w="35"/><text x="90.9523%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (34 samples, 0.02%)</title><rect x="90.7027%" y="965" width="0.0157%" height="15" fill="rgb(247,76,4)" fg:x="195995" fg:w="34"/><text x="90.9527%" y="975.50"></text></g><g><title>std::io::Write::write_all (34 samples, 0.02%)</title><rect x="90.7027%" y="949" width="0.0157%" height="15" fill="rgb(245,38,48)" fg:x="195995" fg:w="34"/><text x="90.9527%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1,546 samples, 0.72%)</title><rect x="90.0035%" y="1013" width="0.7155%" height="15" fill="rgb(210,220,14)" fg:x="194484" fg:w="1546"/><text x="90.2535%" y="1023.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (28 samples, 0.01%)</title><rect x="90.7236%" y="949" width="0.0130%" height="15" fill="rgb(224,60,51)" fg:x="196040" fg:w="28"/><text x="90.9736%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (23 samples, 0.01%)</title><rect x="90.7259%" y="933" width="0.0106%" height="15" fill="rgb(212,133,49)" fg:x="196045" fg:w="23"/><text x="90.9759%" y="943.50"></text></g><g><title>&lt;bitcoin::blockdata::locktime::PackedLockTime as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (40 samples, 0.02%)</title><rect x="90.7189%" y="1013" width="0.0185%" height="15" fill="rgb(231,39,22)" fg:x="196030" fg:w="40"/><text x="90.9689%" y="1023.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (39 samples, 0.02%)</title><rect x="90.7194%" y="997" width="0.0180%" height="15" fill="rgb(236,173,22)" fg:x="196031" fg:w="39"/><text x="90.9694%" y="1007.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (39 samples, 0.02%)</title><rect x="90.7194%" y="981" width="0.0180%" height="15" fill="rgb(210,70,0)" fg:x="196031" fg:w="39"/><text x="90.9694%" y="991.50"></text></g><g><title>std::io::Write::write_all (39 samples, 0.02%)</title><rect x="90.7194%" y="965" width="0.0180%" height="15" fill="rgb(215,170,11)" fg:x="196031" fg:w="39"/><text x="90.9694%" y="975.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (64 samples, 0.03%)</title><rect x="90.9517%" y="933" width="0.0296%" height="15" fill="rgb(220,154,28)" fg:x="196533" fg:w="64"/><text x="91.2017%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (372 samples, 0.17%)</title><rect x="90.9813%" y="933" width="0.1722%" height="15" fill="rgb(240,160,41)" fg:x="196597" fg:w="372"/><text x="91.2313%" y="943.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (1,305 samples, 0.60%)</title><rect x="90.7666%" y="949" width="0.6039%" height="15" fill="rgb(243,215,41)" fg:x="196133" fg:w="1305"/><text x="91.0166%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (469 samples, 0.22%)</title><rect x="91.1535%" y="933" width="0.2170%" height="15" fill="rgb(214,208,31)" fg:x="196969" fg:w="469"/><text x="91.4035%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (1,381 samples, 0.64%)</title><rect x="90.7555%" y="965" width="0.6391%" height="15" fill="rgb(247,57,22)" fg:x="196109" fg:w="1381"/><text x="91.0055%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,403 samples, 0.65%)</title><rect x="90.7495%" y="981" width="0.6493%" height="15" fill="rgb(228,73,52)" fg:x="196096" fg:w="1403"/><text x="90.9995%" y="991.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (45 samples, 0.02%)</title><rect x="91.5279%" y="917" width="0.0208%" height="15" fill="rgb(252,60,9)" fg:x="197778" fg:w="45"/><text x="91.7779%" y="927.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (208 samples, 0.10%)</title><rect x="91.5487%" y="917" width="0.0963%" height="15" fill="rgb(233,9,51)" fg:x="197823" fg:w="208"/><text x="91.7987%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (794 samples, 0.37%)</title><rect x="91.4117%" y="933" width="0.3674%" height="15" fill="rgb(223,67,14)" fg:x="197527" fg:w="794"/><text x="91.6617%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (290 samples, 0.13%)</title><rect x="91.6450%" y="917" width="0.1342%" height="15" fill="rgb(222,86,2)" fg:x="198031" fg:w="290"/><text x="91.8950%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (841 samples, 0.39%)</title><rect x="91.4048%" y="949" width="0.3892%" height="15" fill="rgb(243,58,54)" fg:x="197512" fg:w="841"/><text x="91.6548%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (869 samples, 0.40%)</title><rect x="91.4020%" y="965" width="0.4022%" height="15" fill="rgb(210,200,39)" fg:x="197506" fg:w="869"/><text x="91.6520%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::midstate (22 samples, 0.01%)</title><rect x="91.7940%" y="949" width="0.0102%" height="15" fill="rgb(238,135,9)" fg:x="198353" fg:w="22"/><text x="92.0440%" y="959.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin_hashes::Hash&gt;::from_engine (2,309 samples, 1.07%)</title><rect x="90.7425%" y="1013" width="1.0686%" height="15" fill="rgb(232,179,7)" fg:x="196081" fg:w="2309"/><text x="90.9925%" y="1023.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (2,303 samples, 1.07%)</title><rect x="90.7453%" y="997" width="1.0658%" height="15" fill="rgb(245,65,41)" fg:x="196087" fg:w="2303"/><text x="90.9953%" y="1007.50"></text></g><g><title>bitcoin_hashes::Hash::hash (890 samples, 0.41%)</title><rect x="91.3992%" y="981" width="0.4119%" height="15" fill="rgb(227,43,8)" fg:x="197500" fg:w="890"/><text x="91.6492%" y="991.50"></text></g><g><title>bitcoin::util::endian::i32_to_array_le (33 samples, 0.02%)</title><rect x="91.8129%" y="981" width="0.0153%" height="15" fill="rgb(235,91,14)" fg:x="198394" fg:w="33"/><text x="92.0629%" y="991.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (30 samples, 0.01%)</title><rect x="91.8342%" y="965" width="0.0139%" height="15" fill="rgb(235,219,31)" fg:x="198440" fg:w="30"/><text x="92.0842%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (27 samples, 0.01%)</title><rect x="91.8356%" y="949" width="0.0125%" height="15" fill="rgb(227,121,25)" fg:x="198443" fg:w="27"/><text x="92.0856%" y="959.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (84 samples, 0.04%)</title><rect x="91.8111%" y="997" width="0.0389%" height="15" fill="rgb(254,129,24)" fg:x="198390" fg:w="84"/><text x="92.0611%" y="1007.50"></text></g><g><title>std::io::Write::write_all (47 samples, 0.02%)</title><rect x="91.8282%" y="981" width="0.0218%" height="15" fill="rgb(226,144,49)" fg:x="198427" fg:w="47"/><text x="92.0782%" y="991.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (4,832 samples, 2.24%)</title><rect x="89.6152%" y="1029" width="2.2362%" height="15" fill="rgb(214,187,32)" fg:x="193645" fg:w="4832"/><text x="89.8652%" y="1039.50">b..</text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (87 samples, 0.04%)</title><rect x="91.8111%" y="1013" width="0.0403%" height="15" fill="rgb(243,129,46)" fg:x="198390" fg:w="87"/><text x="92.0611%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (25 samples, 0.01%)</title><rect x="91.8583%" y="869" width="0.0116%" height="15" fill="rgb(221,185,35)" fg:x="198492" fg:w="25"/><text x="92.1083%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (25 samples, 0.01%)</title><rect x="91.8583%" y="853" width="0.0116%" height="15" fill="rgb(205,0,32)" fg:x="198492" fg:w="25"/><text x="92.1083%" y="863.50"></text></g><g><title>core::ptr::write (24 samples, 0.01%)</title><rect x="91.8588%" y="837" width="0.0111%" height="15" fill="rgb(229,179,12)" fg:x="198493" fg:w="24"/><text x="92.1088%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (50 samples, 0.02%)</title><rect x="91.8532%" y="965" width="0.0231%" height="15" fill="rgb(252,107,19)" fg:x="198481" fg:w="50"/><text x="92.1032%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (50 samples, 0.02%)</title><rect x="91.8532%" y="949" width="0.0231%" height="15" fill="rgb(220,95,27)" fg:x="198481" fg:w="50"/><text x="92.1032%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (50 samples, 0.02%)</title><rect x="91.8532%" y="933" width="0.0231%" height="15" fill="rgb(240,113,40)" fg:x="198481" fg:w="50"/><text x="92.1032%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 0.02%)</title><rect x="91.8532%" y="917" width="0.0231%" height="15" fill="rgb(208,4,43)" fg:x="198481" fg:w="50"/><text x="92.1032%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (50 samples, 0.02%)</title><rect x="91.8532%" y="901" width="0.0231%" height="15" fill="rgb(247,189,30)" fg:x="198481" fg:w="50"/><text x="92.1032%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (39 samples, 0.02%)</title><rect x="91.8583%" y="885" width="0.0180%" height="15" fill="rgb(231,157,17)" fg:x="198492" fg:w="39"/><text x="92.1083%" y="895.50"></text></g><g><title>[libc.so.6] (494 samples, 0.23%)</title><rect x="92.0055%" y="821" width="0.2286%" height="15" fill="rgb(224,139,6)" fg:x="198810" fg:w="494"/><text x="92.2555%" y="831.50"></text></g><g><title>[libc.so.6] (762 samples, 0.35%)</title><rect x="91.8842%" y="837" width="0.3526%" height="15" fill="rgb(223,83,16)" fg:x="198548" fg:w="762"/><text x="92.1342%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (851 samples, 0.39%)</title><rect x="91.8514%" y="1029" width="0.3938%" height="15" fill="rgb(232,211,20)" fg:x="198477" fg:w="851"/><text x="92.1014%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (851 samples, 0.39%)</title><rect x="91.8514%" y="1013" width="0.3938%" height="15" fill="rgb(225,203,35)" fg:x="198477" fg:w="851"/><text x="92.1014%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (851 samples, 0.39%)</title><rect x="91.8514%" y="997" width="0.3938%" height="15" fill="rgb(215,211,44)" fg:x="198477" fg:w="851"/><text x="92.1014%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (847 samples, 0.39%)</title><rect x="91.8532%" y="981" width="0.3920%" height="15" fill="rgb(248,213,26)" fg:x="198481" fg:w="847"/><text x="92.1032%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (797 samples, 0.37%)</title><rect x="91.8763%" y="965" width="0.3688%" height="15" fill="rgb(214,23,52)" fg:x="198531" fg:w="797"/><text x="92.1263%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (797 samples, 0.37%)</title><rect x="91.8763%" y="949" width="0.3688%" height="15" fill="rgb(225,173,50)" fg:x="198531" fg:w="797"/><text x="92.1263%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (796 samples, 0.37%)</title><rect x="91.8768%" y="933" width="0.3684%" height="15" fill="rgb(206,150,22)" fg:x="198532" fg:w="796"/><text x="92.1268%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (796 samples, 0.37%)</title><rect x="91.8768%" y="917" width="0.3684%" height="15" fill="rgb(239,64,23)" fg:x="198532" fg:w="796"/><text x="92.1268%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (795 samples, 0.37%)</title><rect x="91.8773%" y="901" width="0.3679%" height="15" fill="rgb(242,50,38)" fg:x="198533" fg:w="795"/><text x="92.1273%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (795 samples, 0.37%)</title><rect x="91.8773%" y="885" width="0.3679%" height="15" fill="rgb(217,91,15)" fg:x="198533" fg:w="795"/><text x="92.1273%" y="895.50"></text></g><g><title>alloc::alloc::alloc (795 samples, 0.37%)</title><rect x="91.8773%" y="869" width="0.3679%" height="15" fill="rgb(230,172,6)" fg:x="198533" fg:w="795"/><text x="92.1273%" y="879.50"></text></g><g><title>malloc (793 samples, 0.37%)</title><rect x="91.8782%" y="853" width="0.3670%" height="15" fill="rgb(221,98,26)" fg:x="198535" fg:w="793"/><text x="92.1282%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (30 samples, 0.01%)</title><rect x="92.2549%" y="1029" width="0.0139%" height="15" fill="rgb(227,210,45)" fg:x="199349" fg:w="30"/><text x="92.5049%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (23 samples, 0.01%)</title><rect x="92.2915%" y="965" width="0.0106%" height="15" fill="rgb(206,8,30)" fg:x="199428" fg:w="23"/><text x="92.5415%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.01%)</title><rect x="92.2915%" y="949" width="0.0106%" height="15" fill="rgb(241,219,17)" fg:x="199428" fg:w="23"/><text x="92.5415%" y="959.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="92.2919%" y="933" width="0.0102%" height="15" fill="rgb(247,121,29)" fg:x="199429" fg:w="22"/><text x="92.5419%" y="943.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::Update&gt;::update (55 samples, 0.03%)</title><rect x="92.2776%" y="997" width="0.0255%" height="15" fill="rgb(219,169,49)" fg:x="199398" fg:w="55"/><text x="92.5276%" y="1007.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,Kind&gt;::digest_blocks (55 samples, 0.03%)</title><rect x="92.2776%" y="981" width="0.0255%" height="15" fill="rgb(253,49,49)" fg:x="199398" fg:w="55"/><text x="92.5276%" y="991.50"></text></g><g><title>[libc.so.6] (143 samples, 0.07%)</title><rect x="92.3030%" y="997" width="0.0662%" height="15" fill="rgb(217,178,3)" fg:x="199453" fg:w="143"/><text x="92.5530%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (58 samples, 0.03%)</title><rect x="92.3692%" y="949" width="0.0268%" height="15" fill="rgb(234,73,37)" fg:x="199596" fg:w="58"/><text x="92.6192%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 0.03%)</title><rect x="92.3692%" y="933" width="0.0268%" height="15" fill="rgb(250,98,22)" fg:x="199596" fg:w="58"/><text x="92.6192%" y="943.50"></text></g><g><title>cfree (57 samples, 0.03%)</title><rect x="92.3697%" y="917" width="0.0264%" height="15" fill="rgb(220,108,37)" fg:x="199597" fg:w="57"/><text x="92.6197%" y="927.50"></text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="92.3701%" y="901" width="0.0259%" height="15" fill="rgb(225,168,10)" fg:x="199598" fg:w="56"/><text x="92.6201%" y="911.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::chain_update (266 samples, 0.12%)</title><rect x="92.2734%" y="1013" width="0.1231%" height="15" fill="rgb(247,215,21)" fg:x="199389" fg:w="266"/><text x="92.5234%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (59 samples, 0.03%)</title><rect x="92.3692%" y="997" width="0.0273%" height="15" fill="rgb(253,189,31)" fg:x="199596" fg:w="59"/><text x="92.6192%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (59 samples, 0.03%)</title><rect x="92.3692%" y="981" width="0.0273%" height="15" fill="rgb(241,54,22)" fg:x="199596" fg:w="59"/><text x="92.6192%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.03%)</title><rect x="92.3692%" y="965" width="0.0273%" height="15" fill="rgb(211,87,4)" fg:x="199596" fg:w="59"/><text x="92.6192%" y="975.50"></text></g><g><title>sha2::sha512::x86::compress (25 samples, 0.01%)</title><rect x="92.4016%" y="885" width="0.0116%" height="15" fill="rgb(245,112,24)" fg:x="199666" fg:w="25"/><text x="92.6516%" y="895.50"></text></g><g><title>sha2::sha512::x86::load_data_avx (35 samples, 0.02%)</title><rect x="92.4655%" y="853" width="0.0162%" height="15" fill="rgb(235,190,41)" fg:x="199804" fg:w="35"/><text x="92.7155%" y="863.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (63 samples, 0.03%)</title><rect x="92.5145%" y="837" width="0.0292%" height="15" fill="rgb(214,89,8)" fg:x="199910" fg:w="63"/><text x="92.7645%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (63 samples, 0.03%)</title><rect x="92.5145%" y="821" width="0.0292%" height="15" fill="rgb(249,155,35)" fg:x="199910" fg:w="63"/><text x="92.7645%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (44 samples, 0.02%)</title><rect x="92.5233%" y="805" width="0.0204%" height="15" fill="rgb(249,88,26)" fg:x="199929" fg:w="44"/><text x="92.7733%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi64 (100 samples, 0.05%)</title><rect x="92.5437%" y="821" width="0.0463%" height="15" fill="rgb(232,56,8)" fg:x="199973" fg:w="100"/><text x="92.7937%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi64 (75 samples, 0.03%)</title><rect x="92.5900%" y="821" width="0.0347%" height="15" fill="rgb(240,95,3)" fg:x="200073" fg:w="75"/><text x="92.8400%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi64 (69 samples, 0.03%)</title><rect x="92.6247%" y="821" width="0.0319%" height="15" fill="rgb(222,44,28)" fg:x="200148" fg:w="69"/><text x="92.8747%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (250 samples, 0.12%)</title><rect x="92.6566%" y="821" width="0.1157%" height="15" fill="rgb(234,16,30)" fg:x="200217" fg:w="250"/><text x="92.9066%" y="831.50"></text></g><g><title>sha2::sha512::x86::sha512_update_x_avx (503 samples, 0.23%)</title><rect x="92.5437%" y="837" width="0.2328%" height="15" fill="rgb(223,26,17)" fg:x="199973" fg:w="503"/><text x="92.7937%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (173 samples, 0.08%)</title><rect x="92.8412%" y="821" width="0.0801%" height="15" fill="rgb(239,187,47)" fg:x="200616" fg:w="173"/><text x="93.0912%" y="831.50"></text></g><g><title>sha2::sha512::x86::rounds_0_63_avx (1,027 samples, 0.48%)</title><rect x="92.4817%" y="853" width="0.4753%" height="15" fill="rgb(247,102,50)" fg:x="199839" fg:w="1027"/><text x="92.7317%" y="863.50"></text></g><g><title>sha2::sha512::x86::sha_round (390 samples, 0.18%)</title><rect x="92.7765%" y="837" width="0.1805%" height="15" fill="rgb(231,216,22)" fg:x="200476" fg:w="390"/><text x="93.0265%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (77 samples, 0.04%)</title><rect x="92.9213%" y="821" width="0.0356%" height="15" fill="rgb(216,201,26)" fg:x="200789" fg:w="77"/><text x="93.1713%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_right (47 samples, 0.02%)</title><rect x="92.9805%" y="821" width="0.0218%" height="15" fill="rgb(214,186,23)" fg:x="200917" fg:w="47"/><text x="93.2305%" y="831.50"></text></g><g><title>&lt;sha2::core_api::Sha512VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core::{{closure}} (1,394 samples, 0.65%)</title><rect x="92.4007%" y="901" width="0.6451%" height="15" fill="rgb(235,184,4)" fg:x="199664" fg:w="1394"/><text x="92.6507%" y="911.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx2 (1,367 samples, 0.63%)</title><rect x="92.4132%" y="885" width="0.6326%" height="15" fill="rgb(244,46,17)" fg:x="199691" fg:w="1367"/><text x="92.6632%" y="895.50"></text></g><g><title>sha2::sha512::x86::sha512_compress_x86_64_avx (1,306 samples, 0.60%)</title><rect x="92.4414%" y="869" width="0.6044%" height="15" fill="rgb(248,74,46)" fg:x="199752" fg:w="1306"/><text x="92.6914%" y="879.50"></text></g><g><title>sha2::sha512::x86::rounds_64_79 (192 samples, 0.09%)</title><rect x="92.9569%" y="853" width="0.0889%" height="15" fill="rgb(243,79,5)" fg:x="200866" fg:w="192"/><text x="93.2069%" y="863.50"></text></g><g><title>sha2::sha512::x86::sha_round (190 samples, 0.09%)</title><rect x="92.9579%" y="837" width="0.0879%" height="15" fill="rgb(213,148,1)" fg:x="200868" fg:w="190"/><text x="93.2079%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (94 samples, 0.04%)</title><rect x="93.0023%" y="821" width="0.0435%" height="15" fill="rgb(221,30,0)" fg:x="200964" fg:w="94"/><text x="93.2523%" y="831.50"></text></g><g><title>&lt;sha2::core_api::Sha512VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (1,416 samples, 0.66%)</title><rect x="92.3965%" y="949" width="0.6553%" height="15" fill="rgb(207,85,29)" fg:x="199655" fg:w="1416"/><text x="92.6465%" y="959.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::len128_padding_be (1,411 samples, 0.65%)</title><rect x="92.3988%" y="933" width="0.6530%" height="15" fill="rgb(239,31,46)" fg:x="199660" fg:w="1411"/><text x="92.6488%" y="943.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize,block_buffer::Eager&gt;::digest_pad (1,409 samples, 0.65%)</title><rect x="92.3998%" y="917" width="0.6521%" height="15" fill="rgb(219,6,1)" fg:x="199662" fg:w="1409"/><text x="92.6498%" y="927.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (1,418 samples, 0.66%)</title><rect x="92.3965%" y="981" width="0.6562%" height="15" fill="rgb(229,90,29)" fg:x="199655" fg:w="1418"/><text x="92.6465%" y="991.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (1,418 samples, 0.66%)</title><rect x="92.3965%" y="965" width="0.6562%" height="15" fill="rgb(242,201,42)" fg:x="199655" fg:w="1418"/><text x="92.6465%" y="975.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::finalize (1,431 samples, 0.66%)</title><rect x="92.3965%" y="1013" width="0.6622%" height="15" fill="rgb(243,80,54)" fg:x="199655" fg:w="1431"/><text x="92.6465%" y="1023.50"></text></g><g><title>digest::FixedOutput::finalize_fixed (1,431 samples, 0.66%)</title><rect x="92.3965%" y="997" width="0.6622%" height="15" fill="rgb(223,166,15)" fg:x="199655" fg:w="1431"/><text x="92.6465%" y="1007.50"></text></g><g><title>[libc.so.6] (63 samples, 0.03%)</title><rect x="93.2332%" y="677" width="0.0292%" height="15" fill="rgb(238,78,27)" fg:x="201463" fg:w="63"/><text x="93.4832%" y="687.50"></text></g><g><title>[libc.so.6] (307 samples, 0.14%)</title><rect x="93.1212%" y="709" width="0.1421%" height="15" fill="rgb(235,28,43)" fg:x="201221" fg:w="307"/><text x="93.3712%" y="719.50"></text></g><g><title>[libc.so.6] (235 samples, 0.11%)</title><rect x="93.1545%" y="693" width="0.1088%" height="15" fill="rgb(240,210,28)" fg:x="201293" fg:w="235"/><text x="93.4045%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (409 samples, 0.19%)</title><rect x="93.0768%" y="773" width="0.1893%" height="15" fill="rgb(253,6,46)" fg:x="201125" fg:w="409"/><text x="93.3268%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (409 samples, 0.19%)</title><rect x="93.0768%" y="757" width="0.1893%" height="15" fill="rgb(250,159,47)" fg:x="201125" fg:w="409"/><text x="93.3268%" y="767.50"></text></g><g><title>alloc::alloc::realloc (407 samples, 0.19%)</title><rect x="93.0777%" y="741" width="0.1884%" height="15" fill="rgb(216,139,2)" fg:x="201127" fg:w="407"/><text x="93.3277%" y="751.50"></text></g><g><title>realloc (398 samples, 0.18%)</title><rect x="93.0819%" y="725" width="0.1842%" height="15" fill="rgb(221,124,44)" fg:x="201136" fg:w="398"/><text x="93.3319%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (418 samples, 0.19%)</title><rect x="93.0740%" y="789" width="0.1934%" height="15" fill="rgb(205,37,22)" fg:x="201119" fg:w="418"/><text x="93.3240%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (435 samples, 0.20%)</title><rect x="93.0699%" y="853" width="0.2013%" height="15" fill="rgb(250,55,8)" fg:x="201110" fg:w="435"/><text x="93.3199%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (435 samples, 0.20%)</title><rect x="93.0699%" y="837" width="0.2013%" height="15" fill="rgb(215,83,48)" fg:x="201110" fg:w="435"/><text x="93.3199%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (429 samples, 0.20%)</title><rect x="93.0726%" y="821" width="0.1985%" height="15" fill="rgb(253,2,32)" fg:x="201116" fg:w="429"/><text x="93.3226%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (428 samples, 0.20%)</title><rect x="93.0731%" y="805" width="0.1981%" height="15" fill="rgb(236,67,28)" fg:x="201117" fg:w="428"/><text x="93.3231%" y="815.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (447 samples, 0.21%)</title><rect x="93.0689%" y="949" width="0.2069%" height="15" fill="rgb(252,55,15)" fg:x="201108" fg:w="447"/><text x="93.3189%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (447 samples, 0.21%)</title><rect x="93.0689%" y="933" width="0.2069%" height="15" fill="rgb(243,173,17)" fg:x="201108" fg:w="447"/><text x="93.3189%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (447 samples, 0.21%)</title><rect x="93.0689%" y="917" width="0.2069%" height="15" fill="rgb(215,212,13)" fg:x="201108" fg:w="447"/><text x="93.3189%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (447 samples, 0.21%)</title><rect x="93.0689%" y="901" width="0.2069%" height="15" fill="rgb(253,176,6)" fg:x="201108" fg:w="447"/><text x="93.3189%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (447 samples, 0.21%)</title><rect x="93.0689%" y="885" width="0.2069%" height="15" fill="rgb(236,105,26)" fg:x="201108" fg:w="447"/><text x="93.3189%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (447 samples, 0.21%)</title><rect x="93.0689%" y="869" width="0.2069%" height="15" fill="rgb(239,226,32)" fg:x="201108" fg:w="447"/><text x="93.3189%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (55 samples, 0.03%)</title><rect x="93.2897%" y="741" width="0.0255%" height="15" fill="rgb(236,104,51)" fg:x="201585" fg:w="55"/><text x="93.5397%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (55 samples, 0.03%)</title><rect x="93.2897%" y="725" width="0.0255%" height="15" fill="rgb(220,172,33)" fg:x="201585" fg:w="55"/><text x="93.5397%" y="735.50"></text></g><g><title>alloc::alloc::realloc (55 samples, 0.03%)</title><rect x="93.2897%" y="709" width="0.0255%" height="15" fill="rgb(224,182,25)" fg:x="201585" fg:w="55"/><text x="93.5397%" y="719.50"></text></g><g><title>realloc (49 samples, 0.02%)</title><rect x="93.2925%" y="693" width="0.0227%" height="15" fill="rgb(236,184,24)" fg:x="201591" fg:w="49"/><text x="93.5425%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (72 samples, 0.03%)</title><rect x="93.2855%" y="757" width="0.0333%" height="15" fill="rgb(241,221,14)" fg:x="201576" fg:w="72"/><text x="93.5355%" y="767.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (549 samples, 0.25%)</title><rect x="93.0685%" y="997" width="0.2541%" height="15" fill="rgb(227,146,5)" fg:x="201107" fg:w="549"/><text x="93.3185%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (549 samples, 0.25%)</title><rect x="93.0685%" y="981" width="0.2541%" height="15" fill="rgb(214,15,23)" fg:x="201107" fg:w="549"/><text x="93.3185%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (549 samples, 0.25%)</title><rect x="93.0685%" y="965" width="0.2541%" height="15" fill="rgb(233,157,31)" fg:x="201107" fg:w="549"/><text x="93.3185%" y="975.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (101 samples, 0.05%)</title><rect x="93.2758%" y="949" width="0.0467%" height="15" fill="rgb(211,27,52)" fg:x="201555" fg:w="101"/><text x="93.5258%" y="959.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (101 samples, 0.05%)</title><rect x="93.2758%" y="933" width="0.0467%" height="15" fill="rgb(212,223,15)" fg:x="201555" fg:w="101"/><text x="93.5258%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (101 samples, 0.05%)</title><rect x="93.2758%" y="917" width="0.0467%" height="15" fill="rgb(254,211,0)" fg:x="201555" fg:w="101"/><text x="93.5258%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (101 samples, 0.05%)</title><rect x="93.2758%" y="901" width="0.0467%" height="15" fill="rgb(205,43,38)" fg:x="201555" fg:w="101"/><text x="93.5258%" y="911.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (101 samples, 0.05%)</title><rect x="93.2758%" y="885" width="0.0467%" height="15" fill="rgb(242,206,46)" fg:x="201555" fg:w="101"/><text x="93.5258%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (101 samples, 0.05%)</title><rect x="93.2758%" y="869" width="0.0467%" height="15" fill="rgb(220,221,12)" fg:x="201555" fg:w="101"/><text x="93.5258%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (101 samples, 0.05%)</title><rect x="93.2758%" y="853" width="0.0467%" height="15" fill="rgb(217,156,35)" fg:x="201555" fg:w="101"/><text x="93.5258%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (101 samples, 0.05%)</title><rect x="93.2758%" y="837" width="0.0467%" height="15" fill="rgb(207,181,49)" fg:x="201555" fg:w="101"/><text x="93.5258%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (99 samples, 0.05%)</title><rect x="93.2767%" y="821" width="0.0458%" height="15" fill="rgb(235,103,47)" fg:x="201557" fg:w="99"/><text x="93.5267%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (99 samples, 0.05%)</title><rect x="93.2767%" y="805" width="0.0458%" height="15" fill="rgb(222,63,28)" fg:x="201557" fg:w="99"/><text x="93.5267%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (96 samples, 0.04%)</title><rect x="93.2781%" y="789" width="0.0444%" height="15" fill="rgb(244,137,21)" fg:x="201560" fg:w="96"/><text x="93.5281%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (96 samples, 0.04%)</title><rect x="93.2781%" y="773" width="0.0444%" height="15" fill="rgb(228,35,27)" fg:x="201560" fg:w="96"/><text x="93.5281%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (249 samples, 0.12%)</title><rect x="93.3267%" y="837" width="0.1152%" height="15" fill="rgb(226,191,41)" fg:x="201665" fg:w="249"/><text x="93.5767%" y="847.50"></text></g><g><title>malloc (231 samples, 0.11%)</title><rect x="93.3350%" y="821" width="0.1069%" height="15" fill="rgb(210,154,3)" fg:x="201683" fg:w="231"/><text x="93.5850%" y="831.50"></text></g><g><title>[libc.so.6] (185 samples, 0.09%)</title><rect x="93.3563%" y="805" width="0.0856%" height="15" fill="rgb(216,60,49)" fg:x="201729" fg:w="185"/><text x="93.6063%" y="815.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (813 samples, 0.38%)</title><rect x="93.0666%" y="1013" width="0.3762%" height="15" fill="rgb(226,17,20)" fg:x="201103" fg:w="813"/><text x="93.3166%" y="1023.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (260 samples, 0.12%)</title><rect x="93.3225%" y="997" width="0.1203%" height="15" fill="rgb(206,115,35)" fg:x="201656" fg:w="260"/><text x="93.5725%" y="1007.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (260 samples, 0.12%)</title><rect x="93.3225%" y="981" width="0.1203%" height="15" fill="rgb(227,88,1)" fg:x="201656" fg:w="260"/><text x="93.5725%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (260 samples, 0.12%)</title><rect x="93.3225%" y="965" width="0.1203%" height="15" fill="rgb(230,222,24)" fg:x="201656" fg:w="260"/><text x="93.5725%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (260 samples, 0.12%)</title><rect x="93.3225%" y="949" width="0.1203%" height="15" fill="rgb(214,124,32)" fg:x="201656" fg:w="260"/><text x="93.5725%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (260 samples, 0.12%)</title><rect x="93.3225%" y="933" width="0.1203%" height="15" fill="rgb(240,41,36)" fg:x="201656" fg:w="260"/><text x="93.5725%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (260 samples, 0.12%)</title><rect x="93.3225%" y="917" width="0.1203%" height="15" fill="rgb(221,17,52)" fg:x="201656" fg:w="260"/><text x="93.5725%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (258 samples, 0.12%)</title><rect x="93.3235%" y="901" width="0.1194%" height="15" fill="rgb(252,70,16)" fg:x="201658" fg:w="258"/><text x="93.5735%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (258 samples, 0.12%)</title><rect x="93.3235%" y="885" width="0.1194%" height="15" fill="rgb(250,177,4)" fg:x="201658" fg:w="258"/><text x="93.5735%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (258 samples, 0.12%)</title><rect x="93.3235%" y="869" width="0.1194%" height="15" fill="rgb(240,188,47)" fg:x="201658" fg:w="258"/><text x="93.5735%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (255 samples, 0.12%)</title><rect x="93.3248%" y="853" width="0.1180%" height="15" fill="rgb(215,92,12)" fg:x="201661" fg:w="255"/><text x="93.5748%" y="863.50"></text></g><g><title>floresta_chain::pruned_utreexo::udata::LeafData::_get_leaf_hashes (2,557 samples, 1.18%)</title><rect x="92.2688%" y="1029" width="1.1833%" height="15" fill="rgb(242,110,29)" fg:x="199379" fg:w="2557"/><text x="92.5188%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.03%)</title><rect x="93.4595%" y="933" width="0.0310%" height="15" fill="rgb(208,211,26)" fg:x="201952" fg:w="67"/><text x="93.7095%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66 samples, 0.03%)</title><rect x="93.4600%" y="917" width="0.0305%" height="15" fill="rgb(244,147,6)" fg:x="201953" fg:w="66"/><text x="93.7100%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (66 samples, 0.03%)</title><rect x="93.4600%" y="901" width="0.0305%" height="15" fill="rgb(211,130,42)" fg:x="201953" fg:w="66"/><text x="93.7100%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 0.03%)</title><rect x="93.4600%" y="885" width="0.0305%" height="15" fill="rgb(220,63,1)" fg:x="201953" fg:w="66"/><text x="93.7100%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 0.03%)</title><rect x="93.4600%" y="869" width="0.0305%" height="15" fill="rgb(241,212,30)" fg:x="201953" fg:w="66"/><text x="93.7100%" y="879.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.03%)</title><rect x="93.4600%" y="853" width="0.0305%" height="15" fill="rgb(233,153,17)" fg:x="201953" fg:w="66"/><text x="93.7100%" y="863.50"></text></g><g><title>malloc (65 samples, 0.03%)</title><rect x="93.4604%" y="837" width="0.0301%" height="15" fill="rgb(236,3,10)" fg:x="201954" fg:w="65"/><text x="93.7104%" y="847.50"></text></g><g><title>[libc.so.6] (53 samples, 0.02%)</title><rect x="93.4660%" y="821" width="0.0245%" height="15" fill="rgb(232,41,21)" fg:x="201966" fg:w="53"/><text x="93.7160%" y="831.50"></text></g><g><title>[libc.so.6] (49 samples, 0.02%)</title><rect x="93.4678%" y="805" width="0.0227%" height="15" fill="rgb(206,63,51)" fg:x="201970" fg:w="49"/><text x="93.7178%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (70 samples, 0.03%)</title><rect x="93.4595%" y="981" width="0.0324%" height="15" fill="rgb(250,214,3)" fg:x="201952" fg:w="70"/><text x="93.7095%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (70 samples, 0.03%)</title><rect x="93.4595%" y="965" width="0.0324%" height="15" fill="rgb(254,89,27)" fg:x="201952" fg:w="70"/><text x="93.7095%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (70 samples, 0.03%)</title><rect x="93.4595%" y="949" width="0.0324%" height="15" fill="rgb(249,41,14)" fg:x="201952" fg:w="70"/><text x="93.7095%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T],A&gt; as core::clone::Clone&gt;::clone (71 samples, 0.03%)</title><rect x="93.4595%" y="997" width="0.0329%" height="15" fill="rgb(221,196,51)" fg:x="201952" fg:w="71"/><text x="93.7095%" y="1007.50"></text></g><g><title>[libc.so.6] (222 samples, 0.10%)</title><rect x="93.5373%" y="869" width="0.1027%" height="15" fill="rgb(214,116,26)" fg:x="202120" fg:w="222"/><text x="93.7873%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (272 samples, 0.13%)</title><rect x="93.5146%" y="901" width="0.1259%" height="15" fill="rgb(236,67,7)" fg:x="202071" fg:w="272"/><text x="93.7646%" y="911.50"></text></g><g><title>malloc (264 samples, 0.12%)</title><rect x="93.5183%" y="885" width="0.1222%" height="15" fill="rgb(253,179,32)" fg:x="202079" fg:w="264"/><text x="93.7683%" y="895.50"></text></g><g><title>bitcoin::blockdata::script::Builder::push_opcode (292 samples, 0.14%)</title><rect x="93.5058%" y="965" width="0.1351%" height="15" fill="rgb(218,33,15)" fg:x="202052" fg:w="292"/><text x="93.7558%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (274 samples, 0.13%)</title><rect x="93.5141%" y="949" width="0.1268%" height="15" fill="rgb(217,202,41)" fg:x="202070" fg:w="274"/><text x="93.7641%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (274 samples, 0.13%)</title><rect x="93.5141%" y="933" width="0.1268%" height="15" fill="rgb(234,133,5)" fg:x="202070" fg:w="274"/><text x="93.7641%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (274 samples, 0.13%)</title><rect x="93.5141%" y="917" width="0.1268%" height="15" fill="rgb(240,47,40)" fg:x="202070" fg:w="274"/><text x="93.7641%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (40 samples, 0.02%)</title><rect x="93.6530%" y="821" width="0.0185%" height="15" fill="rgb(234,166,26)" fg:x="202370" fg:w="40"/><text x="93.9030%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (40 samples, 0.02%)</title><rect x="93.6530%" y="805" width="0.0185%" height="15" fill="rgb(244,125,51)" fg:x="202370" fg:w="40"/><text x="93.9030%" y="815.50"></text></g><g><title>alloc::alloc::realloc (40 samples, 0.02%)</title><rect x="93.6530%" y="789" width="0.0185%" height="15" fill="rgb(229,171,11)" fg:x="202370" fg:w="40"/><text x="93.9030%" y="799.50"></text></g><g><title>realloc (36 samples, 0.02%)</title><rect x="93.6548%" y="773" width="0.0167%" height="15" fill="rgb(224,38,45)" fg:x="202374" fg:w="36"/><text x="93.9048%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 0.02%)</title><rect x="93.6502%" y="837" width="0.0227%" height="15" fill="rgb(237,27,7)" fg:x="202364" fg:w="49"/><text x="93.9002%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (62 samples, 0.03%)</title><rect x="93.6451%" y="901" width="0.0287%" height="15" fill="rgb(216,52,7)" fg:x="202353" fg:w="62"/><text x="93.8951%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (62 samples, 0.03%)</title><rect x="93.6451%" y="885" width="0.0287%" height="15" fill="rgb(243,11,11)" fg:x="202353" fg:w="62"/><text x="93.8951%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (56 samples, 0.03%)</title><rect x="93.6479%" y="869" width="0.0259%" height="15" fill="rgb(253,167,20)" fg:x="202359" fg:w="56"/><text x="93.8979%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (56 samples, 0.03%)</title><rect x="93.6479%" y="853" width="0.0259%" height="15" fill="rgb(215,207,5)" fg:x="202359" fg:w="56"/><text x="93.8979%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (68 samples, 0.03%)</title><rect x="93.6451%" y="949" width="0.0315%" height="15" fill="rgb(252,127,31)" fg:x="202353" fg:w="68"/><text x="93.8951%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (68 samples, 0.03%)</title><rect x="93.6451%" y="933" width="0.0315%" height="15" fill="rgb(209,106,27)" fg:x="202353" fg:w="68"/><text x="93.8951%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (68 samples, 0.03%)</title><rect x="93.6451%" y="917" width="0.0315%" height="15" fill="rgb(214,220,18)" fg:x="202353" fg:w="68"/><text x="93.8951%" y="927.50"></text></g><g><title>bitcoin::blockdata::script::Script::new_v0_p2wpkh (399 samples, 0.18%)</title><rect x="93.4956%" y="997" width="0.1846%" height="15" fill="rgb(237,89,12)" fg:x="202030" fg:w="399"/><text x="93.7456%" y="1007.50"></text></g><g><title>bitcoin::blockdata::script::Script::new_witness_program (393 samples, 0.18%)</title><rect x="93.4984%" y="981" width="0.1819%" height="15" fill="rgb(209,167,36)" fg:x="202036" fg:w="393"/><text x="93.7484%" y="991.50"></text></g><g><title>bitcoin::blockdata::script::Builder::push_slice (85 samples, 0.04%)</title><rect x="93.6409%" y="965" width="0.0393%" height="15" fill="rgb(243,45,22)" fg:x="202344" fg:w="85"/><text x="93.8909%" y="975.50"></text></g><g><title>[libc.so.6] (37 samples, 0.02%)</title><rect x="93.6932%" y="757" width="0.0171%" height="15" fill="rgb(239,2,46)" fg:x="202457" fg:w="37"/><text x="93.9432%" y="767.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="93.6941%" y="741" width="0.0162%" height="15" fill="rgb(241,101,0)" fg:x="202459" fg:w="35"/><text x="93.9441%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (50 samples, 0.02%)</title><rect x="93.6881%" y="821" width="0.0231%" height="15" fill="rgb(244,34,31)" fg:x="202446" fg:w="50"/><text x="93.9381%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (50 samples, 0.02%)</title><rect x="93.6881%" y="805" width="0.0231%" height="15" fill="rgb(248,23,22)" fg:x="202446" fg:w="50"/><text x="93.9381%" y="815.50"></text></g><g><title>alloc::alloc::realloc (50 samples, 0.02%)</title><rect x="93.6881%" y="789" width="0.0231%" height="15" fill="rgb(218,27,48)" fg:x="202446" fg:w="50"/><text x="93.9381%" y="799.50"></text></g><g><title>realloc (50 samples, 0.02%)</title><rect x="93.6881%" y="773" width="0.0231%" height="15" fill="rgb(232,78,1)" fg:x="202446" fg:w="50"/><text x="93.9381%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (53 samples, 0.02%)</title><rect x="93.6872%" y="837" width="0.0245%" height="15" fill="rgb(233,169,12)" fg:x="202444" fg:w="53"/><text x="93.9372%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (56 samples, 0.03%)</title><rect x="93.6863%" y="949" width="0.0259%" height="15" fill="rgb(225,222,54)" fg:x="202442" fg:w="56"/><text x="93.9363%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (56 samples, 0.03%)</title><rect x="93.6863%" y="933" width="0.0259%" height="15" fill="rgb(245,126,29)" fg:x="202442" fg:w="56"/><text x="93.9363%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (56 samples, 0.03%)</title><rect x="93.6863%" y="917" width="0.0259%" height="15" fill="rgb(241,63,48)" fg:x="202442" fg:w="56"/><text x="93.9363%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (56 samples, 0.03%)</title><rect x="93.6863%" y="901" width="0.0259%" height="15" fill="rgb(235,126,38)" fg:x="202442" fg:w="56"/><text x="93.9363%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (56 samples, 0.03%)</title><rect x="93.6863%" y="885" width="0.0259%" height="15" fill="rgb(232,96,49)" fg:x="202442" fg:w="56"/><text x="93.9363%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (56 samples, 0.03%)</title><rect x="93.6863%" y="869" width="0.0259%" height="15" fill="rgb(211,146,40)" fg:x="202442" fg:w="56"/><text x="93.9363%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (56 samples, 0.03%)</title><rect x="93.6863%" y="853" width="0.0259%" height="15" fill="rgb(247,93,44)" fg:x="202442" fg:w="56"/><text x="93.9363%" y="863.50"></text></g><g><title>bitcoin::blockdata::script::Script::new_v0_p2wsh (71 samples, 0.03%)</title><rect x="93.6803%" y="997" width="0.0329%" height="15" fill="rgb(251,41,49)" fg:x="202429" fg:w="71"/><text x="93.9303%" y="1007.50"></text></g><g><title>bitcoin::blockdata::script::Script::new_witness_program (69 samples, 0.03%)</title><rect x="93.6812%" y="981" width="0.0319%" height="15" fill="rgb(218,155,12)" fg:x="202431" fg:w="69"/><text x="93.9312%" y="991.50"></text></g><g><title>bitcoin::blockdata::script::Builder::push_slice (59 samples, 0.03%)</title><rect x="93.6858%" y="965" width="0.0273%" height="15" fill="rgb(221,161,30)" fg:x="202441" fg:w="59"/><text x="93.9358%" y="975.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::last (148 samples, 0.07%)</title><rect x="93.7140%" y="981" width="0.0685%" height="15" fill="rgb(221,179,11)" fg:x="202502" fg:w="148"/><text x="93.9640%" y="991.50"></text></g><g><title>bitcoin::blockdata::witness::Witness::element_at (142 samples, 0.07%)</title><rect x="93.7168%" y="965" width="0.0657%" height="15" fill="rgb(224,170,48)" fg:x="202508" fg:w="142"/><text x="93.9668%" y="975.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (141 samples, 0.07%)</title><rect x="93.7173%" y="949" width="0.0653%" height="15" fill="rgb(223,117,5)" fg:x="202509" fg:w="141"/><text x="93.9673%" y="959.50"></text></g><g><title>&lt;R as bitcoin::consensus::encode::ReadExt&gt;::read_u8 (139 samples, 0.06%)</title><rect x="93.7182%" y="933" width="0.0643%" height="15" fill="rgb(209,52,20)" fg:x="202511" fg:w="139"/><text x="93.9682%" y="943.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (139 samples, 0.06%)</title><rect x="93.7182%" y="917" width="0.0643%" height="15" fill="rgb(209,19,41)" fg:x="202511" fg:w="139"/><text x="93.9682%" y="927.50"></text></g><g><title>bitcoin_hashes::util::slice_to_u32_be (28 samples, 0.01%)</title><rect x="93.8996%" y="885" width="0.0130%" height="15" fill="rgb(210,177,12)" fg:x="202903" fg:w="28"/><text x="94.1496%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (141 samples, 0.07%)</title><rect x="93.9126%" y="885" width="0.0653%" height="15" fill="rgb(211,159,37)" fg:x="202931" fg:w="141"/><text x="94.1626%" y="895.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (571 samples, 0.26%)</title><rect x="93.8089%" y="901" width="0.2642%" height="15" fill="rgb(209,20,2)" fg:x="202707" fg:w="571"/><text x="94.0589%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (206 samples, 0.10%)</title><rect x="93.9778%" y="885" width="0.0953%" height="15" fill="rgb(244,3,46)" fg:x="203072" fg:w="206"/><text x="94.2278%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (614 samples, 0.28%)</title><rect x="93.8048%" y="917" width="0.2841%" height="15" fill="rgb(220,94,38)" fg:x="202698" fg:w="614"/><text x="94.0548%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (639 samples, 0.30%)</title><rect x="93.8011%" y="933" width="0.2957%" height="15" fill="rgb(253,14,31)" fg:x="202690" fg:w="639"/><text x="94.0511%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (153 samples, 0.07%)</title><rect x="94.1861%" y="869" width="0.0708%" height="15" fill="rgb(234,176,13)" fg:x="203522" fg:w="153"/><text x="94.4361%" y="879.50"></text></g><g><title>bitcoin_hashes::ripemd160::HashEngine::process_block (464 samples, 0.21%)</title><rect x="94.1157%" y="885" width="0.2147%" height="15" fill="rgb(218,62,25)" fg:x="203370" fg:w="464"/><text x="94.3657%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (159 samples, 0.07%)</title><rect x="94.2569%" y="869" width="0.0736%" height="15" fill="rgb(216,124,40)" fg:x="203675" fg:w="159"/><text x="94.5069%" y="879.50"></text></g><g><title>&lt;bitcoin_hashes::ripemd160::Hash as bitcoin_hashes::Hash&gt;::from_engine (532 samples, 0.25%)</title><rect x="94.1009%" y="917" width="0.2462%" height="15" fill="rgb(228,170,12)" fg:x="203338" fg:w="532"/><text x="94.3509%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::ripemd160::HashEngine as bitcoin_hashes::HashEngine&gt;::input (511 samples, 0.24%)</title><rect x="94.1107%" y="901" width="0.2365%" height="15" fill="rgb(231,226,5)" fg:x="203359" fg:w="511"/><text x="94.3607%" y="911.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::PubkeyHash as bitcoin_hashes::Hash&gt;::from_engine (1,224 samples, 0.57%)</title><rect x="93.7946%" y="965" width="0.5664%" height="15" fill="rgb(237,122,22)" fg:x="202676" fg:w="1224"/><text x="94.0446%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::hash160::Hash as bitcoin_hashes::Hash&gt;::from_engine (1,215 samples, 0.56%)</title><rect x="93.7987%" y="949" width="0.5623%" height="15" fill="rgb(209,185,25)" fg:x="202685" fg:w="1215"/><text x="94.0487%" y="959.50"></text></g><g><title>bitcoin_hashes::Hash::hash (571 samples, 0.26%)</title><rect x="94.0968%" y="933" width="0.2642%" height="15" fill="rgb(228,200,32)" fg:x="203329" fg:w="571"/><text x="94.3468%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::ripemd160::HashEngine as bitcoin_hashes::HashEngine&gt;::input (30 samples, 0.01%)</title><rect x="94.3471%" y="917" width="0.0139%" height="15" fill="rgb(217,140,10)" fg:x="203870" fg:w="30"/><text x="94.5971%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (23 samples, 0.01%)</title><rect x="94.3633%" y="949" width="0.0106%" height="15" fill="rgb(253,17,24)" fg:x="203905" fg:w="23"/><text x="94.6133%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.01%)</title><rect x="94.3633%" y="933" width="0.0106%" height="15" fill="rgb(212,61,6)" fg:x="203905" fg:w="23"/><text x="94.6133%" y="943.50"></text></g><g><title>floresta_chain::pruned_utreexo::udata::proof_util::get_witness_pk_hash (1,432 samples, 0.66%)</title><rect x="93.7136%" y="997" width="0.6627%" height="15" fill="rgb(205,14,25)" fg:x="202501" fg:w="1432"/><text x="93.9636%" y="1007.50"></text></g><g><title>bitcoin_hashes::Hash::hash (1,283 samples, 0.59%)</title><rect x="93.7825%" y="981" width="0.5937%" height="15" fill="rgb(232,69,41)" fg:x="202650" fg:w="1283"/><text x="94.0325%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (33 samples, 0.02%)</title><rect x="94.3610%" y="965" width="0.0153%" height="15" fill="rgb(241,106,47)" fg:x="203900" fg:w="33"/><text x="94.6110%" y="975.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (48 samples, 0.02%)</title><rect x="94.3837%" y="917" width="0.0222%" height="15" fill="rgb(210,213,53)" fg:x="203949" fg:w="48"/><text x="94.6337%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (54 samples, 0.02%)</title><rect x="94.3837%" y="933" width="0.0250%" height="15" fill="rgb(253,175,27)" fg:x="203949" fg:w="54"/><text x="94.6337%" y="943.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::WScriptHash as bitcoin_hashes::Hash&gt;::from_engine (56 samples, 0.03%)</title><rect x="94.3837%" y="965" width="0.0259%" height="15" fill="rgb(211,171,24)" fg:x="203949" fg:w="56"/><text x="94.6337%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (56 samples, 0.03%)</title><rect x="94.3837%" y="949" width="0.0259%" height="15" fill="rgb(229,80,7)" fg:x="203949" fg:w="56"/><text x="94.6337%" y="959.50"></text></g><g><title>floresta_chain::pruned_utreexo::udata::proof_util::reconstruct_leaf_data (2,071 samples, 0.96%)</title><rect x="93.4521%" y="1029" width="0.9584%" height="15" fill="rgb(212,46,39)" fg:x="201936" fg:w="2071"/><text x="93.7021%" y="1039.50"></text></g><g><title>floresta_chain::pruned_utreexo::udata::proof_util::reconstruct_script_pubkey (2,057 samples, 0.95%)</title><rect x="93.4586%" y="1013" width="0.9519%" height="15" fill="rgb(240,80,45)" fg:x="201950" fg:w="2057"/><text x="93.7086%" y="1023.50"></text></g><g><title>floresta_chain::pruned_utreexo::udata::proof_util::get_witness_script_hash (74 samples, 0.03%)</title><rect x="94.3763%" y="997" width="0.0342%" height="15" fill="rgb(253,177,40)" fg:x="203933" fg:w="74"/><text x="94.6263%" y="1007.50"></text></g><g><title>bitcoin_hashes::Hash::hash (62 samples, 0.03%)</title><rect x="94.3818%" y="981" width="0.0287%" height="15" fill="rgb(249,200,15)" fg:x="203945" fg:w="62"/><text x="94.6318%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (31 samples, 0.01%)</title><rect x="94.4165%" y="949" width="0.0143%" height="15" fill="rgb(217,78,26)" fg:x="204020" fg:w="31"/><text x="94.6665%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (31 samples, 0.01%)</title><rect x="94.4165%" y="933" width="0.0143%" height="15" fill="rgb(254,151,32)" fg:x="204020" fg:w="31"/><text x="94.6665%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (31 samples, 0.01%)</title><rect x="94.4165%" y="917" width="0.0143%" height="15" fill="rgb(226,165,27)" fg:x="204020" fg:w="31"/><text x="94.6665%" y="927.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (27 samples, 0.01%)</title><rect x="94.4351%" y="853" width="0.0125%" height="15" fill="rgb(250,206,4)" fg:x="204060" fg:w="27"/><text x="94.6851%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (27 samples, 0.01%)</title><rect x="94.4351%" y="837" width="0.0125%" height="15" fill="rgb(231,229,27)" fg:x="204060" fg:w="27"/><text x="94.6851%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="94.4351%" y="821" width="0.0125%" height="15" fill="rgb(239,217,8)" fg:x="204060" fg:w="27"/><text x="94.6851%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (26 samples, 0.01%)</title><rect x="94.4355%" y="805" width="0.0120%" height="15" fill="rgb(225,204,27)" fg:x="204061" fg:w="26"/><text x="94.6855%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.01%)</title><rect x="94.4355%" y="789" width="0.0120%" height="15" fill="rgb(230,56,32)" fg:x="204061" fg:w="26"/><text x="94.6855%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (32 samples, 0.01%)</title><rect x="94.4536%" y="789" width="0.0148%" height="15" fill="rgb(222,56,27)" fg:x="204100" fg:w="32"/><text x="94.7036%" y="799.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::hash::Hash&gt;::hash (77 samples, 0.04%)</title><rect x="94.4351%" y="917" width="0.0356%" height="15" fill="rgb(253,108,27)" fg:x="204060" fg:w="77"/><text x="94.6851%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as core::hash::Hash&gt;::hash (77 samples, 0.04%)</title><rect x="94.4351%" y="901" width="0.0356%" height="15" fill="rgb(212,87,36)" fg:x="204060" fg:w="77"/><text x="94.6851%" y="911.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (77 samples, 0.04%)</title><rect x="94.4351%" y="885" width="0.0356%" height="15" fill="rgb(247,82,36)" fg:x="204060" fg:w="77"/><text x="94.6851%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (77 samples, 0.04%)</title><rect x="94.4351%" y="869" width="0.0356%" height="15" fill="rgb(222,143,9)" fg:x="204060" fg:w="77"/><text x="94.6851%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (50 samples, 0.02%)</title><rect x="94.4476%" y="853" width="0.0231%" height="15" fill="rgb(238,162,48)" fg:x="204087" fg:w="50"/><text x="94.6976%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="94.4476%" y="837" width="0.0231%" height="15" fill="rgb(221,59,43)" fg:x="204087" fg:w="50"/><text x="94.6976%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="94.4476%" y="821" width="0.0231%" height="15" fill="rgb(205,166,41)" fg:x="204087" fg:w="50"/><text x="94.6976%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="94.4476%" y="805" width="0.0231%" height="15" fill="rgb(241,186,40)" fg:x="204087" fg:w="50"/><text x="94.6976%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (137 samples, 0.06%)</title><rect x="94.4152%" y="981" width="0.0634%" height="15" fill="rgb(216,119,35)" fg:x="204017" fg:w="137"/><text x="94.6652%" y="991.50"></text></g><g><title>core::hash::BuildHasher::hash_one (137 samples, 0.06%)</title><rect x="94.4152%" y="965" width="0.0634%" height="15" fill="rgb(208,68,38)" fg:x="204017" fg:w="137"/><text x="94.6652%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (94 samples, 0.04%)</title><rect x="94.4351%" y="949" width="0.0435%" height="15" fill="rgb(217,113,1)" fg:x="204060" fg:w="94"/><text x="94.6851%" y="959.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as core::hash::Hash&gt;::hash (94 samples, 0.04%)</title><rect x="94.4351%" y="933" width="0.0435%" height="15" fill="rgb(242,153,3)" fg:x="204060" fg:w="94"/><text x="94.6851%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (173 samples, 0.08%)</title><rect x="94.4142%" y="1029" width="0.0801%" height="15" fill="rgb(229,76,35)" fg:x="204015" fg:w="173"/><text x="94.6642%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (173 samples, 0.08%)</title><rect x="94.4142%" y="1013" width="0.0801%" height="15" fill="rgb(229,125,34)" fg:x="204015" fg:w="173"/><text x="94.6642%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (173 samples, 0.08%)</title><rect x="94.4142%" y="997" width="0.0801%" height="15" fill="rgb(238,179,36)" fg:x="204015" fg:w="173"/><text x="94.6642%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (34 samples, 0.02%)</title><rect x="94.4786%" y="981" width="0.0157%" height="15" fill="rgb(244,183,19)" fg:x="204154" fg:w="34"/><text x="94.7286%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (34 samples, 0.02%)</title><rect x="94.4786%" y="965" width="0.0157%" height="15" fill="rgb(216,85,49)" fg:x="204154" fg:w="34"/><text x="94.7286%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (34 samples, 0.02%)</title><rect x="94.4786%" y="949" width="0.0157%" height="15" fill="rgb(208,161,47)" fg:x="204154" fg:w="34"/><text x="94.7286%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (84 samples, 0.04%)</title><rect x="94.5114%" y="965" width="0.0389%" height="15" fill="rgb(233,210,18)" fg:x="204225" fg:w="84"/><text x="94.7614%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (84 samples, 0.04%)</title><rect x="94.5114%" y="949" width="0.0389%" height="15" fill="rgb(205,104,42)" fg:x="204225" fg:w="84"/><text x="94.7614%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (84 samples, 0.04%)</title><rect x="94.5114%" y="933" width="0.0389%" height="15" fill="rgb(248,90,43)" fg:x="204225" fg:w="84"/><text x="94.7614%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (40 samples, 0.02%)</title><rect x="94.5318%" y="917" width="0.0185%" height="15" fill="rgb(206,198,11)" fg:x="204269" fg:w="40"/><text x="94.7818%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (27 samples, 0.01%)</title><rect x="94.5503%" y="965" width="0.0125%" height="15" fill="rgb(239,165,27)" fg:x="204309" fg:w="27"/><text x="94.8003%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 0.02%)</title><rect x="94.5628%" y="837" width="0.0176%" height="15" fill="rgb(246,44,32)" fg:x="204336" fg:w="38"/><text x="94.8128%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (37 samples, 0.02%)</title><rect x="94.5633%" y="821" width="0.0171%" height="15" fill="rgb(252,65,42)" fg:x="204337" fg:w="37"/><text x="94.8133%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37 samples, 0.02%)</title><rect x="94.5633%" y="805" width="0.0171%" height="15" fill="rgb(246,197,18)" fg:x="204337" fg:w="37"/><text x="94.8133%" y="815.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (40 samples, 0.02%)</title><rect x="94.5628%" y="869" width="0.0185%" height="15" fill="rgb(216,192,4)" fg:x="204336" fg:w="40"/><text x="94.8128%" y="879.50"></text></g><g><title>core::hash::Hasher::write_usize (40 samples, 0.02%)</title><rect x="94.5628%" y="853" width="0.0185%" height="15" fill="rgb(208,117,10)" fg:x="204336" fg:w="40"/><text x="94.8128%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (33 samples, 0.02%)</title><rect x="94.5989%" y="789" width="0.0153%" height="15" fill="rgb(240,61,47)" fg:x="204414" fg:w="33"/><text x="94.8489%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (60 samples, 0.03%)</title><rect x="94.5924%" y="805" width="0.0278%" height="15" fill="rgb(228,178,21)" fg:x="204400" fg:w="60"/><text x="94.8424%" y="815.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::hash::Hash&gt;::hash (133 samples, 0.06%)</title><rect x="94.5628%" y="933" width="0.0615%" height="15" fill="rgb(219,96,54)" fg:x="204336" fg:w="133"/><text x="94.8128%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as core::hash::Hash&gt;::hash (133 samples, 0.06%)</title><rect x="94.5628%" y="917" width="0.0615%" height="15" fill="rgb(250,177,24)" fg:x="204336" fg:w="133"/><text x="94.8128%" y="927.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (133 samples, 0.06%)</title><rect x="94.5628%" y="901" width="0.0615%" height="15" fill="rgb(242,154,46)" fg:x="204336" fg:w="133"/><text x="94.8128%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (133 samples, 0.06%)</title><rect x="94.5628%" y="885" width="0.0615%" height="15" fill="rgb(226,176,29)" fg:x="204336" fg:w="133"/><text x="94.8128%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (93 samples, 0.04%)</title><rect x="94.5813%" y="869" width="0.0430%" height="15" fill="rgb(226,29,2)" fg:x="204376" fg:w="93"/><text x="94.8313%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (91 samples, 0.04%)</title><rect x="94.5822%" y="853" width="0.0421%" height="15" fill="rgb(237,104,14)" fg:x="204378" fg:w="91"/><text x="94.8322%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (90 samples, 0.04%)</title><rect x="94.5827%" y="837" width="0.0417%" height="15" fill="rgb(245,207,31)" fg:x="204379" fg:w="90"/><text x="94.8327%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 samples, 0.04%)</title><rect x="94.5827%" y="821" width="0.0417%" height="15" fill="rgb(229,211,45)" fg:x="204379" fg:w="90"/><text x="94.8327%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 0.02%)</title><rect x="94.6257%" y="901" width="0.0176%" height="15" fill="rgb(229,113,15)" fg:x="204472" fg:w="38"/><text x="94.8757%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (37 samples, 0.02%)</title><rect x="94.6262%" y="885" width="0.0171%" height="15" fill="rgb(237,147,15)" fg:x="204473" fg:w="37"/><text x="94.8762%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37 samples, 0.02%)</title><rect x="94.6262%" y="869" width="0.0171%" height="15" fill="rgb(244,120,12)" fg:x="204473" fg:w="37"/><text x="94.8762%" y="879.50"></text></g><g><title>hashbrown::map::make_insert_hash (293 samples, 0.14%)</title><rect x="94.5082%" y="997" width="0.1356%" height="15" fill="rgb(205,120,12)" fg:x="204218" fg:w="293"/><text x="94.7582%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 samples, 0.14%)</title><rect x="94.5086%" y="981" width="0.1351%" height="15" fill="rgb(231,26,45)" fg:x="204219" fg:w="292"/><text x="94.7586%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (175 samples, 0.08%)</title><rect x="94.5628%" y="965" width="0.0810%" height="15" fill="rgb(246,98,1)" fg:x="204336" fg:w="175"/><text x="94.8128%" y="975.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as core::hash::Hash&gt;::hash (175 samples, 0.08%)</title><rect x="94.5628%" y="949" width="0.0810%" height="15" fill="rgb(207,68,45)" fg:x="204336" fg:w="175"/><text x="94.8128%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (42 samples, 0.02%)</title><rect x="94.6243%" y="933" width="0.0194%" height="15" fill="rgb(231,27,38)" fg:x="204469" fg:w="42"/><text x="94.8743%" y="943.50"></text></g><g><title>core::hash::Hasher::write_u32 (41 samples, 0.02%)</title><rect x="94.6248%" y="917" width="0.0190%" height="15" fill="rgb(214,223,3)" fg:x="204470" fg:w="41"/><text x="94.8748%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (64 samples, 0.03%)</title><rect x="94.6438%" y="997" width="0.0296%" height="15" fill="rgb(228,195,46)" fg:x="204511" fg:w="64"/><text x="94.8938%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (64 samples, 0.03%)</title><rect x="94.6438%" y="981" width="0.0296%" height="15" fill="rgb(231,100,42)" fg:x="204511" fg:w="64"/><text x="94.8938%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (64 samples, 0.03%)</title><rect x="94.6438%" y="965" width="0.0296%" height="15" fill="rgb(236,53,4)" fg:x="204511" fg:w="64"/><text x="94.8938%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (34 samples, 0.02%)</title><rect x="94.6817%" y="981" width="0.0157%" height="15" fill="rgb(230,152,12)" fg:x="204593" fg:w="34"/><text x="94.9317%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (34 samples, 0.02%)</title><rect x="94.6817%" y="965" width="0.0157%" height="15" fill="rgb(226,101,19)" fg:x="204593" fg:w="34"/><text x="94.9317%" y="975.50"></text></g><g><title>core::ptr::write (34 samples, 0.02%)</title><rect x="94.6817%" y="949" width="0.0157%" height="15" fill="rgb(250,149,32)" fg:x="204593" fg:w="34"/><text x="94.9317%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (23 samples, 0.01%)</title><rect x="94.7192%" y="869" width="0.0106%" height="15" fill="rgb(232,178,12)" fg:x="204674" fg:w="23"/><text x="94.9692%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.01%)</title><rect x="94.7192%" y="853" width="0.0106%" height="15" fill="rgb(246,151,17)" fg:x="204674" fg:w="23"/><text x="94.9692%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.01%)</title><rect x="94.7192%" y="837" width="0.0106%" height="15" fill="rgb(252,17,51)" fg:x="204674" fg:w="23"/><text x="94.9692%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (25 samples, 0.01%)</title><rect x="94.7192%" y="917" width="0.0116%" height="15" fill="rgb(250,207,23)" fg:x="204674" fg:w="25"/><text x="94.9692%" y="927.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="94.7192%" y="901" width="0.0116%" height="15" fill="rgb(205,27,5)" fg:x="204674" fg:w="25"/><text x="94.9692%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (25 samples, 0.01%)</title><rect x="94.7192%" y="885" width="0.0116%" height="15" fill="rgb(224,32,19)" fg:x="204674" fg:w="25"/><text x="94.9692%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (35 samples, 0.02%)</title><rect x="94.7604%" y="789" width="0.0162%" height="15" fill="rgb(247,214,40)" fg:x="204763" fg:w="35"/><text x="95.0104%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (93 samples, 0.04%)</title><rect x="94.7391%" y="853" width="0.0430%" height="15" fill="rgb(239,199,17)" fg:x="204717" fg:w="93"/><text x="94.9891%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (93 samples, 0.04%)</title><rect x="94.7391%" y="837" width="0.0430%" height="15" fill="rgb(251,159,9)" fg:x="204717" fg:w="93"/><text x="94.9891%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (93 samples, 0.04%)</title><rect x="94.7391%" y="821" width="0.0430%" height="15" fill="rgb(225,78,32)" fg:x="204717" fg:w="93"/><text x="94.9891%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (60 samples, 0.03%)</title><rect x="94.7544%" y="805" width="0.0278%" height="15" fill="rgb(206,97,47)" fg:x="204750" fg:w="60"/><text x="95.0044%" y="815.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (52 samples, 0.02%)</title><rect x="94.7872%" y="757" width="0.0241%" height="15" fill="rgb(227,107,4)" fg:x="204821" fg:w="52"/><text x="95.0372%" y="767.50"></text></g><g><title>core::hash::Hasher::write_usize (52 samples, 0.02%)</title><rect x="94.7872%" y="741" width="0.0241%" height="15" fill="rgb(241,146,50)" fg:x="204821" fg:w="52"/><text x="95.0372%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (49 samples, 0.02%)</title><rect x="94.7886%" y="725" width="0.0227%" height="15" fill="rgb(232,92,30)" fg:x="204824" fg:w="49"/><text x="95.0386%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (44 samples, 0.02%)</title><rect x="94.7909%" y="709" width="0.0204%" height="15" fill="rgb(222,0,40)" fg:x="204829" fg:w="44"/><text x="95.0409%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (44 samples, 0.02%)</title><rect x="94.7909%" y="693" width="0.0204%" height="15" fill="rgb(219,54,33)" fg:x="204829" fg:w="44"/><text x="95.0409%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (41 samples, 0.02%)</title><rect x="94.8664%" y="677" width="0.0190%" height="15" fill="rgb(226,209,28)" fg:x="204992" fg:w="41"/><text x="95.1164%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (85 samples, 0.04%)</title><rect x="94.8567%" y="693" width="0.0393%" height="15" fill="rgb(254,205,35)" fg:x="204971" fg:w="85"/><text x="95.1067%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (23 samples, 0.01%)</title><rect x="94.8853%" y="677" width="0.0106%" height="15" fill="rgb(230,159,3)" fg:x="205033" fg:w="23"/><text x="95.1353%" y="687.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::hash::Hash&gt;::hash (241 samples, 0.11%)</title><rect x="94.7872%" y="821" width="0.1115%" height="15" fill="rgb(232,190,24)" fg:x="204821" fg:w="241"/><text x="95.0372%" y="831.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as core::hash::Hash&gt;::hash (241 samples, 0.11%)</title><rect x="94.7872%" y="805" width="0.1115%" height="15" fill="rgb(217,227,44)" fg:x="204821" fg:w="241"/><text x="95.0372%" y="815.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (241 samples, 0.11%)</title><rect x="94.7872%" y="789" width="0.1115%" height="15" fill="rgb(236,211,1)" fg:x="204821" fg:w="241"/><text x="95.0372%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (241 samples, 0.11%)</title><rect x="94.7872%" y="773" width="0.1115%" height="15" fill="rgb(250,127,46)" fg:x="204821" fg:w="241"/><text x="95.0372%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (189 samples, 0.09%)</title><rect x="94.8113%" y="757" width="0.0875%" height="15" fill="rgb(229,213,6)" fg:x="204873" fg:w="189"/><text x="95.0613%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (178 samples, 0.08%)</title><rect x="94.8164%" y="741" width="0.0824%" height="15" fill="rgb(237,15,36)" fg:x="204884" fg:w="178"/><text x="95.0664%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (177 samples, 0.08%)</title><rect x="94.8169%" y="725" width="0.0819%" height="15" fill="rgb(213,131,41)" fg:x="204885" fg:w="177"/><text x="95.0669%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (177 samples, 0.08%)</title><rect x="94.8169%" y="709" width="0.0819%" height="15" fill="rgb(225,82,44)" fg:x="204885" fg:w="177"/><text x="95.0669%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.01%)</title><rect x="94.8997%" y="789" width="0.0130%" height="15" fill="rgb(249,42,11)" fg:x="205064" fg:w="28"/><text x="95.1497%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="94.9002%" y="773" width="0.0125%" height="15" fill="rgb(253,11,29)" fg:x="205065" fg:w="27"/><text x="95.1502%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="94.9002%" y="757" width="0.0125%" height="15" fill="rgb(206,8,54)" fg:x="205065" fg:w="27"/><text x="95.1502%" y="767.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (395 samples, 0.18%)</title><rect x="94.7308%" y="901" width="0.1828%" height="15" fill="rgb(222,186,2)" fg:x="204699" fg:w="395"/><text x="94.9808%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (395 samples, 0.18%)</title><rect x="94.7308%" y="885" width="0.1828%" height="15" fill="rgb(221,206,53)" fg:x="204699" fg:w="395"/><text x="94.9808%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (386 samples, 0.18%)</title><rect x="94.7349%" y="869" width="0.1786%" height="15" fill="rgb(230,150,21)" fg:x="204708" fg:w="386"/><text x="94.9849%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (273 samples, 0.13%)</title><rect x="94.7872%" y="853" width="0.1263%" height="15" fill="rgb(253,202,10)" fg:x="204821" fg:w="273"/><text x="95.0372%" y="863.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as core::hash::Hash&gt;::hash (273 samples, 0.13%)</title><rect x="94.7872%" y="837" width="0.1263%" height="15" fill="rgb(238,109,40)" fg:x="204821" fg:w="273"/><text x="95.0372%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (32 samples, 0.01%)</title><rect x="94.8988%" y="821" width="0.0148%" height="15" fill="rgb(247,120,22)" fg:x="205062" fg:w="32"/><text x="95.1488%" y="831.50"></text></g><g><title>core::hash::Hasher::write_u32 (32 samples, 0.01%)</title><rect x="94.8988%" y="805" width="0.0148%" height="15" fill="rgb(207,43,30)" fg:x="205062" fg:w="32"/><text x="95.1488%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (400 samples, 0.19%)</title><rect x="94.7308%" y="917" width="0.1851%" height="15" fill="rgb(213,211,24)" fg:x="204699" fg:w="400"/><text x="94.9808%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (67 samples, 0.03%)</title><rect x="94.9191%" y="901" width="0.0310%" height="15" fill="rgb(239,73,39)" fg:x="205106" fg:w="67"/><text x="95.1691%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (72 samples, 0.03%)</title><rect x="94.9191%" y="917" width="0.0333%" height="15" fill="rgb(245,182,19)" fg:x="205106" fg:w="72"/><text x="95.1691%" y="927.50"></text></g><g><title>[libc.so.6] (543 samples, 0.25%)</title><rect x="95.0700%" y="773" width="0.2513%" height="15" fill="rgb(247,143,26)" fg:x="205432" fg:w="543"/><text x="95.3200%" y="783.50"></text></g><g><title>[libc.so.6] (763 samples, 0.35%)</title><rect x="94.9700%" y="789" width="0.3531%" height="15" fill="rgb(228,191,23)" fg:x="205216" fg:w="763"/><text x="95.2200%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (844 samples, 0.39%)</title><rect x="94.9548%" y="885" width="0.3906%" height="15" fill="rgb(253,165,31)" fg:x="205183" fg:w="844"/><text x="95.2048%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (843 samples, 0.39%)</title><rect x="94.9552%" y="869" width="0.3901%" height="15" fill="rgb(234,138,20)" fg:x="205184" fg:w="843"/><text x="95.2052%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (843 samples, 0.39%)</title><rect x="94.9552%" y="853" width="0.3901%" height="15" fill="rgb(218,191,29)" fg:x="205184" fg:w="843"/><text x="95.2052%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (843 samples, 0.39%)</title><rect x="94.9552%" y="837" width="0.3901%" height="15" fill="rgb(221,157,19)" fg:x="205184" fg:w="843"/><text x="95.2052%" y="847.50"></text></g><g><title>alloc::alloc::alloc (843 samples, 0.39%)</title><rect x="94.9552%" y="821" width="0.3901%" height="15" fill="rgb(237,26,42)" fg:x="205184" fg:w="843"/><text x="95.2052%" y="831.50"></text></g><g><title>malloc (841 samples, 0.39%)</title><rect x="94.9562%" y="805" width="0.3892%" height="15" fill="rgb(220,163,24)" fg:x="205186" fg:w="841"/><text x="95.2062%" y="815.50"></text></g><g><title>__lll_lock_wake_private (46 samples, 0.02%)</title><rect x="95.3241%" y="789" width="0.0213%" height="15" fill="rgb(242,115,20)" fg:x="205981" fg:w="46"/><text x="95.5741%" y="799.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="95.3245%" y="773" width="0.0208%" height="15" fill="rgb(210,206,9)" fg:x="205982" fg:w="45"/><text x="95.5745%" y="783.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="95.3245%" y="757" width="0.0208%" height="15" fill="rgb(208,71,17)" fg:x="205982" fg:w="45"/><text x="95.5745%" y="767.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="95.3268%" y="741" width="0.0185%" height="15" fill="rgb(233,7,5)" fg:x="205987" fg:w="40"/><text x="95.5768%" y="751.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="95.3268%" y="725" width="0.0185%" height="15" fill="rgb(207,92,33)" fg:x="205987" fg:w="40"/><text x="95.5768%" y="735.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="95.3268%" y="709" width="0.0185%" height="15" fill="rgb(218,87,9)" fg:x="205987" fg:w="40"/><text x="95.5768%" y="719.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="95.3273%" y="693" width="0.0180%" height="15" fill="rgb(219,47,37)" fg:x="205988" fg:w="39"/><text x="95.5773%" y="703.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="95.3292%" y="677" width="0.0162%" height="15" fill="rgb(221,152,34)" fg:x="205992" fg:w="35"/><text x="95.5792%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (851 samples, 0.39%)</title><rect x="94.9524%" y="917" width="0.3938%" height="15" fill="rgb(235,176,21)" fg:x="205178" fg:w="851"/><text x="95.2024%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (850 samples, 0.39%)</title><rect x="94.9529%" y="901" width="0.3934%" height="15" fill="rgb(232,212,21)" fg:x="205179" fg:w="850"/><text x="95.2029%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1,384 samples, 0.64%)</title><rect x="94.7067%" y="933" width="0.6405%" height="15" fill="rgb(245,82,39)" fg:x="204647" fg:w="1384"/><text x="94.9567%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,405 samples, 0.65%)</title><rect x="94.6975%" y="981" width="0.6502%" height="15" fill="rgb(241,52,51)" fg:x="204627" fg:w="1405"/><text x="94.9475%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,405 samples, 0.65%)</title><rect x="94.6975%" y="965" width="0.6502%" height="15" fill="rgb(219,91,24)" fg:x="204627" fg:w="1405"/><text x="94.9475%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1,403 samples, 0.65%)</title><rect x="94.6984%" y="949" width="0.6493%" height="15" fill="rgb(241,142,12)" fg:x="204629" fg:w="1403"/><text x="94.9484%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (34 samples, 0.02%)</title><rect x="95.3477%" y="981" width="0.0157%" height="15" fill="rgb(230,27,9)" fg:x="206032" fg:w="34"/><text x="95.5977%" y="991.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;T,Chain&gt;::process_proof (17,071 samples, 7.90%)</title><rect x="87.4660%" y="1045" width="7.9001%" height="15" fill="rgb(249,181,32)" fg:x="189001" fg:w="17071"/><text x="87.7160%" y="1055.50">floresta_wi..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,884 samples, 0.87%)</title><rect x="94.4943%" y="1029" width="0.8719%" height="15" fill="rgb(230,107,3)" fg:x="204188" fg:w="1884"/><text x="94.7443%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,884 samples, 0.87%)</title><rect x="94.4943%" y="1013" width="0.8719%" height="15" fill="rgb(246,204,14)" fg:x="204188" fg:w="1884"/><text x="94.7443%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1,497 samples, 0.69%)</title><rect x="94.6734%" y="997" width="0.6928%" height="15" fill="rgb(213,192,47)" fg:x="204575" fg:w="1497"/><text x="94.9234%" y="1007.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::handle_block::{{closure}} (133,785 samples, 61.91%)</title><rect x="33.4540%" y="1061" width="61.9131%" height="15" fill="rgb(240,44,36)" fg:x="72289" fg:w="133785"/><text x="33.7040%" y="1071.50">floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::hand..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 0.01%)</title><rect x="95.3953%" y="757" width="0.0120%" height="15" fill="rgb(244,209,38)" fg:x="206135" fg:w="26"/><text x="95.6453%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 0.01%)</title><rect x="95.3953%" y="741" width="0.0120%" height="15" fill="rgb(219,34,37)" fg:x="206135" fg:w="26"/><text x="95.6453%" y="751.50"></text></g><g><title>alloc::alloc::realloc (26 samples, 0.01%)</title><rect x="95.3953%" y="725" width="0.0120%" height="15" fill="rgb(210,28,6)" fg:x="206135" fg:w="26"/><text x="95.6453%" y="735.50"></text></g><g><title>realloc (25 samples, 0.01%)</title><rect x="95.3958%" y="709" width="0.0116%" height="15" fill="rgb(244,110,52)" fg:x="206136" fg:w="25"/><text x="95.6458%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.01%)</title><rect x="95.3949%" y="773" width="0.0130%" height="15" fill="rgb(254,124,47)" fg:x="206134" fg:w="28"/><text x="95.6449%" y="783.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (33 samples, 0.02%)</title><rect x="95.3935%" y="965" width="0.0153%" height="15" fill="rgb(254,110,13)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (33 samples, 0.02%)</title><rect x="95.3935%" y="949" width="0.0153%" height="15" fill="rgb(252,57,21)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="959.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (33 samples, 0.02%)</title><rect x="95.3935%" y="933" width="0.0153%" height="15" fill="rgb(242,60,45)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (33 samples, 0.02%)</title><rect x="95.3935%" y="917" width="0.0153%" height="15" fill="rgb(234,49,30)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (33 samples, 0.02%)</title><rect x="95.3935%" y="901" width="0.0153%" height="15" fill="rgb(218,98,6)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (33 samples, 0.02%)</title><rect x="95.3935%" y="885" width="0.0153%" height="15" fill="rgb(220,174,29)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (33 samples, 0.02%)</title><rect x="95.3935%" y="869" width="0.0153%" height="15" fill="rgb(236,163,23)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (33 samples, 0.02%)</title><rect x="95.3935%" y="853" width="0.0153%" height="15" fill="rgb(242,114,45)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.02%)</title><rect x="95.3935%" y="837" width="0.0153%" height="15" fill="rgb(232,10,53)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.02%)</title><rect x="95.3935%" y="821" width="0.0153%" height="15" fill="rgb(245,108,29)" fg:x="206131" fg:w="33"/><text x="95.6435%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.01%)</title><rect x="95.3944%" y="805" width="0.0143%" height="15" fill="rgb(240,89,53)" fg:x="206133" fg:w="31"/><text x="95.6444%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.01%)</title><rect x="95.3944%" y="789" width="0.0143%" height="15" fill="rgb(226,60,45)" fg:x="206133" fg:w="31"/><text x="95.6444%" y="799.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="95.4129%" y="693" width="0.0106%" height="15" fill="rgb(230,41,44)" fg:x="206173" fg:w="23"/><text x="95.6629%" y="703.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (34 samples, 0.02%)</title><rect x="95.4088%" y="933" width="0.0157%" height="15" fill="rgb(230,26,20)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (34 samples, 0.02%)</title><rect x="95.4088%" y="917" width="0.0157%" height="15" fill="rgb(237,170,32)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="927.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (34 samples, 0.02%)</title><rect x="95.4088%" y="901" width="0.0157%" height="15" fill="rgb(212,35,42)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (34 samples, 0.02%)</title><rect x="95.4088%" y="885" width="0.0157%" height="15" fill="rgb(227,31,34)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (34 samples, 0.02%)</title><rect x="95.4088%" y="869" width="0.0157%" height="15" fill="rgb(216,19,18)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (34 samples, 0.02%)</title><rect x="95.4088%" y="853" width="0.0157%" height="15" fill="rgb(211,133,42)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.02%)</title><rect x="95.4088%" y="837" width="0.0157%" height="15" fill="rgb(244,66,13)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.02%)</title><rect x="95.4088%" y="821" width="0.0157%" height="15" fill="rgb(218,185,50)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.02%)</title><rect x="95.4088%" y="805" width="0.0157%" height="15" fill="rgb(219,149,13)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.02%)</title><rect x="95.4088%" y="789" width="0.0157%" height="15" fill="rgb(221,125,0)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.02%)</title><rect x="95.4088%" y="773" width="0.0157%" height="15" fill="rgb(247,126,27)" fg:x="206164" fg:w="34"/><text x="95.6588%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.02%)</title><rect x="95.4092%" y="757" width="0.0153%" height="15" fill="rgb(250,138,30)" fg:x="206165" fg:w="33"/><text x="95.6592%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.02%)</title><rect x="95.4092%" y="741" width="0.0153%" height="15" fill="rgb(230,151,9)" fg:x="206165" fg:w="33"/><text x="95.6592%" y="751.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.02%)</title><rect x="95.4092%" y="725" width="0.0153%" height="15" fill="rgb(233,80,38)" fg:x="206165" fg:w="33"/><text x="95.6592%" y="735.50"></text></g><g><title>realloc (32 samples, 0.01%)</title><rect x="95.4097%" y="709" width="0.0148%" height="15" fill="rgb(232,68,43)" fg:x="206166" fg:w="32"/><text x="95.6597%" y="719.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="95.4088%" y="965" width="0.0162%" height="15" fill="rgb(254,5,50)" fg:x="206164" fg:w="35"/><text x="95.6588%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (35 samples, 0.02%)</title><rect x="95.4088%" y="949" width="0.0162%" height="15" fill="rgb(225,45,5)" fg:x="206164" fg:w="35"/><text x="95.6588%" y="959.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="95.4287%" y="725" width="0.0102%" height="15" fill="rgb(239,22,3)" fg:x="206207" fg:w="22"/><text x="95.6787%" y="735.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="95.4287%" y="709" width="0.0102%" height="15" fill="rgb(243,129,0)" fg:x="206207" fg:w="22"/><text x="95.6787%" y="719.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (100 samples, 0.05%)</title><rect x="95.3930%" y="981" width="0.0463%" height="15" fill="rgb(223,164,0)" fg:x="206130" fg:w="100"/><text x="95.6430%" y="991.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (31 samples, 0.01%)</title><rect x="95.4249%" y="965" width="0.0143%" height="15" fill="rgb(221,46,29)" fg:x="206199" fg:w="31"/><text x="95.6749%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (31 samples, 0.01%)</title><rect x="95.4249%" y="949" width="0.0143%" height="15" fill="rgb(205,97,47)" fg:x="206199" fg:w="31"/><text x="95.6749%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (31 samples, 0.01%)</title><rect x="95.4249%" y="933" width="0.0143%" height="15" fill="rgb(249,14,8)" fg:x="206199" fg:w="31"/><text x="95.6749%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.01%)</title><rect x="95.4249%" y="917" width="0.0143%" height="15" fill="rgb(216,77,3)" fg:x="206199" fg:w="31"/><text x="95.6749%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.01%)</title><rect x="95.4249%" y="901" width="0.0143%" height="15" fill="rgb(206,168,54)" fg:x="206199" fg:w="31"/><text x="95.6749%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.01%)</title><rect x="95.4249%" y="885" width="0.0143%" height="15" fill="rgb(236,3,41)" fg:x="206199" fg:w="31"/><text x="95.6749%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.01%)</title><rect x="95.4254%" y="869" width="0.0139%" height="15" fill="rgb(231,132,24)" fg:x="206200" fg:w="30"/><text x="95.6754%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.01%)</title><rect x="95.4254%" y="853" width="0.0139%" height="15" fill="rgb(227,221,40)" fg:x="206200" fg:w="30"/><text x="95.6754%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.01%)</title><rect x="95.4254%" y="837" width="0.0139%" height="15" fill="rgb(233,151,11)" fg:x="206200" fg:w="30"/><text x="95.6754%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.01%)</title><rect x="95.4254%" y="821" width="0.0139%" height="15" fill="rgb(247,81,35)" fg:x="206200" fg:w="30"/><text x="95.6754%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.01%)</title><rect x="95.4254%" y="805" width="0.0139%" height="15" fill="rgb(243,128,48)" fg:x="206200" fg:w="30"/><text x="95.6754%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.01%)</title><rect x="95.4254%" y="789" width="0.0139%" height="15" fill="rgb(253,16,10)" fg:x="206200" fg:w="30"/><text x="95.6754%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.01%)</title><rect x="95.4254%" y="773" width="0.0139%" height="15" fill="rgb(228,67,27)" fg:x="206200" fg:w="30"/><text x="95.6754%" y="783.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.01%)</title><rect x="95.4254%" y="757" width="0.0139%" height="15" fill="rgb(231,105,25)" fg:x="206200" fg:w="30"/><text x="95.6754%" y="767.50"></text></g><g><title>realloc (29 samples, 0.01%)</title><rect x="95.4259%" y="741" width="0.0134%" height="15" fill="rgb(213,166,47)" fg:x="206201" fg:w="29"/><text x="95.6759%" y="751.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (106 samples, 0.05%)</title><rect x="95.3916%" y="997" width="0.0491%" height="15" fill="rgb(209,27,10)" fg:x="206127" fg:w="106"/><text x="95.6416%" y="1007.50"></text></g><g><title>bitcoin::consensus::encode::serialize (116 samples, 0.05%)</title><rect x="95.3879%" y="1013" width="0.0537%" height="15" fill="rgb(241,44,30)" fg:x="206119" fg:w="116"/><text x="95.6379%" y="1023.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (66 samples, 0.03%)</title><rect x="95.4532%" y="853" width="0.0305%" height="15" fill="rgb(223,216,15)" fg:x="206260" fg:w="66"/><text x="95.7032%" y="863.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (70 samples, 0.03%)</title><rect x="95.4523%" y="885" width="0.0324%" height="15" fill="rgb(227,14,7)" fg:x="206258" fg:w="70"/><text x="95.7023%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (69 samples, 0.03%)</title><rect x="95.4527%" y="869" width="0.0319%" height="15" fill="rgb(237,14,5)" fg:x="206259" fg:w="69"/><text x="95.7027%" y="879.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="95.4518%" y="965" width="0.0333%" height="15" fill="rgb(232,14,36)" fg:x="206257" fg:w="72"/><text x="95.7018%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="95.4518%" y="949" width="0.0333%" height="15" fill="rgb(234,0,38)" fg:x="206257" fg:w="72"/><text x="95.7018%" y="959.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (72 samples, 0.03%)</title><rect x="95.4518%" y="933" width="0.0333%" height="15" fill="rgb(207,170,14)" fg:x="206257" fg:w="72"/><text x="95.7018%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (72 samples, 0.03%)</title><rect x="95.4518%" y="917" width="0.0333%" height="15" fill="rgb(252,45,13)" fg:x="206257" fg:w="72"/><text x="95.7018%" y="927.50"></text></g><g><title>std::io::Write::write_all (72 samples, 0.03%)</title><rect x="95.4518%" y="901" width="0.0333%" height="15" fill="rgb(213,142,7)" fg:x="206257" fg:w="72"/><text x="95.7018%" y="911.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (87 samples, 0.04%)</title><rect x="95.4499%" y="981" width="0.0403%" height="15" fill="rgb(216,157,23)" fg:x="206253" fg:w="87"/><text x="95.6999%" y="991.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (69 samples, 0.03%)</title><rect x="95.4934%" y="917" width="0.0319%" height="15" fill="rgb(212,145,33)" fg:x="206347" fg:w="69"/><text x="95.7434%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (76 samples, 0.04%)</title><rect x="95.4916%" y="933" width="0.0352%" height="15" fill="rgb(233,26,13)" fg:x="206343" fg:w="76"/><text x="95.7416%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (79 samples, 0.04%)</title><rect x="95.4911%" y="949" width="0.0366%" height="15" fill="rgb(219,196,19)" fg:x="206342" fg:w="79"/><text x="95.7411%" y="959.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (79 samples, 0.04%)</title><rect x="95.5300%" y="901" width="0.0366%" height="15" fill="rgb(246,56,21)" fg:x="206426" fg:w="79"/><text x="95.7800%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (31 samples, 0.01%)</title><rect x="95.5522%" y="885" width="0.0143%" height="15" fill="rgb(222,28,53)" fg:x="206474" fg:w="31"/><text x="95.8022%" y="895.50"></text></g><g><title>floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader::block_hash (258 samples, 0.12%)</title><rect x="95.4490%" y="1013" width="0.1194%" height="15" fill="rgb(224,5,27)" fg:x="206251" fg:w="258"/><text x="95.6990%" y="1023.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (258 samples, 0.12%)</title><rect x="95.4490%" y="997" width="0.1194%" height="15" fill="rgb(220,153,33)" fg:x="206251" fg:w="258"/><text x="95.6990%" y="1007.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (169 samples, 0.08%)</title><rect x="95.4902%" y="981" width="0.0782%" height="15" fill="rgb(226,58,19)" fg:x="206340" fg:w="169"/><text x="95.7402%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (168 samples, 0.08%)</title><rect x="95.4907%" y="965" width="0.0777%" height="15" fill="rgb(239,112,23)" fg:x="206341" fg:w="168"/><text x="95.7407%" y="975.50"></text></g><g><title>bitcoin_hashes::Hash::hash (88 samples, 0.04%)</title><rect x="95.5277%" y="949" width="0.0407%" height="15" fill="rgb(251,213,20)" fg:x="206421" fg:w="88"/><text x="95.7777%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (87 samples, 0.04%)</title><rect x="95.5281%" y="933" width="0.0403%" height="15" fill="rgb(215,181,21)" fg:x="206422" fg:w="87"/><text x="95.7781%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (85 samples, 0.04%)</title><rect x="95.5291%" y="917" width="0.0393%" height="15" fill="rgb(240,8,35)" fg:x="206424" fg:w="85"/><text x="95.7791%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::pagecache::CacheInfo&gt;&gt; (28 samples, 0.01%)</title><rect x="95.5971%" y="613" width="0.0130%" height="15" fill="rgb(232,203,3)" fg:x="206571" fg:w="28"/><text x="95.8471%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sled::pagecache::CacheInfo&gt;&gt; (28 samples, 0.01%)</title><rect x="95.5971%" y="597" width="0.0130%" height="15" fill="rgb(214,202,43)" fg:x="206571" fg:w="28"/><text x="95.8471%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="95.5971%" y="581" width="0.0130%" height="15" fill="rgb(254,35,11)" fg:x="206571" fg:w="28"/><text x="95.8471%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.01%)</title><rect x="95.5971%" y="565" width="0.0130%" height="15" fill="rgb(239,173,13)" fg:x="206571" fg:w="28"/><text x="95.8471%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.01%)</title><rect x="95.5971%" y="549" width="0.0130%" height="15" fill="rgb(220,141,0)" fg:x="206571" fg:w="28"/><text x="95.8471%" y="559.50"></text></g><g><title>cfree (28 samples, 0.01%)</title><rect x="95.5971%" y="533" width="0.0130%" height="15" fill="rgb(210,98,12)" fg:x="206571" fg:w="28"/><text x="95.8471%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (219 samples, 0.10%)</title><rect x="95.6434%" y="517" width="0.1013%" height="15" fill="rgb(254,153,22)" fg:x="206671" fg:w="219"/><text x="95.8934%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (218 samples, 0.10%)</title><rect x="95.6438%" y="501" width="0.1009%" height="15" fill="rgb(247,223,17)" fg:x="206672" fg:w="218"/><text x="95.8938%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (218 samples, 0.10%)</title><rect x="95.6438%" y="485" width="0.1009%" height="15" fill="rgb(246,56,7)" fg:x="206672" fg:w="218"/><text x="95.8938%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (218 samples, 0.10%)</title><rect x="95.6438%" y="469" width="0.1009%" height="15" fill="rgb(240,226,12)" fg:x="206672" fg:w="218"/><text x="95.8938%" y="479.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 samples, 0.09%)</title><rect x="95.6559%" y="453" width="0.0889%" height="15" fill="rgb(205,87,46)" fg:x="206698" fg:w="192"/><text x="95.9059%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (243 samples, 0.11%)</title><rect x="95.6388%" y="565" width="0.1125%" height="15" fill="rgb(245,214,51)" fg:x="206661" fg:w="243"/><text x="95.8888%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (233 samples, 0.11%)</title><rect x="95.6434%" y="549" width="0.1078%" height="15" fill="rgb(223,172,33)" fg:x="206671" fg:w="233"/><text x="95.8934%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (233 samples, 0.11%)</title><rect x="95.6434%" y="533" width="0.1078%" height="15" fill="rgb(227,203,34)" fg:x="206671" fg:w="233"/><text x="95.8934%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (349 samples, 0.16%)</title><rect x="95.5911%" y="709" width="0.1615%" height="15" fill="rgb(248,143,44)" fg:x="206558" fg:w="349"/><text x="95.8411%" y="719.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (349 samples, 0.16%)</title><rect x="95.5911%" y="693" width="0.1615%" height="15" fill="rgb(226,162,5)" fg:x="206558" fg:w="349"/><text x="95.8411%" y="703.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (349 samples, 0.16%)</title><rect x="95.5911%" y="677" width="0.1615%" height="15" fill="rgb(211,143,1)" fg:x="206558" fg:w="349"/><text x="95.8411%" y="687.50"></text></g><g><title>core::mem::drop (349 samples, 0.16%)</title><rect x="95.5911%" y="661" width="0.1615%" height="15" fill="rgb(224,96,15)" fg:x="206558" fg:w="349"/><text x="95.8411%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (349 samples, 0.16%)</title><rect x="95.5911%" y="645" width="0.1615%" height="15" fill="rgb(222,4,38)" fg:x="206558" fg:w="349"/><text x="95.8411%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (349 samples, 0.16%)</title><rect x="95.5911%" y="629" width="0.1615%" height="15" fill="rgb(253,228,15)" fg:x="206558" fg:w="349"/><text x="95.8411%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (308 samples, 0.14%)</title><rect x="95.6101%" y="613" width="0.1425%" height="15" fill="rgb(242,194,12)" fg:x="206599" fg:w="308"/><text x="95.8601%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (289 samples, 0.13%)</title><rect x="95.6189%" y="597" width="0.1337%" height="15" fill="rgb(214,177,31)" fg:x="206618" fg:w="289"/><text x="95.8689%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (289 samples, 0.13%)</title><rect x="95.6189%" y="581" width="0.1337%" height="15" fill="rgb(226,58,51)" fg:x="206618" fg:w="289"/><text x="95.8689%" y="591.50"></text></g><g><title>core::mem::drop (366 samples, 0.17%)</title><rect x="95.5874%" y="837" width="0.1694%" height="15" fill="rgb(250,119,16)" fg:x="206550" fg:w="366"/><text x="95.8374%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (366 samples, 0.17%)</title><rect x="95.5874%" y="821" width="0.1694%" height="15" fill="rgb(223,128,53)" fg:x="206550" fg:w="366"/><text x="95.8374%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (366 samples, 0.17%)</title><rect x="95.5874%" y="805" width="0.1694%" height="15" fill="rgb(251,199,15)" fg:x="206550" fg:w="366"/><text x="95.8374%" y="815.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (366 samples, 0.17%)</title><rect x="95.5874%" y="789" width="0.1694%" height="15" fill="rgb(235,168,42)" fg:x="206550" fg:w="366"/><text x="95.8374%" y="799.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (366 samples, 0.17%)</title><rect x="95.5874%" y="773" width="0.1694%" height="15" fill="rgb(250,210,17)" fg:x="206550" fg:w="366"/><text x="95.8374%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (358 samples, 0.17%)</title><rect x="95.5911%" y="757" width="0.1657%" height="15" fill="rgb(226,36,41)" fg:x="206558" fg:w="358"/><text x="95.8411%" y="767.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (358 samples, 0.17%)</title><rect x="95.5911%" y="741" width="0.1657%" height="15" fill="rgb(225,87,10)" fg:x="206558" fg:w="358"/><text x="95.8411%" y="751.50"></text></g><g><title>core::mem::drop (358 samples, 0.17%)</title><rect x="95.5911%" y="725" width="0.1657%" height="15" fill="rgb(228,83,9)" fg:x="206558" fg:w="358"/><text x="95.8411%" y="735.50"></text></g><g><title>sled::pin (376 samples, 0.17%)</title><rect x="95.5846%" y="981" width="0.1740%" height="15" fill="rgb(225,16,36)" fg:x="206544" fg:w="376"/><text x="95.8346%" y="991.50"></text></g><g><title>crossbeam_epoch::default::pin (376 samples, 0.17%)</title><rect x="95.5846%" y="965" width="0.1740%" height="15" fill="rgb(242,198,13)" fg:x="206544" fg:w="376"/><text x="95.8346%" y="975.50"></text></g><g><title>crossbeam_epoch::default::with_handle (376 samples, 0.17%)</title><rect x="95.5846%" y="949" width="0.1740%" height="15" fill="rgb(239,25,51)" fg:x="206544" fg:w="376"/><text x="95.8346%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (376 samples, 0.17%)</title><rect x="95.5846%" y="933" width="0.1740%" height="15" fill="rgb(239,28,37)" fg:x="206544" fg:w="376"/><text x="95.8346%" y="943.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (375 samples, 0.17%)</title><rect x="95.5851%" y="917" width="0.1735%" height="15" fill="rgb(234,70,17)" fg:x="206545" fg:w="375"/><text x="95.8351%" y="927.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (375 samples, 0.17%)</title><rect x="95.5851%" y="901" width="0.1735%" height="15" fill="rgb(231,215,53)" fg:x="206545" fg:w="375"/><text x="95.8351%" y="911.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (375 samples, 0.17%)</title><rect x="95.5851%" y="885" width="0.1735%" height="15" fill="rgb(218,140,42)" fg:x="206545" fg:w="375"/><text x="95.8351%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (375 samples, 0.17%)</title><rect x="95.5851%" y="869" width="0.1735%" height="15" fill="rgb(233,227,45)" fg:x="206545" fg:w="375"/><text x="95.8351%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (371 samples, 0.17%)</title><rect x="95.5869%" y="853" width="0.1717%" height="15" fill="rgb(225,189,21)" fg:x="206549" fg:w="371"/><text x="95.8369%" y="863.50"></text></g><g><title>sled::node::Node::node_kv_pair (39 samples, 0.02%)</title><rect x="95.7697%" y="965" width="0.0180%" height="15" fill="rgb(237,176,54)" fg:x="206944" fg:w="39"/><text x="96.0197%" y="975.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (24 samples, 0.01%)</title><rect x="95.7767%" y="949" width="0.0111%" height="15" fill="rgb(215,131,46)" fg:x="206959" fg:w="24"/><text x="96.0267%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (23 samples, 0.01%)</title><rect x="95.7771%" y="933" width="0.0106%" height="15" fill="rgb(218,95,20)" fg:x="206960" fg:w="23"/><text x="96.0271%" y="943.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (430 samples, 0.20%)</title><rect x="95.7942%" y="837" width="0.1990%" height="15" fill="rgb(208,198,12)" fg:x="206997" fg:w="430"/><text x="96.0442%" y="847.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (428 samples, 0.20%)</title><rect x="95.7952%" y="821" width="0.1981%" height="15" fill="rgb(239,107,50)" fg:x="206999" fg:w="428"/><text x="96.0452%" y="831.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (407 samples, 0.19%)</title><rect x="95.8049%" y="805" width="0.1884%" height="15" fill="rgb(240,217,37)" fg:x="207020" fg:w="407"/><text x="96.0549%" y="815.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (451 samples, 0.21%)</title><rect x="95.7919%" y="949" width="0.2087%" height="15" fill="rgb(242,197,49)" fg:x="206992" fg:w="451"/><text x="96.0419%" y="959.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (448 samples, 0.21%)</title><rect x="95.7933%" y="933" width="0.2073%" height="15" fill="rgb(219,171,17)" fg:x="206995" fg:w="448"/><text x="96.0433%" y="943.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (447 samples, 0.21%)</title><rect x="95.7938%" y="917" width="0.2069%" height="15" fill="rgb(209,81,40)" fg:x="206996" fg:w="447"/><text x="96.0438%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (447 samples, 0.21%)</title><rect x="95.7938%" y="901" width="0.2069%" height="15" fill="rgb(237,156,30)" fg:x="206996" fg:w="447"/><text x="96.0438%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (447 samples, 0.21%)</title><rect x="95.7938%" y="885" width="0.2069%" height="15" fill="rgb(212,127,16)" fg:x="206996" fg:w="447"/><text x="96.0438%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (447 samples, 0.21%)</title><rect x="95.7938%" y="869" width="0.2069%" height="15" fill="rgb(226,66,32)" fg:x="206996" fg:w="447"/><text x="96.0438%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (447 samples, 0.21%)</title><rect x="95.7938%" y="853" width="0.2069%" height="15" fill="rgb(245,22,46)" fg:x="206996" fg:w="447"/><text x="96.0438%" y="863.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="96.0752%" y="725" width="0.0162%" height="15" fill="rgb(210,112,21)" fg:x="207604" fg:w="35"/><text x="96.3252%" y="735.50"></text></g><g><title>[libc.so.6] (105 samples, 0.05%)</title><rect x="96.0437%" y="757" width="0.0486%" height="15" fill="rgb(207,118,39)" fg:x="207536" fg:w="105"/><text x="96.2937%" y="767.50"></text></g><g><title>[libc.so.6] (103 samples, 0.05%)</title><rect x="96.0446%" y="741" width="0.0477%" height="15" fill="rgb(205,206,35)" fg:x="207538" fg:w="103"/><text x="96.2946%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (129 samples, 0.06%)</title><rect x="96.0358%" y="821" width="0.0597%" height="15" fill="rgb(222,120,2)" fg:x="207519" fg:w="129"/><text x="96.2858%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (129 samples, 0.06%)</title><rect x="96.0358%" y="805" width="0.0597%" height="15" fill="rgb(205,38,18)" fg:x="207519" fg:w="129"/><text x="96.2858%" y="815.50"></text></g><g><title>alloc::alloc::realloc (129 samples, 0.06%)</title><rect x="96.0358%" y="789" width="0.0597%" height="15" fill="rgb(226,61,2)" fg:x="207519" fg:w="129"/><text x="96.2858%" y="799.50"></text></g><g><title>realloc (127 samples, 0.06%)</title><rect x="96.0367%" y="773" width="0.0588%" height="15" fill="rgb(242,161,23)" fg:x="207521" fg:w="127"/><text x="96.2867%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 samples, 0.06%)</title><rect x="96.0354%" y="837" width="0.0606%" height="15" fill="rgb(213,13,52)" fg:x="207518" fg:w="131"/><text x="96.2854%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (133 samples, 0.06%)</title><rect x="96.0354%" y="901" width="0.0615%" height="15" fill="rgb(246,209,47)" fg:x="207518" fg:w="133"/><text x="96.2854%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (133 samples, 0.06%)</title><rect x="96.0354%" y="885" width="0.0615%" height="15" fill="rgb(214,41,3)" fg:x="207518" fg:w="133"/><text x="96.2854%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (133 samples, 0.06%)</title><rect x="96.0354%" y="869" width="0.0615%" height="15" fill="rgb(236,119,38)" fg:x="207518" fg:w="133"/><text x="96.2854%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (133 samples, 0.06%)</title><rect x="96.0354%" y="853" width="0.0615%" height="15" fill="rgb(218,50,11)" fg:x="207518" fg:w="133"/><text x="96.2854%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (141 samples, 0.07%)</title><rect x="96.0349%" y="917" width="0.0653%" height="15" fill="rgb(228,38,11)" fg:x="207517" fg:w="141"/><text x="96.2849%" y="927.50"></text></g><g><title>sled::node::Node::apply (173 samples, 0.08%)</title><rect x="96.0275%" y="949" width="0.0801%" height="15" fill="rgb(212,13,9)" fg:x="207501" fg:w="173"/><text x="96.2775%" y="959.50"></text></g><g><title>sled::node::Node::set_leaf (163 samples, 0.08%)</title><rect x="96.0321%" y="933" width="0.0754%" height="15" fill="rgb(208,211,9)" fg:x="207511" fg:w="163"/><text x="96.2821%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_link (26 samples, 0.01%)</title><rect x="96.1094%" y="949" width="0.0120%" height="15" fill="rgb(239,39,32)" fg:x="207678" fg:w="26"/><text x="96.3594%" y="959.50"></text></g><g><title>sled::stack::Stack&lt;T&gt;::push (26 samples, 0.01%)</title><rect x="96.1094%" y="933" width="0.0120%" height="15" fill="rgb(254,179,26)" fg:x="207678" fg:w="26"/><text x="96.3594%" y="943.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (22 samples, 0.01%)</title><rect x="96.1113%" y="917" width="0.0102%" height="15" fill="rgb(249,165,28)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="927.50"></text></g><g><title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (22 samples, 0.01%)</title><rect x="96.1113%" y="901" width="0.0102%" height="15" fill="rgb(225,59,50)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="911.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (22 samples, 0.01%)</title><rect x="96.1113%" y="885" width="0.0102%" height="15" fill="rgb(209,122,5)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.01%)</title><rect x="96.1113%" y="869" width="0.0102%" height="15" fill="rgb(214,65,34)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.01%)</title><rect x="96.1113%" y="853" width="0.0102%" height="15" fill="rgb(249,183,32)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.01%)</title><rect x="96.1113%" y="837" width="0.0102%" height="15" fill="rgb(218,122,24)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.01%)</title><rect x="96.1113%" y="821" width="0.0102%" height="15" fill="rgb(224,109,18)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="831.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.01%)</title><rect x="96.1113%" y="805" width="0.0102%" height="15" fill="rgb(210,68,50)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="815.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="96.1113%" y="789" width="0.0102%" height="15" fill="rgb(212,184,34)" fg:x="207682" fg:w="22"/><text x="96.3613%" y="799.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (25 samples, 0.01%)</title><rect x="96.1339%" y="917" width="0.0116%" height="15" fill="rgb(238,105,48)" fg:x="207731" fg:w="25"/><text x="96.3839%" y="927.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (56 samples, 0.03%)</title><rect x="96.1214%" y="949" width="0.0259%" height="15" fill="rgb(222,134,54)" fg:x="207704" fg:w="56"/><text x="96.3714%" y="959.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (54 samples, 0.02%)</title><rect x="96.1224%" y="933" width="0.0250%" height="15" fill="rgb(246,24,43)" fg:x="207706" fg:w="54"/><text x="96.3724%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.01%)</title><rect x="96.1677%" y="837" width="0.0116%" height="15" fill="rgb(227,169,22)" fg:x="207804" fg:w="25"/><text x="96.4177%" y="847.50"></text></g><g><title>sled::calculate_message_crc32 (66 samples, 0.03%)</title><rect x="96.1492%" y="917" width="0.0305%" height="15" fill="rgb(253,152,4)" fg:x="207764" fg:w="66"/><text x="96.3992%" y="927.50"></text></g><g><title>crc32fast::Hasher::update (60 samples, 0.03%)</title><rect x="96.1520%" y="901" width="0.0278%" height="15" fill="rgb(219,158,36)" fg:x="207770" fg:w="60"/><text x="96.4020%" y="911.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (60 samples, 0.03%)</title><rect x="96.1520%" y="885" width="0.0278%" height="15" fill="rgb(251,128,40)" fg:x="207770" fg:w="60"/><text x="96.4020%" y="895.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (59 samples, 0.03%)</title><rect x="96.1524%" y="869" width="0.0273%" height="15" fill="rgb(254,101,39)" fg:x="207771" fg:w="59"/><text x="96.4024%" y="879.50"></text></g><g><title>crc32fast::baseline::update_slow (39 samples, 0.02%)</title><rect x="96.1617%" y="853" width="0.0180%" height="15" fill="rgb(221,168,40)" fg:x="207791" fg:w="39"/><text x="96.4117%" y="863.50"></text></g><g><title>sled::pagecache::PageCache::link (850 samples, 0.39%)</title><rect x="95.7878%" y="965" width="0.3934%" height="15" fill="rgb(221,14,27)" fg:x="206983" fg:w="850"/><text x="96.0378%" y="975.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (73 samples, 0.03%)</title><rect x="96.1473%" y="949" width="0.0338%" height="15" fill="rgb(207,36,43)" fg:x="207760" fg:w="73"/><text x="96.3973%" y="959.50"></text></g><g><title>sled::pagecache::reservation::Reservation::flush (69 samples, 0.03%)</title><rect x="96.1492%" y="933" width="0.0319%" height="15" fill="rgb(240,172,53)" fg:x="207764" fg:w="69"/><text x="96.3992%" y="943.50"></text></g><g><title>sled::node::Node::index_next_node (40 samples, 0.02%)</title><rect x="96.1913%" y="949" width="0.0185%" height="15" fill="rgb(241,138,43)" fg:x="207855" fg:w="40"/><text x="96.4413%" y="959.50"></text></g><g><title>sled::binary_search::binary_search_lub (40 samples, 0.02%)</title><rect x="96.1913%" y="933" width="0.0185%" height="15" fill="rgb(227,78,19)" fg:x="207855" fg:w="40"/><text x="96.4413%" y="943.50"></text></g><g><title>sled::binary_search::binary_search (38 samples, 0.02%)</title><rect x="96.1922%" y="917" width="0.0176%" height="15" fill="rgb(215,127,44)" fg:x="207857" fg:w="38"/><text x="96.4422%" y="927.50"></text></g><g><title>sled::fastcmp::fastcmp (22 samples, 0.01%)</title><rect x="96.1996%" y="901" width="0.0102%" height="15" fill="rgb(227,13,10)" fg:x="207873" fg:w="22"/><text x="96.4496%" y="911.50"></text></g><g><title>sled::lru::Lru::accessed (34 samples, 0.02%)</title><rect x="96.2177%" y="917" width="0.0157%" height="15" fill="rgb(249,177,6)" fg:x="207912" fg:w="34"/><text x="96.4677%" y="927.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (1,457 samples, 0.67%)</title><rect x="95.5684%" y="1013" width="0.6743%" height="15" fill="rgb(215,154,26)" fg:x="206509" fg:w="1457"/><text x="95.8184%" y="1023.50"></text></g><g><title>sled::tree::Tree::insert (1,442 samples, 0.67%)</title><rect x="95.5754%" y="997" width="0.6673%" height="15" fill="rgb(250,168,20)" fg:x="206524" fg:w="1442"/><text x="95.8254%" y="1007.50"></text></g><g><title>sled::tree::Tree::insert_inner (1,046 samples, 0.48%)</title><rect x="95.7586%" y="981" width="0.4841%" height="15" fill="rgb(222,53,38)" fg:x="206920" fg:w="1046"/><text x="96.0086%" y="991.50"></text></g><g><title>sled::tree::Tree::view_for_key (131 samples, 0.06%)</title><rect x="96.1821%" y="965" width="0.0606%" height="15" fill="rgb(245,154,5)" fg:x="207835" fg:w="131"/><text x="96.4321%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_pid (70 samples, 0.03%)</title><rect x="96.2103%" y="949" width="0.0324%" height="15" fill="rgb(214,89,50)" fg:x="207896" fg:w="70"/><text x="96.4603%" y="959.50"></text></g><g><title>sled::pagecache::PageCache::get (58 samples, 0.03%)</title><rect x="96.2158%" y="933" width="0.0268%" height="15" fill="rgb(232,73,14)" fg:x="207908" fg:w="58"/><text x="96.4658%" y="943.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::save_header (1,866 samples, 0.86%)</title><rect x="95.3870%" y="1029" width="0.8635%" height="15" fill="rgb(230,101,20)" fg:x="206117" fg:w="1866"/><text x="95.6370%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.03%)</title><rect x="96.2862%" y="517" width="0.0287%" height="15" fill="rgb(208,56,28)" fg:x="208060" fg:w="62"/><text x="96.5362%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (62 samples, 0.03%)</title><rect x="96.2862%" y="501" width="0.0287%" height="15" fill="rgb(247,205,22)" fg:x="208060" fg:w="62"/><text x="96.5362%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (62 samples, 0.03%)</title><rect x="96.2862%" y="485" width="0.0287%" height="15" fill="rgb(252,109,51)" fg:x="208060" fg:w="62"/><text x="96.5362%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (62 samples, 0.03%)</title><rect x="96.2862%" y="469" width="0.0287%" height="15" fill="rgb(220,40,24)" fg:x="208060" fg:w="62"/><text x="96.5362%" y="479.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.02%)</title><rect x="96.2913%" y="453" width="0.0236%" height="15" fill="rgb(251,108,7)" fg:x="208071" fg:w="51"/><text x="96.5413%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (90 samples, 0.04%)</title><rect x="96.2742%" y="709" width="0.0417%" height="15" fill="rgb(238,102,51)" fg:x="208034" fg:w="90"/><text x="96.5242%" y="719.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.04%)</title><rect x="96.2742%" y="693" width="0.0417%" height="15" fill="rgb(219,149,34)" fg:x="208034" fg:w="90"/><text x="96.5242%" y="703.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (90 samples, 0.04%)</title><rect x="96.2742%" y="677" width="0.0417%" height="15" fill="rgb(239,70,0)" fg:x="208034" fg:w="90"/><text x="96.5242%" y="687.50"></text></g><g><title>core::mem::drop (90 samples, 0.04%)</title><rect x="96.2742%" y="661" width="0.0417%" height="15" fill="rgb(246,214,23)" fg:x="208034" fg:w="90"/><text x="96.5242%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (90 samples, 0.04%)</title><rect x="96.2742%" y="645" width="0.0417%" height="15" fill="rgb(239,221,51)" fg:x="208034" fg:w="90"/><text x="96.5242%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (90 samples, 0.04%)</title><rect x="96.2742%" y="629" width="0.0417%" height="15" fill="rgb(254,62,14)" fg:x="208034" fg:w="90"/><text x="96.5242%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (80 samples, 0.04%)</title><rect x="96.2788%" y="613" width="0.0370%" height="15" fill="rgb(253,57,33)" fg:x="208044" fg:w="80"/><text x="96.5288%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (75 samples, 0.03%)</title><rect x="96.2811%" y="597" width="0.0347%" height="15" fill="rgb(229,34,6)" fg:x="208049" fg:w="75"/><text x="96.5311%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (75 samples, 0.03%)</title><rect x="96.2811%" y="581" width="0.0347%" height="15" fill="rgb(235,191,23)" fg:x="208049" fg:w="75"/><text x="96.5311%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (67 samples, 0.03%)</title><rect x="96.2848%" y="565" width="0.0310%" height="15" fill="rgb(217,207,27)" fg:x="208057" fg:w="67"/><text x="96.5348%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (64 samples, 0.03%)</title><rect x="96.2862%" y="549" width="0.0296%" height="15" fill="rgb(232,41,44)" fg:x="208060" fg:w="64"/><text x="96.5362%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (64 samples, 0.03%)</title><rect x="96.2862%" y="533" width="0.0296%" height="15" fill="rgb(221,188,19)" fg:x="208060" fg:w="64"/><text x="96.5362%" y="543.50"></text></g><g><title>sled::pin (100 samples, 0.05%)</title><rect x="96.2709%" y="981" width="0.0463%" height="15" fill="rgb(245,180,45)" fg:x="208027" fg:w="100"/><text x="96.5209%" y="991.50"></text></g><g><title>crossbeam_epoch::default::pin (99 samples, 0.05%)</title><rect x="96.2714%" y="965" width="0.0458%" height="15" fill="rgb(250,220,42)" fg:x="208028" fg:w="99"/><text x="96.5214%" y="975.50"></text></g><g><title>crossbeam_epoch::default::with_handle (99 samples, 0.05%)</title><rect x="96.2714%" y="949" width="0.0458%" height="15" fill="rgb(234,16,34)" fg:x="208028" fg:w="99"/><text x="96.5214%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (99 samples, 0.05%)</title><rect x="96.2714%" y="933" width="0.0458%" height="15" fill="rgb(233,217,23)" fg:x="208028" fg:w="99"/><text x="96.5214%" y="943.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (98 samples, 0.05%)</title><rect x="96.2718%" y="917" width="0.0454%" height="15" fill="rgb(209,22,46)" fg:x="208029" fg:w="98"/><text x="96.5218%" y="927.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (98 samples, 0.05%)</title><rect x="96.2718%" y="901" width="0.0454%" height="15" fill="rgb(213,101,18)" fg:x="208029" fg:w="98"/><text x="96.5218%" y="911.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (98 samples, 0.05%)</title><rect x="96.2718%" y="885" width="0.0454%" height="15" fill="rgb(215,179,52)" fg:x="208029" fg:w="98"/><text x="96.5218%" y="895.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (98 samples, 0.05%)</title><rect x="96.2718%" y="869" width="0.0454%" height="15" fill="rgb(223,50,25)" fg:x="208029" fg:w="98"/><text x="96.5218%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (96 samples, 0.04%)</title><rect x="96.2728%" y="853" width="0.0444%" height="15" fill="rgb(224,51,44)" fg:x="208031" fg:w="96"/><text x="96.5228%" y="863.50"></text></g><g><title>core::mem::drop (96 samples, 0.04%)</title><rect x="96.2728%" y="837" width="0.0444%" height="15" fill="rgb(224,13,54)" fg:x="208031" fg:w="96"/><text x="96.5228%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (96 samples, 0.04%)</title><rect x="96.2728%" y="821" width="0.0444%" height="15" fill="rgb(219,58,47)" fg:x="208031" fg:w="96"/><text x="96.5228%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (96 samples, 0.04%)</title><rect x="96.2728%" y="805" width="0.0444%" height="15" fill="rgb(246,124,34)" fg:x="208031" fg:w="96"/><text x="96.5228%" y="815.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (96 samples, 0.04%)</title><rect x="96.2728%" y="789" width="0.0444%" height="15" fill="rgb(245,109,25)" fg:x="208031" fg:w="96"/><text x="96.5228%" y="799.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (96 samples, 0.04%)</title><rect x="96.2728%" y="773" width="0.0444%" height="15" fill="rgb(235,48,23)" fg:x="208031" fg:w="96"/><text x="96.5228%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (93 samples, 0.04%)</title><rect x="96.2742%" y="757" width="0.0430%" height="15" fill="rgb(229,203,36)" fg:x="208034" fg:w="93"/><text x="96.5242%" y="767.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (93 samples, 0.04%)</title><rect x="96.2742%" y="741" width="0.0430%" height="15" fill="rgb(234,180,9)" fg:x="208034" fg:w="93"/><text x="96.5242%" y="751.50"></text></g><g><title>core::mem::drop (93 samples, 0.04%)</title><rect x="96.2742%" y="725" width="0.0430%" height="15" fill="rgb(228,98,45)" fg:x="208034" fg:w="93"/><text x="96.5242%" y="735.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (39 samples, 0.02%)</title><rect x="96.3445%" y="837" width="0.0180%" height="15" fill="rgb(240,24,36)" fg:x="208186" fg:w="39"/><text x="96.5945%" y="847.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="96.3450%" y="821" width="0.0176%" height="15" fill="rgb(227,154,19)" fg:x="208187" fg:w="38"/><text x="96.5950%" y="831.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.02%)</title><rect x="96.3459%" y="805" width="0.0167%" height="15" fill="rgb(231,2,48)" fg:x="208189" fg:w="36"/><text x="96.5959%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.01%)</title><rect x="96.3625%" y="837" width="0.0106%" height="15" fill="rgb(219,216,0)" fg:x="208225" fg:w="23"/><text x="96.6125%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.01%)</title><rect x="96.3625%" y="821" width="0.0106%" height="15" fill="rgb(251,88,0)" fg:x="208225" fg:w="23"/><text x="96.6125%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.01%)</title><rect x="96.3625%" y="805" width="0.0106%" height="15" fill="rgb(242,45,45)" fg:x="208225" fg:w="23"/><text x="96.6125%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.01%)</title><rect x="96.3630%" y="789" width="0.0102%" height="15" fill="rgb(218,149,45)" fg:x="208226" fg:w="22"/><text x="96.6130%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.01%)</title><rect x="96.3630%" y="773" width="0.0102%" height="15" fill="rgb(247,194,10)" fg:x="208226" fg:w="22"/><text x="96.6130%" y="783.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.01%)</title><rect x="96.3630%" y="757" width="0.0102%" height="15" fill="rgb(234,33,37)" fg:x="208226" fg:w="22"/><text x="96.6130%" y="767.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="96.3630%" y="741" width="0.0102%" height="15" fill="rgb(218,61,13)" fg:x="208226" fg:w="22"/><text x="96.6130%" y="751.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (90 samples, 0.04%)</title><rect x="96.3376%" y="949" width="0.0417%" height="15" fill="rgb(210,80,52)" fg:x="208171" fg:w="90"/><text x="96.5876%" y="959.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (83 samples, 0.04%)</title><rect x="96.3408%" y="933" width="0.0384%" height="15" fill="rgb(218,203,27)" fg:x="208178" fg:w="83"/><text x="96.5908%" y="943.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (81 samples, 0.04%)</title><rect x="96.3417%" y="917" width="0.0375%" height="15" fill="rgb(209,126,33)" fg:x="208180" fg:w="81"/><text x="96.5917%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81 samples, 0.04%)</title><rect x="96.3417%" y="901" width="0.0375%" height="15" fill="rgb(234,173,41)" fg:x="208180" fg:w="81"/><text x="96.5917%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80 samples, 0.04%)</title><rect x="96.3422%" y="885" width="0.0370%" height="15" fill="rgb(228,166,9)" fg:x="208181" fg:w="80"/><text x="96.5922%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (80 samples, 0.04%)</title><rect x="96.3422%" y="869" width="0.0370%" height="15" fill="rgb(208,124,43)" fg:x="208181" fg:w="80"/><text x="96.5922%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (80 samples, 0.04%)</title><rect x="96.3422%" y="853" width="0.0370%" height="15" fill="rgb(212,154,38)" fg:x="208181" fg:w="80"/><text x="96.5922%" y="863.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="96.4593%" y="725" width="0.0148%" height="15" fill="rgb(246,179,35)" fg:x="208434" fg:w="32"/><text x="96.7093%" y="735.50"></text></g><g><title>[libc.so.6] (103 samples, 0.05%)</title><rect x="96.4283%" y="757" width="0.0477%" height="15" fill="rgb(251,3,50)" fg:x="208367" fg:w="103"/><text x="96.6783%" y="767.50"></text></g><g><title>[libc.so.6] (100 samples, 0.05%)</title><rect x="96.4296%" y="741" width="0.0463%" height="15" fill="rgb(219,96,8)" fg:x="208370" fg:w="100"/><text x="96.6796%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (128 samples, 0.06%)</title><rect x="96.4190%" y="821" width="0.0592%" height="15" fill="rgb(251,216,33)" fg:x="208347" fg:w="128"/><text x="96.6690%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (128 samples, 0.06%)</title><rect x="96.4190%" y="805" width="0.0592%" height="15" fill="rgb(243,145,29)" fg:x="208347" fg:w="128"/><text x="96.6690%" y="815.50"></text></g><g><title>alloc::alloc::realloc (127 samples, 0.06%)</title><rect x="96.4195%" y="789" width="0.0588%" height="15" fill="rgb(210,75,20)" fg:x="208348" fg:w="127"/><text x="96.6695%" y="799.50"></text></g><g><title>realloc (124 samples, 0.06%)</title><rect x="96.4209%" y="773" width="0.0574%" height="15" fill="rgb(235,56,8)" fg:x="208351" fg:w="124"/><text x="96.6709%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 samples, 0.06%)</title><rect x="96.4185%" y="837" width="0.0602%" height="15" fill="rgb(226,175,49)" fg:x="208346" fg:w="130"/><text x="96.6685%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (132 samples, 0.06%)</title><rect x="96.4185%" y="901" width="0.0611%" height="15" fill="rgb(242,204,23)" fg:x="208346" fg:w="132"/><text x="96.6685%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (132 samples, 0.06%)</title><rect x="96.4185%" y="885" width="0.0611%" height="15" fill="rgb(225,104,24)" fg:x="208346" fg:w="132"/><text x="96.6685%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (132 samples, 0.06%)</title><rect x="96.4185%" y="869" width="0.0611%" height="15" fill="rgb(253,34,1)" fg:x="208346" fg:w="132"/><text x="96.6685%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (132 samples, 0.06%)</title><rect x="96.4185%" y="853" width="0.0611%" height="15" fill="rgb(233,199,23)" fg:x="208346" fg:w="132"/><text x="96.6685%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (133 samples, 0.06%)</title><rect x="96.4185%" y="917" width="0.0615%" height="15" fill="rgb(247,7,51)" fg:x="208346" fg:w="133"/><text x="96.6685%" y="927.50"></text></g><g><title>sled::node::Node::apply (144 samples, 0.07%)</title><rect x="96.4158%" y="949" width="0.0666%" height="15" fill="rgb(214,146,12)" fg:x="208340" fg:w="144"/><text x="96.6658%" y="959.50"></text></g><g><title>sled::node::Node::set_leaf (139 samples, 0.06%)</title><rect x="96.4181%" y="933" width="0.0643%" height="15" fill="rgb(234,181,43)" fg:x="208345" fg:w="139"/><text x="96.6681%" y="943.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (36 samples, 0.02%)</title><rect x="96.4921%" y="949" width="0.0167%" height="15" fill="rgb(239,148,6)" fg:x="208505" fg:w="36"/><text x="96.7421%" y="959.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (35 samples, 0.02%)</title><rect x="96.4926%" y="933" width="0.0162%" height="15" fill="rgb(206,151,17)" fg:x="208506" fg:w="35"/><text x="96.7426%" y="943.50"></text></g><g><title>sled::calculate_message_crc32 (47 samples, 0.02%)</title><rect x="96.5088%" y="917" width="0.0218%" height="15" fill="rgb(213,215,10)" fg:x="208541" fg:w="47"/><text x="96.7588%" y="927.50"></text></g><g><title>crc32fast::Hasher::update (41 samples, 0.02%)</title><rect x="96.5116%" y="901" width="0.0190%" height="15" fill="rgb(215,220,44)" fg:x="208547" fg:w="41"/><text x="96.7616%" y="911.50"></text></g><g><title>crc32fast::specialized::pclmulqdq::State::update (41 samples, 0.02%)</title><rect x="96.5116%" y="885" width="0.0190%" height="15" fill="rgb(245,205,37)" fg:x="208547" fg:w="41"/><text x="96.7616%" y="895.50"></text></g><g><title>crc32fast::baseline::update_fast_16 (40 samples, 0.02%)</title><rect x="96.5120%" y="869" width="0.0185%" height="15" fill="rgb(245,130,43)" fg:x="208548" fg:w="40"/><text x="96.7620%" y="879.50"></text></g><g><title>crc32fast::baseline::update_slow (39 samples, 0.02%)</title><rect x="96.5125%" y="853" width="0.0180%" height="15" fill="rgb(231,227,38)" fg:x="208549" fg:w="39"/><text x="96.7625%" y="863.50"></text></g><g><title>sled::pagecache::reservation::Reservation::complete (50 samples, 0.02%)</title><rect x="96.5088%" y="949" width="0.0231%" height="15" fill="rgb(233,185,4)" fg:x="208541" fg:w="50"/><text x="96.7588%" y="959.50"></text></g><g><title>sled::pagecache::reservation::Reservation::flush (50 samples, 0.02%)</title><rect x="96.5088%" y="933" width="0.0231%" height="15" fill="rgb(224,154,43)" fg:x="208541" fg:w="50"/><text x="96.7588%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::link (428 samples, 0.20%)</title><rect x="96.3348%" y="965" width="0.1981%" height="15" fill="rgb(235,156,15)" fg:x="208165" fg:w="428"/><text x="96.5848%" y="975.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="96.5541%" y="885" width="0.0120%" height="15" fill="rgb(211,55,43)" fg:x="208639" fg:w="26"/><text x="96.8041%" y="895.50"></text></g><g><title>sled::binary_search::binary_search_lub (42 samples, 0.02%)</title><rect x="96.5472%" y="933" width="0.0194%" height="15" fill="rgb(247,149,40)" fg:x="208624" fg:w="42"/><text x="96.7972%" y="943.50"></text></g><g><title>sled::binary_search::binary_search (41 samples, 0.02%)</title><rect x="96.5477%" y="917" width="0.0190%" height="15" fill="rgb(232,171,16)" fg:x="208625" fg:w="41"/><text x="96.7977%" y="927.50"></text></g><g><title>sled::fastcmp::fastcmp (27 samples, 0.01%)</title><rect x="96.5541%" y="901" width="0.0125%" height="15" fill="rgb(215,117,49)" fg:x="208639" fg:w="27"/><text x="96.8041%" y="911.50"></text></g><g><title>sled::node::Node::index_next_node (49 samples, 0.02%)</title><rect x="96.5444%" y="949" width="0.0227%" height="15" fill="rgb(246,194,11)" fg:x="208618" fg:w="49"/><text x="96.7944%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.01%)</title><rect x="96.5787%" y="821" width="0.0111%" height="15" fill="rgb(242,101,44)" fg:x="208692" fg:w="24"/><text x="96.8287%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.01%)</title><rect x="96.5787%" y="805" width="0.0111%" height="15" fill="rgb(226,174,6)" fg:x="208692" fg:w="24"/><text x="96.8287%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.01%)</title><rect x="96.5787%" y="789" width="0.0111%" height="15" fill="rgb(213,150,20)" fg:x="208692" fg:w="24"/><text x="96.8287%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.01%)</title><rect x="96.5787%" y="773" width="0.0111%" height="15" fill="rgb(222,124,42)" fg:x="208692" fg:w="24"/><text x="96.8287%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.01%)</title><rect x="96.5787%" y="757" width="0.0111%" height="15" fill="rgb(250,19,47)" fg:x="208692" fg:w="24"/><text x="96.8287%" y="767.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.01%)</title><rect x="96.5787%" y="741" width="0.0111%" height="15" fill="rgb(241,217,19)" fg:x="208692" fg:w="24"/><text x="96.8287%" y="751.50"></text></g><g><title>malloc (24 samples, 0.01%)</title><rect x="96.5787%" y="725" width="0.0111%" height="15" fill="rgb(207,210,34)" fg:x="208692" fg:w="24"/><text x="96.8287%" y="735.50"></text></g><g><title>&lt;sled::node::Index as core::clone::Clone&gt;::clone (59 samples, 0.03%)</title><rect x="96.5708%" y="901" width="0.0273%" height="15" fill="rgb(244,45,4)" fg:x="208675" fg:w="59"/><text x="96.8208%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.03%)</title><rect x="96.5708%" y="885" width="0.0273%" height="15" fill="rgb(252,134,50)" fg:x="208675" fg:w="59"/><text x="96.8208%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.03%)</title><rect x="96.5713%" y="869" width="0.0268%" height="15" fill="rgb(238,74,2)" fg:x="208676" fg:w="58"/><text x="96.8213%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.03%)</title><rect x="96.5713%" y="853" width="0.0268%" height="15" fill="rgb(226,58,46)" fg:x="208676" fg:w="58"/><text x="96.8213%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.03%)</title><rect x="96.5713%" y="837" width="0.0268%" height="15" fill="rgb(232,83,35)" fg:x="208676" fg:w="58"/><text x="96.8213%" y="847.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (78 samples, 0.04%)</title><rect x="96.5699%" y="933" width="0.0361%" height="15" fill="rgb(212,148,47)" fg:x="208673" fg:w="78"/><text x="96.8199%" y="943.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (76 samples, 0.04%)</title><rect x="96.5708%" y="917" width="0.0352%" height="15" fill="rgb(235,29,1)" fg:x="208675" fg:w="76"/><text x="96.8208%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (30 samples, 0.01%)</title><rect x="96.6069%" y="821" width="0.0139%" height="15" fill="rgb(247,55,37)" fg:x="208753" fg:w="30"/><text x="96.8569%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (30 samples, 0.01%)</title><rect x="96.6069%" y="805" width="0.0139%" height="15" fill="rgb(222,48,3)" fg:x="208753" fg:w="30"/><text x="96.8569%" y="815.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.01%)</title><rect x="96.6069%" y="789" width="0.0139%" height="15" fill="rgb(234,21,33)" fg:x="208753" fg:w="30"/><text x="96.8569%" y="799.50"></text></g><g><title>realloc (30 samples, 0.01%)</title><rect x="96.6069%" y="773" width="0.0139%" height="15" fill="rgb(247,178,53)" fg:x="208753" fg:w="30"/><text x="96.8569%" y="783.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="96.6074%" y="757" width="0.0134%" height="15" fill="rgb(225,75,7)" fg:x="208754" fg:w="29"/><text x="96.8574%" y="767.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="96.6078%" y="741" width="0.0130%" height="15" fill="rgb(219,199,7)" fg:x="208755" fg:w="28"/><text x="96.8578%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (32 samples, 0.01%)</title><rect x="96.6064%" y="917" width="0.0148%" height="15" fill="rgb(209,93,42)" fg:x="208752" fg:w="32"/><text x="96.8564%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="96.6064%" y="901" width="0.0148%" height="15" fill="rgb(240,175,17)" fg:x="208752" fg:w="32"/><text x="96.8564%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="96.6064%" y="885" width="0.0148%" height="15" fill="rgb(232,106,7)" fg:x="208752" fg:w="32"/><text x="96.8564%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.01%)</title><rect x="96.6064%" y="869" width="0.0148%" height="15" fill="rgb(242,106,43)" fg:x="208752" fg:w="32"/><text x="96.8564%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.01%)</title><rect x="96.6064%" y="853" width="0.0148%" height="15" fill="rgb(242,61,37)" fg:x="208752" fg:w="32"/><text x="96.8564%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.01%)</title><rect x="96.6064%" y="837" width="0.0148%" height="15" fill="rgb(205,72,10)" fg:x="208752" fg:w="32"/><text x="96.8564%" y="847.50"></text></g><g><title>sled::node::Node::parent_split (35 samples, 0.02%)</title><rect x="96.6060%" y="933" width="0.0162%" height="15" fill="rgb(214,184,36)" fg:x="208751" fg:w="35"/><text x="96.8560%" y="943.50"></text></g><g><title>sled::node::Node::split (40 samples, 0.02%)</title><rect x="96.6222%" y="933" width="0.0185%" height="15" fill="rgb(206,107,18)" fg:x="208786" fg:w="40"/><text x="96.8722%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (22 samples, 0.01%)</title><rect x="96.6578%" y="789" width="0.0102%" height="15" fill="rgb(210,75,5)" fg:x="208863" fg:w="22"/><text x="96.9078%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (22 samples, 0.01%)</title><rect x="96.6578%" y="773" width="0.0102%" height="15" fill="rgb(205,3,19)" fg:x="208863" fg:w="22"/><text x="96.9078%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (22 samples, 0.01%)</title><rect x="96.6578%" y="757" width="0.0102%" height="15" fill="rgb(207,181,42)" fg:x="208863" fg:w="22"/><text x="96.9078%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (22 samples, 0.01%)</title><rect x="96.6578%" y="741" width="0.0102%" height="15" fill="rgb(229,179,43)" fg:x="208863" fg:w="22"/><text x="96.9078%" y="751.50"></text></g><g><title>sled::pagecache::segment::Segment::insert_pid (37 samples, 0.02%)</title><rect x="96.6550%" y="837" width="0.0171%" height="15" fill="rgb(246,95,30)" fg:x="208857" fg:w="37"/><text x="96.9050%" y="847.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (33 samples, 0.02%)</title><rect x="96.6569%" y="821" width="0.0153%" height="15" fill="rgb(234,144,45)" fg:x="208861" fg:w="33"/><text x="96.9069%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (33 samples, 0.02%)</title><rect x="96.6569%" y="805" width="0.0153%" height="15" fill="rgb(250,54,25)" fg:x="208861" fg:w="33"/><text x="96.9069%" y="815.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_link (40 samples, 0.02%)</title><rect x="96.6541%" y="853" width="0.0185%" height="15" fill="rgb(215,195,40)" fg:x="208855" fg:w="40"/><text x="96.9041%" y="863.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::apply_op (46 samples, 0.02%)</title><rect x="96.6518%" y="869" width="0.0213%" height="15" fill="rgb(233,188,42)" fg:x="208850" fg:w="46"/><text x="96.9018%" y="879.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (55 samples, 0.03%)</title><rect x="96.6513%" y="885" width="0.0255%" height="15" fill="rgb(247,227,35)" fg:x="208849" fg:w="55"/><text x="96.9013%" y="895.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (26 samples, 0.01%)</title><rect x="96.6768%" y="885" width="0.0120%" height="15" fill="rgb(249,124,27)" fg:x="208904" fg:w="26"/><text x="96.9268%" y="895.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (26 samples, 0.01%)</title><rect x="96.6768%" y="869" width="0.0120%" height="15" fill="rgb(219,207,25)" fg:x="208904" fg:w="26"/><text x="96.9268%" y="879.50"></text></g><g><title>sled::pagecache::PageCache::allocate (107 samples, 0.05%)</title><rect x="96.6407%" y="933" width="0.0495%" height="15" fill="rgb(241,216,47)" fg:x="208826" fg:w="107"/><text x="96.8907%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::allocate_inner (107 samples, 0.05%)</title><rect x="96.6407%" y="917" width="0.0495%" height="15" fill="rgb(233,82,50)" fg:x="208826" fg:w="107"/><text x="96.8907%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (99 samples, 0.05%)</title><rect x="96.6444%" y="901" width="0.0458%" height="15" fill="rgb(232,63,2)" fg:x="208834" fg:w="99"/><text x="96.8944%" y="911.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="96.7379%" y="821" width="0.0213%" height="15" fill="rgb(236,184,28)" fg:x="209036" fg:w="46"/><text x="96.9879%" y="831.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="96.7439%" y="805" width="0.0153%" height="15" fill="rgb(254,63,27)" fg:x="209049" fg:w="33"/><text x="96.9939%" y="815.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="96.7439%" y="789" width="0.0153%" height="15" fill="rgb(253,106,28)" fg:x="209049" fg:w="33"/><text x="96.9939%" y="799.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="96.7443%" y="773" width="0.0148%" height="15" fill="rgb(225,141,39)" fg:x="209050" fg:w="32"/><text x="96.9943%" y="783.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="96.7448%" y="757" width="0.0143%" height="15" fill="rgb(222,157,20)" fg:x="209051" fg:w="31"/><text x="96.9948%" y="767.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="96.7448%" y="741" width="0.0143%" height="15" fill="rgb(210,190,9)" fg:x="209051" fg:w="31"/><text x="96.9948%" y="751.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="96.7476%" y="725" width="0.0116%" height="15" fill="rgb(242,167,7)" fg:x="209057" fg:w="25"/><text x="96.9976%" y="735.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (93 samples, 0.04%)</title><rect x="96.7193%" y="837" width="0.0430%" height="15" fill="rgb(227,82,41)" fg:x="208996" fg:w="93"/><text x="96.9693%" y="847.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (122 samples, 0.06%)</title><rect x="96.7166%" y="853" width="0.0565%" height="15" fill="rgb(222,131,13)" fg:x="208990" fg:w="122"/><text x="96.9666%" y="863.50"></text></g><g><title>&lt;u64 as sled::serialization::Serialize&gt;::serialize_into (23 samples, 0.01%)</title><rect x="96.7624%" y="837" width="0.0106%" height="15" fill="rgb(221,98,26)" fg:x="209089" fg:w="23"/><text x="97.0124%" y="847.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (127 samples, 0.06%)</title><rect x="96.7166%" y="869" width="0.0588%" height="15" fill="rgb(251,63,52)" fg:x="208990" fg:w="127"/><text x="96.9666%" y="879.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (146 samples, 0.07%)</title><rect x="96.7106%" y="901" width="0.0676%" height="15" fill="rgb(246,25,43)" fg:x="208977" fg:w="146"/><text x="96.9606%" y="911.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (146 samples, 0.07%)</title><rect x="96.7106%" y="885" width="0.0676%" height="15" fill="rgb(247,167,15)" fg:x="208977" fg:w="146"/><text x="96.9606%" y="895.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (199 samples, 0.09%)</title><rect x="96.6920%" y="917" width="0.0921%" height="15" fill="rgb(240,104,42)" fg:x="208937" fg:w="199"/><text x="96.9420%" y="927.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (88 samples, 0.04%)</title><rect x="96.7920%" y="789" width="0.0407%" height="15" fill="rgb(224,54,6)" fg:x="209153" fg:w="88"/><text x="97.0420%" y="799.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (87 samples, 0.04%)</title><rect x="96.7925%" y="773" width="0.0403%" height="15" fill="rgb(244,108,35)" fg:x="209154" fg:w="87"/><text x="97.0425%" y="783.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (84 samples, 0.04%)</title><rect x="96.7939%" y="757" width="0.0389%" height="15" fill="rgb(216,154,2)" fg:x="209157" fg:w="84"/><text x="97.0439%" y="767.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (99 samples, 0.05%)</title><rect x="96.7906%" y="901" width="0.0458%" height="15" fill="rgb(222,8,47)" fg:x="209150" fg:w="99"/><text x="97.0406%" y="911.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (96 samples, 0.04%)</title><rect x="96.7920%" y="885" width="0.0444%" height="15" fill="rgb(252,93,1)" fg:x="209153" fg:w="96"/><text x="97.0420%" y="895.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (96 samples, 0.04%)</title><rect x="96.7920%" y="869" width="0.0444%" height="15" fill="rgb(223,226,51)" fg:x="209153" fg:w="96"/><text x="97.0420%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96 samples, 0.04%)</title><rect x="96.7920%" y="853" width="0.0444%" height="15" fill="rgb(206,147,9)" fg:x="209153" fg:w="96"/><text x="97.0420%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96 samples, 0.04%)</title><rect x="96.7920%" y="837" width="0.0444%" height="15" fill="rgb(248,180,41)" fg:x="209153" fg:w="96"/><text x="97.0420%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (96 samples, 0.04%)</title><rect x="96.7920%" y="821" width="0.0444%" height="15" fill="rgb(209,47,50)" fg:x="209153" fg:w="96"/><text x="97.0420%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96 samples, 0.04%)</title><rect x="96.7920%" y="805" width="0.0444%" height="15" fill="rgb(243,65,31)" fg:x="209153" fg:w="96"/><text x="97.0420%" y="815.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (27 samples, 0.01%)</title><rect x="96.8434%" y="885" width="0.0125%" height="15" fill="rgb(228,128,1)" fg:x="209264" fg:w="27"/><text x="97.0934%" y="895.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_replace (24 samples, 0.01%)</title><rect x="96.8448%" y="869" width="0.0111%" height="15" fill="rgb(231,192,16)" fg:x="209267" fg:w="24"/><text x="97.0948%" y="879.50"></text></g><g><title>[libc.so.6] (39 samples, 0.02%)</title><rect x="96.8637%" y="805" width="0.0180%" height="15" fill="rgb(224,26,40)" fg:x="209308" fg:w="39"/><text x="97.1137%" y="815.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (48 samples, 0.02%)</title><rect x="96.8605%" y="837" width="0.0222%" height="15" fill="rgb(214,192,17)" fg:x="209301" fg:w="48"/><text x="97.1105%" y="847.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (48 samples, 0.02%)</title><rect x="96.8605%" y="821" width="0.0222%" height="15" fill="rgb(225,147,18)" fg:x="209301" fg:w="48"/><text x="97.1105%" y="831.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (52 samples, 0.02%)</title><rect x="96.8600%" y="853" width="0.0241%" height="15" fill="rgb(205,35,11)" fg:x="209300" fg:w="52"/><text x="97.1100%" y="863.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (62 samples, 0.03%)</title><rect x="96.8559%" y="885" width="0.0287%" height="15" fill="rgb(242,40,42)" fg:x="209291" fg:w="62"/><text x="97.1059%" y="895.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (62 samples, 0.03%)</title><rect x="96.8559%" y="869" width="0.0287%" height="15" fill="rgb(250,170,13)" fg:x="209291" fg:w="62"/><text x="97.1059%" y="879.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (114 samples, 0.05%)</title><rect x="96.8369%" y="901" width="0.0528%" height="15" fill="rgb(240,161,28)" fg:x="209250" fg:w="114"/><text x="97.0869%" y="911.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (241 samples, 0.11%)</title><rect x="96.7841%" y="917" width="0.1115%" height="15" fill="rgb(245,179,12)" fg:x="209136" fg:w="241"/><text x="97.0341%" y="927.50"></text></g><g><title>sled::tree::Tree::split_node (719 samples, 0.33%)</title><rect x="96.5689%" y="949" width="0.3327%" height="15" fill="rgb(250,92,32)" fg:x="208671" fg:w="719"/><text x="96.8189%" y="959.50"></text></g><g><title>sled::pagecache::PageCache::replace (457 samples, 0.21%)</title><rect x="96.6902%" y="933" width="0.2115%" height="15" fill="rgb(233,10,40)" fg:x="208933" fg:w="457"/><text x="96.9402%" y="943.50"></text></g><g><title>sled::lru::Lru::accessed (42 samples, 0.02%)</title><rect x="96.9100%" y="917" width="0.0194%" height="15" fill="rgb(217,98,1)" fg:x="209408" fg:w="42"/><text x="97.1600%" y="927.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (1,487 samples, 0.69%)</title><rect x="96.2524%" y="1013" width="0.6882%" height="15" fill="rgb(238,202,7)" fg:x="207987" fg:w="1487"/><text x="96.5024%" y="1023.50"></text></g><g><title>sled::tree::Tree::insert (1,464 samples, 0.68%)</title><rect x="96.2630%" y="997" width="0.6775%" height="15" fill="rgb(222,91,3)" fg:x="208010" fg:w="1464"/><text x="96.5130%" y="1007.50"></text></g><g><title>sled::tree::Tree::insert_inner (1,347 samples, 0.62%)</title><rect x="96.3172%" y="981" width="0.6234%" height="15" fill="rgb(211,170,49)" fg:x="208127" fg:w="1347"/><text x="96.5672%" y="991.50"></text></g><g><title>sled::tree::Tree::view_for_key (878 samples, 0.41%)</title><rect x="96.5342%" y="965" width="0.4063%" height="15" fill="rgb(253,139,18)" fg:x="208596" fg:w="878"/><text x="96.7842%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_pid (84 samples, 0.04%)</title><rect x="96.9017%" y="949" width="0.0389%" height="15" fill="rgb(222,4,43)" fg:x="209390" fg:w="84"/><text x="97.1517%" y="959.50"></text></g><g><title>sled::pagecache::PageCache::get (76 samples, 0.04%)</title><rect x="96.9054%" y="933" width="0.0352%" height="15" fill="rgb(207,205,12)" fg:x="209398" fg:w="76"/><text x="97.1554%" y="943.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::update_block_index (1,501 samples, 0.69%)</title><rect x="96.2505%" y="1029" width="0.6946%" height="15" fill="rgb(216,159,46)" fg:x="207983" fg:w="1501"/><text x="96.5005%" y="1039.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (51 samples, 0.02%)</title><rect x="96.9827%" y="869" width="0.0236%" height="15" fill="rgb(236,115,1)" fg:x="209565" fg:w="51"/><text x="97.2327%" y="879.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (187 samples, 0.09%)</title><rect x="96.9526%" y="885" width="0.0865%" height="15" fill="rgb(251,35,33)" fg:x="209500" fg:w="187"/><text x="97.2026%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (71 samples, 0.03%)</title><rect x="97.0063%" y="869" width="0.0329%" height="15" fill="rgb(248,62,51)" fg:x="209616" fg:w="71"/><text x="97.2563%" y="879.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (189 samples, 0.09%)</title><rect x="96.9521%" y="965" width="0.0875%" height="15" fill="rgb(254,180,19)" fg:x="209499" fg:w="189"/><text x="97.2021%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (189 samples, 0.09%)</title><rect x="96.9521%" y="949" width="0.0875%" height="15" fill="rgb(217,100,32)" fg:x="209499" fg:w="189"/><text x="97.2021%" y="959.50"></text></g><g><title>std::io::Write::write_all (189 samples, 0.09%)</title><rect x="96.9521%" y="933" width="0.0875%" height="15" fill="rgb(224,71,22)" fg:x="209499" fg:w="189"/><text x="97.2021%" y="943.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (188 samples, 0.09%)</title><rect x="96.9526%" y="917" width="0.0870%" height="15" fill="rgb(251,185,33)" fg:x="209500" fg:w="188"/><text x="97.2026%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (188 samples, 0.09%)</title><rect x="96.9526%" y="901" width="0.0870%" height="15" fill="rgb(209,75,48)" fg:x="209500" fg:w="188"/><text x="97.2026%" y="911.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (191 samples, 0.09%)</title><rect x="96.9517%" y="997" width="0.0884%" height="15" fill="rgb(253,190,16)" fg:x="209498" fg:w="191"/><text x="97.2017%" y="1007.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (191 samples, 0.09%)</title><rect x="96.9517%" y="981" width="0.0884%" height="15" fill="rgb(226,140,1)" fg:x="209498" fg:w="191"/><text x="97.2017%" y="991.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (236 samples, 0.11%)</title><rect x="96.9475%" y="1013" width="0.1092%" height="15" fill="rgb(206,75,30)" fg:x="209489" fg:w="236"/><text x="97.1975%" y="1023.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (23 samples, 0.01%)</title><rect x="97.0461%" y="997" width="0.0106%" height="15" fill="rgb(231,208,37)" fg:x="209702" fg:w="23"/><text x="97.2961%" y="1007.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (23 samples, 0.01%)</title><rect x="97.0461%" y="981" width="0.0106%" height="15" fill="rgb(238,136,40)" fg:x="209702" fg:w="23"/><text x="97.2961%" y="991.50"></text></g><g><title>std::io::Write::write_all (23 samples, 0.01%)</title><rect x="97.0461%" y="965" width="0.0106%" height="15" fill="rgb(247,137,17)" fg:x="209702" fg:w="23"/><text x="97.2961%" y="975.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (44 samples, 0.02%)</title><rect x="97.0919%" y="933" width="0.0204%" height="15" fill="rgb(240,60,40)" fg:x="209801" fg:w="44"/><text x="97.3419%" y="943.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (179 samples, 0.08%)</title><rect x="97.0595%" y="949" width="0.0828%" height="15" fill="rgb(236,68,50)" fg:x="209731" fg:w="179"/><text x="97.3095%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (65 samples, 0.03%)</title><rect x="97.1122%" y="933" width="0.0301%" height="15" fill="rgb(230,42,12)" fg:x="209845" fg:w="65"/><text x="97.3622%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (190 samples, 0.09%)</title><rect x="97.0590%" y="965" width="0.0879%" height="15" fill="rgb(219,16,16)" fg:x="209730" fg:w="190"/><text x="97.3090%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (194 samples, 0.09%)</title><rect x="97.0586%" y="981" width="0.0898%" height="15" fill="rgb(220,38,35)" fg:x="209729" fg:w="194"/><text x="97.3086%" y="991.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (50 samples, 0.02%)</title><rect x="97.1784%" y="917" width="0.0231%" height="15" fill="rgb(228,33,1)" fg:x="209988" fg:w="50"/><text x="97.4284%" y="927.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (182 samples, 0.08%)</title><rect x="97.1488%" y="933" width="0.0842%" height="15" fill="rgb(241,46,31)" fg:x="209924" fg:w="182"/><text x="97.3988%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (68 samples, 0.03%)</title><rect x="97.2016%" y="917" width="0.0315%" height="15" fill="rgb(232,58,20)" fg:x="210038" fg:w="68"/><text x="97.4516%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (192 samples, 0.09%)</title><rect x="97.1488%" y="949" width="0.0889%" height="15" fill="rgb(206,228,53)" fg:x="209924" fg:w="192"/><text x="97.3988%" y="959.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (198 samples, 0.09%)</title><rect x="97.1488%" y="965" width="0.0916%" height="15" fill="rgb(206,88,33)" fg:x="209924" fg:w="198"/><text x="97.3988%" y="975.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (641 samples, 0.30%)</title><rect x="96.9456%" y="1029" width="0.2966%" height="15" fill="rgb(238,69,7)" fg:x="209485" fg:w="641"/><text x="97.1956%" y="1039.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (399 samples, 0.18%)</title><rect x="97.0576%" y="1013" width="0.1846%" height="15" fill="rgb(250,21,46)" fg:x="209727" fg:w="399"/><text x="97.3076%" y="1023.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (397 samples, 0.18%)</title><rect x="97.0586%" y="997" width="0.1837%" height="15" fill="rgb(215,212,21)" fg:x="209729" fg:w="397"/><text x="97.3086%" y="1007.50"></text></g><g><title>bitcoin_hashes::Hash::hash (203 samples, 0.09%)</title><rect x="97.1483%" y="981" width="0.0939%" height="15" fill="rgb(211,35,12)" fg:x="209923" fg:w="203"/><text x="97.3983%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::pagecache::CacheInfo&gt;&gt; (29 samples, 0.01%)</title><rect x="97.3085%" y="597" width="0.0134%" height="15" fill="rgb(231,184,16)" fg:x="210269" fg:w="29"/><text x="97.5585%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;sled::pagecache::CacheInfo&gt;&gt; (29 samples, 0.01%)</title><rect x="97.3085%" y="581" width="0.0134%" height="15" fill="rgb(242,140,15)" fg:x="210269" fg:w="29"/><text x="97.5585%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="97.3085%" y="565" width="0.0134%" height="15" fill="rgb(220,37,14)" fg:x="210269" fg:w="29"/><text x="97.5585%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.01%)</title><rect x="97.3085%" y="549" width="0.0134%" height="15" fill="rgb(223,146,22)" fg:x="210269" fg:w="29"/><text x="97.5585%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.01%)</title><rect x="97.3085%" y="533" width="0.0134%" height="15" fill="rgb(216,132,15)" fg:x="210269" fg:w="29"/><text x="97.5585%" y="543.50"></text></g><g><title>cfree (29 samples, 0.01%)</title><rect x="97.3085%" y="517" width="0.0134%" height="15" fill="rgb(248,83,5)" fg:x="210269" fg:w="29"/><text x="97.5585%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (340 samples, 0.16%)</title><rect x="97.3621%" y="501" width="0.1573%" height="15" fill="rgb(231,206,48)" fg:x="210385" fg:w="340"/><text x="97.6121%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (340 samples, 0.16%)</title><rect x="97.3621%" y="485" width="0.1573%" height="15" fill="rgb(253,185,37)" fg:x="210385" fg:w="340"/><text x="97.6121%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (336 samples, 0.16%)</title><rect x="97.3640%" y="469" width="0.1555%" height="15" fill="rgb(208,21,44)" fg:x="210389" fg:w="336"/><text x="97.6140%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (336 samples, 0.16%)</title><rect x="97.3640%" y="453" width="0.1555%" height="15" fill="rgb(236,125,4)" fg:x="210389" fg:w="336"/><text x="97.6140%" y="463.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (288 samples, 0.13%)</title><rect x="97.3862%" y="437" width="0.1333%" height="15" fill="rgb(226,134,25)" fg:x="210437" fg:w="288"/><text x="97.6362%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (382 samples, 0.18%)</title><rect x="97.3524%" y="549" width="0.1768%" height="15" fill="rgb(250,201,12)" fg:x="210364" fg:w="382"/><text x="97.6024%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (361 samples, 0.17%)</title><rect x="97.3621%" y="533" width="0.1671%" height="15" fill="rgb(225,92,18)" fg:x="210385" fg:w="361"/><text x="97.6121%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (361 samples, 0.17%)</title><rect x="97.3621%" y="517" width="0.1671%" height="15" fill="rgb(227,35,22)" fg:x="210385" fg:w="361"/><text x="97.6121%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (502 samples, 0.23%)</title><rect x="97.2987%" y="693" width="0.2323%" height="15" fill="rgb(214,180,52)" fg:x="210248" fg:w="502"/><text x="97.5487%" y="703.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (502 samples, 0.23%)</title><rect x="97.2987%" y="677" width="0.2323%" height="15" fill="rgb(233,55,38)" fg:x="210248" fg:w="502"/><text x="97.5487%" y="687.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (502 samples, 0.23%)</title><rect x="97.2987%" y="661" width="0.2323%" height="15" fill="rgb(249,171,43)" fg:x="210248" fg:w="502"/><text x="97.5487%" y="671.50"></text></g><g><title>core::mem::drop (502 samples, 0.23%)</title><rect x="97.2987%" y="645" width="0.2323%" height="15" fill="rgb(239,87,2)" fg:x="210248" fg:w="502"/><text x="97.5487%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (502 samples, 0.23%)</title><rect x="97.2987%" y="629" width="0.2323%" height="15" fill="rgb(248,141,5)" fg:x="210248" fg:w="502"/><text x="97.5487%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (501 samples, 0.23%)</title><rect x="97.2992%" y="613" width="0.2319%" height="15" fill="rgb(238,33,42)" fg:x="210249" fg:w="501"/><text x="97.5492%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (452 samples, 0.21%)</title><rect x="97.3219%" y="597" width="0.2092%" height="15" fill="rgb(231,57,19)" fg:x="210298" fg:w="452"/><text x="97.5719%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (426 samples, 0.20%)</title><rect x="97.3339%" y="581" width="0.1971%" height="15" fill="rgb(214,78,53)" fg:x="210324" fg:w="426"/><text x="97.5839%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (426 samples, 0.20%)</title><rect x="97.3339%" y="565" width="0.1971%" height="15" fill="rgb(206,132,29)" fg:x="210324" fg:w="426"/><text x="97.5839%" y="575.50"></text></g><g><title>core::mem::drop (532 samples, 0.25%)</title><rect x="97.2913%" y="821" width="0.2462%" height="15" fill="rgb(248,174,31)" fg:x="210232" fg:w="532"/><text x="97.5413%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (532 samples, 0.25%)</title><rect x="97.2913%" y="805" width="0.2462%" height="15" fill="rgb(221,87,13)" fg:x="210232" fg:w="532"/><text x="97.5413%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (532 samples, 0.25%)</title><rect x="97.2913%" y="789" width="0.2462%" height="15" fill="rgb(223,197,17)" fg:x="210232" fg:w="532"/><text x="97.5413%" y="799.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (532 samples, 0.25%)</title><rect x="97.2913%" y="773" width="0.2462%" height="15" fill="rgb(220,144,50)" fg:x="210232" fg:w="532"/><text x="97.5413%" y="783.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (530 samples, 0.25%)</title><rect x="97.2923%" y="757" width="0.2453%" height="15" fill="rgb(244,201,11)" fg:x="210234" fg:w="530"/><text x="97.5423%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (516 samples, 0.24%)</title><rect x="97.2987%" y="741" width="0.2388%" height="15" fill="rgb(249,81,34)" fg:x="210248" fg:w="516"/><text x="97.5487%" y="751.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (516 samples, 0.24%)</title><rect x="97.2987%" y="725" width="0.2388%" height="15" fill="rgb(205,161,12)" fg:x="210248" fg:w="516"/><text x="97.5487%" y="735.50"></text></g><g><title>core::mem::drop (516 samples, 0.24%)</title><rect x="97.2987%" y="709" width="0.2388%" height="15" fill="rgb(252,139,50)" fg:x="210248" fg:w="516"/><text x="97.5487%" y="719.50"></text></g><g><title>sled::pin (547 samples, 0.25%)</title><rect x="97.2876%" y="965" width="0.2531%" height="15" fill="rgb(205,169,14)" fg:x="210224" fg:w="547"/><text x="97.5376%" y="975.50"></text></g><g><title>crossbeam_epoch::default::pin (546 samples, 0.25%)</title><rect x="97.2881%" y="949" width="0.2527%" height="15" fill="rgb(248,198,33)" fg:x="210225" fg:w="546"/><text x="97.5381%" y="959.50"></text></g><g><title>crossbeam_epoch::default::with_handle (546 samples, 0.25%)</title><rect x="97.2881%" y="933" width="0.2527%" height="15" fill="rgb(236,23,21)" fg:x="210225" fg:w="546"/><text x="97.5381%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (546 samples, 0.25%)</title><rect x="97.2881%" y="917" width="0.2527%" height="15" fill="rgb(231,13,38)" fg:x="210225" fg:w="546"/><text x="97.5381%" y="927.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (546 samples, 0.25%)</title><rect x="97.2881%" y="901" width="0.2527%" height="15" fill="rgb(239,139,21)" fg:x="210225" fg:w="546"/><text x="97.5381%" y="911.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (546 samples, 0.25%)</title><rect x="97.2881%" y="885" width="0.2527%" height="15" fill="rgb(222,164,45)" fg:x="210225" fg:w="546"/><text x="97.5381%" y="895.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (546 samples, 0.25%)</title><rect x="97.2881%" y="869" width="0.2527%" height="15" fill="rgb(230,52,27)" fg:x="210225" fg:w="546"/><text x="97.5381%" y="879.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (546 samples, 0.25%)</title><rect x="97.2881%" y="853" width="0.2527%" height="15" fill="rgb(227,143,42)" fg:x="210225" fg:w="546"/><text x="97.5381%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (540 samples, 0.25%)</title><rect x="97.2909%" y="837" width="0.2499%" height="15" fill="rgb(249,127,1)" fg:x="210231" fg:w="540"/><text x="97.5409%" y="847.50"></text></g><g><title>&lt;sled::ivec::IVec as core::ops::deref::Deref&gt;::deref (59 samples, 0.03%)</title><rect x="97.5579%" y="901" width="0.0273%" height="15" fill="rgb(243,107,26)" fg:x="210808" fg:w="59"/><text x="97.8079%" y="911.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (59 samples, 0.03%)</title><rect x="97.5579%" y="885" width="0.0273%" height="15" fill="rgb(225,7,45)" fg:x="210808" fg:w="59"/><text x="97.8079%" y="895.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key (171 samples, 0.08%)</title><rect x="97.5556%" y="949" width="0.0791%" height="15" fill="rgb(241,88,38)" fg:x="210803" fg:w="171"/><text x="97.8056%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (169 samples, 0.08%)</title><rect x="97.5565%" y="933" width="0.0782%" height="15" fill="rgb(226,121,9)" fg:x="210805" fg:w="169"/><text x="97.8065%" y="943.50"></text></g><g><title>sled::node::Node::leaf_pair_for_key::{{closure}} (166 samples, 0.08%)</title><rect x="97.5579%" y="917" width="0.0768%" height="15" fill="rgb(253,60,29)" fg:x="210808" fg:w="166"/><text x="97.8079%" y="927.50"></text></g><g><title>sled::fastcmp::fastcmp (107 samples, 0.05%)</title><rect x="97.5852%" y="901" width="0.0495%" height="15" fill="rgb(244,181,39)" fg:x="210867" fg:w="107"/><text x="97.8352%" y="911.50"></text></g><g><title>[libc.so.6] (106 samples, 0.05%)</title><rect x="97.5857%" y="885" width="0.0491%" height="15" fill="rgb(252,203,31)" fg:x="210868" fg:w="106"/><text x="97.8357%" y="895.50"></text></g><g><title>&lt;sled::ivec::IVec as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (68 samples, 0.03%)</title><rect x="97.6708%" y="885" width="0.0315%" height="15" fill="rgb(224,120,8)" fg:x="211052" fg:w="68"/><text x="97.9208%" y="895.50"></text></g><g><title>[libc.so.6] (39 samples, 0.02%)</title><rect x="97.7139%" y="869" width="0.0180%" height="15" fill="rgb(205,171,54)" fg:x="211145" fg:w="39"/><text x="97.9639%" y="879.50"></text></g><g><title>sled::binary_search::binary_search_lub (141 samples, 0.07%)</title><rect x="97.6671%" y="917" width="0.0653%" height="15" fill="rgb(235,89,11)" fg:x="211044" fg:w="141"/><text x="97.9171%" y="927.50"></text></g><g><title>sled::binary_search::binary_search (139 samples, 0.06%)</title><rect x="97.6680%" y="901" width="0.0643%" height="15" fill="rgb(212,180,28)" fg:x="211046" fg:w="139"/><text x="97.9180%" y="911.50"></text></g><g><title>sled::fastcmp::fastcmp (44 samples, 0.02%)</title><rect x="97.7120%" y="885" width="0.0204%" height="15" fill="rgb(247,84,49)" fg:x="211141" fg:w="44"/><text x="97.9620%" y="895.50"></text></g><g><title>sled::node::Node::index_next_node (172 samples, 0.08%)</title><rect x="97.6537%" y="933" width="0.0796%" height="15" fill="rgb(236,187,52)" fg:x="211015" fg:w="172"/><text x="97.9037%" y="943.50"></text></g><g><title>sled::lru::AccessQueue::push (38 samples, 0.02%)</title><rect x="97.7606%" y="885" width="0.0176%" height="15" fill="rgb(227,24,15)" fg:x="211246" fg:w="38"/><text x="98.0106%" y="895.50"></text></g><g><title>sled::lru::Lru::accessed (66 samples, 0.03%)</title><rect x="97.7569%" y="901" width="0.0305%" height="15" fill="rgb(227,211,13)" fg:x="211238" fg:w="66"/><text x="98.0069%" y="911.50"></text></g><g><title>sled::pagecache::Page::is_free (120 samples, 0.06%)</title><rect x="97.7874%" y="901" width="0.0555%" height="15" fill="rgb(245,52,14)" fg:x="211304" fg:w="120"/><text x="98.0374%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (61 samples, 0.03%)</title><rect x="97.8147%" y="885" width="0.0282%" height="15" fill="rgb(225,185,13)" fg:x="211363" fg:w="61"/><text x="98.0647%" y="895.50"></text></g><g><title>crossbeam_epoch::atomic::Shared&lt;T&gt;::is_null (50 samples, 0.02%)</title><rect x="97.8495%" y="885" width="0.0231%" height="15" fill="rgb(217,160,29)" fg:x="211438" fg:w="50"/><text x="98.0995%" y="895.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (1,318 samples, 0.61%)</title><rect x="97.2640%" y="997" width="0.6099%" height="15" fill="rgb(216,115,53)" fg:x="210173" fg:w="1318"/><text x="97.5140%" y="1007.50"></text></g><g><title>sled::tree::Tree::get (1,290 samples, 0.60%)</title><rect x="97.2770%" y="981" width="0.5970%" height="15" fill="rgb(236,99,5)" fg:x="210201" fg:w="1290"/><text x="97.5270%" y="991.50"></text></g><g><title>sled::tree::Tree::get_inner (720 samples, 0.33%)</title><rect x="97.5408%" y="965" width="0.3332%" height="15" fill="rgb(222,60,38)" fg:x="210771" fg:w="720"/><text x="97.7908%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_key (517 samples, 0.24%)</title><rect x="97.6347%" y="949" width="0.2393%" height="15" fill="rgb(212,82,22)" fg:x="210974" fg:w="517"/><text x="97.8847%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_pid (302 samples, 0.14%)</title><rect x="97.7342%" y="933" width="0.1398%" height="15" fill="rgb(214,48,28)" fg:x="211189" fg:w="302"/><text x="97.9842%" y="943.50"></text></g><g><title>sled::pagecache::PageCache::get (263 samples, 0.12%)</title><rect x="97.7523%" y="917" width="0.1217%" height="15" fill="rgb(245,196,50)" fg:x="211228" fg:w="263"/><text x="98.0023%" y="927.50"></text></g><g><title>sled::pagecache::pagetable::PageTable::get (56 samples, 0.03%)</title><rect x="97.8481%" y="901" width="0.0259%" height="15" fill="rgb(225,159,46)" fg:x="211435" fg:w="56"/><text x="98.0981%" y="911.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_header (1,371 samples, 0.63%)</title><rect x="97.2469%" y="1013" width="0.6345%" height="15" fill="rgb(207,195,48)" fg:x="210136" fg:w="1371"/><text x="97.4969%" y="1023.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (1,376 samples, 0.64%)</title><rect x="97.2460%" y="1029" width="0.6368%" height="15" fill="rgb(240,73,3)" fg:x="210134" fg:w="1376"/><text x="97.4960%" y="1039.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (85 samples, 0.04%)</title><rect x="97.8911%" y="853" width="0.0393%" height="15" fill="rgb(245,57,23)" fg:x="211528" fg:w="85"/><text x="98.1411%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (29 samples, 0.01%)</title><rect x="97.9170%" y="837" width="0.0134%" height="15" fill="rgb(240,75,18)" fg:x="211584" fg:w="29"/><text x="98.1670%" y="847.50"></text></g><g><title>bitcoin_hashes::impls::&lt;impl std::io::Write for bitcoin_hashes::sha256::HashEngine&gt;::write (89 samples, 0.04%)</title><rect x="97.8906%" y="885" width="0.0412%" height="15" fill="rgb(238,168,12)" fg:x="211527" fg:w="89"/><text x="98.1406%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (88 samples, 0.04%)</title><rect x="97.8911%" y="869" width="0.0407%" height="15" fill="rgb(226,20,40)" fg:x="211528" fg:w="88"/><text x="98.1411%" y="879.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (91 samples, 0.04%)</title><rect x="97.8902%" y="933" width="0.0421%" height="15" fill="rgb(224,130,35)" fg:x="211526" fg:w="91"/><text x="98.1402%" y="943.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (91 samples, 0.04%)</title><rect x="97.8902%" y="917" width="0.0421%" height="15" fill="rgb(225,63,41)" fg:x="211526" fg:w="91"/><text x="98.1402%" y="927.50"></text></g><g><title>std::io::Write::write_all (91 samples, 0.04%)</title><rect x="97.8902%" y="901" width="0.0421%" height="15" fill="rgb(219,3,3)" fg:x="211526" fg:w="91"/><text x="98.1402%" y="911.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (92 samples, 0.04%)</title><rect x="97.8902%" y="965" width="0.0426%" height="15" fill="rgb(218,157,4)" fg:x="211526" fg:w="92"/><text x="98.1402%" y="975.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (92 samples, 0.04%)</title><rect x="97.8902%" y="949" width="0.0426%" height="15" fill="rgb(232,76,36)" fg:x="211526" fg:w="92"/><text x="98.1402%" y="959.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (109 samples, 0.05%)</title><rect x="97.8883%" y="981" width="0.0504%" height="15" fill="rgb(247,36,0)" fg:x="211522" fg:w="109"/><text x="98.1383%" y="991.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (62 samples, 0.03%)</title><rect x="97.9416%" y="917" width="0.0287%" height="15" fill="rgb(205,2,34)" fg:x="211637" fg:w="62"/><text x="98.1916%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (66 samples, 0.03%)</title><rect x="97.9411%" y="933" width="0.0305%" height="15" fill="rgb(239,136,13)" fg:x="211636" fg:w="66"/><text x="98.1911%" y="943.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (70 samples, 0.03%)</title><rect x="97.9406%" y="949" width="0.0324%" height="15" fill="rgb(253,122,12)" fg:x="211635" fg:w="70"/><text x="98.1906%" y="959.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (66 samples, 0.03%)</title><rect x="97.9735%" y="901" width="0.0305%" height="15" fill="rgb(222,174,7)" fg:x="211706" fg:w="66"/><text x="98.2235%" y="911.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (69 samples, 0.03%)</title><rect x="97.9730%" y="917" width="0.0319%" height="15" fill="rgb(208,191,42)" fg:x="211705" fg:w="69"/><text x="98.2230%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (70 samples, 0.03%)</title><rect x="97.9730%" y="933" width="0.0324%" height="15" fill="rgb(237,212,15)" fg:x="211705" fg:w="70"/><text x="98.2230%" y="943.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (255 samples, 0.12%)</title><rect x="97.8883%" y="997" width="0.1180%" height="15" fill="rgb(215,65,20)" fg:x="211522" fg:w="255"/><text x="98.1383%" y="1007.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin_hashes::Hash&gt;::from_engine (145 samples, 0.07%)</title><rect x="97.9392%" y="981" width="0.0671%" height="15" fill="rgb(232,103,11)" fg:x="211632" fg:w="145"/><text x="98.1892%" y="991.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (143 samples, 0.07%)</title><rect x="97.9402%" y="965" width="0.0662%" height="15" fill="rgb(235,148,18)" fg:x="211634" fg:w="143"/><text x="98.1902%" y="975.50"></text></g><g><title>bitcoin_hashes::Hash::hash (72 samples, 0.03%)</title><rect x="97.9730%" y="949" width="0.0333%" height="15" fill="rgb(240,173,7)" fg:x="211705" fg:w="72"/><text x="98.2230%" y="959.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::validate_pow (260 samples, 0.12%)</title><rect x="97.8879%" y="1013" width="0.1203%" height="15" fill="rgb(228,182,25)" fg:x="211521" fg:w="260"/><text x="98.1379%" y="1023.50"></text></g><g><title>bitcoin::consensus::encode::deserialize (32 samples, 0.01%)</title><rect x="98.0100%" y="981" width="0.0148%" height="15" fill="rgb(247,3,52)" fg:x="211785" fg:w="32"/><text x="98.2600%" y="991.50"></text></g><g><title>bitcoin::consensus::encode::deserialize_partial (30 samples, 0.01%)</title><rect x="98.0110%" y="965" width="0.0139%" height="15" fill="rgb(226,155,8)" fg:x="211787" fg:w="30"/><text x="98.2610%" y="975.50"></text></g><g><title>bitcoin::consensus::encode::Decodable::consensus_decode_from_finite_reader (29 samples, 0.01%)</title><rect x="98.0114%" y="949" width="0.0134%" height="15" fill="rgb(243,195,38)" fg:x="211788" fg:w="29"/><text x="98.2614%" y="959.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::DiskBlockHeader as bitcoin::consensus::encode::Decodable&gt;::consensus_decode (29 samples, 0.01%)</title><rect x="98.0114%" y="933" width="0.0134%" height="15" fill="rgb(254,181,33)" fg:x="211788" fg:w="29"/><text x="98.2614%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.02%)</title><rect x="98.0522%" y="485" width="0.0171%" height="15" fill="rgb(232,98,23)" fg:x="211876" fg:w="37"/><text x="98.3022%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (37 samples, 0.02%)</title><rect x="98.0522%" y="469" width="0.0171%" height="15" fill="rgb(205,23,10)" fg:x="211876" fg:w="37"/><text x="98.3022%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (36 samples, 0.02%)</title><rect x="98.0526%" y="453" width="0.0167%" height="15" fill="rgb(212,124,38)" fg:x="211877" fg:w="36"/><text x="98.3026%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (36 samples, 0.02%)</title><rect x="98.0526%" y="437" width="0.0167%" height="15" fill="rgb(228,207,2)" fg:x="211877" fg:w="36"/><text x="98.3026%" y="447.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.02%)</title><rect x="98.0540%" y="421" width="0.0153%" height="15" fill="rgb(215,120,22)" fg:x="211880" fg:w="33"/><text x="98.3040%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (47 samples, 0.02%)</title><rect x="98.0480%" y="677" width="0.0218%" height="15" fill="rgb(251,172,33)" fg:x="211867" fg:w="47"/><text x="98.2980%" y="687.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.02%)</title><rect x="98.0480%" y="661" width="0.0218%" height="15" fill="rgb(250,83,2)" fg:x="211867" fg:w="47"/><text x="98.2980%" y="671.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (47 samples, 0.02%)</title><rect x="98.0480%" y="645" width="0.0218%" height="15" fill="rgb(210,132,53)" fg:x="211867" fg:w="47"/><text x="98.2980%" y="655.50"></text></g><g><title>core::mem::drop (47 samples, 0.02%)</title><rect x="98.0480%" y="629" width="0.0218%" height="15" fill="rgb(221,208,36)" fg:x="211867" fg:w="47"/><text x="98.2980%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (47 samples, 0.02%)</title><rect x="98.0480%" y="613" width="0.0218%" height="15" fill="rgb(205,192,46)" fg:x="211867" fg:w="47"/><text x="98.2980%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (47 samples, 0.02%)</title><rect x="98.0480%" y="597" width="0.0218%" height="15" fill="rgb(223,163,14)" fg:x="211867" fg:w="47"/><text x="98.2980%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (45 samples, 0.02%)</title><rect x="98.0489%" y="581" width="0.0208%" height="15" fill="rgb(218,41,28)" fg:x="211869" fg:w="45"/><text x="98.2989%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (43 samples, 0.02%)</title><rect x="98.0498%" y="565" width="0.0199%" height="15" fill="rgb(235,104,10)" fg:x="211871" fg:w="43"/><text x="98.2998%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (43 samples, 0.02%)</title><rect x="98.0498%" y="549" width="0.0199%" height="15" fill="rgb(246,17,4)" fg:x="211871" fg:w="43"/><text x="98.2998%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (38 samples, 0.02%)</title><rect x="98.0522%" y="533" width="0.0176%" height="15" fill="rgb(240,7,16)" fg:x="211876" fg:w="38"/><text x="98.3022%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (38 samples, 0.02%)</title><rect x="98.0522%" y="517" width="0.0176%" height="15" fill="rgb(213,160,23)" fg:x="211876" fg:w="38"/><text x="98.3022%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (38 samples, 0.02%)</title><rect x="98.0522%" y="501" width="0.0176%" height="15" fill="rgb(251,179,49)" fg:x="211876" fg:w="38"/><text x="98.3022%" y="511.50"></text></g><g><title>core::mem::drop (50 samples, 0.02%)</title><rect x="98.0475%" y="805" width="0.0231%" height="15" fill="rgb(247,198,10)" fg:x="211866" fg:w="50"/><text x="98.2975%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (50 samples, 0.02%)</title><rect x="98.0475%" y="789" width="0.0231%" height="15" fill="rgb(220,65,29)" fg:x="211866" fg:w="50"/><text x="98.2975%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (50 samples, 0.02%)</title><rect x="98.0475%" y="773" width="0.0231%" height="15" fill="rgb(237,171,28)" fg:x="211866" fg:w="50"/><text x="98.2975%" y="783.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="98.0475%" y="757" width="0.0231%" height="15" fill="rgb(228,44,26)" fg:x="211866" fg:w="50"/><text x="98.2975%" y="767.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (50 samples, 0.02%)</title><rect x="98.0475%" y="741" width="0.0231%" height="15" fill="rgb(216,210,27)" fg:x="211866" fg:w="50"/><text x="98.2975%" y="751.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (49 samples, 0.02%)</title><rect x="98.0480%" y="725" width="0.0227%" height="15" fill="rgb(252,10,17)" fg:x="211867" fg:w="49"/><text x="98.2980%" y="735.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (49 samples, 0.02%)</title><rect x="98.0480%" y="709" width="0.0227%" height="15" fill="rgb(214,172,30)" fg:x="211867" fg:w="49"/><text x="98.2980%" y="719.50"></text></g><g><title>core::mem::drop (49 samples, 0.02%)</title><rect x="98.0480%" y="693" width="0.0227%" height="15" fill="rgb(253,130,48)" fg:x="211867" fg:w="49"/><text x="98.2980%" y="703.50"></text></g><g><title>sled::pin (53 samples, 0.02%)</title><rect x="98.0466%" y="949" width="0.0245%" height="15" fill="rgb(226,99,43)" fg:x="211864" fg:w="53"/><text x="98.2966%" y="959.50"></text></g><g><title>crossbeam_epoch::default::pin (52 samples, 0.02%)</title><rect x="98.0471%" y="933" width="0.0241%" height="15" fill="rgb(239,111,26)" fg:x="211865" fg:w="52"/><text x="98.2971%" y="943.50"></text></g><g><title>crossbeam_epoch::default::with_handle (52 samples, 0.02%)</title><rect x="98.0471%" y="917" width="0.0241%" height="15" fill="rgb(240,27,53)" fg:x="211865" fg:w="52"/><text x="98.2971%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (52 samples, 0.02%)</title><rect x="98.0471%" y="901" width="0.0241%" height="15" fill="rgb(254,163,12)" fg:x="211865" fg:w="52"/><text x="98.2971%" y="911.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (52 samples, 0.02%)</title><rect x="98.0471%" y="885" width="0.0241%" height="15" fill="rgb(225,51,48)" fg:x="211865" fg:w="52"/><text x="98.2971%" y="895.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (52 samples, 0.02%)</title><rect x="98.0471%" y="869" width="0.0241%" height="15" fill="rgb(205,19,32)" fg:x="211865" fg:w="52"/><text x="98.2971%" y="879.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (52 samples, 0.02%)</title><rect x="98.0471%" y="853" width="0.0241%" height="15" fill="rgb(218,119,26)" fg:x="211865" fg:w="52"/><text x="98.2971%" y="863.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (52 samples, 0.02%)</title><rect x="98.0471%" y="837" width="0.0241%" height="15" fill="rgb(231,173,33)" fg:x="211865" fg:w="52"/><text x="98.2971%" y="847.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (51 samples, 0.02%)</title><rect x="98.0475%" y="821" width="0.0236%" height="15" fill="rgb(241,100,29)" fg:x="211866" fg:w="51"/><text x="98.2975%" y="831.50"></text></g><g><title>sled::node::Node::index_next_node (61 samples, 0.03%)</title><rect x="98.0998%" y="917" width="0.0282%" height="15" fill="rgb(250,194,34)" fg:x="211979" fg:w="61"/><text x="98.3498%" y="927.50"></text></g><g><title>sled::binary_search::binary_search_lub (55 samples, 0.03%)</title><rect x="98.1026%" y="901" width="0.0255%" height="15" fill="rgb(215,23,50)" fg:x="211985" fg:w="55"/><text x="98.3526%" y="911.50"></text></g><g><title>sled::binary_search::binary_search (54 samples, 0.02%)</title><rect x="98.1031%" y="885" width="0.0250%" height="15" fill="rgb(206,49,37)" fg:x="211986" fg:w="54"/><text x="98.3531%" y="895.50"></text></g><g><title>sled::fastcmp::fastcmp (33 samples, 0.02%)</title><rect x="98.1128%" y="869" width="0.0153%" height="15" fill="rgb(247,39,21)" fg:x="212007" fg:w="33"/><text x="98.3628%" y="879.50"></text></g><g><title>[libc.so.6] (27 samples, 0.01%)</title><rect x="98.1156%" y="853" width="0.0125%" height="15" fill="rgb(209,220,15)" fg:x="212013" fg:w="27"/><text x="98.3656%" y="863.50"></text></g><g><title>&lt;sled::node::Index as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="98.1308%" y="869" width="0.0176%" height="15" fill="rgb(206,41,33)" fg:x="212046" fg:w="38"/><text x="98.3808%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="98.1308%" y="853" width="0.0176%" height="15" fill="rgb(221,225,45)" fg:x="212046" fg:w="38"/><text x="98.3808%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.02%)</title><rect x="98.1308%" y="837" width="0.0176%" height="15" fill="rgb(216,27,18)" fg:x="212046" fg:w="38"/><text x="98.3808%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.02%)</title><rect x="98.1308%" y="821" width="0.0176%" height="15" fill="rgb(250,193,34)" fg:x="212046" fg:w="38"/><text x="98.3808%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.02%)</title><rect x="98.1308%" y="805" width="0.0176%" height="15" fill="rgb(227,215,20)" fg:x="212046" fg:w="38"/><text x="98.3808%" y="815.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (49 samples, 0.02%)</title><rect x="98.1304%" y="901" width="0.0227%" height="15" fill="rgb(242,211,27)" fg:x="212045" fg:w="49"/><text x="98.3804%" y="911.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (48 samples, 0.02%)</title><rect x="98.1308%" y="885" width="0.0222%" height="15" fill="rgb(229,190,30)" fg:x="212046" fg:w="48"/><text x="98.3808%" y="895.50"></text></g><g><title>sled::node::Node::parent_split (22 samples, 0.01%)</title><rect x="98.1540%" y="901" width="0.0102%" height="15" fill="rgb(253,31,29)" fg:x="212096" fg:w="22"/><text x="98.4040%" y="911.50"></text></g><g><title>sled::node::Node::split::split_inner (23 samples, 0.01%)</title><rect x="98.1683%" y="885" width="0.0106%" height="15" fill="rgb(229,177,52)" fg:x="212127" fg:w="23"/><text x="98.4183%" y="895.50"></text></g><g><title>sled::node::Node::split (35 samples, 0.02%)</title><rect x="98.1641%" y="901" width="0.0162%" height="15" fill="rgb(226,88,8)" fg:x="212118" fg:w="35"/><text x="98.4141%" y="911.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (24 samples, 0.01%)</title><rect x="98.1873%" y="853" width="0.0111%" height="15" fill="rgb(214,55,27)" fg:x="212168" fg:w="24"/><text x="98.4373%" y="863.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="98.2044%" y="773" width="0.0120%" height="15" fill="rgb(233,202,5)" fg:x="212205" fg:w="26"/><text x="98.4544%" y="783.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (31 samples, 0.01%)</title><rect x="98.2026%" y="805" width="0.0143%" height="15" fill="rgb(251,49,30)" fg:x="212201" fg:w="31"/><text x="98.4526%" y="815.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (30 samples, 0.01%)</title><rect x="98.2030%" y="789" width="0.0139%" height="15" fill="rgb(235,18,52)" fg:x="212202" fg:w="30"/><text x="98.4530%" y="799.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (41 samples, 0.02%)</title><rect x="98.1984%" y="853" width="0.0190%" height="15" fill="rgb(250,111,51)" fg:x="212192" fg:w="41"/><text x="98.4484%" y="863.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (41 samples, 0.02%)</title><rect x="98.1984%" y="837" width="0.0190%" height="15" fill="rgb(218,13,25)" fg:x="212192" fg:w="41"/><text x="98.4484%" y="847.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (32 samples, 0.01%)</title><rect x="98.2026%" y="821" width="0.0148%" height="15" fill="rgb(248,96,7)" fg:x="212201" fg:w="32"/><text x="98.4526%" y="831.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (76 samples, 0.04%)</title><rect x="98.1827%" y="869" width="0.0352%" height="15" fill="rgb(217,31,15)" fg:x="212158" fg:w="76"/><text x="98.4327%" y="879.50"></text></g><g><title>sled::pagecache::PageCache::allocate (83 samples, 0.04%)</title><rect x="98.1803%" y="901" width="0.0384%" height="15" fill="rgb(228,59,49)" fg:x="212153" fg:w="83"/><text x="98.4303%" y="911.50"></text></g><g><title>sled::pagecache::PageCache::allocate_inner (83 samples, 0.04%)</title><rect x="98.1803%" y="885" width="0.0384%" height="15" fill="rgb(210,152,38)" fg:x="212153" fg:w="83"/><text x="98.4303%" y="895.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (34 samples, 0.02%)</title><rect x="98.2243%" y="869" width="0.0157%" height="15" fill="rgb(206,71,11)" fg:x="212248" fg:w="34"/><text x="98.4743%" y="879.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_replace (32 samples, 0.01%)</title><rect x="98.2252%" y="853" width="0.0148%" height="15" fill="rgb(244,199,5)" fg:x="212250" fg:w="32"/><text x="98.4752%" y="863.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="98.2669%" y="789" width="0.0130%" height="15" fill="rgb(253,49,1)" fg:x="212340" fg:w="28"/><text x="98.5169%" y="799.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (64 samples, 0.03%)</title><rect x="98.2535%" y="805" width="0.0296%" height="15" fill="rgb(225,206,40)" fg:x="212311" fg:w="64"/><text x="98.5035%" y="815.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (84 samples, 0.04%)</title><rect x="98.2516%" y="821" width="0.0389%" height="15" fill="rgb(243,116,47)" fg:x="212307" fg:w="84"/><text x="98.5016%" y="831.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (117 samples, 0.05%)</title><rect x="98.2400%" y="869" width="0.0541%" height="15" fill="rgb(219,225,16)" fg:x="212282" fg:w="117"/><text x="98.4900%" y="879.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (116 samples, 0.05%)</title><rect x="98.2405%" y="853" width="0.0537%" height="15" fill="rgb(233,29,47)" fg:x="212283" fg:w="116"/><text x="98.4905%" y="863.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (92 samples, 0.04%)</title><rect x="98.2516%" y="837" width="0.0426%" height="15" fill="rgb(250,179,18)" fg:x="212307" fg:w="92"/><text x="98.5016%" y="847.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (167 samples, 0.08%)</title><rect x="98.2206%" y="885" width="0.0773%" height="15" fill="rgb(215,176,6)" fg:x="212240" fg:w="167"/><text x="98.4706%" y="895.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (63 samples, 0.03%)</title><rect x="98.3048%" y="757" width="0.0292%" height="15" fill="rgb(214,117,39)" fg:x="212422" fg:w="63"/><text x="98.5548%" y="767.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (62 samples, 0.03%)</title><rect x="98.3053%" y="741" width="0.0287%" height="15" fill="rgb(247,183,36)" fg:x="212423" fg:w="62"/><text x="98.5553%" y="751.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (57 samples, 0.03%)</title><rect x="98.3076%" y="725" width="0.0264%" height="15" fill="rgb(237,200,3)" fg:x="212428" fg:w="57"/><text x="98.5576%" y="735.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (70 samples, 0.03%)</title><rect x="98.3034%" y="869" width="0.0324%" height="15" fill="rgb(212,220,24)" fg:x="212419" fg:w="70"/><text x="98.5534%" y="879.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (67 samples, 0.03%)</title><rect x="98.3048%" y="853" width="0.0310%" height="15" fill="rgb(245,216,20)" fg:x="212422" fg:w="67"/><text x="98.5548%" y="863.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (67 samples, 0.03%)</title><rect x="98.3048%" y="837" width="0.0310%" height="15" fill="rgb(219,124,7)" fg:x="212422" fg:w="67"/><text x="98.5548%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (67 samples, 0.03%)</title><rect x="98.3048%" y="821" width="0.0310%" height="15" fill="rgb(227,167,8)" fg:x="212422" fg:w="67"/><text x="98.5548%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (67 samples, 0.03%)</title><rect x="98.3048%" y="805" width="0.0310%" height="15" fill="rgb(241,37,2)" fg:x="212422" fg:w="67"/><text x="98.5548%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (67 samples, 0.03%)</title><rect x="98.3048%" y="789" width="0.0310%" height="15" fill="rgb(238,134,33)" fg:x="212422" fg:w="67"/><text x="98.5548%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (67 samples, 0.03%)</title><rect x="98.3048%" y="773" width="0.0310%" height="15" fill="rgb(248,48,27)" fg:x="212422" fg:w="67"/><text x="98.5548%" y="783.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::sa_mark_replace (24 samples, 0.01%)</title><rect x="98.3414%" y="853" width="0.0111%" height="15" fill="rgb(212,14,16)" fg:x="212501" fg:w="24"/><text x="98.5914%" y="863.50"></text></g><g><title>sled::pagecache::segment::SegmentAccountant::mark_replace (24 samples, 0.01%)</title><rect x="98.3414%" y="837" width="0.0111%" height="15" fill="rgb(217,205,37)" fg:x="212501" fg:w="24"/><text x="98.5914%" y="847.50"></text></g><g><title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::serialize_into (38 samples, 0.02%)</title><rect x="98.3567%" y="789" width="0.0176%" height="15" fill="rgb(233,185,47)" fg:x="212534" fg:w="38"/><text x="98.6067%" y="799.50"></text></g><g><title>[libc.so.6] (34 samples, 0.02%)</title><rect x="98.3585%" y="773" width="0.0157%" height="15" fill="rgb(244,88,8)" fg:x="212538" fg:w="34"/><text x="98.6085%" y="783.50"></text></g><g><title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::serialize_into (40 samples, 0.02%)</title><rect x="98.3562%" y="805" width="0.0185%" height="15" fill="rgb(213,0,20)" fg:x="212533" fg:w="40"/><text x="98.6062%" y="815.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::encapsulate (41 samples, 0.02%)</title><rect x="98.3562%" y="821" width="0.0190%" height="15" fill="rgb(238,159,36)" fg:x="212533" fg:w="41"/><text x="98.6062%" y="831.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (52 samples, 0.02%)</title><rect x="98.3525%" y="853" width="0.0241%" height="15" fill="rgb(253,173,17)" fg:x="212525" fg:w="52"/><text x="98.6025%" y="863.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (51 samples, 0.02%)</title><rect x="98.3530%" y="837" width="0.0236%" height="15" fill="rgb(221,23,28)" fg:x="212526" fg:w="51"/><text x="98.6030%" y="847.50"></text></g><g><title>sled::pagecache::PageCache::cas_page (98 samples, 0.05%)</title><rect x="98.3363%" y="869" width="0.0454%" height="15" fill="rgb(218,113,15)" fg:x="212490" fg:w="98"/><text x="98.5863%" y="879.50"></text></g><g><title>sled::pagecache::PageCache::rewrite_page (191 samples, 0.09%)</title><rect x="98.2979%" y="885" width="0.0884%" height="15" fill="rgb(233,58,3)" fg:x="212407" fg:w="191"/><text x="98.5479%" y="895.50"></text></g><g><title>sled::tree::Tree::split_node (573 samples, 0.27%)</title><rect x="98.1290%" y="917" width="0.2652%" height="15" fill="rgb(250,46,35)" fg:x="212042" fg:w="573"/><text x="98.3790%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::replace (379 samples, 0.18%)</title><rect x="98.2188%" y="901" width="0.1754%" height="15" fill="rgb(210,169,11)" fg:x="212236" fg:w="379"/><text x="98.4688%" y="911.50"></text></g><g><title>sled::lru::Lru::accessed (32 samples, 0.01%)</title><rect x="98.4011%" y="885" width="0.0148%" height="15" fill="rgb(246,88,19)" fg:x="212630" fg:w="32"/><text x="98.6511%" y="895.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (854 samples, 0.40%)</title><rect x="98.0304%" y="981" width="0.3952%" height="15" fill="rgb(206,81,49)" fg:x="211829" fg:w="854"/><text x="98.2804%" y="991.50"></text></g><g><title>sled::tree::Tree::get (833 samples, 0.39%)</title><rect x="98.0401%" y="965" width="0.3855%" height="15" fill="rgb(232,144,18)" fg:x="211850" fg:w="833"/><text x="98.2901%" y="975.50"></text></g><g><title>sled::tree::Tree::get_inner (766 samples, 0.35%)</title><rect x="98.0711%" y="949" width="0.3545%" height="15" fill="rgb(235,2,27)" fg:x="211917" fg:w="766"/><text x="98.3211%" y="959.50"></text></g><g><title>sled::tree::Tree::view_for_key (735 samples, 0.34%)</title><rect x="98.0855%" y="933" width="0.3401%" height="15" fill="rgb(239,157,39)" fg:x="211948" fg:w="735"/><text x="98.3355%" y="943.50"></text></g><g><title>sled::tree::Tree::view_for_pid (68 samples, 0.03%)</title><rect x="98.3942%" y="917" width="0.0315%" height="15" fill="rgb(220,11,17)" fg:x="212615" fg:w="68"/><text x="98.6442%" y="927.50"></text></g><g><title>sled::pagecache::PageCache::get (64 samples, 0.03%)</title><rect x="98.3960%" y="901" width="0.0296%" height="15" fill="rgb(243,94,50)" fg:x="212619" fg:w="64"/><text x="98.6460%" y="911.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_header (915 samples, 0.42%)</title><rect x="98.0100%" y="997" width="0.4234%" height="15" fill="rgb(218,22,0)" fg:x="211785" fg:w="915"/><text x="98.2600%" y="1007.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (920 samples, 0.43%)</title><rect x="98.0087%" y="1013" width="0.4258%" height="15" fill="rgb(249,70,21)" fg:x="211782" fg:w="920"/><text x="98.2587%" y="1023.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as core::clone::Clone&gt;::clone (48 samples, 0.02%)</title><rect x="98.4446%" y="885" width="0.0222%" height="15" fill="rgb(245,111,46)" fg:x="212724" fg:w="48"/><text x="98.6946%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47 samples, 0.02%)</title><rect x="98.4451%" y="869" width="0.0218%" height="15" fill="rgb(244,183,12)" fg:x="212725" fg:w="47"/><text x="98.6951%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.02%)</title><rect x="98.4455%" y="853" width="0.0213%" height="15" fill="rgb(207,117,0)" fg:x="212726" fg:w="46"/><text x="98.6955%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.02%)</title><rect x="98.4455%" y="837" width="0.0213%" height="15" fill="rgb(206,20,43)" fg:x="212726" fg:w="46"/><text x="98.6955%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.02%)</title><rect x="98.4455%" y="821" width="0.0213%" height="15" fill="rgb(221,104,11)" fg:x="212726" fg:w="46"/><text x="98.6955%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (33 samples, 0.02%)</title><rect x="98.4515%" y="805" width="0.0153%" height="15" fill="rgb(254,36,50)" fg:x="212739" fg:w="33"/><text x="98.7015%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33 samples, 0.02%)</title><rect x="98.4515%" y="789" width="0.0153%" height="15" fill="rgb(252,17,15)" fg:x="212739" fg:w="33"/><text x="98.7015%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (33 samples, 0.02%)</title><rect x="98.4515%" y="773" width="0.0153%" height="15" fill="rgb(219,129,43)" fg:x="212739" fg:w="33"/><text x="98.7015%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.01%)</title><rect x="98.4520%" y="757" width="0.0148%" height="15" fill="rgb(205,34,45)" fg:x="212740" fg:w="32"/><text x="98.7020%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.01%)</title><rect x="98.4520%" y="741" width="0.0148%" height="15" fill="rgb(251,201,32)" fg:x="212740" fg:w="32"/><text x="98.7020%" y="751.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.01%)</title><rect x="98.4520%" y="725" width="0.0148%" height="15" fill="rgb(205,56,0)" fg:x="212740" fg:w="32"/><text x="98.7020%" y="735.50"></text></g><g><title>malloc (31 samples, 0.01%)</title><rect x="98.4525%" y="709" width="0.0143%" height="15" fill="rgb(211,193,27)" fg:x="212741" fg:w="31"/><text x="98.7025%" y="719.50"></text></g><g><title>&lt;bitcoin::blockdata::block::Block as core::clone::Clone&gt;::clone (61 samples, 0.03%)</title><rect x="98.4446%" y="965" width="0.0282%" height="15" fill="rgb(231,100,42)" fg:x="212724" fg:w="61"/><text x="98.6946%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (61 samples, 0.03%)</title><rect x="98.4446%" y="949" width="0.0282%" height="15" fill="rgb(245,85,27)" fg:x="212724" fg:w="61"/><text x="98.6946%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.03%)</title><rect x="98.4446%" y="933" width="0.0282%" height="15" fill="rgb(241,76,24)" fg:x="212724" fg:w="61"/><text x="98.6946%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.03%)</title><rect x="98.4446%" y="917" width="0.0282%" height="15" fill="rgb(249,157,15)" fg:x="212724" fg:w="61"/><text x="98.6946%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.03%)</title><rect x="98.4446%" y="901" width="0.0282%" height="15" fill="rgb(222,218,25)" fg:x="212724" fg:w="61"/><text x="98.6946%" y="911.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainparams::ChainParams as core::clone::Clone&gt;::clone (88 samples, 0.04%)</title><rect x="98.4446%" y="981" width="0.0407%" height="15" fill="rgb(252,156,52)" fg:x="212724" fg:w="88"/><text x="98.6946%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (27 samples, 0.01%)</title><rect x="98.4728%" y="965" width="0.0125%" height="15" fill="rgb(211,185,7)" fg:x="212785" fg:w="27"/><text x="98.7228%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.01%)</title><rect x="98.4728%" y="949" width="0.0125%" height="15" fill="rgb(234,108,24)" fg:x="212785" fg:w="27"/><text x="98.7228%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.01%)</title><rect x="98.4742%" y="933" width="0.0111%" height="15" fill="rgb(227,218,2)" fg:x="212788" fg:w="24"/><text x="98.7242%" y="943.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_next_required_work (112 samples, 0.05%)</title><rect x="98.4344%" y="1013" width="0.0518%" height="15" fill="rgb(224,0,36)" fg:x="212702" fg:w="112"/><text x="98.6844%" y="1023.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::chain_params (94 samples, 0.04%)</title><rect x="98.4427%" y="997" width="0.0435%" height="15" fill="rgb(233,201,10)" fg:x="212720" fg:w="94"/><text x="98.6927%" y="1007.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::UpdatableChainstate&gt;::accept_header (6,709 samples, 3.10%)</title><rect x="95.3819%" y="1045" width="3.1048%" height="15" fill="rgb(252,209,14)" fg:x="206106" fg:w="6709"/><text x="95.6319%" y="1055.50">&lt;fl..</text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::validate_header (1,302 samples, 0.60%)</title><rect x="97.8842%" y="1029" width="0.6025%" height="15" fill="rgb(205,93,49)" fg:x="211513" fg:w="1302"/><text x="98.1342%" y="1039.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::handle_headers::{{closure}} (6,746 samples, 3.12%)</title><rect x="95.3671%" y="1061" width="3.1219%" height="15" fill="rgb(234,116,45)" fg:x="206074" fg:w="6746"/><text x="95.6171%" y="1071.50">flo..</text></g><g><title>&lt;floresta_wire::p2p_wire::node::InflightRequests as core::hash::Hash&gt;::hash (37 samples, 0.02%)</title><rect x="98.4969%" y="965" width="0.0171%" height="15" fill="rgb(248,89,35)" fg:x="212837" fg:w="37"/><text x="98.7469%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (49 samples, 0.02%)</title><rect x="98.4923%" y="1013" width="0.0227%" height="15" fill="rgb(233,167,45)" fg:x="212827" fg:w="49"/><text x="98.7423%" y="1023.50"></text></g><g><title>core::hash::BuildHasher::hash_one (49 samples, 0.02%)</title><rect x="98.4923%" y="997" width="0.0227%" height="15" fill="rgb(248,228,14)" fg:x="212827" fg:w="49"/><text x="98.7423%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (39 samples, 0.02%)</title><rect x="98.4969%" y="981" width="0.0180%" height="15" fill="rgb(246,91,14)" fg:x="212837" fg:w="39"/><text x="98.7469%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (32 samples, 0.01%)</title><rect x="98.5191%" y="965" width="0.0148%" height="15" fill="rgb(227,142,5)" fg:x="212885" fg:w="32"/><text x="98.7691%" y="975.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (32 samples, 0.01%)</title><rect x="98.5191%" y="949" width="0.0148%" height="15" fill="rgb(221,63,33)" fg:x="212885" fg:w="32"/><text x="98.7691%" y="959.50"></text></g><g><title>&lt;floresta_wire::p2p_wire::node::InflightRequests as core::cmp::PartialEq&gt;::eq (32 samples, 0.01%)</title><rect x="98.5191%" y="933" width="0.0148%" height="15" fill="rgb(233,49,0)" fg:x="212885" fg:w="32"/><text x="98.7691%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (47 samples, 0.02%)</title><rect x="98.5191%" y="997" width="0.0218%" height="15" fill="rgb(251,115,38)" fg:x="212885" fg:w="47"/><text x="98.7691%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (47 samples, 0.02%)</title><rect x="98.5191%" y="981" width="0.0218%" height="15" fill="rgb(231,214,32)" fg:x="212885" fg:w="47"/><text x="98.7691%" y="991.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::handle_notification::{{closure}} (142,906 samples, 66.13%)</title><rect x="32.4072%" y="1077" width="66.1342%" height="15" fill="rgb(248,73,46)" fg:x="70027" fg:w="142906"/><text x="32.6572%" y="1087.50">floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::handle_notif..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (110 samples, 0.05%)</title><rect x="98.4904%" y="1061" width="0.0509%" height="15" fill="rgb(237,156,4)" fg:x="212823" fg:w="110"/><text x="98.7404%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (110 samples, 0.05%)</title><rect x="98.4904%" y="1045" width="0.0509%" height="15" fill="rgb(227,132,2)" fg:x="212823" fg:w="110"/><text x="98.7404%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (106 samples, 0.05%)</title><rect x="98.4923%" y="1029" width="0.0491%" height="15" fill="rgb(248,161,9)" fg:x="212827" fg:w="106"/><text x="98.7423%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (57 samples, 0.03%)</title><rect x="98.5149%" y="1013" width="0.0264%" height="15" fill="rgb(238,77,38)" fg:x="212876" fg:w="57"/><text x="98.7649%" y="1023.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (29 samples, 0.01%)</title><rect x="98.5427%" y="1029" width="0.0134%" height="15" fill="rgb(222,166,40)" fg:x="212936" fg:w="29"/><text x="98.7927%" y="1039.50"></text></g><g><title>sled::tree::Tree::get (27 samples, 0.01%)</title><rect x="98.5436%" y="1013" width="0.0125%" height="15" fill="rgb(214,168,45)" fg:x="212938" fg:w="27"/><text x="98.7936%" y="1023.50"></text></g><g><title>sled::tree::Tree::get_inner (26 samples, 0.01%)</title><rect x="98.5441%" y="997" width="0.0120%" height="15" fill="rgb(226,64,37)" fg:x="212939" fg:w="26"/><text x="98.7941%" y="1007.50"></text></g><g><title>sled::tree::Tree::view_for_key (22 samples, 0.01%)</title><rect x="98.5459%" y="981" width="0.0102%" height="15" fill="rgb(232,210,43)" fg:x="212943" fg:w="22"/><text x="98.7959%" y="991.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_block_hash (34 samples, 0.02%)</title><rect x="98.5418%" y="1061" width="0.0157%" height="15" fill="rgb(214,76,33)" fg:x="212934" fg:w="34"/><text x="98.7918%" y="1071.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_block_hash (34 samples, 0.02%)</title><rect x="98.5418%" y="1045" width="0.0157%" height="15" fill="rgb(210,78,5)" fg:x="212934" fg:w="34"/><text x="98.7918%" y="1055.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::get (69 samples, 0.03%)</title><rect x="98.5649%" y="1013" width="0.0319%" height="15" fill="rgb(211,107,37)" fg:x="212984" fg:w="69"/><text x="98.8149%" y="1023.50"></text></g><g><title>sled::tree::Tree::get (65 samples, 0.03%)</title><rect x="98.5668%" y="997" width="0.0301%" height="15" fill="rgb(249,67,16)" fg:x="212988" fg:w="65"/><text x="98.8168%" y="1007.50"></text></g><g><title>sled::tree::Tree::get_inner (54 samples, 0.02%)</title><rect x="98.5719%" y="981" width="0.0250%" height="15" fill="rgb(222,114,31)" fg:x="212999" fg:w="54"/><text x="98.8219%" y="991.50"></text></g><g><title>sled::tree::Tree::view_for_key (43 samples, 0.02%)</title><rect x="98.5769%" y="965" width="0.0199%" height="15" fill="rgb(242,118,19)" fg:x="213010" fg:w="43"/><text x="98.8269%" y="975.50"></text></g><g><title>sled::tree::Tree::view_for_pid (29 samples, 0.01%)</title><rect x="98.5834%" y="949" width="0.0134%" height="15" fill="rgb(223,115,1)" fg:x="213024" fg:w="29"/><text x="98.8334%" y="959.50"></text></g><g><title>sled::pagecache::PageCache::get (24 samples, 0.01%)</title><rect x="98.5857%" y="933" width="0.0111%" height="15" fill="rgb(241,182,54)" fg:x="213029" fg:w="24"/><text x="98.8357%" y="943.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::get_disk_block_header (91 samples, 0.04%)</title><rect x="98.5584%" y="1045" width="0.0421%" height="15" fill="rgb(244,166,36)" fg:x="212970" fg:w="91"/><text x="98.8084%" y="1055.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore as floresta_chain::pruned_utreexo::ChainStore&gt;::get_header (89 samples, 0.04%)</title><rect x="98.5594%" y="1029" width="0.0412%" height="15" fill="rgb(241,52,43)" fg:x="212972" fg:w="89"/><text x="98.8094%" y="1039.50"></text></g><g><title>&lt;floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt; as floresta_chain::pruned_utreexo::BlockchainInterface&gt;::get_validation_index (95 samples, 0.04%)</title><rect x="98.5575%" y="1061" width="0.0440%" height="15" fill="rgb(236,82,9)" fg:x="212968" fg:w="95"/><text x="98.8075%" y="1071.50"></text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::process_queued_blocks::{{closure}} (134 samples, 0.06%)</title><rect x="98.5413%" y="1077" width="0.0620%" height="15" fill="rgb(241,119,0)" fg:x="212933" fg:w="134"/><text x="98.7913%" y="1087.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (144,672 samples, 66.95%)</title><rect x="31.6528%" y="1125" width="66.9514%" height="15" fill="rgb(221,19,22)" fg:x="68397" fg:w="144672"/><text x="31.9028%" y="1135.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}}</text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::RunningNode,Chain&gt;::run::{{closure}} (144,672 samples, 66.95%)</title><rect x="31.6528%" y="1109" width="66.9514%" height="15" fill="rgb(254,144,35)" fg:x="68397" fg:w="144672"/><text x="31.9028%" y="1119.50">floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::RunningNode,Chain&gt;::run::{{cl..</text></g><g><title>floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::run::{{closure}} (144,634 samples, 66.93%)</title><rect x="31.6704%" y="1093" width="66.9338%" height="15" fill="rgb(246,132,30)" fg:x="68435" fg:w="144634"/><text x="31.9204%" y="1103.50">floresta_wire::p2p_wire::node::UtreexoNode&lt;floresta_wire::p2p_wire::node_context::IBDNode,Chain&gt;::run::{{closur..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (144,678 samples, 66.95%)</title><rect x="31.6514%" y="1205" width="66.9542%" height="15" fill="rgb(234,69,28)" fg:x="68394" fg:w="144678"/><text x="31.9014%" y="1215.50">&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (144,678 samples, 66.95%)</title><rect x="31.6514%" y="1189" width="66.9542%" height="15" fill="rgb(219,106,47)" fg:x="68394" fg:w="144678"/><text x="31.9014%" y="1199.50">async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (144,678 samples, 66.95%)</title><rect x="31.6514%" y="1173" width="66.9542%" height="15" fill="rgb(218,79,24)" fg:x="68394" fg:w="144678"/><text x="31.9014%" y="1183.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (144,678 samples, 66.95%)</title><rect x="31.6514%" y="1157" width="66.9542%" height="15" fill="rgb(225,26,21)" fg:x="68394" fg:w="144678"/><text x="31.9014%" y="1167.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (144,675 samples, 66.95%)</title><rect x="31.6528%" y="1141" width="66.9528%" height="15" fill="rgb(217,68,49)" fg:x="68397" fg:w="144675"/><text x="31.9028%" y="1151.50">async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}</text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (23 samples, 0.01%)</title><rect x="98.6121%" y="1125" width="0.0106%" height="15" fill="rgb(220,204,28)" fg:x="213086" fg:w="23"/><text x="98.8621%" y="1135.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (144,741 samples, 66.98%)</title><rect x="31.6417%" y="1253" width="66.9834%" height="15" fill="rgb(237,208,43)" fg:x="68373" fg:w="144741"/><text x="31.8917%" y="1263.50">async_executor::LocalExecutor::run::{{closure}}</text></g><g><title>async_executor::Executor::run::{{closure}} (144,732 samples, 66.98%)</title><rect x="31.6459%" y="1237" width="66.9792%" height="15" fill="rgb(213,97,42)" fg:x="68382" fg:w="144732"/><text x="31.8959%" y="1247.50">async_executor::Executor::run::{{closure}}</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (144,728 samples, 66.98%)</title><rect x="31.6477%" y="1221" width="66.9773%" height="15" fill="rgb(238,96,52)" fg:x="68386" fg:w="144728"/><text x="31.8977%" y="1231.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (42 samples, 0.02%)</title><rect x="98.6056%" y="1205" width="0.0194%" height="15" fill="rgb(228,14,13)" fg:x="213072" fg:w="42"/><text x="98.8556%" y="1215.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (37 samples, 0.02%)</title><rect x="98.6080%" y="1189" width="0.0171%" height="15" fill="rgb(219,123,13)" fg:x="213077" fg:w="37"/><text x="98.8580%" y="1199.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (30 samples, 0.01%)</title><rect x="98.6112%" y="1173" width="0.0139%" height="15" fill="rgb(216,144,17)" fg:x="213084" fg:w="30"/><text x="98.8612%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="98.6121%" y="1157" width="0.0130%" height="15" fill="rgb(230,228,29)" fg:x="213086" fg:w="28"/><text x="98.8621%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (28 samples, 0.01%)</title><rect x="98.6121%" y="1141" width="0.0130%" height="15" fill="rgb(233,18,5)" fg:x="213086" fg:w="28"/><text x="98.8621%" y="1151.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (24 samples, 0.01%)</title><rect x="98.6408%" y="1221" width="0.0111%" height="15" fill="rgb(233,197,12)" fg:x="213148" fg:w="24"/><text x="98.8908%" y="1231.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (60 samples, 0.03%)</title><rect x="98.6279%" y="1237" width="0.0278%" height="15" fill="rgb(234,140,29)" fg:x="213120" fg:w="60"/><text x="98.8779%" y="1247.50"></text></g><g><title>epoll_wait (161 samples, 0.07%)</title><rect x="98.6644%" y="1205" width="0.0745%" height="15" fill="rgb(233,113,19)" fg:x="213199" fg:w="161"/><text x="98.9144%" y="1215.50"></text></g><g><title>[unknown] (154 samples, 0.07%)</title><rect x="98.6677%" y="1189" width="0.0713%" height="15" fill="rgb(246,209,13)" fg:x="213206" fg:w="154"/><text x="98.9177%" y="1199.50"></text></g><g><title>[unknown] (147 samples, 0.07%)</title><rect x="98.6709%" y="1173" width="0.0680%" height="15" fill="rgb(242,79,54)" fg:x="213213" fg:w="147"/><text x="98.9209%" y="1183.50"></text></g><g><title>[unknown] (143 samples, 0.07%)</title><rect x="98.6727%" y="1157" width="0.0662%" height="15" fill="rgb(219,73,16)" fg:x="213217" fg:w="143"/><text x="98.9227%" y="1167.50"></text></g><g><title>[unknown] (140 samples, 0.06%)</title><rect x="98.6741%" y="1141" width="0.0648%" height="15" fill="rgb(224,52,10)" fg:x="213220" fg:w="140"/><text x="98.9241%" y="1151.50"></text></g><g><title>[unknown] (129 samples, 0.06%)</title><rect x="98.6792%" y="1125" width="0.0597%" height="15" fill="rgb(237,179,5)" fg:x="213231" fg:w="129"/><text x="98.9292%" y="1135.50"></text></g><g><title>[unknown] (98 samples, 0.05%)</title><rect x="98.6936%" y="1109" width="0.0454%" height="15" fill="rgb(231,20,6)" fg:x="213262" fg:w="98"/><text x="98.9436%" y="1119.50"></text></g><g><title>[unknown] (86 samples, 0.04%)</title><rect x="98.6991%" y="1093" width="0.0398%" height="15" fill="rgb(253,171,45)" fg:x="213274" fg:w="86"/><text x="98.9491%" y="1103.50"></text></g><g><title>[unknown] (81 samples, 0.04%)</title><rect x="98.7014%" y="1077" width="0.0375%" height="15" fill="rgb(230,75,49)" fg:x="213279" fg:w="81"/><text x="98.9514%" y="1087.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="98.7042%" y="1061" width="0.0347%" height="15" fill="rgb(216,83,46)" fg:x="213285" fg:w="75"/><text x="98.9542%" y="1071.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="98.7158%" y="1045" width="0.0231%" height="15" fill="rgb(236,56,9)" fg:x="213310" fg:w="50"/><text x="98.9658%" y="1055.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="98.7274%" y="1029" width="0.0116%" height="15" fill="rgb(215,28,34)" fg:x="213335" fg:w="25"/><text x="98.9774%" y="1039.50"></text></g><g><title>polling::epoll::Poller::modify (63 samples, 0.03%)</title><rect x="98.7389%" y="1205" width="0.0292%" height="15" fill="rgb(230,222,20)" fg:x="213360" fg:w="63"/><text x="98.9889%" y="1215.50"></text></g><g><title>polling::epoll::Poller::ctl (62 samples, 0.03%)</title><rect x="98.7394%" y="1189" width="0.0287%" height="15" fill="rgb(235,209,51)" fg:x="213361" fg:w="62"/><text x="98.9894%" y="1199.50"></text></g><g><title>epoll_ctl (56 samples, 0.03%)</title><rect x="98.7422%" y="1173" width="0.0259%" height="15" fill="rgb(235,167,1)" fg:x="213367" fg:w="56"/><text x="98.9922%" y="1183.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="98.7422%" y="1157" width="0.0259%" height="15" fill="rgb(248,220,0)" fg:x="213367" fg:w="56"/><text x="98.9922%" y="1167.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="98.7463%" y="1141" width="0.0218%" height="15" fill="rgb(239,0,18)" fg:x="213376" fg:w="47"/><text x="98.9963%" y="1151.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="98.7496%" y="1125" width="0.0185%" height="15" fill="rgb(229,179,11)" fg:x="213383" fg:w="40"/><text x="98.9996%" y="1135.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="98.7519%" y="1109" width="0.0162%" height="15" fill="rgb(226,116,53)" fg:x="213388" fg:w="35"/><text x="99.0019%" y="1119.50"></text></g><g><title>read (46 samples, 0.02%)</title><rect x="98.7681%" y="1205" width="0.0213%" height="15" fill="rgb(218,1,49)" fg:x="213423" fg:w="46"/><text x="99.0181%" y="1215.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="98.7718%" y="1189" width="0.0176%" height="15" fill="rgb(208,184,47)" fg:x="213431" fg:w="38"/><text x="99.0218%" y="1199.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="98.7759%" y="1173" width="0.0134%" height="15" fill="rgb(238,174,3)" fg:x="213440" fg:w="29"/><text x="99.0259%" y="1183.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="98.7778%" y="1157" width="0.0116%" height="15" fill="rgb(247,188,6)" fg:x="213444" fg:w="25"/><text x="99.0278%" y="1167.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="98.7792%" y="1141" width="0.0102%" height="15" fill="rgb(211,165,46)" fg:x="213447" fg:w="22"/><text x="99.0292%" y="1151.50"></text></g><g><title>polling::Poller::wait (343 samples, 0.16%)</title><rect x="98.6565%" y="1237" width="0.1587%" height="15" fill="rgb(222,190,10)" fg:x="213182" fg:w="343"/><text x="98.9065%" y="1247.50"></text></g><g><title>polling::epoll::Poller::wait (337 samples, 0.16%)</title><rect x="98.6593%" y="1221" width="0.1560%" height="15" fill="rgb(206,185,3)" fg:x="213188" fg:w="337"/><text x="98.9093%" y="1231.50"></text></g><g><title>timerfd_settime (55 samples, 0.03%)</title><rect x="98.7898%" y="1205" width="0.0255%" height="15" fill="rgb(244,125,37)" fg:x="213470" fg:w="55"/><text x="99.0398%" y="1215.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="98.7903%" y="1189" width="0.0250%" height="15" fill="rgb(211,43,7)" fg:x="213471" fg:w="54"/><text x="99.0403%" y="1199.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="98.7935%" y="1173" width="0.0218%" height="15" fill="rgb(250,41,42)" fg:x="213478" fg:w="47"/><text x="99.0435%" y="1183.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="98.7958%" y="1157" width="0.0194%" height="15" fill="rgb(254,54,42)" fg:x="213483" fg:w="42"/><text x="99.0458%" y="1167.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="98.7972%" y="1141" width="0.0180%" height="15" fill="rgb(213,71,43)" fg:x="213486" fg:w="39"/><text x="99.0472%" y="1151.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="98.8014%" y="1125" width="0.0139%" height="15" fill="rgb(249,3,44)" fg:x="213495" fg:w="30"/><text x="99.0514%" y="1135.50"></text></g><g><title>async_io::reactor::ReactorLock::react (417 samples, 0.19%)</title><rect x="98.6260%" y="1253" width="0.1930%" height="15" fill="rgb(229,80,41)" fg:x="213116" fg:w="417"/><text x="98.8760%" y="1263.50"></text></g><g><title>parking::Inner::park (267 samples, 0.12%)</title><rect x="98.8231%" y="1253" width="0.1236%" height="15" fill="rgb(231,25,28)" fg:x="213542" fg:w="267"/><text x="99.0731%" y="1263.50"></text></g><g><title>std::sync::condvar::Condvar::wait (262 samples, 0.12%)</title><rect x="98.8255%" y="1237" width="0.1212%" height="15" fill="rgb(208,79,48)" fg:x="213547" fg:w="262"/><text x="99.0755%" y="1247.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (261 samples, 0.12%)</title><rect x="98.8259%" y="1221" width="0.1208%" height="15" fill="rgb(207,196,38)" fg:x="213548" fg:w="261"/><text x="99.0759%" y="1231.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (261 samples, 0.12%)</title><rect x="98.8259%" y="1205" width="0.1208%" height="15" fill="rgb(228,105,49)" fg:x="213548" fg:w="261"/><text x="99.0759%" y="1215.50"></text></g><g><title>std::sys::unix::futex::futex_wait (261 samples, 0.12%)</title><rect x="98.8259%" y="1189" width="0.1208%" height="15" fill="rgb(237,99,15)" fg:x="213548" fg:w="261"/><text x="99.0759%" y="1199.50"></text></g><g><title>syscall (255 samples, 0.12%)</title><rect x="98.8287%" y="1173" width="0.1180%" height="15" fill="rgb(224,207,46)" fg:x="213554" fg:w="255"/><text x="99.0787%" y="1183.50"></text></g><g><title>[unknown] (254 samples, 0.12%)</title><rect x="98.8292%" y="1157" width="0.1175%" height="15" fill="rgb(249,117,50)" fg:x="213555" fg:w="254"/><text x="99.0792%" y="1167.50"></text></g><g><title>[unknown] (245 samples, 0.11%)</title><rect x="98.8333%" y="1141" width="0.1134%" height="15" fill="rgb(248,17,13)" fg:x="213564" fg:w="245"/><text x="99.0833%" y="1151.50"></text></g><g><title>[unknown] (234 samples, 0.11%)</title><rect x="98.8384%" y="1125" width="0.1083%" height="15" fill="rgb(228,187,36)" fg:x="213575" fg:w="234"/><text x="99.0884%" y="1135.50"></text></g><g><title>[unknown] (230 samples, 0.11%)</title><rect x="98.8403%" y="1109" width="0.1064%" height="15" fill="rgb(234,132,20)" fg:x="213579" fg:w="230"/><text x="99.0903%" y="1119.50"></text></g><g><title>[unknown] (225 samples, 0.10%)</title><rect x="98.8426%" y="1093" width="0.1041%" height="15" fill="rgb(209,170,46)" fg:x="213584" fg:w="225"/><text x="99.0926%" y="1103.50"></text></g><g><title>[unknown] (211 samples, 0.10%)</title><rect x="98.8491%" y="1077" width="0.0976%" height="15" fill="rgb(237,23,19)" fg:x="213598" fg:w="211"/><text x="99.0991%" y="1087.50"></text></g><g><title>[unknown] (196 samples, 0.09%)</title><rect x="98.8560%" y="1061" width="0.0907%" height="15" fill="rgb(227,21,26)" fg:x="213613" fg:w="196"/><text x="99.1060%" y="1071.50"></text></g><g><title>[unknown] (189 samples, 0.09%)</title><rect x="98.8592%" y="1045" width="0.0875%" height="15" fill="rgb(222,220,48)" fg:x="213620" fg:w="189"/><text x="99.1092%" y="1055.50"></text></g><g><title>[unknown] (175 samples, 0.08%)</title><rect x="98.8657%" y="1029" width="0.0810%" height="15" fill="rgb(214,9,16)" fg:x="213634" fg:w="175"/><text x="99.1157%" y="1039.50"></text></g><g><title>[unknown] (149 samples, 0.07%)</title><rect x="98.8778%" y="1013" width="0.0690%" height="15" fill="rgb(209,73,30)" fg:x="213660" fg:w="149"/><text x="99.1278%" y="1023.50"></text></g><g><title>[unknown] (96 samples, 0.04%)</title><rect x="98.9023%" y="997" width="0.0444%" height="15" fill="rgb(207,20,33)" fg:x="213713" fg:w="96"/><text x="99.1523%" y="1007.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="98.9185%" y="981" width="0.0282%" height="15" fill="rgb(219,153,12)" fg:x="213748" fg:w="61"/><text x="99.1685%" y="991.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="98.9342%" y="965" width="0.0125%" height="15" fill="rgb(235,97,25)" fg:x="213782" fg:w="27"/><text x="99.1842%" y="975.50"></text></g><g><title>async_io::driver::block_on (145,443 samples, 67.31%)</title><rect x="31.6403%" y="1269" width="67.3082%" height="15" fill="rgb(244,30,34)" fg:x="68370" fg:w="145443"/><text x="31.8903%" y="1279.50">async_io::driver::block_on</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (26 samples, 0.01%)</title><rect x="98.9564%" y="901" width="0.0120%" height="15" fill="rgb(214,106,45)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (26 samples, 0.01%)</title><rect x="98.9564%" y="885" width="0.0120%" height="15" fill="rgb(226,41,9)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (26 samples, 0.01%)</title><rect x="98.9564%" y="869" width="0.0120%" height="15" fill="rgb(253,139,29)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="879.50"></text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.01%)</title><rect x="98.9564%" y="853" width="0.0120%" height="15" fill="rgb(213,205,39)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (26 samples, 0.01%)</title><rect x="98.9564%" y="837" width="0.0120%" height="15" fill="rgb(209,27,10)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (26 samples, 0.01%)</title><rect x="98.9564%" y="821" width="0.0120%" height="15" fill="rgb(249,142,16)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="831.50"></text></g><g><title>core::ptr::write (26 samples, 0.01%)</title><rect x="98.9564%" y="805" width="0.0120%" height="15" fill="rgb(242,65,12)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="815.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="98.9564%" y="789" width="0.0120%" height="15" fill="rgb(232,48,10)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="799.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="98.9564%" y="773" width="0.0120%" height="15" fill="rgb(253,67,19)" fg:x="213830" fg:w="26"/><text x="99.2064%" y="783.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="98.9578%" y="757" width="0.0106%" height="15" fill="rgb(227,93,29)" fg:x="213833" fg:w="23"/><text x="99.2078%" y="767.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="98.9583%" y="741" width="0.0102%" height="15" fill="rgb(226,189,53)" fg:x="213834" fg:w="22"/><text x="99.2083%" y="751.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="98.9583%" y="725" width="0.0102%" height="15" fill="rgb(223,224,1)" fg:x="213834" fg:w="22"/><text x="99.2083%" y="735.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="98.9583%" y="709" width="0.0102%" height="15" fill="rgb(221,84,32)" fg:x="213834" fg:w="22"/><text x="99.2083%" y="719.50"></text></g><g><title>std::rt::lang_start_internal (27 samples, 0.01%)</title><rect x="98.9564%" y="1269" width="0.0125%" height="15" fill="rgb(214,189,28)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.01%)</title><rect x="98.9564%" y="1253" width="0.0125%" height="15" fill="rgb(234,7,52)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1263.50"></text></g><g><title>std::panicking::try (27 samples, 0.01%)</title><rect x="98.9564%" y="1237" width="0.0125%" height="15" fill="rgb(249,73,31)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.01%)</title><rect x="98.9564%" y="1221" width="0.0125%" height="15" fill="rgb(253,153,41)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1231.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (27 samples, 0.01%)</title><rect x="98.9564%" y="1205" width="0.0125%" height="15" fill="rgb(249,52,34)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.01%)</title><rect x="98.9564%" y="1189" width="0.0125%" height="15" fill="rgb(236,177,47)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1199.50"></text></g><g><title>std::panicking::try (27 samples, 0.01%)</title><rect x="98.9564%" y="1173" width="0.0125%" height="15" fill="rgb(252,185,45)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.01%)</title><rect x="98.9564%" y="1157" width="0.0125%" height="15" fill="rgb(251,15,30)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (27 samples, 0.01%)</title><rect x="98.9564%" y="1141" width="0.0125%" height="15" fill="rgb(233,31,4)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1151.50"></text></g><g><title>std::rt::lang_start::{{closure}} (27 samples, 0.01%)</title><rect x="98.9564%" y="1125" width="0.0125%" height="15" fill="rgb(254,44,24)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1135.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 0.01%)</title><rect x="98.9564%" y="1109" width="0.0125%" height="15" fill="rgb(218,54,1)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.01%)</title><rect x="98.9564%" y="1093" width="0.0125%" height="15" fill="rgb(243,209,39)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1103.50"></text></g><g><title>florestad::main (27 samples, 0.01%)</title><rect x="98.9564%" y="1077" width="0.0125%" height="15" fill="rgb(206,75,33)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1087.50"></text></g><g><title>florestad::load_wallet (27 samples, 0.01%)</title><rect x="98.9564%" y="1061" width="0.0125%" height="15" fill="rgb(223,108,18)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1071.50"></text></g><g><title>floresta_watch_only::kv_database::KvDatabase::new (27 samples, 0.01%)</title><rect x="98.9564%" y="1045" width="0.0125%" height="15" fill="rgb(244,89,31)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1055.50"></text></g><g><title>kv::store::Store::new (27 samples, 0.01%)</title><rect x="98.9564%" y="1029" width="0.0125%" height="15" fill="rgb(222,167,27)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1039.50"></text></g><g><title>kv::config::Config::open (27 samples, 0.01%)</title><rect x="98.9564%" y="1013" width="0.0125%" height="15" fill="rgb(247,41,16)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1023.50"></text></g><g><title>sled::config::Config::open (27 samples, 0.01%)</title><rect x="98.9564%" y="997" width="0.0125%" height="15" fill="rgb(233,168,40)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="1007.50"></text></g><g><title>sled::db::Db::start_inner (27 samples, 0.01%)</title><rect x="98.9564%" y="981" width="0.0125%" height="15" fill="rgb(205,211,8)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="991.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.01%)</title><rect x="98.9564%" y="965" width="0.0125%" height="15" fill="rgb(238,105,11)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (27 samples, 0.01%)</title><rect x="98.9564%" y="949" width="0.0125%" height="15" fill="rgb(223,142,52)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="959.50"></text></g><g><title>&lt;sled::metrics::Metrics as core::default::Default&gt;::default (27 samples, 0.01%)</title><rect x="98.9564%" y="933" width="0.0125%" height="15" fill="rgb(238,51,33)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="943.50"></text></g><g><title>&lt;sled::histogram::Histogram as core::default::Default&gt;::default (27 samples, 0.01%)</title><rect x="98.9564%" y="917" width="0.0125%" height="15" fill="rgb(231,188,43)" fg:x="213830" fg:w="27"/><text x="99.2064%" y="927.50"></text></g><g><title>[unknown] (145,692 samples, 67.42%)</title><rect x="31.5505%" y="1285" width="67.4235%" height="15" fill="rgb(216,92,17)" fg:x="68176" fg:w="145692"/><text x="31.8005%" y="1295.50">[unknown]</text></g><g><title>async_std::task::block_on::block_on (30 samples, 0.01%)</title><rect x="98.9740%" y="1013" width="0.0139%" height="15" fill="rgb(228,2,40)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="1023.50"></text></g><g><title>async_std::task::builder::Builder::blocking (30 samples, 0.01%)</title><rect x="98.9740%" y="997" width="0.0139%" height="15" fill="rgb(226,73,15)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::build (30 samples, 0.01%)</title><rect x="98.9740%" y="981" width="0.0139%" height="15" fill="rgb(227,66,46)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="991.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (30 samples, 0.01%)</title><rect x="98.9740%" y="965" width="0.0139%" height="15" fill="rgb(209,71,6)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="975.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (30 samples, 0.01%)</title><rect x="98.9740%" y="949" width="0.0139%" height="15" fill="rgb(246,100,25)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (30 samples, 0.01%)</title><rect x="98.9740%" y="933" width="0.0139%" height="15" fill="rgb(248,185,27)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="943.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (30 samples, 0.01%)</title><rect x="98.9740%" y="917" width="0.0139%" height="15" fill="rgb(225,118,47)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="927.50"></text></g><g><title>once_cell::imp::initialize_or_wait (30 samples, 0.01%)</title><rect x="98.9740%" y="901" width="0.0139%" height="15" fill="rgb(220,185,44)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.01%)</title><rect x="98.9740%" y="885" width="0.0139%" height="15" fill="rgb(227,95,24)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="895.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (30 samples, 0.01%)</title><rect x="98.9740%" y="869" width="0.0139%" height="15" fill="rgb(252,84,24)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (30 samples, 0.01%)</title><rect x="98.9740%" y="853" width="0.0139%" height="15" fill="rgb(240,34,44)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="863.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (30 samples, 0.01%)</title><rect x="98.9740%" y="837" width="0.0139%" height="15" fill="rgb(209,72,54)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (30 samples, 0.01%)</title><rect x="98.9740%" y="821" width="0.0139%" height="15" fill="rgb(226,19,45)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (30 samples, 0.01%)</title><rect x="98.9740%" y="805" width="0.0139%" height="15" fill="rgb(246,7,45)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="815.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}} (30 samples, 0.01%)</title><rect x="98.9740%" y="789" width="0.0139%" height="15" fill="rgb(225,45,2)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="799.50"></text></g><g><title>async_global_executor::init::init_with_config (30 samples, 0.01%)</title><rect x="98.9740%" y="773" width="0.0139%" height="15" fill="rgb(221,80,29)" fg:x="213868" fg:w="30"/><text x="99.2240%" y="783.50"></text></g><g><title>async_global_executor::init::init (29 samples, 0.01%)</title><rect x="98.9745%" y="757" width="0.0134%" height="15" fill="rgb(228,11,19)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="767.50"></text></g><g><title>async_global_executor::reactor::block_on (29 samples, 0.01%)</title><rect x="98.9745%" y="741" width="0.0134%" height="15" fill="rgb(243,17,21)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="751.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (29 samples, 0.01%)</title><rect x="98.9745%" y="725" width="0.0134%" height="15" fill="rgb(243,88,8)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="735.50"></text></g><g><title>async_io::driver::block_on (29 samples, 0.01%)</title><rect x="98.9745%" y="709" width="0.0134%" height="15" fill="rgb(214,17,9)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="719.50"></text></g><g><title>async_global_executor::init::init::{{closure}} (29 samples, 0.01%)</title><rect x="98.9745%" y="693" width="0.0134%" height="15" fill="rgb(232,169,15)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="703.50"></text></g><g><title>async_global_executor::threading::spawn_more_threads::{{closure}} (29 samples, 0.01%)</title><rect x="98.9745%" y="677" width="0.0134%" height="15" fill="rgb(232,86,53)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="687.50"></text></g><g><title>std::thread::Builder::spawn (29 samples, 0.01%)</title><rect x="98.9745%" y="661" width="0.0134%" height="15" fill="rgb(222,100,4)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (29 samples, 0.01%)</title><rect x="98.9745%" y="645" width="0.0134%" height="15" fill="rgb(253,151,38)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="655.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (29 samples, 0.01%)</title><rect x="98.9745%" y="629" width="0.0134%" height="15" fill="rgb(238,215,29)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="639.50"></text></g><g><title>std::sys::unix::thread::Thread::new (29 samples, 0.01%)</title><rect x="98.9745%" y="613" width="0.0134%" height="15" fill="rgb(205,128,53)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="623.50"></text></g><g><title>pthread_create (29 samples, 0.01%)</title><rect x="98.9745%" y="597" width="0.0134%" height="15" fill="rgb(248,183,14)" fg:x="213869" fg:w="29"/><text x="99.2245%" y="607.50"></text></g><g><title>floresta_chain::pruned_utreexo::chain_state::ChainState&lt;PersistedState&gt;::load_chain_state (27 samples, 0.01%)</title><rect x="98.9879%" y="997" width="0.0125%" height="15" fill="rgb(244,172,35)" fg:x="213898" fg:w="27"/><text x="99.2379%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;floresta_chain::pruned_utreexo::chainstore::KvChainStore&gt; (27 samples, 0.01%)</title><rect x="98.9879%" y="981" width="0.0125%" height="15" fill="rgb(234,93,19)" fg:x="213898" fg:w="27"/><text x="99.2379%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;kv::store::Store&gt; (27 samples, 0.01%)</title><rect x="98.9879%" y="965" width="0.0125%" height="15" fill="rgb(227,109,7)" fg:x="213898" fg:w="27"/><text x="99.2379%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::db::Db&gt; (27 samples, 0.01%)</title><rect x="98.9879%" y="949" width="0.0125%" height="15" fill="rgb(233,136,54)" fg:x="213898" fg:w="27"/><text x="99.2379%" y="959.50"></text></g><g><title>florestad::load_chain_state (32 samples, 0.01%)</title><rect x="98.9879%" y="1013" width="0.0148%" height="15" fill="rgb(233,19,40)" fg:x="213898" fg:w="32"/><text x="99.2379%" y="1023.50"></text></g><g><title>[libc.so.6] (65 samples, 0.03%)</title><rect x="98.9740%" y="1253" width="0.0301%" height="15" fill="rgb(247,41,18)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1263.50"></text></g><g><title>main (65 samples, 0.03%)</title><rect x="98.9740%" y="1237" width="0.0301%" height="15" fill="rgb(220,34,34)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1247.50"></text></g><g><title>std::rt::lang_start_internal (65 samples, 0.03%)</title><rect x="98.9740%" y="1221" width="0.0301%" height="15" fill="rgb(222,135,32)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (65 samples, 0.03%)</title><rect x="98.9740%" y="1205" width="0.0301%" height="15" fill="rgb(214,80,19)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1215.50"></text></g><g><title>std::panicking::try (65 samples, 0.03%)</title><rect x="98.9740%" y="1189" width="0.0301%" height="15" fill="rgb(234,54,46)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (65 samples, 0.03%)</title><rect x="98.9740%" y="1173" width="0.0301%" height="15" fill="rgb(251,48,23)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1183.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (65 samples, 0.03%)</title><rect x="98.9740%" y="1157" width="0.0301%" height="15" fill="rgb(254,109,52)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (65 samples, 0.03%)</title><rect x="98.9740%" y="1141" width="0.0301%" height="15" fill="rgb(240,186,19)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1151.50"></text></g><g><title>std::panicking::try (65 samples, 0.03%)</title><rect x="98.9740%" y="1125" width="0.0301%" height="15" fill="rgb(246,187,17)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (65 samples, 0.03%)</title><rect x="98.9740%" y="1109" width="0.0301%" height="15" fill="rgb(212,21,5)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (65 samples, 0.03%)</title><rect x="98.9740%" y="1093" width="0.0301%" height="15" fill="rgb(225,185,18)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1103.50"></text></g><g><title>std::rt::lang_start::{{closure}} (65 samples, 0.03%)</title><rect x="98.9740%" y="1077" width="0.0301%" height="15" fill="rgb(245,114,17)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (65 samples, 0.03%)</title><rect x="98.9740%" y="1061" width="0.0301%" height="15" fill="rgb(223,164,24)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (65 samples, 0.03%)</title><rect x="98.9740%" y="1045" width="0.0301%" height="15" fill="rgb(211,228,3)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1055.50"></text></g><g><title>florestad::main (65 samples, 0.03%)</title><rect x="98.9740%" y="1029" width="0.0301%" height="15" fill="rgb(223,16,38)" fg:x="213868" fg:w="65"/><text x="99.2240%" y="1039.50"></text></g><g><title>_start (77 samples, 0.04%)</title><rect x="98.9740%" y="1285" width="0.0356%" height="15" fill="rgb(207,31,54)" fg:x="213868" fg:w="77"/><text x="99.2240%" y="1295.50"></text></g><g><title>__libc_start_main (77 samples, 0.04%)</title><rect x="98.9740%" y="1269" width="0.0356%" height="15" fill="rgb(220,39,11)" fg:x="213868" fg:w="77"/><text x="99.2240%" y="1279.50"></text></g><g><title>florestad (145,876 samples, 67.51%)</title><rect x="31.5043%" y="1301" width="67.5086%" height="15" fill="rgb(235,185,0)" fg:x="68076" fg:w="145876"/><text x="31.7543%" y="1311.50">florestad</text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (23 samples, 0.01%)</title><rect x="99.0189%" y="757" width="0.0106%" height="15" fill="rgb(249,39,18)" fg:x="213965" fg:w="23"/><text x="99.2689%" y="767.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="99.0189%" y="741" width="0.0106%" height="15" fill="rgb(240,110,33)" fg:x="213965" fg:w="23"/><text x="99.2689%" y="751.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (23 samples, 0.01%)</title><rect x="99.0189%" y="725" width="0.0106%" height="15" fill="rgb(210,92,42)" fg:x="213965" fg:w="23"/><text x="99.2689%" y="735.50"></text></g><g><title>core::mem::drop (23 samples, 0.01%)</title><rect x="99.0189%" y="709" width="0.0106%" height="15" fill="rgb(218,215,28)" fg:x="213965" fg:w="23"/><text x="99.2689%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (23 samples, 0.01%)</title><rect x="99.0189%" y="693" width="0.0106%" height="15" fill="rgb(238,215,36)" fg:x="213965" fg:w="23"/><text x="99.2689%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (23 samples, 0.01%)</title><rect x="99.0189%" y="677" width="0.0106%" height="15" fill="rgb(220,31,10)" fg:x="213965" fg:w="23"/><text x="99.2689%" y="687.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (34 samples, 0.02%)</title><rect x="99.0184%" y="901" width="0.0157%" height="15" fill="rgb(212,93,14)" fg:x="213964" fg:w="34"/><text x="99.2684%" y="911.50"></text></g><g><title>core::mem::drop (34 samples, 0.02%)</title><rect x="99.0184%" y="885" width="0.0157%" height="15" fill="rgb(254,207,2)" fg:x="213964" fg:w="34"/><text x="99.2684%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (34 samples, 0.02%)</title><rect x="99.0184%" y="869" width="0.0157%" height="15" fill="rgb(205,57,44)" fg:x="213964" fg:w="34"/><text x="99.2684%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (34 samples, 0.02%)</title><rect x="99.0184%" y="853" width="0.0157%" height="15" fill="rgb(226,151,19)" fg:x="213964" fg:w="34"/><text x="99.2684%" y="863.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (34 samples, 0.02%)</title><rect x="99.0184%" y="837" width="0.0157%" height="15" fill="rgb(230,72,30)" fg:x="213964" fg:w="34"/><text x="99.2684%" y="847.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (34 samples, 0.02%)</title><rect x="99.0184%" y="821" width="0.0157%" height="15" fill="rgb(244,0,8)" fg:x="213964" fg:w="34"/><text x="99.2684%" y="831.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (33 samples, 0.02%)</title><rect x="99.0189%" y="805" width="0.0153%" height="15" fill="rgb(230,192,6)" fg:x="213965" fg:w="33"/><text x="99.2689%" y="815.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (33 samples, 0.02%)</title><rect x="99.0189%" y="789" width="0.0153%" height="15" fill="rgb(233,207,13)" fg:x="213965" fg:w="33"/><text x="99.2689%" y="799.50"></text></g><g><title>core::mem::drop (33 samples, 0.02%)</title><rect x="99.0189%" y="773" width="0.0153%" height="15" fill="rgb(206,227,7)" fg:x="213965" fg:w="33"/><text x="99.2689%" y="783.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pwrite_all (160 samples, 0.07%)</title><rect x="99.0416%" y="901" width="0.0740%" height="15" fill="rgb(213,217,25)" fg:x="214014" fg:w="160"/><text x="99.2916%" y="911.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (160 samples, 0.07%)</title><rect x="99.0416%" y="885" width="0.0740%" height="15" fill="rgb(249,75,4)" fg:x="214014" fg:w="160"/><text x="99.2916%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (160 samples, 0.07%)</title><rect x="99.0416%" y="869" width="0.0740%" height="15" fill="rgb(225,114,18)" fg:x="214014" fg:w="160"/><text x="99.2916%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::write_at (159 samples, 0.07%)</title><rect x="99.0420%" y="853" width="0.0736%" height="15" fill="rgb(211,162,40)" fg:x="214015" fg:w="159"/><text x="99.2920%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (159 samples, 0.07%)</title><rect x="99.0420%" y="837" width="0.0736%" height="15" fill="rgb(206,49,29)" fg:x="214015" fg:w="159"/><text x="99.2920%" y="847.50"></text></g><g><title>__libc_pwrite (159 samples, 0.07%)</title><rect x="99.0420%" y="821" width="0.0736%" height="15" fill="rgb(244,8,6)" fg:x="214015" fg:w="159"/><text x="99.2920%" y="831.50"></text></g><g><title>[unknown] (159 samples, 0.07%)</title><rect x="99.0420%" y="805" width="0.0736%" height="15" fill="rgb(231,194,28)" fg:x="214015" fg:w="159"/><text x="99.2920%" y="815.50"></text></g><g><title>[unknown] (159 samples, 0.07%)</title><rect x="99.0420%" y="789" width="0.0736%" height="15" fill="rgb(210,69,5)" fg:x="214015" fg:w="159"/><text x="99.2920%" y="799.50"></text></g><g><title>[unknown] (159 samples, 0.07%)</title><rect x="99.0420%" y="773" width="0.0736%" height="15" fill="rgb(216,186,12)" fg:x="214015" fg:w="159"/><text x="99.2920%" y="783.50"></text></g><g><title>[unknown] (159 samples, 0.07%)</title><rect x="99.0420%" y="757" width="0.0736%" height="15" fill="rgb(238,61,15)" fg:x="214015" fg:w="159"/><text x="99.2920%" y="767.50"></text></g><g><title>[unknown] (158 samples, 0.07%)</title><rect x="99.0425%" y="741" width="0.0731%" height="15" fill="rgb(226,104,1)" fg:x="214016" fg:w="158"/><text x="99.2925%" y="751.50"></text></g><g><title>[unknown] (158 samples, 0.07%)</title><rect x="99.0425%" y="725" width="0.0731%" height="15" fill="rgb(229,128,15)" fg:x="214016" fg:w="158"/><text x="99.2925%" y="735.50"></text></g><g><title>[unknown] (158 samples, 0.07%)</title><rect x="99.0425%" y="709" width="0.0731%" height="15" fill="rgb(247,110,15)" fg:x="214016" fg:w="158"/><text x="99.2925%" y="719.50"></text></g><g><title>[unknown] (150 samples, 0.07%)</title><rect x="99.0462%" y="693" width="0.0694%" height="15" fill="rgb(210,74,48)" fg:x="214024" fg:w="150"/><text x="99.2962%" y="703.50"></text></g><g><title>[unknown] (142 samples, 0.07%)</title><rect x="99.0499%" y="677" width="0.0657%" height="15" fill="rgb(246,121,10)" fg:x="214032" fg:w="142"/><text x="99.2999%" y="687.50"></text></g><g><title>[unknown] (128 samples, 0.06%)</title><rect x="99.0564%" y="661" width="0.0592%" height="15" fill="rgb(214,156,37)" fg:x="214046" fg:w="128"/><text x="99.3064%" y="671.50"></text></g><g><title>[unknown] (119 samples, 0.06%)</title><rect x="99.0606%" y="645" width="0.0551%" height="15" fill="rgb(214,210,34)" fg:x="214055" fg:w="119"/><text x="99.3106%" y="655.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="99.0800%" y="629" width="0.0356%" height="15" fill="rgb(237,93,35)" fg:x="214097" fg:w="77"/><text x="99.3300%" y="639.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.0925%" y="613" width="0.0231%" height="15" fill="rgb(206,36,8)" fg:x="214124" fg:w="50"/><text x="99.3425%" y="623.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="99.1045%" y="597" width="0.0111%" height="15" fill="rgb(208,151,12)" fg:x="214150" fg:w="24"/><text x="99.3545%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (264 samples, 0.12%)</title><rect x="99.0161%" y="981" width="0.1222%" height="15" fill="rgb(225,133,52)" fg:x="213959" fg:w="264"/><text x="99.2661%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (264 samples, 0.12%)</title><rect x="99.0161%" y="965" width="0.1222%" height="15" fill="rgb(231,71,53)" fg:x="213959" fg:w="264"/><text x="99.2661%" y="975.50"></text></g><g><title>sled::threadpool::spawn::{{closure}} (264 samples, 0.12%)</title><rect x="99.0161%" y="949" width="0.1222%" height="15" fill="rgb(243,76,21)" fg:x="213959" fg:w="264"/><text x="99.2661%" y="959.50"></text></g><g><title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}} (264 samples, 0.12%)</title><rect x="99.0161%" y="933" width="0.1222%" height="15" fill="rgb(252,144,3)" fg:x="213959" fg:w="264"/><text x="99.2661%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (262 samples, 0.12%)</title><rect x="99.0171%" y="917" width="0.1212%" height="15" fill="rgb(231,199,10)" fg:x="213961" fg:w="262"/><text x="99.2671%" y="927.50"></text></g><g><title>sync_file_range (48 samples, 0.02%)</title><rect x="99.1161%" y="901" width="0.0222%" height="15" fill="rgb(215,18,11)" fg:x="214175" fg:w="48"/><text x="99.3661%" y="911.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.1161%" y="885" width="0.0222%" height="15" fill="rgb(241,65,24)" fg:x="214175" fg:w="48"/><text x="99.3661%" y="895.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.1161%" y="869" width="0.0222%" height="15" fill="rgb(251,192,38)" fg:x="214175" fg:w="48"/><text x="99.3661%" y="879.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.1161%" y="853" width="0.0222%" height="15" fill="rgb(205,9,35)" fg:x="214175" fg:w="48"/><text x="99.3661%" y="863.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.1161%" y="837" width="0.0222%" height="15" fill="rgb(229,225,49)" fg:x="214175" fg:w="48"/><text x="99.3661%" y="847.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.1161%" y="821" width="0.0222%" height="15" fill="rgb(207,125,39)" fg:x="214175" fg:w="48"/><text x="99.3661%" y="831.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="99.1170%" y="805" width="0.0213%" height="15" fill="rgb(222,78,19)" fg:x="214177" fg:w="46"/><text x="99.3670%" y="815.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.1175%" y="789" width="0.0208%" height="15" fill="rgb(248,207,20)" fg:x="214178" fg:w="45"/><text x="99.3675%" y="799.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.1175%" y="773" width="0.0208%" height="15" fill="rgb(205,103,49)" fg:x="214178" fg:w="45"/><text x="99.3675%" y="783.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.1175%" y="757" width="0.0208%" height="15" fill="rgb(216,42,28)" fg:x="214178" fg:w="45"/><text x="99.3675%" y="767.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.1184%" y="741" width="0.0199%" height="15" fill="rgb(213,205,53)" fg:x="214180" fg:w="43"/><text x="99.3684%" y="751.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.1189%" y="725" width="0.0194%" height="15" fill="rgb(239,140,53)" fg:x="214181" fg:w="42"/><text x="99.3689%" y="735.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="99.1193%" y="709" width="0.0190%" height="15" fill="rgb(248,95,9)" fg:x="214182" fg:w="41"/><text x="99.3693%" y="719.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="99.1216%" y="693" width="0.0167%" height="15" fill="rgb(254,58,47)" fg:x="214187" fg:w="36"/><text x="99.3716%" y="703.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="99.1249%" y="677" width="0.0134%" height="15" fill="rgb(234,227,14)" fg:x="214194" fg:w="29"/><text x="99.3749%" y="687.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (73 samples, 0.03%)</title><rect x="99.1392%" y="885" width="0.0338%" height="15" fill="rgb(205,192,45)" fg:x="214225" fg:w="73"/><text x="99.3892%" y="895.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (72 samples, 0.03%)</title><rect x="99.1397%" y="869" width="0.0333%" height="15" fill="rgb(253,187,31)" fg:x="214226" fg:w="72"/><text x="99.3897%" y="879.50"></text></g><g><title>syscall (72 samples, 0.03%)</title><rect x="99.1397%" y="853" width="0.0333%" height="15" fill="rgb(222,6,32)" fg:x="214226" fg:w="72"/><text x="99.3897%" y="863.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="99.1397%" y="837" width="0.0333%" height="15" fill="rgb(249,190,19)" fg:x="214226" fg:w="72"/><text x="99.3897%" y="847.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="99.1397%" y="821" width="0.0333%" height="15" fill="rgb(251,28,20)" fg:x="214226" fg:w="72"/><text x="99.3897%" y="831.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="99.1397%" y="805" width="0.0333%" height="15" fill="rgb(210,223,40)" fg:x="214226" fg:w="72"/><text x="99.3897%" y="815.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="99.1397%" y="789" width="0.0333%" height="15" fill="rgb(216,137,22)" fg:x="214226" fg:w="72"/><text x="99.3897%" y="799.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="99.1397%" y="773" width="0.0333%" height="15" fill="rgb(247,39,34)" fg:x="214226" fg:w="72"/><text x="99.3897%" y="783.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="99.1397%" y="757" width="0.0333%" height="15" fill="rgb(239,43,50)" fg:x="214226" fg:w="72"/><text x="99.3897%" y="767.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="99.1406%" y="741" width="0.0324%" height="15" fill="rgb(241,212,9)" fg:x="214228" fg:w="70"/><text x="99.3906%" y="751.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="99.1415%" y="725" width="0.0315%" height="15" fill="rgb(205,8,2)" fg:x="214230" fg:w="68"/><text x="99.3915%" y="735.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="99.1415%" y="709" width="0.0315%" height="15" fill="rgb(217,173,54)" fg:x="214230" fg:w="68"/><text x="99.3915%" y="719.50"></text></g><g><title>[unknown] (63 samples, 0.03%)</title><rect x="99.1439%" y="693" width="0.0292%" height="15" fill="rgb(208,149,52)" fg:x="214235" fg:w="63"/><text x="99.3939%" y="703.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="99.1485%" y="677" width="0.0245%" height="15" fill="rgb(239,99,40)" fg:x="214245" fg:w="53"/><text x="99.3985%" y="687.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="99.1628%" y="661" width="0.0102%" height="15" fill="rgb(233,214,26)" fg:x="214276" fg:w="22"/><text x="99.4128%" y="671.50"></text></g><g><title>[libc.so.6] (342 samples, 0.16%)</title><rect x="99.0161%" y="1285" width="0.1583%" height="15" fill="rgb(231,225,37)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1295.50"></text></g><g><title>[libc.so.6] (342 samples, 0.16%)</title><rect x="99.0161%" y="1269" width="0.1583%" height="15" fill="rgb(252,55,35)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1279.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (342 samples, 0.16%)</title><rect x="99.0161%" y="1253" width="0.1583%" height="15" fill="rgb(239,43,18)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (342 samples, 0.16%)</title><rect x="99.0161%" y="1237" width="0.1583%" height="15" fill="rgb(251,125,49)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (342 samples, 0.16%)</title><rect x="99.0161%" y="1221" width="0.1583%" height="15" fill="rgb(212,83,54)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (342 samples, 0.16%)</title><rect x="99.0161%" y="1205" width="0.1583%" height="15" fill="rgb(250,75,6)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (342 samples, 0.16%)</title><rect x="99.0161%" y="1189" width="0.1583%" height="15" fill="rgb(252,36,40)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (342 samples, 0.16%)</title><rect x="99.0161%" y="1173" width="0.1583%" height="15" fill="rgb(230,91,51)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1183.50"></text></g><g><title>std::panicking::try (342 samples, 0.16%)</title><rect x="99.0161%" y="1157" width="0.1583%" height="15" fill="rgb(212,92,28)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (342 samples, 0.16%)</title><rect x="99.0161%" y="1141" width="0.1583%" height="15" fill="rgb(227,13,22)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (342 samples, 0.16%)</title><rect x="99.0161%" y="1125" width="0.1583%" height="15" fill="rgb(239,204,32)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (342 samples, 0.16%)</title><rect x="99.0161%" y="1109" width="0.1583%" height="15" fill="rgb(228,49,41)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (342 samples, 0.16%)</title><rect x="99.0161%" y="1093" width="0.1583%" height="15" fill="rgb(206,95,6)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1103.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (342 samples, 0.16%)</title><rect x="99.0161%" y="1077" width="0.1583%" height="15" fill="rgb(251,20,14)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (342 samples, 0.16%)</title><rect x="99.0161%" y="1061" width="0.1583%" height="15" fill="rgb(214,99,28)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1071.50"></text></g><g><title>std::panicking::try (342 samples, 0.16%)</title><rect x="99.0161%" y="1045" width="0.1583%" height="15" fill="rgb(239,122,54)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (342 samples, 0.16%)</title><rect x="99.0161%" y="1029" width="0.1583%" height="15" fill="rgb(218,217,46)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1039.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (342 samples, 0.16%)</title><rect x="99.0161%" y="1013" width="0.1583%" height="15" fill="rgb(249,106,28)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1023.50"></text></g><g><title>sled::threadpool::perform_work (342 samples, 0.16%)</title><rect x="99.0161%" y="997" width="0.1583%" height="15" fill="rgb(250,158,18)" fg:x="213959" fg:w="342"/><text x="99.2661%" y="1007.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (76 samples, 0.04%)</title><rect x="99.1392%" y="981" width="0.0352%" height="15" fill="rgb(226,137,29)" fg:x="214225" fg:w="76"/><text x="99.3892%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (76 samples, 0.04%)</title><rect x="99.1392%" y="965" width="0.0352%" height="15" fill="rgb(210,188,1)" fg:x="214225" fg:w="76"/><text x="99.3892%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (76 samples, 0.04%)</title><rect x="99.1392%" y="949" width="0.0352%" height="15" fill="rgb(227,84,42)" fg:x="214225" fg:w="76"/><text x="99.3892%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park (76 samples, 0.04%)</title><rect x="99.1392%" y="933" width="0.0352%" height="15" fill="rgb(222,147,48)" fg:x="214225" fg:w="76"/><text x="99.3892%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (76 samples, 0.04%)</title><rect x="99.1392%" y="917" width="0.0352%" height="15" fill="rgb(241,150,43)" fg:x="214225" fg:w="76"/><text x="99.3892%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (76 samples, 0.04%)</title><rect x="99.1392%" y="901" width="0.0352%" height="15" fill="rgb(206,139,52)" fg:x="214225" fg:w="76"/><text x="99.3892%" y="911.50"></text></g><g><title>sled-io-0 (343 samples, 0.16%)</title><rect x="99.0161%" y="1301" width="0.1587%" height="15" fill="rgb(230,63,14)" fg:x="213959" fg:w="343"/><text x="99.2661%" y="1311.50"></text></g><g><title>core::mem::drop (26 samples, 0.01%)</title><rect x="99.1758%" y="885" width="0.0120%" height="15" fill="rgb(247,8,20)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (26 samples, 0.01%)</title><rect x="99.1758%" y="869" width="0.0120%" height="15" fill="rgb(213,115,4)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (26 samples, 0.01%)</title><rect x="99.1758%" y="853" width="0.0120%" height="15" fill="rgb(241,79,49)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="863.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="99.1758%" y="837" width="0.0120%" height="15" fill="rgb(222,42,35)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="847.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (26 samples, 0.01%)</title><rect x="99.1758%" y="821" width="0.0120%" height="15" fill="rgb(247,59,23)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="831.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (26 samples, 0.01%)</title><rect x="99.1758%" y="805" width="0.0120%" height="15" fill="rgb(247,93,18)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="815.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (26 samples, 0.01%)</title><rect x="99.1758%" y="789" width="0.0120%" height="15" fill="rgb(249,107,47)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="799.50"></text></g><g><title>core::mem::drop (26 samples, 0.01%)</title><rect x="99.1758%" y="773" width="0.0120%" height="15" fill="rgb(219,27,1)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (26 samples, 0.01%)</title><rect x="99.1758%" y="757" width="0.0120%" height="15" fill="rgb(217,82,32)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="767.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="99.1758%" y="741" width="0.0120%" height="15" fill="rgb(250,129,47)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="751.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (26 samples, 0.01%)</title><rect x="99.1758%" y="725" width="0.0120%" height="15" fill="rgb(253,88,35)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="735.50"></text></g><g><title>core::mem::drop (26 samples, 0.01%)</title><rect x="99.1758%" y="709" width="0.0120%" height="15" fill="rgb(245,221,14)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (26 samples, 0.01%)</title><rect x="99.1758%" y="693" width="0.0120%" height="15" fill="rgb(217,119,54)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (26 samples, 0.01%)</title><rect x="99.1758%" y="677" width="0.0120%" height="15" fill="rgb(247,128,31)" fg:x="214304" fg:w="26"/><text x="99.4258%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (24 samples, 0.01%)</title><rect x="99.1767%" y="661" width="0.0111%" height="15" fill="rgb(211,99,22)" fg:x="214306" fg:w="24"/><text x="99.4267%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (24 samples, 0.01%)</title><rect x="99.1767%" y="645" width="0.0111%" height="15" fill="rgb(212,20,17)" fg:x="214306" fg:w="24"/><text x="99.4267%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (24 samples, 0.01%)</title><rect x="99.1767%" y="629" width="0.0111%" height="15" fill="rgb(209,159,29)" fg:x="214306" fg:w="24"/><text x="99.4267%" y="639.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (27 samples, 0.01%)</title><rect x="99.1758%" y="901" width="0.0125%" height="15" fill="rgb(222,177,53)" fg:x="214304" fg:w="27"/><text x="99.4258%" y="911.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pwrite_all (150 samples, 0.07%)</title><rect x="99.1920%" y="901" width="0.0694%" height="15" fill="rgb(234,46,43)" fg:x="214339" fg:w="150"/><text x="99.4420%" y="911.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (150 samples, 0.07%)</title><rect x="99.1920%" y="885" width="0.0694%" height="15" fill="rgb(208,108,14)" fg:x="214339" fg:w="150"/><text x="99.4420%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (150 samples, 0.07%)</title><rect x="99.1920%" y="869" width="0.0694%" height="15" fill="rgb(226,78,53)" fg:x="214339" fg:w="150"/><text x="99.4420%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::write_at (150 samples, 0.07%)</title><rect x="99.1920%" y="853" width="0.0694%" height="15" fill="rgb(230,20,41)" fg:x="214339" fg:w="150"/><text x="99.4420%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (150 samples, 0.07%)</title><rect x="99.1920%" y="837" width="0.0694%" height="15" fill="rgb(213,195,35)" fg:x="214339" fg:w="150"/><text x="99.4420%" y="847.50"></text></g><g><title>__libc_pwrite (150 samples, 0.07%)</title><rect x="99.1920%" y="821" width="0.0694%" height="15" fill="rgb(242,62,36)" fg:x="214339" fg:w="150"/><text x="99.4420%" y="831.50"></text></g><g><title>[unknown] (150 samples, 0.07%)</title><rect x="99.1920%" y="805" width="0.0694%" height="15" fill="rgb(222,210,37)" fg:x="214339" fg:w="150"/><text x="99.4420%" y="815.50"></text></g><g><title>[unknown] (150 samples, 0.07%)</title><rect x="99.1920%" y="789" width="0.0694%" height="15" fill="rgb(232,107,19)" fg:x="214339" fg:w="150"/><text x="99.4420%" y="799.50"></text></g><g><title>[unknown] (149 samples, 0.07%)</title><rect x="99.1924%" y="773" width="0.0690%" height="15" fill="rgb(235,85,17)" fg:x="214340" fg:w="149"/><text x="99.4424%" y="783.50"></text></g><g><title>[unknown] (149 samples, 0.07%)</title><rect x="99.1924%" y="757" width="0.0690%" height="15" fill="rgb(219,195,31)" fg:x="214340" fg:w="149"/><text x="99.4424%" y="767.50"></text></g><g><title>[unknown] (149 samples, 0.07%)</title><rect x="99.1924%" y="741" width="0.0690%" height="15" fill="rgb(231,183,30)" fg:x="214340" fg:w="149"/><text x="99.4424%" y="751.50"></text></g><g><title>[unknown] (148 samples, 0.07%)</title><rect x="99.1929%" y="725" width="0.0685%" height="15" fill="rgb(212,0,11)" fg:x="214341" fg:w="148"/><text x="99.4429%" y="735.50"></text></g><g><title>[unknown] (148 samples, 0.07%)</title><rect x="99.1929%" y="709" width="0.0685%" height="15" fill="rgb(249,53,54)" fg:x="214341" fg:w="148"/><text x="99.4429%" y="719.50"></text></g><g><title>[unknown] (145 samples, 0.07%)</title><rect x="99.1943%" y="693" width="0.0671%" height="15" fill="rgb(211,118,13)" fg:x="214344" fg:w="145"/><text x="99.4443%" y="703.50"></text></g><g><title>[unknown] (134 samples, 0.06%)</title><rect x="99.1994%" y="677" width="0.0620%" height="15" fill="rgb(237,42,9)" fg:x="214355" fg:w="134"/><text x="99.4494%" y="687.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="99.2040%" y="661" width="0.0574%" height="15" fill="rgb(227,68,32)" fg:x="214365" fg:w="124"/><text x="99.4540%" y="671.50"></text></g><g><title>[unknown] (113 samples, 0.05%)</title><rect x="99.2091%" y="645" width="0.0523%" height="15" fill="rgb(238,10,7)" fg:x="214376" fg:w="113"/><text x="99.4591%" y="655.50"></text></g><g><title>[unknown] (95 samples, 0.04%)</title><rect x="99.2174%" y="629" width="0.0440%" height="15" fill="rgb(224,42,12)" fg:x="214394" fg:w="95"/><text x="99.4674%" y="639.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.2332%" y="613" width="0.0282%" height="15" fill="rgb(252,190,5)" fg:x="214428" fg:w="61"/><text x="99.4832%" y="623.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="99.2471%" y="597" width="0.0143%" height="15" fill="rgb(220,214,39)" fg:x="214458" fg:w="31"/><text x="99.4971%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (231 samples, 0.11%)</title><rect x="99.1749%" y="981" width="0.1069%" height="15" fill="rgb(247,98,4)" fg:x="214302" fg:w="231"/><text x="99.4249%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (231 samples, 0.11%)</title><rect x="99.1749%" y="965" width="0.1069%" height="15" fill="rgb(211,60,12)" fg:x="214302" fg:w="231"/><text x="99.4249%" y="975.50"></text></g><g><title>sled::threadpool::spawn::{{closure}} (231 samples, 0.11%)</title><rect x="99.1749%" y="949" width="0.1069%" height="15" fill="rgb(224,42,10)" fg:x="214302" fg:w="231"/><text x="99.4249%" y="959.50"></text></g><g><title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}} (231 samples, 0.11%)</title><rect x="99.1749%" y="933" width="0.1069%" height="15" fill="rgb(217,167,4)" fg:x="214302" fg:w="231"/><text x="99.4249%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (229 samples, 0.11%)</title><rect x="99.1758%" y="917" width="0.1060%" height="15" fill="rgb(253,18,17)" fg:x="214304" fg:w="229"/><text x="99.4258%" y="927.50"></text></g><g><title>sync_file_range (44 samples, 0.02%)</title><rect x="99.2614%" y="901" width="0.0204%" height="15" fill="rgb(249,186,44)" fg:x="214489" fg:w="44"/><text x="99.5114%" y="911.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.2614%" y="885" width="0.0204%" height="15" fill="rgb(254,124,54)" fg:x="214489" fg:w="44"/><text x="99.5114%" y="895.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.2619%" y="869" width="0.0199%" height="15" fill="rgb(220,124,39)" fg:x="214490" fg:w="43"/><text x="99.5119%" y="879.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.2619%" y="853" width="0.0199%" height="15" fill="rgb(225,96,46)" fg:x="214490" fg:w="43"/><text x="99.5119%" y="863.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.2619%" y="837" width="0.0199%" height="15" fill="rgb(221,106,12)" fg:x="214490" fg:w="43"/><text x="99.5119%" y="847.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.2619%" y="821" width="0.0199%" height="15" fill="rgb(227,133,23)" fg:x="214490" fg:w="43"/><text x="99.5119%" y="831.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.2619%" y="805" width="0.0199%" height="15" fill="rgb(216,44,52)" fg:x="214490" fg:w="43"/><text x="99.5119%" y="815.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="99.2628%" y="789" width="0.0190%" height="15" fill="rgb(239,149,7)" fg:x="214492" fg:w="41"/><text x="99.5128%" y="799.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.2642%" y="773" width="0.0176%" height="15" fill="rgb(211,157,31)" fg:x="214495" fg:w="38"/><text x="99.5142%" y="783.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.2646%" y="757" width="0.0171%" height="15" fill="rgb(206,215,22)" fg:x="214496" fg:w="37"/><text x="99.5146%" y="767.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="99.2651%" y="741" width="0.0167%" height="15" fill="rgb(208,113,15)" fg:x="214497" fg:w="36"/><text x="99.5151%" y="751.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="99.2670%" y="725" width="0.0148%" height="15" fill="rgb(207,189,15)" fg:x="214501" fg:w="32"/><text x="99.5170%" y="735.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="99.2688%" y="709" width="0.0130%" height="15" fill="rgb(231,115,4)" fg:x="214505" fg:w="28"/><text x="99.5188%" y="719.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="99.2707%" y="693" width="0.0111%" height="15" fill="rgb(253,117,2)" fg:x="214509" fg:w="24"/><text x="99.5207%" y="703.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (52 samples, 0.02%)</title><rect x="99.2832%" y="885" width="0.0241%" height="15" fill="rgb(248,48,24)" fg:x="214536" fg:w="52"/><text x="99.5332%" y="895.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (52 samples, 0.02%)</title><rect x="99.2832%" y="869" width="0.0241%" height="15" fill="rgb(241,28,46)" fg:x="214536" fg:w="52"/><text x="99.5332%" y="879.50"></text></g><g><title>syscall (52 samples, 0.02%)</title><rect x="99.2832%" y="853" width="0.0241%" height="15" fill="rgb(216,165,52)" fg:x="214536" fg:w="52"/><text x="99.5332%" y="863.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.2832%" y="837" width="0.0241%" height="15" fill="rgb(220,222,34)" fg:x="214536" fg:w="52"/><text x="99.5332%" y="847.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.2832%" y="821" width="0.0241%" height="15" fill="rgb(247,222,49)" fg:x="214536" fg:w="52"/><text x="99.5332%" y="831.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.2832%" y="805" width="0.0241%" height="15" fill="rgb(240,10,31)" fg:x="214536" fg:w="52"/><text x="99.5332%" y="815.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.2836%" y="789" width="0.0236%" height="15" fill="rgb(221,199,35)" fg:x="214537" fg:w="51"/><text x="99.5336%" y="799.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.2841%" y="773" width="0.0231%" height="15" fill="rgb(230,223,11)" fg:x="214538" fg:w="50"/><text x="99.5341%" y="783.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.2845%" y="757" width="0.0227%" height="15" fill="rgb(218,82,45)" fg:x="214539" fg:w="49"/><text x="99.5345%" y="767.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.2850%" y="741" width="0.0222%" height="15" fill="rgb(233,213,33)" fg:x="214540" fg:w="48"/><text x="99.5350%" y="751.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="99.2859%" y="725" width="0.0213%" height="15" fill="rgb(210,143,52)" fg:x="214542" fg:w="46"/><text x="99.5359%" y="735.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.2869%" y="709" width="0.0204%" height="15" fill="rgb(206,95,4)" fg:x="214544" fg:w="44"/><text x="99.5369%" y="719.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.2869%" y="693" width="0.0204%" height="15" fill="rgb(246,164,46)" fg:x="214544" fg:w="44"/><text x="99.5369%" y="703.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="99.2956%" y="677" width="0.0116%" height="15" fill="rgb(213,210,47)" fg:x="214563" fg:w="25"/><text x="99.5456%" y="687.50"></text></g><g><title>sled-io-1 (293 samples, 0.14%)</title><rect x="99.1749%" y="1301" width="0.1356%" height="15" fill="rgb(210,12,38)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1311.50"></text></g><g><title>[libc.so.6] (293 samples, 0.14%)</title><rect x="99.1749%" y="1285" width="0.1356%" height="15" fill="rgb(252,192,54)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1295.50"></text></g><g><title>[libc.so.6] (293 samples, 0.14%)</title><rect x="99.1749%" y="1269" width="0.1356%" height="15" fill="rgb(242,92,6)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1279.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (293 samples, 0.14%)</title><rect x="99.1749%" y="1253" width="0.1356%" height="15" fill="rgb(253,154,15)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (293 samples, 0.14%)</title><rect x="99.1749%" y="1237" width="0.1356%" height="15" fill="rgb(209,20,43)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (293 samples, 0.14%)</title><rect x="99.1749%" y="1221" width="0.1356%" height="15" fill="rgb(232,28,49)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (293 samples, 0.14%)</title><rect x="99.1749%" y="1205" width="0.1356%" height="15" fill="rgb(248,131,53)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (293 samples, 0.14%)</title><rect x="99.1749%" y="1189" width="0.1356%" height="15" fill="rgb(214,16,30)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (293 samples, 0.14%)</title><rect x="99.1749%" y="1173" width="0.1356%" height="15" fill="rgb(245,16,0)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1183.50"></text></g><g><title>std::panicking::try (293 samples, 0.14%)</title><rect x="99.1749%" y="1157" width="0.1356%" height="15" fill="rgb(245,17,35)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (293 samples, 0.14%)</title><rect x="99.1749%" y="1141" width="0.1356%" height="15" fill="rgb(249,27,53)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (293 samples, 0.14%)</title><rect x="99.1749%" y="1125" width="0.1356%" height="15" fill="rgb(214,73,24)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (293 samples, 0.14%)</title><rect x="99.1749%" y="1109" width="0.1356%" height="15" fill="rgb(223,84,37)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (293 samples, 0.14%)</title><rect x="99.1749%" y="1093" width="0.1356%" height="15" fill="rgb(210,109,28)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1103.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (293 samples, 0.14%)</title><rect x="99.1749%" y="1077" width="0.1356%" height="15" fill="rgb(208,186,6)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (293 samples, 0.14%)</title><rect x="99.1749%" y="1061" width="0.1356%" height="15" fill="rgb(235,201,30)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1071.50"></text></g><g><title>std::panicking::try (293 samples, 0.14%)</title><rect x="99.1749%" y="1045" width="0.1356%" height="15" fill="rgb(216,198,48)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (293 samples, 0.14%)</title><rect x="99.1749%" y="1029" width="0.1356%" height="15" fill="rgb(254,186,25)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1039.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (293 samples, 0.14%)</title><rect x="99.1749%" y="1013" width="0.1356%" height="15" fill="rgb(227,87,5)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1023.50"></text></g><g><title>sled::threadpool::perform_work (293 samples, 0.14%)</title><rect x="99.1749%" y="997" width="0.1356%" height="15" fill="rgb(236,205,25)" fg:x="214302" fg:w="293"/><text x="99.4249%" y="1007.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (60 samples, 0.03%)</title><rect x="99.2827%" y="981" width="0.0278%" height="15" fill="rgb(229,99,32)" fg:x="214535" fg:w="60"/><text x="99.5327%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (60 samples, 0.03%)</title><rect x="99.2827%" y="965" width="0.0278%" height="15" fill="rgb(231,177,31)" fg:x="214535" fg:w="60"/><text x="99.5327%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (60 samples, 0.03%)</title><rect x="99.2827%" y="949" width="0.0278%" height="15" fill="rgb(246,15,2)" fg:x="214535" fg:w="60"/><text x="99.5327%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park (59 samples, 0.03%)</title><rect x="99.2832%" y="933" width="0.0273%" height="15" fill="rgb(207,39,15)" fg:x="214536" fg:w="59"/><text x="99.5332%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (59 samples, 0.03%)</title><rect x="99.2832%" y="917" width="0.0273%" height="15" fill="rgb(207,44,9)" fg:x="214536" fg:w="59"/><text x="99.5332%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (59 samples, 0.03%)</title><rect x="99.2832%" y="901" width="0.0273%" height="15" fill="rgb(225,224,33)" fg:x="214536" fg:w="59"/><text x="99.5332%" y="911.50"></text></g><g><title>core::mem::drop (24 samples, 0.01%)</title><rect x="99.3109%" y="885" width="0.0111%" height="15" fill="rgb(252,151,3)" fg:x="214596" fg:w="24"/><text x="99.5609%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (24 samples, 0.01%)</title><rect x="99.3109%" y="869" width="0.0111%" height="15" fill="rgb(211,140,13)" fg:x="214596" fg:w="24"/><text x="99.5609%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (24 samples, 0.01%)</title><rect x="99.3109%" y="853" width="0.0111%" height="15" fill="rgb(239,225,17)" fg:x="214596" fg:w="24"/><text x="99.5609%" y="863.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (24 samples, 0.01%)</title><rect x="99.3109%" y="837" width="0.0111%" height="15" fill="rgb(223,170,52)" fg:x="214596" fg:w="24"/><text x="99.5609%" y="847.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (24 samples, 0.01%)</title><rect x="99.3109%" y="821" width="0.0111%" height="15" fill="rgb(212,64,21)" fg:x="214596" fg:w="24"/><text x="99.5609%" y="831.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (22 samples, 0.01%)</title><rect x="99.3118%" y="805" width="0.0102%" height="15" fill="rgb(236,126,48)" fg:x="214598" fg:w="22"/><text x="99.5618%" y="815.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (22 samples, 0.01%)</title><rect x="99.3118%" y="789" width="0.0102%" height="15" fill="rgb(209,135,11)" fg:x="214598" fg:w="22"/><text x="99.5618%" y="799.50"></text></g><g><title>core::mem::drop (22 samples, 0.01%)</title><rect x="99.3118%" y="773" width="0.0102%" height="15" fill="rgb(228,126,40)" fg:x="214598" fg:w="22"/><text x="99.5618%" y="783.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (25 samples, 0.01%)</title><rect x="99.3109%" y="901" width="0.0116%" height="15" fill="rgb(205,196,36)" fg:x="214596" fg:w="25"/><text x="99.5609%" y="911.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pwrite_all (152 samples, 0.07%)</title><rect x="99.3267%" y="901" width="0.0703%" height="15" fill="rgb(243,160,33)" fg:x="214630" fg:w="152"/><text x="99.5767%" y="911.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (152 samples, 0.07%)</title><rect x="99.3267%" y="885" width="0.0703%" height="15" fill="rgb(210,84,20)" fg:x="214630" fg:w="152"/><text x="99.5767%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (152 samples, 0.07%)</title><rect x="99.3267%" y="869" width="0.0703%" height="15" fill="rgb(228,213,30)" fg:x="214630" fg:w="152"/><text x="99.5767%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::write_at (152 samples, 0.07%)</title><rect x="99.3267%" y="853" width="0.0703%" height="15" fill="rgb(252,33,45)" fg:x="214630" fg:w="152"/><text x="99.5767%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (152 samples, 0.07%)</title><rect x="99.3267%" y="837" width="0.0703%" height="15" fill="rgb(254,227,20)" fg:x="214630" fg:w="152"/><text x="99.5767%" y="847.50"></text></g><g><title>__libc_pwrite (152 samples, 0.07%)</title><rect x="99.3267%" y="821" width="0.0703%" height="15" fill="rgb(228,192,2)" fg:x="214630" fg:w="152"/><text x="99.5767%" y="831.50"></text></g><g><title>[unknown] (152 samples, 0.07%)</title><rect x="99.3267%" y="805" width="0.0703%" height="15" fill="rgb(233,32,8)" fg:x="214630" fg:w="152"/><text x="99.5767%" y="815.50"></text></g><g><title>[unknown] (152 samples, 0.07%)</title><rect x="99.3267%" y="789" width="0.0703%" height="15" fill="rgb(220,146,47)" fg:x="214630" fg:w="152"/><text x="99.5767%" y="799.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.3271%" y="773" width="0.0699%" height="15" fill="rgb(246,194,1)" fg:x="214631" fg:w="151"/><text x="99.5771%" y="783.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.3271%" y="757" width="0.0699%" height="15" fill="rgb(218,203,9)" fg:x="214631" fg:w="151"/><text x="99.5771%" y="767.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.3271%" y="741" width="0.0699%" height="15" fill="rgb(237,97,14)" fg:x="214631" fg:w="151"/><text x="99.5771%" y="751.50"></text></g><g><title>[unknown] (150 samples, 0.07%)</title><rect x="99.3276%" y="725" width="0.0694%" height="15" fill="rgb(239,76,15)" fg:x="214632" fg:w="150"/><text x="99.5776%" y="735.50"></text></g><g><title>[unknown] (148 samples, 0.07%)</title><rect x="99.3285%" y="709" width="0.0685%" height="15" fill="rgb(222,53,45)" fg:x="214634" fg:w="148"/><text x="99.5785%" y="719.50"></text></g><g><title>[unknown] (142 samples, 0.07%)</title><rect x="99.3313%" y="693" width="0.0657%" height="15" fill="rgb(237,88,5)" fg:x="214640" fg:w="142"/><text x="99.5813%" y="703.50"></text></g><g><title>[unknown] (132 samples, 0.06%)</title><rect x="99.3359%" y="677" width="0.0611%" height="15" fill="rgb(218,223,35)" fg:x="214650" fg:w="132"/><text x="99.5859%" y="687.50"></text></g><g><title>[unknown] (120 samples, 0.06%)</title><rect x="99.3415%" y="661" width="0.0555%" height="15" fill="rgb(243,229,38)" fg:x="214662" fg:w="120"/><text x="99.5915%" y="671.50"></text></g><g><title>[unknown] (110 samples, 0.05%)</title><rect x="99.3461%" y="645" width="0.0509%" height="15" fill="rgb(240,75,41)" fg:x="214672" fg:w="110"/><text x="99.5961%" y="655.50"></text></g><g><title>[unknown] (91 samples, 0.04%)</title><rect x="99.3549%" y="629" width="0.0421%" height="15" fill="rgb(209,110,37)" fg:x="214691" fg:w="91"/><text x="99.6049%" y="639.50"></text></g><g><title>[unknown] (67 samples, 0.03%)</title><rect x="99.3660%" y="613" width="0.0310%" height="15" fill="rgb(221,130,46)" fg:x="214715" fg:w="67"/><text x="99.6160%" y="623.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.3799%" y="597" width="0.0171%" height="15" fill="rgb(237,160,20)" fg:x="214745" fg:w="37"/><text x="99.6299%" y="607.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="99.3850%" y="581" width="0.0120%" height="15" fill="rgb(234,126,24)" fg:x="214756" fg:w="26"/><text x="99.6350%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (256 samples, 0.12%)</title><rect x="99.3105%" y="981" width="0.1185%" height="15" fill="rgb(207,177,9)" fg:x="214595" fg:w="256"/><text x="99.5605%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (256 samples, 0.12%)</title><rect x="99.3105%" y="965" width="0.1185%" height="15" fill="rgb(231,191,33)" fg:x="214595" fg:w="256"/><text x="99.5605%" y="975.50"></text></g><g><title>sled::threadpool::spawn::{{closure}} (256 samples, 0.12%)</title><rect x="99.3105%" y="949" width="0.1185%" height="15" fill="rgb(207,42,1)" fg:x="214595" fg:w="256"/><text x="99.5605%" y="959.50"></text></g><g><title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}} (256 samples, 0.12%)</title><rect x="99.3105%" y="933" width="0.1185%" height="15" fill="rgb(218,34,50)" fg:x="214595" fg:w="256"/><text x="99.5605%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (256 samples, 0.12%)</title><rect x="99.3105%" y="917" width="0.1185%" height="15" fill="rgb(254,126,39)" fg:x="214595" fg:w="256"/><text x="99.5605%" y="927.50"></text></g><g><title>sync_file_range (61 samples, 0.03%)</title><rect x="99.4007%" y="901" width="0.0282%" height="15" fill="rgb(251,17,26)" fg:x="214790" fg:w="61"/><text x="99.6507%" y="911.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.4007%" y="885" width="0.0282%" height="15" fill="rgb(252,215,34)" fg:x="214790" fg:w="61"/><text x="99.6507%" y="895.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.4007%" y="869" width="0.0282%" height="15" fill="rgb(217,120,44)" fg:x="214790" fg:w="61"/><text x="99.6507%" y="879.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="99.4012%" y="853" width="0.0278%" height="15" fill="rgb(211,31,11)" fg:x="214791" fg:w="60"/><text x="99.6512%" y="863.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="99.4012%" y="837" width="0.0278%" height="15" fill="rgb(222,69,51)" fg:x="214791" fg:w="60"/><text x="99.6512%" y="847.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="99.4012%" y="821" width="0.0278%" height="15" fill="rgb(215,229,42)" fg:x="214791" fg:w="60"/><text x="99.6512%" y="831.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="99.4012%" y="805" width="0.0278%" height="15" fill="rgb(212,102,15)" fg:x="214791" fg:w="60"/><text x="99.6512%" y="815.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="99.4021%" y="789" width="0.0268%" height="15" fill="rgb(205,179,41)" fg:x="214793" fg:w="58"/><text x="99.6521%" y="799.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="99.4025%" y="773" width="0.0264%" height="15" fill="rgb(219,148,46)" fg:x="214794" fg:w="57"/><text x="99.6525%" y="783.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="99.4025%" y="757" width="0.0264%" height="15" fill="rgb(243,40,19)" fg:x="214794" fg:w="57"/><text x="99.6525%" y="767.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.4030%" y="741" width="0.0259%" height="15" fill="rgb(208,206,34)" fg:x="214795" fg:w="56"/><text x="99.6530%" y="751.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.4030%" y="725" width="0.0259%" height="15" fill="rgb(244,184,38)" fg:x="214795" fg:w="56"/><text x="99.6530%" y="735.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.4049%" y="709" width="0.0241%" height="15" fill="rgb(244,151,47)" fg:x="214799" fg:w="52"/><text x="99.6549%" y="719.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.4081%" y="693" width="0.0208%" height="15" fill="rgb(236,134,42)" fg:x="214806" fg:w="45"/><text x="99.6581%" y="703.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="99.4137%" y="677" width="0.0153%" height="15" fill="rgb(233,93,22)" fg:x="214818" fg:w="33"/><text x="99.6637%" y="687.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (51 samples, 0.02%)</title><rect x="99.4303%" y="885" width="0.0236%" height="15" fill="rgb(211,202,10)" fg:x="214854" fg:w="51"/><text x="99.6803%" y="895.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (50 samples, 0.02%)</title><rect x="99.4308%" y="869" width="0.0231%" height="15" fill="rgb(240,63,8)" fg:x="214855" fg:w="50"/><text x="99.6808%" y="879.50"></text></g><g><title>syscall (50 samples, 0.02%)</title><rect x="99.4308%" y="853" width="0.0231%" height="15" fill="rgb(214,9,4)" fg:x="214855" fg:w="50"/><text x="99.6808%" y="863.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.4308%" y="837" width="0.0231%" height="15" fill="rgb(243,66,45)" fg:x="214855" fg:w="50"/><text x="99.6808%" y="847.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.4312%" y="821" width="0.0227%" height="15" fill="rgb(220,50,42)" fg:x="214856" fg:w="49"/><text x="99.6812%" y="831.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.4312%" y="805" width="0.0227%" height="15" fill="rgb(220,134,27)" fg:x="214856" fg:w="49"/><text x="99.6812%" y="815.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.4317%" y="789" width="0.0222%" height="15" fill="rgb(246,151,50)" fg:x="214857" fg:w="48"/><text x="99.6817%" y="799.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.4317%" y="773" width="0.0222%" height="15" fill="rgb(238,216,27)" fg:x="214857" fg:w="48"/><text x="99.6817%" y="783.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.4317%" y="757" width="0.0222%" height="15" fill="rgb(250,92,11)" fg:x="214857" fg:w="48"/><text x="99.6817%" y="767.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.4317%" y="741" width="0.0222%" height="15" fill="rgb(248,183,6)" fg:x="214857" fg:w="48"/><text x="99.6817%" y="751.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.4317%" y="725" width="0.0222%" height="15" fill="rgb(211,204,50)" fg:x="214857" fg:w="48"/><text x="99.6817%" y="735.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.4317%" y="709" width="0.0222%" height="15" fill="rgb(252,55,47)" fg:x="214857" fg:w="48"/><text x="99.6817%" y="719.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="99.4326%" y="693" width="0.0213%" height="15" fill="rgb(240,198,32)" fg:x="214859" fg:w="46"/><text x="99.6826%" y="703.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="99.4382%" y="677" width="0.0157%" height="15" fill="rgb(224,203,19)" fg:x="214871" fg:w="34"/><text x="99.6882%" y="687.50"></text></g><g><title>[libc.so.6] (312 samples, 0.14%)</title><rect x="99.3105%" y="1285" width="0.1444%" height="15" fill="rgb(205,27,16)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1295.50"></text></g><g><title>[libc.so.6] (312 samples, 0.14%)</title><rect x="99.3105%" y="1269" width="0.1444%" height="15" fill="rgb(224,226,17)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1279.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (312 samples, 0.14%)</title><rect x="99.3105%" y="1253" width="0.1444%" height="15" fill="rgb(205,216,54)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (312 samples, 0.14%)</title><rect x="99.3105%" y="1237" width="0.1444%" height="15" fill="rgb(248,168,46)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (312 samples, 0.14%)</title><rect x="99.3105%" y="1221" width="0.1444%" height="15" fill="rgb(226,111,45)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (312 samples, 0.14%)</title><rect x="99.3105%" y="1205" width="0.1444%" height="15" fill="rgb(231,15,9)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (312 samples, 0.14%)</title><rect x="99.3105%" y="1189" width="0.1444%" height="15" fill="rgb(243,168,3)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (312 samples, 0.14%)</title><rect x="99.3105%" y="1173" width="0.1444%" height="15" fill="rgb(221,220,54)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1183.50"></text></g><g><title>std::panicking::try (312 samples, 0.14%)</title><rect x="99.3105%" y="1157" width="0.1444%" height="15" fill="rgb(232,174,38)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (312 samples, 0.14%)</title><rect x="99.3105%" y="1141" width="0.1444%" height="15" fill="rgb(205,14,38)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (312 samples, 0.14%)</title><rect x="99.3105%" y="1125" width="0.1444%" height="15" fill="rgb(234,89,19)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (312 samples, 0.14%)</title><rect x="99.3105%" y="1109" width="0.1444%" height="15" fill="rgb(216,68,51)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (312 samples, 0.14%)</title><rect x="99.3105%" y="1093" width="0.1444%" height="15" fill="rgb(213,49,2)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1103.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (312 samples, 0.14%)</title><rect x="99.3105%" y="1077" width="0.1444%" height="15" fill="rgb(242,146,30)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (312 samples, 0.14%)</title><rect x="99.3105%" y="1061" width="0.1444%" height="15" fill="rgb(224,188,11)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1071.50"></text></g><g><title>std::panicking::try (312 samples, 0.14%)</title><rect x="99.3105%" y="1045" width="0.1444%" height="15" fill="rgb(213,159,11)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (312 samples, 0.14%)</title><rect x="99.3105%" y="1029" width="0.1444%" height="15" fill="rgb(229,13,31)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1039.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (312 samples, 0.14%)</title><rect x="99.3105%" y="1013" width="0.1444%" height="15" fill="rgb(209,103,11)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1023.50"></text></g><g><title>sled::threadpool::perform_work (312 samples, 0.14%)</title><rect x="99.3105%" y="997" width="0.1444%" height="15" fill="rgb(206,3,4)" fg:x="214595" fg:w="312"/><text x="99.5605%" y="1007.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (55 samples, 0.03%)</title><rect x="99.4294%" y="981" width="0.0255%" height="15" fill="rgb(252,10,49)" fg:x="214852" fg:w="55"/><text x="99.6794%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (54 samples, 0.02%)</title><rect x="99.4299%" y="965" width="0.0250%" height="15" fill="rgb(217,160,32)" fg:x="214853" fg:w="54"/><text x="99.6799%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (54 samples, 0.02%)</title><rect x="99.4299%" y="949" width="0.0250%" height="15" fill="rgb(249,196,0)" fg:x="214853" fg:w="54"/><text x="99.6799%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park (54 samples, 0.02%)</title><rect x="99.4299%" y="933" width="0.0250%" height="15" fill="rgb(213,17,48)" fg:x="214853" fg:w="54"/><text x="99.6799%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (54 samples, 0.02%)</title><rect x="99.4299%" y="917" width="0.0250%" height="15" fill="rgb(206,42,46)" fg:x="214853" fg:w="54"/><text x="99.6799%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (54 samples, 0.02%)</title><rect x="99.4299%" y="901" width="0.0250%" height="15" fill="rgb(212,105,24)" fg:x="214853" fg:w="54"/><text x="99.6799%" y="911.50"></text></g><g><title>sled-io-2 (313 samples, 0.14%)</title><rect x="99.3105%" y="1301" width="0.1449%" height="15" fill="rgb(243,216,30)" fg:x="214595" fg:w="313"/><text x="99.5605%" y="1311.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pwrite_all (136 samples, 0.06%)</title><rect x="99.4715%" y="901" width="0.0629%" height="15" fill="rgb(207,121,3)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="911.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (136 samples, 0.06%)</title><rect x="99.4715%" y="885" width="0.0629%" height="15" fill="rgb(249,78,0)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (136 samples, 0.06%)</title><rect x="99.4715%" y="869" width="0.0629%" height="15" fill="rgb(244,151,32)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::write_at (136 samples, 0.06%)</title><rect x="99.4715%" y="853" width="0.0629%" height="15" fill="rgb(228,63,25)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (136 samples, 0.06%)</title><rect x="99.4715%" y="837" width="0.0629%" height="15" fill="rgb(231,158,23)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="847.50"></text></g><g><title>__libc_pwrite (136 samples, 0.06%)</title><rect x="99.4715%" y="821" width="0.0629%" height="15" fill="rgb(248,107,23)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="831.50"></text></g><g><title>[unknown] (136 samples, 0.06%)</title><rect x="99.4715%" y="805" width="0.0629%" height="15" fill="rgb(215,168,21)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="815.50"></text></g><g><title>[unknown] (136 samples, 0.06%)</title><rect x="99.4715%" y="789" width="0.0629%" height="15" fill="rgb(227,83,22)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="799.50"></text></g><g><title>[unknown] (136 samples, 0.06%)</title><rect x="99.4715%" y="773" width="0.0629%" height="15" fill="rgb(217,118,43)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="783.50"></text></g><g><title>[unknown] (136 samples, 0.06%)</title><rect x="99.4715%" y="757" width="0.0629%" height="15" fill="rgb(229,220,41)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="767.50"></text></g><g><title>[unknown] (136 samples, 0.06%)</title><rect x="99.4715%" y="741" width="0.0629%" height="15" fill="rgb(254,146,46)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="751.50"></text></g><g><title>[unknown] (136 samples, 0.06%)</title><rect x="99.4715%" y="725" width="0.0629%" height="15" fill="rgb(233,208,31)" fg:x="214943" fg:w="136"/><text x="99.7215%" y="735.50"></text></g><g><title>[unknown] (132 samples, 0.06%)</title><rect x="99.4734%" y="709" width="0.0611%" height="15" fill="rgb(222,162,7)" fg:x="214947" fg:w="132"/><text x="99.7234%" y="719.50"></text></g><g><title>[unknown] (129 samples, 0.06%)</title><rect x="99.4747%" y="693" width="0.0597%" height="15" fill="rgb(230,117,45)" fg:x="214950" fg:w="129"/><text x="99.7247%" y="703.50"></text></g><g><title>[unknown] (113 samples, 0.05%)</title><rect x="99.4821%" y="677" width="0.0523%" height="15" fill="rgb(239,163,6)" fg:x="214966" fg:w="113"/><text x="99.7321%" y="687.50"></text></g><g><title>[unknown] (98 samples, 0.05%)</title><rect x="99.4891%" y="661" width="0.0454%" height="15" fill="rgb(246,130,17)" fg:x="214981" fg:w="98"/><text x="99.7391%" y="671.50"></text></g><g><title>[unknown] (88 samples, 0.04%)</title><rect x="99.4937%" y="645" width="0.0407%" height="15" fill="rgb(216,84,5)" fg:x="214991" fg:w="88"/><text x="99.7437%" y="655.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="99.5020%" y="629" width="0.0324%" height="15" fill="rgb(230,200,21)" fg:x="215009" fg:w="70"/><text x="99.7520%" y="639.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="99.5099%" y="613" width="0.0245%" height="15" fill="rgb(224,2,8)" fg:x="215026" fg:w="53"/><text x="99.7599%" y="623.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="99.5224%" y="597" width="0.0120%" height="15" fill="rgb(238,178,10)" fg:x="215053" fg:w="26"/><text x="99.7724%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (222 samples, 0.10%)</title><rect x="99.4553%" y="981" width="0.1027%" height="15" fill="rgb(242,153,24)" fg:x="214908" fg:w="222"/><text x="99.7053%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (222 samples, 0.10%)</title><rect x="99.4553%" y="965" width="0.1027%" height="15" fill="rgb(242,32,48)" fg:x="214908" fg:w="222"/><text x="99.7053%" y="975.50"></text></g><g><title>sled::threadpool::spawn::{{closure}} (222 samples, 0.10%)</title><rect x="99.4553%" y="949" width="0.1027%" height="15" fill="rgb(227,36,0)" fg:x="214908" fg:w="222"/><text x="99.7053%" y="959.50"></text></g><g><title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}} (222 samples, 0.10%)</title><rect x="99.4553%" y="933" width="0.1027%" height="15" fill="rgb(251,33,35)" fg:x="214908" fg:w="222"/><text x="99.7053%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (221 samples, 0.10%)</title><rect x="99.4558%" y="917" width="0.1023%" height="15" fill="rgb(232,168,51)" fg:x="214909" fg:w="221"/><text x="99.7058%" y="927.50"></text></g><g><title>sync_file_range (51 samples, 0.02%)</title><rect x="99.5344%" y="901" width="0.0236%" height="15" fill="rgb(228,56,10)" fg:x="215079" fg:w="51"/><text x="99.7844%" y="911.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.5344%" y="885" width="0.0236%" height="15" fill="rgb(231,10,26)" fg:x="215079" fg:w="51"/><text x="99.7844%" y="895.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.5344%" y="869" width="0.0236%" height="15" fill="rgb(226,202,12)" fg:x="215079" fg:w="51"/><text x="99.7844%" y="879.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.5349%" y="853" width="0.0231%" height="15" fill="rgb(251,49,21)" fg:x="215080" fg:w="50"/><text x="99.7849%" y="863.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.5349%" y="837" width="0.0231%" height="15" fill="rgb(206,228,28)" fg:x="215080" fg:w="50"/><text x="99.7849%" y="847.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.5349%" y="821" width="0.0231%" height="15" fill="rgb(205,198,31)" fg:x="215080" fg:w="50"/><text x="99.7849%" y="831.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.5354%" y="805" width="0.0227%" height="15" fill="rgb(213,69,1)" fg:x="215081" fg:w="49"/><text x="99.7854%" y="815.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="99.5363%" y="789" width="0.0218%" height="15" fill="rgb(209,177,9)" fg:x="215083" fg:w="47"/><text x="99.7863%" y="799.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="99.5368%" y="773" width="0.0213%" height="15" fill="rgb(227,119,30)" fg:x="215084" fg:w="46"/><text x="99.7868%" y="783.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="99.5368%" y="757" width="0.0213%" height="15" fill="rgb(234,106,41)" fg:x="215084" fg:w="46"/><text x="99.7868%" y="767.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="99.5368%" y="741" width="0.0213%" height="15" fill="rgb(244,103,47)" fg:x="215084" fg:w="46"/><text x="99.7868%" y="751.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.5372%" y="725" width="0.0208%" height="15" fill="rgb(212,211,25)" fg:x="215085" fg:w="45"/><text x="99.7872%" y="735.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.5395%" y="709" width="0.0185%" height="15" fill="rgb(208,63,53)" fg:x="215090" fg:w="40"/><text x="99.7895%" y="719.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="99.5428%" y="693" width="0.0153%" height="15" fill="rgb(213,176,21)" fg:x="215097" fg:w="33"/><text x="99.7928%" y="703.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="99.5455%" y="677" width="0.0125%" height="15" fill="rgb(243,124,12)" fg:x="215103" fg:w="27"/><text x="99.7955%" y="687.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (71 samples, 0.03%)</title><rect x="99.5594%" y="869" width="0.0329%" height="15" fill="rgb(239,2,35)" fg:x="215133" fg:w="71"/><text x="99.8094%" y="879.50"></text></g><g><title>syscall (71 samples, 0.03%)</title><rect x="99.5594%" y="853" width="0.0329%" height="15" fill="rgb(253,169,22)" fg:x="215133" fg:w="71"/><text x="99.8094%" y="863.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="99.5594%" y="837" width="0.0329%" height="15" fill="rgb(254,51,12)" fg:x="215133" fg:w="71"/><text x="99.8094%" y="847.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="99.5594%" y="821" width="0.0329%" height="15" fill="rgb(244,17,47)" fg:x="215133" fg:w="71"/><text x="99.8094%" y="831.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="99.5599%" y="805" width="0.0324%" height="15" fill="rgb(251,45,46)" fg:x="215134" fg:w="70"/><text x="99.8099%" y="815.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="99.5599%" y="789" width="0.0324%" height="15" fill="rgb(223,87,43)" fg:x="215134" fg:w="70"/><text x="99.8099%" y="799.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="99.5604%" y="773" width="0.0319%" height="15" fill="rgb(230,132,31)" fg:x="215135" fg:w="69"/><text x="99.8104%" y="783.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="99.5608%" y="757" width="0.0315%" height="15" fill="rgb(206,99,1)" fg:x="215136" fg:w="68"/><text x="99.8108%" y="767.50"></text></g><g><title>[unknown] (67 samples, 0.03%)</title><rect x="99.5613%" y="741" width="0.0310%" height="15" fill="rgb(227,110,25)" fg:x="215137" fg:w="67"/><text x="99.8113%" y="751.50"></text></g><g><title>[unknown] (66 samples, 0.03%)</title><rect x="99.5617%" y="725" width="0.0305%" height="15" fill="rgb(217,182,7)" fg:x="215138" fg:w="66"/><text x="99.8117%" y="735.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="99.5659%" y="709" width="0.0264%" height="15" fill="rgb(250,176,4)" fg:x="215147" fg:w="57"/><text x="99.8159%" y="719.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.5682%" y="693" width="0.0241%" height="15" fill="rgb(244,98,30)" fg:x="215152" fg:w="52"/><text x="99.8182%" y="703.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.5729%" y="677" width="0.0194%" height="15" fill="rgb(228,150,42)" fg:x="215162" fg:w="42"/><text x="99.8229%" y="687.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="99.5807%" y="661" width="0.0116%" height="15" fill="rgb(231,91,46)" fg:x="215179" fg:w="25"/><text x="99.8307%" y="671.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (72 samples, 0.03%)</title><rect x="99.5594%" y="885" width="0.0333%" height="15" fill="rgb(252,161,32)" fg:x="215133" fg:w="72"/><text x="99.8094%" y="895.50"></text></g><g><title>std::panic::catch_unwind (303 samples, 0.14%)</title><rect x="99.4553%" y="1173" width="0.1402%" height="15" fill="rgb(236,69,41)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1183.50"></text></g><g><title>std::panicking::try (303 samples, 0.14%)</title><rect x="99.4553%" y="1157" width="0.1402%" height="15" fill="rgb(212,160,3)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (303 samples, 0.14%)</title><rect x="99.4553%" y="1141" width="0.1402%" height="15" fill="rgb(216,5,50)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (303 samples, 0.14%)</title><rect x="99.4553%" y="1125" width="0.1402%" height="15" fill="rgb(241,138,25)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (303 samples, 0.14%)</title><rect x="99.4553%" y="1109" width="0.1402%" height="15" fill="rgb(239,42,18)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (303 samples, 0.14%)</title><rect x="99.4553%" y="1093" width="0.1402%" height="15" fill="rgb(239,40,7)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1103.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (303 samples, 0.14%)</title><rect x="99.4553%" y="1077" width="0.1402%" height="15" fill="rgb(239,11,31)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (303 samples, 0.14%)</title><rect x="99.4553%" y="1061" width="0.1402%" height="15" fill="rgb(224,77,40)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1071.50"></text></g><g><title>std::panicking::try (303 samples, 0.14%)</title><rect x="99.4553%" y="1045" width="0.1402%" height="15" fill="rgb(226,15,5)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (303 samples, 0.14%)</title><rect x="99.4553%" y="1029" width="0.1402%" height="15" fill="rgb(254,188,5)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1039.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (303 samples, 0.14%)</title><rect x="99.4553%" y="1013" width="0.1402%" height="15" fill="rgb(241,148,52)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1023.50"></text></g><g><title>sled::threadpool::perform_work (303 samples, 0.14%)</title><rect x="99.4553%" y="997" width="0.1402%" height="15" fill="rgb(251,48,36)" fg:x="214908" fg:w="303"/><text x="99.7053%" y="1007.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (81 samples, 0.04%)</title><rect x="99.5580%" y="981" width="0.0375%" height="15" fill="rgb(243,83,13)" fg:x="215130" fg:w="81"/><text x="99.8080%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (80 samples, 0.04%)</title><rect x="99.5585%" y="965" width="0.0370%" height="15" fill="rgb(210,105,0)" fg:x="215131" fg:w="80"/><text x="99.8085%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (80 samples, 0.04%)</title><rect x="99.5585%" y="949" width="0.0370%" height="15" fill="rgb(239,60,36)" fg:x="215131" fg:w="80"/><text x="99.8085%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park (78 samples, 0.04%)</title><rect x="99.5594%" y="933" width="0.0361%" height="15" fill="rgb(210,20,0)" fg:x="215133" fg:w="78"/><text x="99.8094%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (78 samples, 0.04%)</title><rect x="99.5594%" y="917" width="0.0361%" height="15" fill="rgb(244,26,53)" fg:x="215133" fg:w="78"/><text x="99.8094%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (78 samples, 0.04%)</title><rect x="99.5594%" y="901" width="0.0361%" height="15" fill="rgb(240,100,49)" fg:x="215133" fg:w="78"/><text x="99.8094%" y="911.50"></text></g><g><title>[libc.so.6] (304 samples, 0.14%)</title><rect x="99.4553%" y="1285" width="0.1407%" height="15" fill="rgb(250,46,45)" fg:x="214908" fg:w="304"/><text x="99.7053%" y="1295.50"></text></g><g><title>[libc.so.6] (304 samples, 0.14%)</title><rect x="99.4553%" y="1269" width="0.1407%" height="15" fill="rgb(220,181,29)" fg:x="214908" fg:w="304"/><text x="99.7053%" y="1279.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (304 samples, 0.14%)</title><rect x="99.4553%" y="1253" width="0.1407%" height="15" fill="rgb(213,137,33)" fg:x="214908" fg:w="304"/><text x="99.7053%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (304 samples, 0.14%)</title><rect x="99.4553%" y="1237" width="0.1407%" height="15" fill="rgb(213,27,48)" fg:x="214908" fg:w="304"/><text x="99.7053%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (304 samples, 0.14%)</title><rect x="99.4553%" y="1221" width="0.1407%" height="15" fill="rgb(245,180,39)" fg:x="214908" fg:w="304"/><text x="99.7053%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (304 samples, 0.14%)</title><rect x="99.4553%" y="1205" width="0.1407%" height="15" fill="rgb(212,158,42)" fg:x="214908" fg:w="304"/><text x="99.7053%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (304 samples, 0.14%)</title><rect x="99.4553%" y="1189" width="0.1407%" height="15" fill="rgb(228,193,18)" fg:x="214908" fg:w="304"/><text x="99.7053%" y="1199.50"></text></g><g><title>sled-io-3 (308 samples, 0.14%)</title><rect x="99.4553%" y="1301" width="0.1425%" height="15" fill="rgb(245,172,29)" fg:x="214908" fg:w="308"/><text x="99.7053%" y="1311.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pwrite_all (117 samples, 0.05%)</title><rect x="99.6131%" y="901" width="0.0541%" height="15" fill="rgb(207,98,24)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="911.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (117 samples, 0.05%)</title><rect x="99.6131%" y="885" width="0.0541%" height="15" fill="rgb(249,92,26)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (117 samples, 0.05%)</title><rect x="99.6131%" y="869" width="0.0541%" height="15" fill="rgb(217,176,26)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::write_at (117 samples, 0.05%)</title><rect x="99.6131%" y="853" width="0.0541%" height="15" fill="rgb(221,8,39)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (117 samples, 0.05%)</title><rect x="99.6131%" y="837" width="0.0541%" height="15" fill="rgb(208,90,18)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="847.50"></text></g><g><title>__libc_pwrite (117 samples, 0.05%)</title><rect x="99.6131%" y="821" width="0.0541%" height="15" fill="rgb(207,202,30)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="831.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="99.6131%" y="805" width="0.0541%" height="15" fill="rgb(231,124,22)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="815.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="99.6131%" y="789" width="0.0541%" height="15" fill="rgb(206,15,5)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="799.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="99.6131%" y="773" width="0.0541%" height="15" fill="rgb(239,16,52)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="783.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="99.6131%" y="757" width="0.0541%" height="15" fill="rgb(245,213,29)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="767.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="99.6131%" y="741" width="0.0541%" height="15" fill="rgb(213,203,36)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="751.50"></text></g><g><title>[unknown] (117 samples, 0.05%)</title><rect x="99.6131%" y="725" width="0.0541%" height="15" fill="rgb(209,55,18)" fg:x="215249" fg:w="117"/><text x="99.8631%" y="735.50"></text></g><g><title>[unknown] (115 samples, 0.05%)</title><rect x="99.6140%" y="709" width="0.0532%" height="15" fill="rgb(207,133,49)" fg:x="215251" fg:w="115"/><text x="99.8640%" y="719.50"></text></g><g><title>[unknown] (104 samples, 0.05%)</title><rect x="99.6191%" y="693" width="0.0481%" height="15" fill="rgb(240,33,46)" fg:x="215262" fg:w="104"/><text x="99.8691%" y="703.50"></text></g><g><title>[unknown] (92 samples, 0.04%)</title><rect x="99.6247%" y="677" width="0.0426%" height="15" fill="rgb(212,35,2)" fg:x="215274" fg:w="92"/><text x="99.8747%" y="687.50"></text></g><g><title>[unknown] (81 samples, 0.04%)</title><rect x="99.6298%" y="661" width="0.0375%" height="15" fill="rgb(231,119,28)" fg:x="215285" fg:w="81"/><text x="99.8798%" y="671.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="99.6330%" y="645" width="0.0342%" height="15" fill="rgb(252,178,7)" fg:x="215292" fg:w="74"/><text x="99.8830%" y="655.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.6413%" y="629" width="0.0259%" height="15" fill="rgb(251,91,4)" fg:x="215310" fg:w="56"/><text x="99.8913%" y="639.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.6497%" y="613" width="0.0176%" height="15" fill="rgb(233,122,19)" fg:x="215328" fg:w="38"/><text x="99.8997%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (192 samples, 0.09%)</title><rect x="99.5978%" y="981" width="0.0889%" height="15" fill="rgb(231,208,46)" fg:x="215216" fg:w="192"/><text x="99.8478%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (192 samples, 0.09%)</title><rect x="99.5978%" y="965" width="0.0889%" height="15" fill="rgb(243,15,41)" fg:x="215216" fg:w="192"/><text x="99.8478%" y="975.50"></text></g><g><title>sled::threadpool::spawn::{{closure}} (192 samples, 0.09%)</title><rect x="99.5978%" y="949" width="0.0889%" height="15" fill="rgb(210,32,43)" fg:x="215216" fg:w="192"/><text x="99.8478%" y="959.50"></text></g><g><title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}} (192 samples, 0.09%)</title><rect x="99.5978%" y="933" width="0.0889%" height="15" fill="rgb(222,177,15)" fg:x="215216" fg:w="192"/><text x="99.8478%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (187 samples, 0.09%)</title><rect x="99.6002%" y="917" width="0.0865%" height="15" fill="rgb(244,121,34)" fg:x="215221" fg:w="187"/><text x="99.8502%" y="927.50"></text></g><g><title>sync_file_range (42 samples, 0.02%)</title><rect x="99.6673%" y="901" width="0.0194%" height="15" fill="rgb(234,138,4)" fg:x="215366" fg:w="42"/><text x="99.9173%" y="911.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.6673%" y="885" width="0.0194%" height="15" fill="rgb(240,97,48)" fg:x="215366" fg:w="42"/><text x="99.9173%" y="895.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.6673%" y="869" width="0.0194%" height="15" fill="rgb(237,65,54)" fg:x="215366" fg:w="42"/><text x="99.9173%" y="879.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.6673%" y="853" width="0.0194%" height="15" fill="rgb(214,25,24)" fg:x="215366" fg:w="42"/><text x="99.9173%" y="863.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.6673%" y="837" width="0.0194%" height="15" fill="rgb(213,5,3)" fg:x="215366" fg:w="42"/><text x="99.9173%" y="847.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.6673%" y="821" width="0.0194%" height="15" fill="rgb(219,81,29)" fg:x="215366" fg:w="42"/><text x="99.9173%" y="831.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.6673%" y="805" width="0.0194%" height="15" fill="rgb(220,43,48)" fg:x="215366" fg:w="42"/><text x="99.9173%" y="815.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="99.6677%" y="789" width="0.0190%" height="15" fill="rgb(239,157,2)" fg:x="215367" fg:w="41"/><text x="99.9177%" y="799.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="99.6677%" y="773" width="0.0190%" height="15" fill="rgb(213,104,43)" fg:x="215367" fg:w="41"/><text x="99.9177%" y="783.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.6682%" y="757" width="0.0185%" height="15" fill="rgb(237,84,9)" fg:x="215368" fg:w="40"/><text x="99.9182%" y="767.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="99.6686%" y="741" width="0.0180%" height="15" fill="rgb(252,6,33)" fg:x="215369" fg:w="39"/><text x="99.9186%" y="751.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.6696%" y="725" width="0.0171%" height="15" fill="rgb(251,172,22)" fg:x="215371" fg:w="37"/><text x="99.9196%" y="735.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.6705%" y="709" width="0.0162%" height="15" fill="rgb(244,91,53)" fg:x="215373" fg:w="35"/><text x="99.9205%" y="719.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="99.6719%" y="693" width="0.0148%" height="15" fill="rgb(219,29,30)" fg:x="215376" fg:w="32"/><text x="99.9219%" y="703.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="99.6742%" y="677" width="0.0125%" height="15" fill="rgb(213,3,15)" fg:x="215381" fg:w="27"/><text x="99.9242%" y="687.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="99.6761%" y="661" width="0.0106%" height="15" fill="rgb(208,25,28)" fg:x="215385" fg:w="23"/><text x="99.9261%" y="671.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (53 samples, 0.02%)</title><rect x="99.6881%" y="885" width="0.0245%" height="15" fill="rgb(252,144,25)" fg:x="215411" fg:w="53"/><text x="99.9381%" y="895.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (51 samples, 0.02%)</title><rect x="99.6890%" y="869" width="0.0236%" height="15" fill="rgb(226,220,25)" fg:x="215413" fg:w="51"/><text x="99.9390%" y="879.50"></text></g><g><title>syscall (51 samples, 0.02%)</title><rect x="99.6890%" y="853" width="0.0236%" height="15" fill="rgb(212,131,28)" fg:x="215413" fg:w="51"/><text x="99.9390%" y="863.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.6890%" y="837" width="0.0236%" height="15" fill="rgb(219,143,52)" fg:x="215413" fg:w="51"/><text x="99.9390%" y="847.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.6890%" y="821" width="0.0236%" height="15" fill="rgb(215,56,7)" fg:x="215413" fg:w="51"/><text x="99.9390%" y="831.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.6895%" y="805" width="0.0231%" height="15" fill="rgb(239,59,51)" fg:x="215414" fg:w="50"/><text x="99.9395%" y="815.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.6895%" y="789" width="0.0231%" height="15" fill="rgb(209,215,4)" fg:x="215414" fg:w="50"/><text x="99.9395%" y="799.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.6899%" y="773" width="0.0227%" height="15" fill="rgb(221,118,39)" fg:x="215415" fg:w="49"/><text x="99.9399%" y="783.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.6904%" y="757" width="0.0222%" height="15" fill="rgb(236,6,44)" fg:x="215416" fg:w="48"/><text x="99.9404%" y="767.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.6918%" y="741" width="0.0208%" height="15" fill="rgb(216,122,9)" fg:x="215419" fg:w="45"/><text x="99.9418%" y="751.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="99.6923%" y="725" width="0.0204%" height="15" fill="rgb(244,134,42)" fg:x="215420" fg:w="44"/><text x="99.9423%" y="735.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.6932%" y="709" width="0.0194%" height="15" fill="rgb(209,189,35)" fg:x="215422" fg:w="42"/><text x="99.9432%" y="719.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="99.6941%" y="693" width="0.0185%" height="15" fill="rgb(250,47,36)" fg:x="215424" fg:w="40"/><text x="99.9441%" y="703.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="99.6992%" y="677" width="0.0134%" height="15" fill="rgb(252,112,4)" fg:x="215435" fg:w="29"/><text x="99.9492%" y="687.50"></text></g><g><title>[libc.so.6] (249 samples, 0.12%)</title><rect x="99.5978%" y="1285" width="0.1152%" height="15" fill="rgb(221,79,51)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1295.50"></text></g><g><title>[libc.so.6] (249 samples, 0.12%)</title><rect x="99.5978%" y="1269" width="0.1152%" height="15" fill="rgb(232,65,53)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1279.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (249 samples, 0.12%)</title><rect x="99.5978%" y="1253" width="0.1152%" height="15" fill="rgb(211,37,7)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (249 samples, 0.12%)</title><rect x="99.5978%" y="1237" width="0.1152%" height="15" fill="rgb(234,221,18)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (249 samples, 0.12%)</title><rect x="99.5978%" y="1221" width="0.1152%" height="15" fill="rgb(220,158,26)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (249 samples, 0.12%)</title><rect x="99.5978%" y="1205" width="0.1152%" height="15" fill="rgb(220,70,6)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (249 samples, 0.12%)</title><rect x="99.5978%" y="1189" width="0.1152%" height="15" fill="rgb(250,39,48)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (249 samples, 0.12%)</title><rect x="99.5978%" y="1173" width="0.1152%" height="15" fill="rgb(206,40,27)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1183.50"></text></g><g><title>std::panicking::try (249 samples, 0.12%)</title><rect x="99.5978%" y="1157" width="0.1152%" height="15" fill="rgb(247,80,36)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (249 samples, 0.12%)</title><rect x="99.5978%" y="1141" width="0.1152%" height="15" fill="rgb(222,9,20)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (249 samples, 0.12%)</title><rect x="99.5978%" y="1125" width="0.1152%" height="15" fill="rgb(217,26,45)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (249 samples, 0.12%)</title><rect x="99.5978%" y="1109" width="0.1152%" height="15" fill="rgb(221,67,14)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (249 samples, 0.12%)</title><rect x="99.5978%" y="1093" width="0.1152%" height="15" fill="rgb(248,100,24)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1103.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (249 samples, 0.12%)</title><rect x="99.5978%" y="1077" width="0.1152%" height="15" fill="rgb(230,187,16)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (249 samples, 0.12%)</title><rect x="99.5978%" y="1061" width="0.1152%" height="15" fill="rgb(205,108,13)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1071.50"></text></g><g><title>std::panicking::try (249 samples, 0.12%)</title><rect x="99.5978%" y="1045" width="0.1152%" height="15" fill="rgb(235,71,51)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (249 samples, 0.12%)</title><rect x="99.5978%" y="1029" width="0.1152%" height="15" fill="rgb(251,172,48)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1039.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (249 samples, 0.12%)</title><rect x="99.5978%" y="1013" width="0.1152%" height="15" fill="rgb(240,96,49)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1023.50"></text></g><g><title>sled::threadpool::perform_work (249 samples, 0.12%)</title><rect x="99.5978%" y="997" width="0.1152%" height="15" fill="rgb(235,46,36)" fg:x="215216" fg:w="249"/><text x="99.8478%" y="1007.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (56 samples, 0.03%)</title><rect x="99.6872%" y="981" width="0.0259%" height="15" fill="rgb(244,3,49)" fg:x="215409" fg:w="56"/><text x="99.9372%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (55 samples, 0.03%)</title><rect x="99.6876%" y="965" width="0.0255%" height="15" fill="rgb(206,78,54)" fg:x="215410" fg:w="55"/><text x="99.9376%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (55 samples, 0.03%)</title><rect x="99.6876%" y="949" width="0.0255%" height="15" fill="rgb(208,85,42)" fg:x="215410" fg:w="55"/><text x="99.9376%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park (54 samples, 0.02%)</title><rect x="99.6881%" y="933" width="0.0250%" height="15" fill="rgb(219,196,21)" fg:x="215411" fg:w="54"/><text x="99.9381%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (54 samples, 0.02%)</title><rect x="99.6881%" y="917" width="0.0250%" height="15" fill="rgb(238,19,9)" fg:x="215411" fg:w="54"/><text x="99.9381%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (54 samples, 0.02%)</title><rect x="99.6881%" y="901" width="0.0250%" height="15" fill="rgb(206,86,13)" fg:x="215411" fg:w="54"/><text x="99.9381%" y="911.50"></text></g><g><title>sled-io-4 (250 samples, 0.12%)</title><rect x="99.5978%" y="1301" width="0.1157%" height="15" fill="rgb(214,123,40)" fg:x="215216" fg:w="250"/><text x="99.8478%" y="1311.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (24 samples, 0.01%)</title><rect x="99.7145%" y="901" width="0.0111%" height="15" fill="rgb(243,53,5)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="911.50"></text></g><g><title>core::mem::drop (24 samples, 0.01%)</title><rect x="99.7145%" y="885" width="0.0111%" height="15" fill="rgb(254,186,31)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (24 samples, 0.01%)</title><rect x="99.7145%" y="869" width="0.0111%" height="15" fill="rgb(221,216,25)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (24 samples, 0.01%)</title><rect x="99.7145%" y="853" width="0.0111%" height="15" fill="rgb(248,107,42)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="863.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (24 samples, 0.01%)</title><rect x="99.7145%" y="837" width="0.0111%" height="15" fill="rgb(221,85,43)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="847.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (24 samples, 0.01%)</title><rect x="99.7145%" y="821" width="0.0111%" height="15" fill="rgb(225,34,24)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="831.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (24 samples, 0.01%)</title><rect x="99.7145%" y="805" width="0.0111%" height="15" fill="rgb(211,119,1)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="815.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (24 samples, 0.01%)</title><rect x="99.7145%" y="789" width="0.0111%" height="15" fill="rgb(254,216,46)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="799.50"></text></g><g><title>core::mem::drop (24 samples, 0.01%)</title><rect x="99.7145%" y="773" width="0.0111%" height="15" fill="rgb(238,11,38)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (24 samples, 0.01%)</title><rect x="99.7145%" y="757" width="0.0111%" height="15" fill="rgb(233,50,15)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="767.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.01%)</title><rect x="99.7145%" y="741" width="0.0111%" height="15" fill="rgb(217,181,29)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="751.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (24 samples, 0.01%)</title><rect x="99.7145%" y="725" width="0.0111%" height="15" fill="rgb(214,56,3)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="735.50"></text></g><g><title>core::mem::drop (24 samples, 0.01%)</title><rect x="99.7145%" y="709" width="0.0111%" height="15" fill="rgb(230,69,45)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (24 samples, 0.01%)</title><rect x="99.7145%" y="693" width="0.0111%" height="15" fill="rgb(224,201,50)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (24 samples, 0.01%)</title><rect x="99.7145%" y="677" width="0.0111%" height="15" fill="rgb(217,228,18)" fg:x="215468" fg:w="24"/><text x="99.9645%" y="687.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pwrite_all (168 samples, 0.08%)</title><rect x="99.7302%" y="901" width="0.0777%" height="15" fill="rgb(239,33,44)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="911.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (168 samples, 0.08%)</title><rect x="99.7302%" y="885" width="0.0777%" height="15" fill="rgb(248,210,23)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="895.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (168 samples, 0.08%)</title><rect x="99.7302%" y="869" width="0.0777%" height="15" fill="rgb(253,135,8)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::write_at (168 samples, 0.08%)</title><rect x="99.7302%" y="853" width="0.0777%" height="15" fill="rgb(217,98,21)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (168 samples, 0.08%)</title><rect x="99.7302%" y="837" width="0.0777%" height="15" fill="rgb(253,130,21)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="847.50"></text></g><g><title>__libc_pwrite (168 samples, 0.08%)</title><rect x="99.7302%" y="821" width="0.0777%" height="15" fill="rgb(207,81,54)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="831.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="99.7302%" y="805" width="0.0777%" height="15" fill="rgb(232,48,33)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="815.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="99.7302%" y="789" width="0.0777%" height="15" fill="rgb(211,9,35)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="799.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="99.7302%" y="773" width="0.0777%" height="15" fill="rgb(205,152,21)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="783.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="99.7302%" y="757" width="0.0777%" height="15" fill="rgb(249,21,27)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="767.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="99.7302%" y="741" width="0.0777%" height="15" fill="rgb(252,29,24)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="751.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="99.7302%" y="725" width="0.0777%" height="15" fill="rgb(230,130,50)" fg:x="215502" fg:w="168"/><text x="99.9802%" y="735.50"></text></g><g><title>[unknown] (167 samples, 0.08%)</title><rect x="99.7307%" y="709" width="0.0773%" height="15" fill="rgb(239,144,14)" fg:x="215503" fg:w="167"/><text x="99.9807%" y="719.50"></text></g><g><title>[unknown] (158 samples, 0.07%)</title><rect x="99.7348%" y="693" width="0.0731%" height="15" fill="rgb(227,111,50)" fg:x="215512" fg:w="158"/><text x="99.9848%" y="703.50"></text></g><g><title>[unknown] (144 samples, 0.07%)</title><rect x="99.7413%" y="677" width="0.0666%" height="15" fill="rgb(254,84,20)" fg:x="215526" fg:w="144"/><text x="99.9913%" y="687.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="99.7506%" y="661" width="0.0574%" height="15" fill="rgb(232,90,48)" fg:x="215546" fg:w="124"/><text x="100.0006%" y="671.50"></text></g><g><title>[unknown] (104 samples, 0.05%)</title><rect x="99.7598%" y="645" width="0.0481%" height="15" fill="rgb(253,63,47)" fg:x="215566" fg:w="104"/><text x="100.0098%" y="655.50"></text></g><g><title>[unknown] (80 samples, 0.04%)</title><rect x="99.7709%" y="629" width="0.0370%" height="15" fill="rgb(251,146,35)" fg:x="215590" fg:w="80"/><text x="100.0209%" y="639.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="99.7862%" y="613" width="0.0218%" height="15" fill="rgb(229,192,35)" fg:x="215623" fg:w="47"/><text x="100.0362%" y="623.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="99.7968%" y="597" width="0.0111%" height="15" fill="rgb(225,68,9)" fg:x="215646" fg:w="24"/><text x="100.0468%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (256 samples, 0.12%)</title><rect x="99.7135%" y="981" width="0.1185%" height="15" fill="rgb(214,97,34)" fg:x="215466" fg:w="256"/><text x="99.9635%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (256 samples, 0.12%)</title><rect x="99.7135%" y="965" width="0.1185%" height="15" fill="rgb(253,31,26)" fg:x="215466" fg:w="256"/><text x="99.9635%" y="975.50"></text></g><g><title>sled::threadpool::spawn::{{closure}} (256 samples, 0.12%)</title><rect x="99.7135%" y="949" width="0.1185%" height="15" fill="rgb(225,151,47)" fg:x="215466" fg:w="256"/><text x="99.9635%" y="959.50"></text></g><g><title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}} (256 samples, 0.12%)</title><rect x="99.7135%" y="933" width="0.1185%" height="15" fill="rgb(206,185,9)" fg:x="215466" fg:w="256"/><text x="99.9635%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (255 samples, 0.12%)</title><rect x="99.7140%" y="917" width="0.1180%" height="15" fill="rgb(249,65,17)" fg:x="215467" fg:w="255"/><text x="99.9640%" y="927.50"></text></g><g><title>sync_file_range (52 samples, 0.02%)</title><rect x="99.8079%" y="901" width="0.0241%" height="15" fill="rgb(220,110,10)" fg:x="215670" fg:w="52"/><text x="100.0579%" y="911.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.8084%" y="885" width="0.0236%" height="15" fill="rgb(222,198,49)" fg:x="215671" fg:w="51"/><text x="100.0584%" y="895.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.8084%" y="869" width="0.0236%" height="15" fill="rgb(239,81,13)" fg:x="215671" fg:w="51"/><text x="100.0584%" y="879.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.8084%" y="853" width="0.0236%" height="15" fill="rgb(216,128,11)" fg:x="215671" fg:w="51"/><text x="100.0584%" y="863.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.8084%" y="837" width="0.0236%" height="15" fill="rgb(247,156,8)" fg:x="215671" fg:w="51"/><text x="100.0584%" y="847.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.8089%" y="821" width="0.0231%" height="15" fill="rgb(219,173,1)" fg:x="215672" fg:w="50"/><text x="100.0589%" y="831.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.8093%" y="805" width="0.0227%" height="15" fill="rgb(227,42,24)" fg:x="215673" fg:w="49"/><text x="100.0593%" y="815.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.8093%" y="789" width="0.0227%" height="15" fill="rgb(253,219,50)" fg:x="215673" fg:w="49"/><text x="100.0593%" y="799.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.8093%" y="773" width="0.0227%" height="15" fill="rgb(215,191,54)" fg:x="215673" fg:w="49"/><text x="100.0593%" y="783.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.8093%" y="757" width="0.0227%" height="15" fill="rgb(238,83,12)" fg:x="215673" fg:w="49"/><text x="100.0593%" y="767.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="99.8093%" y="741" width="0.0227%" height="15" fill="rgb(205,124,9)" fg:x="215673" fg:w="49"/><text x="100.0593%" y="751.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.8121%" y="725" width="0.0199%" height="15" fill="rgb(253,174,7)" fg:x="215679" fg:w="43"/><text x="100.0621%" y="735.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.8158%" y="709" width="0.0162%" height="15" fill="rgb(206,134,49)" fg:x="215687" fg:w="35"/><text x="100.0658%" y="719.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="99.8181%" y="693" width="0.0139%" height="15" fill="rgb(221,89,20)" fg:x="215692" fg:w="30"/><text x="100.0681%" y="703.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="99.8209%" y="677" width="0.0111%" height="15" fill="rgb(240,205,13)" fg:x="215698" fg:w="24"/><text x="100.0709%" y="687.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (63 samples, 0.03%)</title><rect x="99.8325%" y="885" width="0.0292%" height="15" fill="rgb(237,174,32)" fg:x="215723" fg:w="63"/><text x="100.0825%" y="895.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (62 samples, 0.03%)</title><rect x="99.8329%" y="869" width="0.0287%" height="15" fill="rgb(226,12,15)" fg:x="215724" fg:w="62"/><text x="100.0829%" y="879.50"></text></g><g><title>syscall (62 samples, 0.03%)</title><rect x="99.8329%" y="853" width="0.0287%" height="15" fill="rgb(245,160,52)" fg:x="215724" fg:w="62"/><text x="100.0829%" y="863.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="99.8329%" y="837" width="0.0287%" height="15" fill="rgb(253,80,21)" fg:x="215724" fg:w="62"/><text x="100.0829%" y="847.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="99.8329%" y="821" width="0.0287%" height="15" fill="rgb(231,225,22)" fg:x="215724" fg:w="62"/><text x="100.0829%" y="831.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.8334%" y="805" width="0.0282%" height="15" fill="rgb(253,185,12)" fg:x="215725" fg:w="61"/><text x="100.0834%" y="815.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.8334%" y="789" width="0.0282%" height="15" fill="rgb(234,197,21)" fg:x="215725" fg:w="61"/><text x="100.0834%" y="799.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.8334%" y="773" width="0.0282%" height="15" fill="rgb(210,47,30)" fg:x="215725" fg:w="61"/><text x="100.0834%" y="783.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="99.8348%" y="757" width="0.0268%" height="15" fill="rgb(246,139,27)" fg:x="215728" fg:w="58"/><text x="100.0848%" y="767.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.8357%" y="741" width="0.0259%" height="15" fill="rgb(226,130,16)" fg:x="215730" fg:w="56"/><text x="100.0857%" y="751.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="99.8366%" y="725" width="0.0250%" height="15" fill="rgb(237,208,20)" fg:x="215732" fg:w="54"/><text x="100.0866%" y="735.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.8376%" y="709" width="0.0241%" height="15" fill="rgb(245,186,28)" fg:x="215734" fg:w="52"/><text x="100.0876%" y="719.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.8385%" y="693" width="0.0231%" height="15" fill="rgb(238,105,39)" fg:x="215736" fg:w="50"/><text x="100.0885%" y="703.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.8454%" y="677" width="0.0162%" height="15" fill="rgb(253,228,11)" fg:x="215751" fg:w="35"/><text x="100.0954%" y="687.50"></text></g><g><title>std::panic::catch_unwind (324 samples, 0.15%)</title><rect x="99.7135%" y="1173" width="0.1499%" height="15" fill="rgb(224,136,38)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1183.50"></text></g><g><title>std::panicking::try (324 samples, 0.15%)</title><rect x="99.7135%" y="1157" width="0.1499%" height="15" fill="rgb(211,3,25)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (324 samples, 0.15%)</title><rect x="99.7135%" y="1141" width="0.1499%" height="15" fill="rgb(238,66,34)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (324 samples, 0.15%)</title><rect x="99.7135%" y="1125" width="0.1499%" height="15" fill="rgb(223,188,11)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (324 samples, 0.15%)</title><rect x="99.7135%" y="1109" width="0.1499%" height="15" fill="rgb(221,10,35)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (324 samples, 0.15%)</title><rect x="99.7135%" y="1093" width="0.1499%" height="15" fill="rgb(223,18,44)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1103.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (324 samples, 0.15%)</title><rect x="99.7135%" y="1077" width="0.1499%" height="15" fill="rgb(220,97,41)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (324 samples, 0.15%)</title><rect x="99.7135%" y="1061" width="0.1499%" height="15" fill="rgb(206,95,45)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1071.50"></text></g><g><title>std::panicking::try (324 samples, 0.15%)</title><rect x="99.7135%" y="1045" width="0.1499%" height="15" fill="rgb(209,96,13)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (324 samples, 0.15%)</title><rect x="99.7135%" y="1029" width="0.1499%" height="15" fill="rgb(237,39,34)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1039.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (324 samples, 0.15%)</title><rect x="99.7135%" y="1013" width="0.1499%" height="15" fill="rgb(213,49,47)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1023.50"></text></g><g><title>sled::threadpool::perform_work (324 samples, 0.15%)</title><rect x="99.7135%" y="997" width="0.1499%" height="15" fill="rgb(205,107,27)" fg:x="215466" fg:w="324"/><text x="99.9635%" y="1007.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (68 samples, 0.03%)</title><rect x="99.8320%" y="981" width="0.0315%" height="15" fill="rgb(212,142,9)" fg:x="215722" fg:w="68"/><text x="100.0820%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (67 samples, 0.03%)</title><rect x="99.8325%" y="965" width="0.0310%" height="15" fill="rgb(226,182,0)" fg:x="215723" fg:w="67"/><text x="100.0825%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (67 samples, 0.03%)</title><rect x="99.8325%" y="949" width="0.0310%" height="15" fill="rgb(231,3,53)" fg:x="215723" fg:w="67"/><text x="100.0825%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park (67 samples, 0.03%)</title><rect x="99.8325%" y="933" width="0.0310%" height="15" fill="rgb(246,111,28)" fg:x="215723" fg:w="67"/><text x="100.0825%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (67 samples, 0.03%)</title><rect x="99.8325%" y="917" width="0.0310%" height="15" fill="rgb(254,183,7)" fg:x="215723" fg:w="67"/><text x="100.0825%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (67 samples, 0.03%)</title><rect x="99.8325%" y="901" width="0.0310%" height="15" fill="rgb(247,177,28)" fg:x="215723" fg:w="67"/><text x="100.0825%" y="911.50"></text></g><g><title>sled-io-5 (332 samples, 0.15%)</title><rect x="99.7135%" y="1301" width="0.1536%" height="15" fill="rgb(244,43,1)" fg:x="215466" fg:w="332"/><text x="99.9635%" y="1311.50"></text></g><g><title>[libc.so.6] (332 samples, 0.15%)</title><rect x="99.7135%" y="1285" width="0.1536%" height="15" fill="rgb(207,2,35)" fg:x="215466" fg:w="332"/><text x="99.9635%" y="1295.50"></text></g><g><title>[libc.so.6] (332 samples, 0.15%)</title><rect x="99.7135%" y="1269" width="0.1536%" height="15" fill="rgb(213,83,22)" fg:x="215466" fg:w="332"/><text x="99.9635%" y="1279.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (332 samples, 0.15%)</title><rect x="99.7135%" y="1253" width="0.1536%" height="15" fill="rgb(246,212,13)" fg:x="215466" fg:w="332"/><text x="99.9635%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (332 samples, 0.15%)</title><rect x="99.7135%" y="1237" width="0.1536%" height="15" fill="rgb(213,127,46)" fg:x="215466" fg:w="332"/><text x="99.9635%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (332 samples, 0.15%)</title><rect x="99.7135%" y="1221" width="0.1536%" height="15" fill="rgb(219,215,39)" fg:x="215466" fg:w="332"/><text x="99.9635%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (332 samples, 0.15%)</title><rect x="99.7135%" y="1205" width="0.1536%" height="15" fill="rgb(227,99,17)" fg:x="215466" fg:w="332"/><text x="99.9635%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (332 samples, 0.15%)</title><rect x="99.7135%" y="1189" width="0.1536%" height="15" fill="rgb(208,155,18)" fg:x="215466" fg:w="332"/><text x="99.9635%" y="1199.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (22 samples, 0.01%)</title><rect x="99.8695%" y="901" width="0.0102%" height="15" fill="rgb(223,204,38)" fg:x="215803" fg:w="22"/><text x="100.1195%" y="911.50"></text></g><g><title>core::mem::drop (22 samples, 0.01%)</title><rect x="99.8695%" y="885" width="0.0102%" height="15" fill="rgb(212,114,21)" fg:x="215803" fg:w="22"/><text x="100.1195%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (22 samples, 0.01%)</title><rect x="99.8695%" y="869" width="0.0102%" height="15" fill="rgb(250,74,13)" fg:x="215803" fg:w="22"/><text x="100.1195%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (22 samples, 0.01%)</title><rect x="99.8695%" y="853" width="0.0102%" height="15" fill="rgb(234,7,1)" fg:x="215803" fg:w="22"/><text x="100.1195%" y="863.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="99.8695%" y="837" width="0.0102%" height="15" fill="rgb(207,138,31)" fg:x="215803" fg:w="22"/><text x="100.1195%" y="847.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (22 samples, 0.01%)</title><rect x="99.8695%" y="821" width="0.0102%" height="15" fill="rgb(215,186,42)" fg:x="215803" fg:w="22"/><text x="100.1195%" y="831.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (151 samples, 0.07%)</title><rect x="99.8843%" y="869" width="0.0699%" height="15" fill="rgb(229,205,49)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::write_at (151 samples, 0.07%)</title><rect x="99.8843%" y="853" width="0.0699%" height="15" fill="rgb(216,156,32)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (151 samples, 0.07%)</title><rect x="99.8843%" y="837" width="0.0699%" height="15" fill="rgb(238,7,21)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="847.50"></text></g><g><title>__libc_pwrite (151 samples, 0.07%)</title><rect x="99.8843%" y="821" width="0.0699%" height="15" fill="rgb(249,190,22)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="831.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.8843%" y="805" width="0.0699%" height="15" fill="rgb(253,51,31)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="815.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.8843%" y="789" width="0.0699%" height="15" fill="rgb(237,90,54)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="799.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.8843%" y="773" width="0.0699%" height="15" fill="rgb(250,214,33)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="783.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.8843%" y="757" width="0.0699%" height="15" fill="rgb(237,10,49)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="767.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.8843%" y="741" width="0.0699%" height="15" fill="rgb(241,56,36)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="751.50"></text></g><g><title>[unknown] (151 samples, 0.07%)</title><rect x="99.8843%" y="725" width="0.0699%" height="15" fill="rgb(227,164,12)" fg:x="215835" fg:w="151"/><text x="100.1343%" y="735.50"></text></g><g><title>[unknown] (150 samples, 0.07%)</title><rect x="99.8848%" y="709" width="0.0694%" height="15" fill="rgb(249,149,35)" fg:x="215836" fg:w="150"/><text x="100.1348%" y="719.50"></text></g><g><title>[unknown] (143 samples, 0.07%)</title><rect x="99.8880%" y="693" width="0.0662%" height="15" fill="rgb(238,227,50)" fg:x="215843" fg:w="143"/><text x="100.1380%" y="703.50"></text></g><g><title>[unknown] (138 samples, 0.06%)</title><rect x="99.8903%" y="677" width="0.0639%" height="15" fill="rgb(235,102,45)" fg:x="215848" fg:w="138"/><text x="100.1403%" y="687.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="99.8968%" y="661" width="0.0574%" height="15" fill="rgb(211,10,38)" fg:x="215862" fg:w="124"/><text x="100.1468%" y="671.50"></text></g><g><title>[unknown] (111 samples, 0.05%)</title><rect x="99.9028%" y="645" width="0.0514%" height="15" fill="rgb(219,77,48)" fg:x="215875" fg:w="111"/><text x="100.1528%" y="655.50"></text></g><g><title>[unknown] (88 samples, 0.04%)</title><rect x="99.9135%" y="629" width="0.0407%" height="15" fill="rgb(246,6,15)" fg:x="215898" fg:w="88"/><text x="100.1635%" y="639.50"></text></g><g><title>[unknown] (64 samples, 0.03%)</title><rect x="99.9246%" y="613" width="0.0296%" height="15" fill="rgb(207,220,2)" fg:x="215922" fg:w="64"/><text x="100.1746%" y="623.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="99.9389%" y="597" width="0.0153%" height="15" fill="rgb(242,48,14)" fg:x="215953" fg:w="33"/><text x="100.1889%" y="607.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pwrite_all (152 samples, 0.07%)</title><rect x="99.8843%" y="901" width="0.0703%" height="15" fill="rgb(218,19,27)" fg:x="215835" fg:w="152"/><text x="100.1343%" y="911.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (152 samples, 0.07%)</title><rect x="99.8843%" y="885" width="0.0703%" height="15" fill="rgb(228,0,35)" fg:x="215835" fg:w="152"/><text x="100.1343%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (227 samples, 0.11%)</title><rect x="99.8672%" y="965" width="0.1051%" height="15" fill="rgb(244,142,54)" fg:x="215798" fg:w="227"/><text x="100.1172%" y="975.50"></text></g><g><title>sled::threadpool::spawn::{{closure}} (227 samples, 0.11%)</title><rect x="99.8672%" y="949" width="0.1051%" height="15" fill="rgb(243,217,40)" fg:x="215798" fg:w="227"/><text x="100.1172%" y="959.50"></text></g><g><title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}} (227 samples, 0.11%)</title><rect x="99.8672%" y="933" width="0.1051%" height="15" fill="rgb(207,114,16)" fg:x="215798" fg:w="227"/><text x="100.1172%" y="943.50"></text></g><g><title>sled::pagecache::iobuf::IoBufs::write_to_log (224 samples, 0.10%)</title><rect x="99.8686%" y="917" width="0.1037%" height="15" fill="rgb(224,33,25)" fg:x="215801" fg:w="224"/><text x="100.1186%" y="927.50"></text></g><g><title>sync_file_range (38 samples, 0.02%)</title><rect x="99.9546%" y="901" width="0.0176%" height="15" fill="rgb(230,93,54)" fg:x="215987" fg:w="38"/><text x="100.2046%" y="911.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.9546%" y="885" width="0.0176%" height="15" fill="rgb(224,56,24)" fg:x="215987" fg:w="38"/><text x="100.2046%" y="895.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.9546%" y="869" width="0.0176%" height="15" fill="rgb(235,189,50)" fg:x="215987" fg:w="38"/><text x="100.2046%" y="879.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.9546%" y="853" width="0.0176%" height="15" fill="rgb(242,173,8)" fg:x="215987" fg:w="38"/><text x="100.2046%" y="863.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.9546%" y="837" width="0.0176%" height="15" fill="rgb(209,206,10)" fg:x="215987" fg:w="38"/><text x="100.2046%" y="847.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.9546%" y="821" width="0.0176%" height="15" fill="rgb(213,182,44)" fg:x="215987" fg:w="38"/><text x="100.2046%" y="831.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.9546%" y="805" width="0.0176%" height="15" fill="rgb(243,51,15)" fg:x="215987" fg:w="38"/><text x="100.2046%" y="815.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.9551%" y="789" width="0.0171%" height="15" fill="rgb(241,13,14)" fg:x="215988" fg:w="37"/><text x="100.2051%" y="799.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="99.9556%" y="773" width="0.0167%" height="15" fill="rgb(239,147,24)" fg:x="215989" fg:w="36"/><text x="100.2056%" y="783.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.9560%" y="757" width="0.0162%" height="15" fill="rgb(223,129,16)" fg:x="215990" fg:w="35"/><text x="100.2060%" y="767.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="99.9565%" y="741" width="0.0157%" height="15" fill="rgb(209,169,13)" fg:x="215991" fg:w="34"/><text x="100.2065%" y="751.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="99.9579%" y="725" width="0.0143%" height="15" fill="rgb(235,159,41)" fg:x="215994" fg:w="31"/><text x="100.2079%" y="735.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="99.9597%" y="709" width="0.0125%" height="15" fill="rgb(223,219,48)" fg:x="215998" fg:w="27"/><text x="100.2097%" y="719.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="99.9607%" y="693" width="0.0116%" height="15" fill="rgb(236,80,13)" fg:x="216000" fg:w="25"/><text x="100.2107%" y="703.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="99.9621%" y="677" width="0.0102%" height="15" fill="rgb(213,5,6)" fg:x="216003" fg:w="22"/><text x="100.2121%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (228 samples, 0.11%)</title><rect x="99.8672%" y="981" width="0.1055%" height="15" fill="rgb(205,59,21)" fg:x="215798" fg:w="228"/><text x="100.1172%" y="991.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (57 samples, 0.03%)</title><rect x="99.9727%" y="885" width="0.0264%" height="15" fill="rgb(247,137,35)" fg:x="216026" fg:w="57"/><text x="100.2227%" y="895.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (57 samples, 0.03%)</title><rect x="99.9727%" y="869" width="0.0264%" height="15" fill="rgb(242,208,28)" fg:x="216026" fg:w="57"/><text x="100.2227%" y="879.50"></text></g><g><title>syscall (57 samples, 0.03%)</title><rect x="99.9727%" y="853" width="0.0264%" height="15" fill="rgb(245,62,25)" fg:x="216026" fg:w="57"/><text x="100.2227%" y="863.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="99.9727%" y="837" width="0.0264%" height="15" fill="rgb(233,99,54)" fg:x="216026" fg:w="57"/><text x="100.2227%" y="847.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="99.9727%" y="821" width="0.0264%" height="15" fill="rgb(213,10,37)" fg:x="216026" fg:w="57"/><text x="100.2227%" y="831.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="99.9727%" y="805" width="0.0264%" height="15" fill="rgb(235,143,30)" fg:x="216026" fg:w="57"/><text x="100.2227%" y="815.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="99.9727%" y="789" width="0.0264%" height="15" fill="rgb(250,146,33)" fg:x="216026" fg:w="57"/><text x="100.2227%" y="799.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="99.9732%" y="773" width="0.0259%" height="15" fill="rgb(226,198,42)" fg:x="216027" fg:w="56"/><text x="100.2232%" y="783.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="99.9741%" y="757" width="0.0250%" height="15" fill="rgb(222,55,6)" fg:x="216029" fg:w="54"/><text x="100.2241%" y="767.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="99.9755%" y="741" width="0.0236%" height="15" fill="rgb(213,224,31)" fg:x="216032" fg:w="51"/><text x="100.2255%" y="751.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.9759%" y="725" width="0.0231%" height="15" fill="rgb(226,103,35)" fg:x="216033" fg:w="50"/><text x="100.2259%" y="735.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="99.9759%" y="709" width="0.0231%" height="15" fill="rgb(205,66,45)" fg:x="216033" fg:w="50"/><text x="100.2259%" y="719.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.9782%" y="693" width="0.0208%" height="15" fill="rgb(226,51,42)" fg:x="216038" fg:w="45"/><text x="100.2282%" y="703.50"></text></g><g><title>all (216,085 samples, 100%)</title><rect x="0.0000%" y="1317" width="100.0000%" height="15" fill="rgb(206,69,1)" fg:x="0" fg:w="216085"/><text x="0.2500%" y="1327.50"></text></g><g><title>sled-io-6 (287 samples, 0.13%)</title><rect x="99.8672%" y="1301" width="0.1328%" height="15" fill="rgb(213,228,47)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1311.50"></text></g><g><title>[libc.so.6] (287 samples, 0.13%)</title><rect x="99.8672%" y="1285" width="0.1328%" height="15" fill="rgb(224,204,18)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1295.50"></text></g><g><title>[libc.so.6] (287 samples, 0.13%)</title><rect x="99.8672%" y="1269" width="0.1328%" height="15" fill="rgb(253,187,47)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1279.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (287 samples, 0.13%)</title><rect x="99.8672%" y="1253" width="0.1328%" height="15" fill="rgb(232,61,2)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (287 samples, 0.13%)</title><rect x="99.8672%" y="1237" width="0.1328%" height="15" fill="rgb(213,132,35)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (287 samples, 0.13%)</title><rect x="99.8672%" y="1221" width="0.1328%" height="15" fill="rgb(247,33,21)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (287 samples, 0.13%)</title><rect x="99.8672%" y="1205" width="0.1328%" height="15" fill="rgb(233,71,46)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1215.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (287 samples, 0.13%)</title><rect x="99.8672%" y="1189" width="0.1328%" height="15" fill="rgb(222,173,43)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (287 samples, 0.13%)</title><rect x="99.8672%" y="1173" width="0.1328%" height="15" fill="rgb(249,218,47)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1183.50"></text></g><g><title>std::panicking::try (287 samples, 0.13%)</title><rect x="99.8672%" y="1157" width="0.1328%" height="15" fill="rgb(254,185,48)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (287 samples, 0.13%)</title><rect x="99.8672%" y="1141" width="0.1328%" height="15" fill="rgb(252,165,50)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (287 samples, 0.13%)</title><rect x="99.8672%" y="1125" width="0.1328%" height="15" fill="rgb(206,219,6)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (287 samples, 0.13%)</title><rect x="99.8672%" y="1109" width="0.1328%" height="15" fill="rgb(212,212,45)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1119.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (287 samples, 0.13%)</title><rect x="99.8672%" y="1093" width="0.1328%" height="15" fill="rgb(221,31,9)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1103.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (287 samples, 0.13%)</title><rect x="99.8672%" y="1077" width="0.1328%" height="15" fill="rgb(234,198,39)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (287 samples, 0.13%)</title><rect x="99.8672%" y="1061" width="0.1328%" height="15" fill="rgb(252,145,46)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1071.50"></text></g><g><title>std::panicking::try (287 samples, 0.13%)</title><rect x="99.8672%" y="1045" width="0.1328%" height="15" fill="rgb(237,149,0)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (287 samples, 0.13%)</title><rect x="99.8672%" y="1029" width="0.1328%" height="15" fill="rgb(229,65,5)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1039.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (287 samples, 0.13%)</title><rect x="99.8672%" y="1013" width="0.1328%" height="15" fill="rgb(235,60,36)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1023.50"></text></g><g><title>sled::threadpool::perform_work (287 samples, 0.13%)</title><rect x="99.8672%" y="997" width="0.1328%" height="15" fill="rgb(222,47,18)" fg:x="215798" fg:w="287"/><text x="100.1172%" y="1007.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (59 samples, 0.03%)</title><rect x="99.9727%" y="981" width="0.0273%" height="15" fill="rgb(235,114,22)" fg:x="216026" fg:w="59"/><text x="100.2227%" y="991.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (59 samples, 0.03%)</title><rect x="99.9727%" y="965" width="0.0273%" height="15" fill="rgb(209,167,11)" fg:x="216026" fg:w="59"/><text x="100.2227%" y="975.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (59 samples, 0.03%)</title><rect x="99.9727%" y="949" width="0.0273%" height="15" fill="rgb(251,73,18)" fg:x="216026" fg:w="59"/><text x="100.2227%" y="959.50"></text></g><g><title>parking_lot_core::parking_lot::park (59 samples, 0.03%)</title><rect x="99.9727%" y="933" width="0.0273%" height="15" fill="rgb(217,60,17)" fg:x="216026" fg:w="59"/><text x="100.2227%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (59 samples, 0.03%)</title><rect x="99.9727%" y="917" width="0.0273%" height="15" fill="rgb(224,36,37)" fg:x="216026" fg:w="59"/><text x="100.2227%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (59 samples, 0.03%)</title><rect x="99.9727%" y="901" width="0.0273%" height="15" fill="rgb(211,21,32)" fg:x="216026" fg:w="59"/><text x="100.2227%" y="911.50"></text></g></svg></svg>