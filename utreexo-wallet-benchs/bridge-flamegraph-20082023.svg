<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1542" onload="init(evt)" viewBox="0 0 1200 1542" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1542" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1525.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1525.00"> </text><svg id="frames" x="10" width="1180" total_samples="1192"><g><title>tokio::runtime::scheduler::current_thread::Context::enter (1 samples, 0.08%)</title><rect x="0.0000%" y="997" width="0.0839%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="981" width="0.0839%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.08%)</title><rect x="0.0000%" y="965" width="0.0839%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.08%)</title><rect x="0.0000%" y="949" width="0.0839%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="933" width="0.0839%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="0.0000%" y="917" width="0.0839%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>tokio::task::local::LocalSet::run_until::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="901" width="0.0839%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="0.0000%" y="885" width="0.0839%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>tokio::task::local::LocalSet::with (1 samples, 0.08%)</title><rect x="0.0000%" y="869" width="0.0839%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.08%)</title><rect x="0.0000%" y="853" width="0.0839%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.08%)</title><rect x="0.0000%" y="837" width="0.0839%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>tokio::task::local::LocalSet::with::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="821" width="0.0839%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="805" width="0.0839%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>tokio::task::local::LocalSet::tick (1 samples, 0.08%)</title><rect x="0.0000%" y="789" width="0.0839%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>tokio::runtime::coop::budget (1 samples, 0.08%)</title><rect x="0.0000%" y="773" width="0.0839%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>tokio::runtime::coop::with_budget (1 samples, 0.08%)</title><rect x="0.0000%" y="757" width="0.0839%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>tokio::task::local::LocalSet::tick::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="741" width="0.0839%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1 samples, 0.08%)</title><rect x="0.0000%" y="725" width="0.0839%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.08%)</title><rect x="0.0000%" y="709" width="0.0839%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.08%)</title><rect x="0.0000%" y="693" width="0.0839%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.08%)</title><rect x="0.0000%" y="677" width="0.0839%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.08%)</title><rect x="0.0000%" y="661" width="0.0839%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.08%)</title><rect x="0.0000%" y="645" width="0.0839%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>std::panicking::try (1 samples, 0.08%)</title><rect x="0.0000%" y="629" width="0.0839%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.08%)</title><rect x="0.0000%" y="613" width="0.0839%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="0.0000%" y="597" width="0.0839%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="581" width="0.0839%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1 samples, 0.08%)</title><rect x="0.0000%" y="565" width="0.0839%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.08%)</title><rect x="0.0000%" y="549" width="0.0839%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="533" width="0.0839%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>actix_http::date::DateService::new::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="517" width="0.0839%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>tokio::time::interval::Interval::tick::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="501" width="0.0839%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="0.0000%" y="485" width="0.0839%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>tokio::time::interval::Interval::tick::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="0.0000%" y="469" width="0.0839%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (1 samples, 0.08%)</title><rect x="0.0000%" y="453" width="0.0839%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="0.0000%" y="437" width="0.0839%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="0.0000%" y="421" width="0.0839%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1 samples, 0.08%)</title><rect x="0.0000%" y="405" width="0.0839%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (1 samples, 0.08%)</title><rect x="0.0000%" y="389" width="0.0839%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.08%)</title><rect x="0.0000%" y="373" width="0.0839%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1 samples, 0.08%)</title><rect x="0.0000%" y="357" width="0.0839%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>tokio::runtime::io::Handle::unpark (1 samples, 0.08%)</title><rect x="0.0000%" y="341" width="0.0839%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (1 samples, 0.08%)</title><rect x="0.0000%" y="325" width="0.0839%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="0.0000%" y="309" width="0.0839%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="0.0000%" y="293" width="0.0839%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="0.0000%" y="277" width="0.0839%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="0.0000%" y="261" width="0.0839%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.0000%" y="245" width="0.0839%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.0000%" y="229" width="0.0839%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.0000%" y="213" width="0.0839%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="0.0000%" y="197" width="0.0839%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.08%)</title><rect x="0.0839%" y="965" width="0.0839%" height="15" fill="rgb(250,213,24)" fg:x="1" fg:w="1"/><text x="0.3339%" y="975.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.08%)</title><rect x="0.0839%" y="949" width="0.0839%" height="15" fill="rgb(247,123,22)" fg:x="1" fg:w="1"/><text x="0.3339%" y="959.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.08%)</title><rect x="0.0839%" y="933" width="0.0839%" height="15" fill="rgb(231,138,38)" fg:x="1" fg:w="1"/><text x="0.3339%" y="943.50"></text></g><g><title>tokio::runtime::io::Driver::turn (53 samples, 4.45%)</title><rect x="0.1678%" y="885" width="4.4463%" height="15" fill="rgb(231,145,46)" fg:x="2" fg:w="53"/><text x="0.4178%" y="895.50">tokio..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (53 samples, 4.45%)</title><rect x="0.1678%" y="869" width="4.4463%" height="15" fill="rgb(251,118,11)" fg:x="2" fg:w="53"/><text x="0.4178%" y="879.50">mio::..</text></g><g><title>epoll_wait (53 samples, 4.45%)</title><rect x="0.1678%" y="853" width="4.4463%" height="15" fill="rgb(217,147,25)" fg:x="2" fg:w="53"/><text x="0.4178%" y="863.50">epoll..</text></g><g><title>[unknown] (53 samples, 4.45%)</title><rect x="0.1678%" y="837" width="4.4463%" height="15" fill="rgb(247,81,37)" fg:x="2" fg:w="53"/><text x="0.4178%" y="847.50">[unkn..</text></g><g><title>[unknown] (53 samples, 4.45%)</title><rect x="0.1678%" y="821" width="4.4463%" height="15" fill="rgb(209,12,38)" fg:x="2" fg:w="53"/><text x="0.4178%" y="831.50">[unkn..</text></g><g><title>[unknown] (53 samples, 4.45%)</title><rect x="0.1678%" y="805" width="4.4463%" height="15" fill="rgb(227,1,9)" fg:x="2" fg:w="53"/><text x="0.4178%" y="815.50">[unkn..</text></g><g><title>[unknown] (53 samples, 4.45%)</title><rect x="0.1678%" y="789" width="4.4463%" height="15" fill="rgb(248,47,43)" fg:x="2" fg:w="53"/><text x="0.4178%" y="799.50">[unkn..</text></g><g><title>[unknown] (53 samples, 4.45%)</title><rect x="0.1678%" y="773" width="4.4463%" height="15" fill="rgb(221,10,30)" fg:x="2" fg:w="53"/><text x="0.4178%" y="783.50">[unkn..</text></g><g><title>[unknown] (53 samples, 4.45%)</title><rect x="0.1678%" y="757" width="4.4463%" height="15" fill="rgb(210,229,1)" fg:x="2" fg:w="53"/><text x="0.4178%" y="767.50">[unkn..</text></g><g><title>[unknown] (52 samples, 4.36%)</title><rect x="0.2517%" y="741" width="4.3624%" height="15" fill="rgb(222,148,37)" fg:x="3" fg:w="52"/><text x="0.5017%" y="751.50">[unkn..</text></g><g><title>[unknown] (52 samples, 4.36%)</title><rect x="0.2517%" y="725" width="4.3624%" height="15" fill="rgb(234,67,33)" fg:x="3" fg:w="52"/><text x="0.5017%" y="735.50">[unkn..</text></g><g><title>[unknown] (51 samples, 4.28%)</title><rect x="0.3356%" y="709" width="4.2785%" height="15" fill="rgb(247,98,35)" fg:x="4" fg:w="51"/><text x="0.5856%" y="719.50">[unkn..</text></g><g><title>[unknown] (43 samples, 3.61%)</title><rect x="1.0067%" y="693" width="3.6074%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="43"/><text x="1.2567%" y="703.50">[unk..</text></g><g><title>[unknown] (25 samples, 2.10%)</title><rect x="2.5168%" y="677" width="2.0973%" height="15" fill="rgb(213,79,30)" fg:x="30" fg:w="25"/><text x="2.7668%" y="687.50">[..</text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.5302%" y="661" width="0.0839%" height="15" fill="rgb(246,177,23)" fg:x="54" fg:w="1"/><text x="4.7802%" y="671.50"></text></g><g><title>[libc.so.6] (56 samples, 4.70%)</title><rect x="0.0000%" y="1461" width="4.6980%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1471.50">[libc..</text></g><g><title>[libc.so.6] (56 samples, 4.70%)</title><rect x="0.0000%" y="1445" width="4.6980%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1455.50">[libc..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (56 samples, 4.70%)</title><rect x="0.0000%" y="1429" width="4.6980%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1439.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 4.70%)</title><rect x="0.0000%" y="1413" width="4.6980%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1423.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (56 samples, 4.70%)</title><rect x="0.0000%" y="1397" width="4.6980%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1407.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (56 samples, 4.70%)</title><rect x="0.0000%" y="1381" width="4.6980%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1391.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (56 samples, 4.70%)</title><rect x="0.0000%" y="1365" width="4.6980%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1375.50">std::..</text></g><g><title>std::panic::catch_unwind (56 samples, 4.70%)</title><rect x="0.0000%" y="1349" width="4.6980%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1359.50">std::..</text></g><g><title>std::panicking::try (56 samples, 4.70%)</title><rect x="0.0000%" y="1333" width="4.6980%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1343.50">std::..</text></g><g><title>std::panicking::try::do_call (56 samples, 4.70%)</title><rect x="0.0000%" y="1317" width="4.6980%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1327.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (56 samples, 4.70%)</title><rect x="0.0000%" y="1301" width="4.6980%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1311.50">&lt;core..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (56 samples, 4.70%)</title><rect x="0.0000%" y="1285" width="4.6980%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1295.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (56 samples, 4.70%)</title><rect x="0.0000%" y="1269" width="4.6980%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1279.50">std::..</text></g><g><title>actix_rt::arbiter::Arbiter::with_tokio_rt::{{closure}} (56 samples, 4.70%)</title><rect x="0.0000%" y="1253" width="4.6980%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1263.50">actix..</text></g><g><title>actix_rt::runtime::Runtime::block_on (56 samples, 4.70%)</title><rect x="0.0000%" y="1237" width="4.6980%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1247.50">actix..</text></g><g><title>tokio::task::local::LocalSet::block_on (56 samples, 4.70%)</title><rect x="0.0000%" y="1221" width="4.6980%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1231.50">tokio..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (56 samples, 4.70%)</title><rect x="0.0000%" y="1205" width="4.6980%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1215.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on (56 samples, 4.70%)</title><rect x="0.0000%" y="1189" width="4.6980%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1199.50">tokio..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (56 samples, 4.70%)</title><rect x="0.0000%" y="1173" width="4.6980%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1183.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on::{{closure}} (56 samples, 4.70%)</title><rect x="0.0000%" y="1157" width="4.6980%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1167.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (56 samples, 4.70%)</title><rect x="0.0000%" y="1141" width="4.6980%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1151.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter (56 samples, 4.70%)</title><rect x="0.0000%" y="1125" width="4.6980%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1135.50">tokio..</text></g><g><title>tokio::runtime::context::set_scheduler (56 samples, 4.70%)</title><rect x="0.0000%" y="1109" width="4.6980%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1119.50">tokio..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (56 samples, 4.70%)</title><rect x="0.0000%" y="1093" width="4.6980%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1103.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (56 samples, 4.70%)</title><rect x="0.0000%" y="1077" width="4.6980%" height="15" fill="rgb(230,116,27)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1087.50">std::..</text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (56 samples, 4.70%)</title><rect x="0.0000%" y="1061" width="4.6980%" height="15" fill="rgb(228,99,48)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1071.50">tokio..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (56 samples, 4.70%)</title><rect x="0.0000%" y="1045" width="4.6980%" height="15" fill="rgb(253,11,6)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1055.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter::{{closure}} (56 samples, 4.70%)</title><rect x="0.0000%" y="1029" width="4.6980%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1039.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}} (56 samples, 4.70%)</title><rect x="0.0000%" y="1013" width="4.6980%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="56"/><text x="0.2500%" y="1023.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (55 samples, 4.61%)</title><rect x="0.0839%" y="997" width="4.6141%" height="15" fill="rgb(233,208,19)" fg:x="1" fg:w="55"/><text x="0.3339%" y="1007.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (55 samples, 4.61%)</title><rect x="0.0839%" y="981" width="4.6141%" height="15" fill="rgb(216,164,2)" fg:x="1" fg:w="55"/><text x="0.3339%" y="991.50">tokio..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park::{{closure}} (54 samples, 4.53%)</title><rect x="0.1678%" y="965" width="4.5302%" height="15" fill="rgb(220,129,5)" fg:x="2" fg:w="54"/><text x="0.4178%" y="975.50">tokio..</text></g><g><title>tokio::runtime::driver::Driver::park (54 samples, 4.53%)</title><rect x="0.1678%" y="949" width="4.5302%" height="15" fill="rgb(242,17,10)" fg:x="2" fg:w="54"/><text x="0.4178%" y="959.50">tokio..</text></g><g><title>tokio::runtime::driver::TimeDriver::park (54 samples, 4.53%)</title><rect x="0.1678%" y="933" width="4.5302%" height="15" fill="rgb(242,107,0)" fg:x="2" fg:w="54"/><text x="0.4178%" y="943.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park (54 samples, 4.53%)</title><rect x="0.1678%" y="917" width="4.5302%" height="15" fill="rgb(251,28,31)" fg:x="2" fg:w="54"/><text x="0.4178%" y="927.50">tokio..</text></g><g><title>tokio::runtime::time::Driver::park_internal (54 samples, 4.53%)</title><rect x="0.1678%" y="901" width="4.5302%" height="15" fill="rgb(233,223,10)" fg:x="2" fg:w="54"/><text x="0.4178%" y="911.50">tokio..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (1 samples, 0.08%)</title><rect x="4.6141%" y="885" width="0.0839%" height="15" fill="rgb(215,21,27)" fg:x="55" fg:w="1"/><text x="4.8641%" y="895.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1 samples, 0.08%)</title><rect x="4.6141%" y="869" width="0.0839%" height="15" fill="rgb(232,23,21)" fg:x="55" fg:w="1"/><text x="4.8641%" y="879.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.08%)</title><rect x="4.6141%" y="853" width="0.0839%" height="15" fill="rgb(244,5,23)" fg:x="55" fg:w="1"/><text x="4.8641%" y="863.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1 samples, 0.08%)</title><rect x="4.6141%" y="837" width="0.0839%" height="15" fill="rgb(226,81,46)" fg:x="55" fg:w="1"/><text x="4.8641%" y="847.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.08%)</title><rect x="4.6141%" y="821" width="0.0839%" height="15" fill="rgb(247,70,30)" fg:x="55" fg:w="1"/><text x="4.8641%" y="831.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (1 samples, 0.08%)</title><rect x="4.6141%" y="805" width="0.0839%" height="15" fill="rgb(212,68,19)" fg:x="55" fg:w="1"/><text x="4.8641%" y="815.50"></text></g><g><title>regex::builders::Builder::build_one_string (1 samples, 0.08%)</title><rect x="4.6980%" y="1445" width="0.0839%" height="15" fill="rgb(240,187,13)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1455.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (1 samples, 0.08%)</title><rect x="4.6980%" y="1429" width="0.0839%" height="15" fill="rgb(223,113,26)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1439.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (1 samples, 0.08%)</title><rect x="4.6980%" y="1413" width="0.0839%" height="15" fill="rgb(206,192,2)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1423.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (1 samples, 0.08%)</title><rect x="4.6980%" y="1397" width="0.0839%" height="15" fill="rgb(241,108,4)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1407.50"></text></g><g><title>regex_automata::meta::strategy::new (1 samples, 0.08%)</title><rect x="4.6980%" y="1381" width="0.0839%" height="15" fill="rgb(247,173,49)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1391.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (1 samples, 0.08%)</title><rect x="4.6980%" y="1365" width="0.0839%" height="15" fill="rgb(224,114,35)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1375.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (1 samples, 0.08%)</title><rect x="4.6980%" y="1349" width="0.0839%" height="15" fill="rgb(245,159,27)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1359.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (1 samples, 0.08%)</title><rect x="4.6980%" y="1333" width="0.0839%" height="15" fill="rgb(245,172,44)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1343.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (1 samples, 0.08%)</title><rect x="4.6980%" y="1317" width="0.0839%" height="15" fill="rgb(236,23,11)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.6980%" y="1301" width="0.0839%" height="15" fill="rgb(205,117,38)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="4.6980%" y="1285" width="0.0839%" height="15" fill="rgb(237,72,25)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="4.6980%" y="1269" width="0.0839%" height="15" fill="rgb(244,70,9)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1279.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (1 samples, 0.08%)</title><rect x="4.6980%" y="1253" width="0.0839%" height="15" fill="rgb(217,125,39)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1263.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.08%)</title><rect x="4.6980%" y="1237" width="0.0839%" height="15" fill="rgb(235,36,10)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1247.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.08%)</title><rect x="4.6980%" y="1221" width="0.0839%" height="15" fill="rgb(251,123,47)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1231.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.08%)</title><rect x="4.6980%" y="1205" width="0.0839%" height="15" fill="rgb(221,13,13)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.6980%" y="1189" width="0.0839%" height="15" fill="rgb(238,131,9)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="4.6980%" y="1173" width="0.0839%" height="15" fill="rgb(211,50,8)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="4.6980%" y="1157" width="0.0839%" height="15" fill="rgb(245,182,24)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1167.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.08%)</title><rect x="4.6980%" y="1141" width="0.0839%" height="15" fill="rgb(242,14,37)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1151.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (1 samples, 0.08%)</title><rect x="4.6980%" y="1125" width="0.0839%" height="15" fill="rgb(246,228,12)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1135.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.08%)</title><rect x="4.6980%" y="1109" width="0.0839%" height="15" fill="rgb(213,55,15)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1119.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.08%)</title><rect x="4.6980%" y="1093" width="0.0839%" height="15" fill="rgb(209,9,3)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.6980%" y="1077" width="0.0839%" height="15" fill="rgb(230,59,30)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="4.6980%" y="1061" width="0.0839%" height="15" fill="rgb(209,121,21)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="4.6980%" y="1045" width="0.0839%" height="15" fill="rgb(220,109,13)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1055.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (1 samples, 0.08%)</title><rect x="4.6980%" y="1029" width="0.0839%" height="15" fill="rgb(232,18,1)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1039.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (1 samples, 0.08%)</title><rect x="4.6980%" y="1013" width="0.0839%" height="15" fill="rgb(215,41,42)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1023.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_literal (1 samples, 0.08%)</title><rect x="4.6980%" y="997" width="0.0839%" height="15" fill="rgb(224,123,36)" fg:x="56" fg:w="1"/><text x="4.9480%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (1 samples, 0.08%)</title><rect x="4.6980%" y="981" width="0.0839%" height="15" fill="rgb(240,125,3)" fg:x="56" fg:w="1"/><text x="4.9480%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.6980%" y="965" width="0.0839%" height="15" fill="rgb(205,98,50)" fg:x="56" fg:w="1"/><text x="4.9480%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="4.6980%" y="949" width="0.0839%" height="15" fill="rgb(205,185,37)" fg:x="56" fg:w="1"/><text x="4.9480%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="4.6980%" y="933" width="0.0839%" height="15" fill="rgb(238,207,15)" fg:x="56" fg:w="1"/><text x="4.9480%" y="943.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_literal::{{closure}} (1 samples, 0.08%)</title><rect x="4.6980%" y="917" width="0.0839%" height="15" fill="rgb(213,199,42)" fg:x="56" fg:w="1"/><text x="4.9480%" y="927.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_range (1 samples, 0.08%)</title><rect x="4.6980%" y="901" width="0.0839%" height="15" fill="rgb(235,201,11)" fg:x="56" fg:w="1"/><text x="4.9480%" y="911.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_range (1 samples, 0.08%)</title><rect x="4.6980%" y="885" width="0.0839%" height="15" fill="rgb(207,46,11)" fg:x="56" fg:w="1"/><text x="4.9480%" y="895.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1 samples, 0.08%)</title><rect x="4.6980%" y="869" width="0.0839%" height="15" fill="rgb(241,35,35)" fg:x="56" fg:w="1"/><text x="4.9480%" y="879.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1 samples, 0.08%)</title><rect x="4.6980%" y="853" width="0.0839%" height="15" fill="rgb(243,32,47)" fg:x="56" fg:w="1"/><text x="4.9480%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="4.6980%" y="837" width="0.0839%" height="15" fill="rgb(247,202,23)" fg:x="56" fg:w="1"/><text x="4.9480%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="4.6980%" y="821" width="0.0839%" height="15" fill="rgb(219,102,11)" fg:x="56" fg:w="1"/><text x="4.9480%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="4.6980%" y="805" width="0.0839%" height="15" fill="rgb(243,110,44)" fg:x="56" fg:w="1"/><text x="4.9480%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.6980%" y="789" width="0.0839%" height="15" fill="rgb(222,74,54)" fg:x="56" fg:w="1"/><text x="4.9480%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="4.6980%" y="773" width="0.0839%" height="15" fill="rgb(216,99,12)" fg:x="56" fg:w="1"/><text x="4.9480%" y="783.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="4.6980%" y="757" width="0.0839%" height="15" fill="rgb(226,22,26)" fg:x="56" fg:w="1"/><text x="4.9480%" y="767.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="4.6980%" y="741" width="0.0839%" height="15" fill="rgb(217,163,10)" fg:x="56" fg:w="1"/><text x="4.9480%" y="751.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.6980%" y="725" width="0.0839%" height="15" fill="rgb(213,25,53)" fg:x="56" fg:w="1"/><text x="4.9480%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="4.6980%" y="709" width="0.0839%" height="15" fill="rgb(252,105,26)" fg:x="56" fg:w="1"/><text x="4.9480%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="4.6980%" y="693" width="0.0839%" height="15" fill="rgb(220,39,43)" fg:x="56" fg:w="1"/><text x="4.9480%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.17%)</title><rect x="4.7819%" y="885" width="0.1678%" height="15" fill="rgb(229,68,48)" fg:x="57" fg:w="2"/><text x="5.0319%" y="895.50"></text></g><g><title>core::ptr::write (2 samples, 0.17%)</title><rect x="4.7819%" y="869" width="0.1678%" height="15" fill="rgb(252,8,32)" fg:x="57" fg:w="2"/><text x="5.0319%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.8658%" y="853" width="0.0839%" height="15" fill="rgb(223,20,43)" fg:x="58" fg:w="1"/><text x="5.1158%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.8658%" y="837" width="0.0839%" height="15" fill="rgb(229,81,49)" fg:x="58" fg:w="1"/><text x="5.1158%" y="847.50"></text></g><g><title>actix-rt|system (60 samples, 5.03%)</title><rect x="0.0000%" y="1477" width="5.0336%" height="15" fill="rgb(236,28,36)" fg:x="0" fg:w="60"/><text x="0.2500%" y="1487.50">actix-..</text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="4.6980%" y="1461" width="0.3356%" height="15" fill="rgb(249,185,26)" fg:x="56" fg:w="4"/><text x="4.9480%" y="1471.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (3 samples, 0.25%)</title><rect x="4.7819%" y="1445" width="0.2517%" height="15" fill="rgb(249,174,33)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1455.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (3 samples, 0.25%)</title><rect x="4.7819%" y="1429" width="0.2517%" height="15" fill="rgb(233,201,37)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1439.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (3 samples, 0.25%)</title><rect x="4.7819%" y="1413" width="0.2517%" height="15" fill="rgb(221,78,26)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1423.50"></text></g><g><title>regex_automata::meta::strategy::new (3 samples, 0.25%)</title><rect x="4.7819%" y="1397" width="0.2517%" height="15" fill="rgb(250,127,30)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1407.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (3 samples, 0.25%)</title><rect x="4.7819%" y="1381" width="0.2517%" height="15" fill="rgb(230,49,44)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1391.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (3 samples, 0.25%)</title><rect x="4.7819%" y="1365" width="0.2517%" height="15" fill="rgb(229,67,23)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1375.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (3 samples, 0.25%)</title><rect x="4.7819%" y="1349" width="0.2517%" height="15" fill="rgb(249,83,47)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1359.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (3 samples, 0.25%)</title><rect x="4.7819%" y="1333" width="0.2517%" height="15" fill="rgb(215,43,3)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.25%)</title><rect x="4.7819%" y="1317" width="0.2517%" height="15" fill="rgb(238,154,13)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.25%)</title><rect x="4.7819%" y="1301" width="0.2517%" height="15" fill="rgb(219,56,2)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.25%)</title><rect x="4.7819%" y="1285" width="0.2517%" height="15" fill="rgb(233,0,4)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1295.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::{{closure}} (3 samples, 0.25%)</title><rect x="4.7819%" y="1269" width="0.2517%" height="15" fill="rgb(235,30,7)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1279.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.25%)</title><rect x="4.7819%" y="1253" width="0.2517%" height="15" fill="rgb(250,79,13)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1263.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.25%)</title><rect x="4.7819%" y="1237" width="0.2517%" height="15" fill="rgb(211,146,34)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1247.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (3 samples, 0.25%)</title><rect x="4.7819%" y="1221" width="0.2517%" height="15" fill="rgb(228,22,38)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.25%)</title><rect x="4.7819%" y="1205" width="0.2517%" height="15" fill="rgb(235,168,5)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.25%)</title><rect x="4.7819%" y="1189" width="0.2517%" height="15" fill="rgb(221,155,16)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.25%)</title><rect x="4.7819%" y="1173" width="0.2517%" height="15" fill="rgb(215,215,53)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1183.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 0.25%)</title><rect x="4.7819%" y="1157" width="0.2517%" height="15" fill="rgb(223,4,10)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1167.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.25%)</title><rect x="4.7819%" y="1141" width="0.2517%" height="15" fill="rgb(234,103,6)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1151.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.25%)</title><rect x="4.7819%" y="1125" width="0.2517%" height="15" fill="rgb(227,97,0)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1135.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (3 samples, 0.25%)</title><rect x="4.7819%" y="1109" width="0.2517%" height="15" fill="rgb(234,150,53)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.25%)</title><rect x="4.7819%" y="1093" width="0.2517%" height="15" fill="rgb(228,201,54)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.25%)</title><rect x="4.7819%" y="1077" width="0.2517%" height="15" fill="rgb(222,22,37)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.25%)</title><rect x="4.7819%" y="1061" width="0.2517%" height="15" fill="rgb(237,53,32)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1071.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::{{closure}} (3 samples, 0.25%)</title><rect x="4.7819%" y="1045" width="0.2517%" height="15" fill="rgb(233,25,53)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1055.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (3 samples, 0.25%)</title><rect x="4.7819%" y="1029" width="0.2517%" height="15" fill="rgb(210,40,34)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1039.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (3 samples, 0.25%)</title><rect x="4.7819%" y="1013" width="0.2517%" height="15" fill="rgb(241,220,44)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1023.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3 samples, 0.25%)</title><rect x="4.7819%" y="997" width="0.2517%" height="15" fill="rgb(235,28,35)" fg:x="57" fg:w="3"/><text x="5.0319%" y="1007.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (3 samples, 0.25%)</title><rect x="4.7819%" y="981" width="0.2517%" height="15" fill="rgb(210,56,17)" fg:x="57" fg:w="3"/><text x="5.0319%" y="991.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (3 samples, 0.25%)</title><rect x="4.7819%" y="965" width="0.2517%" height="15" fill="rgb(224,130,29)" fg:x="57" fg:w="3"/><text x="5.0319%" y="975.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (3 samples, 0.25%)</title><rect x="4.7819%" y="949" width="0.2517%" height="15" fill="rgb(235,212,8)" fg:x="57" fg:w="3"/><text x="5.0319%" y="959.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (3 samples, 0.25%)</title><rect x="4.7819%" y="933" width="0.2517%" height="15" fill="rgb(223,33,50)" fg:x="57" fg:w="3"/><text x="5.0319%" y="943.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.25%)</title><rect x="4.7819%" y="917" width="0.2517%" height="15" fill="rgb(219,149,13)" fg:x="57" fg:w="3"/><text x="5.0319%" y="927.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.25%)</title><rect x="4.7819%" y="901" width="0.2517%" height="15" fill="rgb(250,156,29)" fg:x="57" fg:w="3"/><text x="5.0319%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9497%" y="885" width="0.0839%" height="15" fill="rgb(216,193,19)" fg:x="59" fg:w="1"/><text x="5.1997%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9497%" y="869" width="0.0839%" height="15" fill="rgb(216,135,14)" fg:x="59" fg:w="1"/><text x="5.1997%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.9497%" y="853" width="0.0839%" height="15" fill="rgb(241,47,5)" fg:x="59" fg:w="1"/><text x="5.1997%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.9497%" y="837" width="0.0839%" height="15" fill="rgb(233,42,35)" fg:x="59" fg:w="1"/><text x="5.1997%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.9497%" y="821" width="0.0839%" height="15" fill="rgb(231,13,6)" fg:x="59" fg:w="1"/><text x="5.1997%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.9497%" y="805" width="0.0839%" height="15" fill="rgb(207,181,40)" fg:x="59" fg:w="1"/><text x="5.1997%" y="815.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="4.9497%" y="789" width="0.0839%" height="15" fill="rgb(254,173,49)" fg:x="59" fg:w="1"/><text x="5.1997%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="4.9497%" y="773" width="0.0839%" height="15" fill="rgb(221,1,38)" fg:x="59" fg:w="1"/><text x="5.1997%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="4.9497%" y="757" width="0.0839%" height="15" fill="rgb(206,124,46)" fg:x="59" fg:w="1"/><text x="5.1997%" y="767.50"></text></g><g><title>__mprotect (1 samples, 0.08%)</title><rect x="4.9497%" y="741" width="0.0839%" height="15" fill="rgb(249,21,11)" fg:x="59" fg:w="1"/><text x="5.1997%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="725" width="0.0839%" height="15" fill="rgb(222,201,40)" fg:x="59" fg:w="1"/><text x="5.1997%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="709" width="0.0839%" height="15" fill="rgb(235,61,29)" fg:x="59" fg:w="1"/><text x="5.1997%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="693" width="0.0839%" height="15" fill="rgb(219,207,3)" fg:x="59" fg:w="1"/><text x="5.1997%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="677" width="0.0839%" height="15" fill="rgb(222,56,46)" fg:x="59" fg:w="1"/><text x="5.1997%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="661" width="0.0839%" height="15" fill="rgb(239,76,54)" fg:x="59" fg:w="1"/><text x="5.1997%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="645" width="0.0839%" height="15" fill="rgb(231,124,27)" fg:x="59" fg:w="1"/><text x="5.1997%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="629" width="0.0839%" height="15" fill="rgb(249,195,6)" fg:x="59" fg:w="1"/><text x="5.1997%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="613" width="0.0839%" height="15" fill="rgb(237,174,47)" fg:x="59" fg:w="1"/><text x="5.1997%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="597" width="0.0839%" height="15" fill="rgb(206,201,31)" fg:x="59" fg:w="1"/><text x="5.1997%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="581" width="0.0839%" height="15" fill="rgb(231,57,52)" fg:x="59" fg:w="1"/><text x="5.1997%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="4.9497%" y="565" width="0.0839%" height="15" fill="rgb(248,177,22)" fg:x="59" fg:w="1"/><text x="5.1997%" y="575.50"></text></g><g><title>[bridge] (1 samples, 0.08%)</title><rect x="5.0336%" y="1461" width="0.0839%" height="15" fill="rgb(215,211,37)" fg:x="60" fg:w="1"/><text x="5.2836%" y="1471.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="5.0336%" y="1445" width="0.0839%" height="15" fill="rgb(241,128,51)" fg:x="60" fg:w="1"/><text x="5.2836%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.0336%" y="1429" width="0.0839%" height="15" fill="rgb(227,165,31)" fg:x="60" fg:w="1"/><text x="5.2836%" y="1439.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="5.1174%" y="1461" width="0.0839%" height="15" fill="rgb(228,167,24)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1471.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="5.1174%" y="1445" width="0.0839%" height="15" fill="rgb(228,143,12)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1455.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="5.1174%" y="1429" width="0.0839%" height="15" fill="rgb(249,149,8)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1439.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="5.1174%" y="1413" width="0.0839%" height="15" fill="rgb(243,35,44)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1423.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.08%)</title><rect x="5.1174%" y="1397" width="0.0839%" height="15" fill="rgb(246,89,9)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1381" width="0.0839%" height="15" fill="rgb(233,213,13)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1365" width="0.0839%" height="15" fill="rgb(233,141,41)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1349" width="0.0839%" height="15" fill="rgb(239,167,4)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1333" width="0.0839%" height="15" fill="rgb(209,217,16)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1317" width="0.0839%" height="15" fill="rgb(219,88,35)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1301" width="0.0839%" height="15" fill="rgb(220,193,23)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1285" width="0.0839%" height="15" fill="rgb(230,90,52)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1269" width="0.0839%" height="15" fill="rgb(252,106,19)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1253" width="0.0839%" height="15" fill="rgb(206,74,20)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.1174%" y="1237" width="0.0839%" height="15" fill="rgb(230,138,44)" fg:x="61" fg:w="1"/><text x="5.3674%" y="1247.50"></text></g><g><title>&lt;actix_server::server::Server as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="5.2013%" y="757" width="0.0839%" height="15" fill="rgb(235,182,43)" fg:x="62" fg:w="1"/><text x="5.4513%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.08%)</title><rect x="5.2013%" y="741" width="0.0839%" height="15" fill="rgb(242,16,51)" fg:x="62" fg:w="1"/><text x="5.4513%" y="751.50"></text></g><g><title>actix_server::server::ServerInner::run::{{closure}} (1 samples, 0.08%)</title><rect x="5.2013%" y="725" width="0.0839%" height="15" fill="rgb(248,9,4)" fg:x="62" fg:w="1"/><text x="5.4513%" y="735.50"></text></g><g><title>actix_server::server::ServerInner::run_sync (1 samples, 0.08%)</title><rect x="5.2013%" y="709" width="0.0839%" height="15" fill="rgb(210,31,22)" fg:x="62" fg:w="1"/><text x="5.4513%" y="719.50"></text></g><g><title>actix_server::accept::Accept::start (1 samples, 0.08%)</title><rect x="5.2013%" y="693" width="0.0839%" height="15" fill="rgb(239,54,39)" fg:x="62" fg:w="1"/><text x="5.4513%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="5.2013%" y="677" width="0.0839%" height="15" fill="rgb(230,99,41)" fg:x="62" fg:w="1"/><text x="5.4513%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2013%" y="661" width="0.0839%" height="15" fill="rgb(253,106,12)" fg:x="62" fg:w="1"/><text x="5.4513%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="5.2013%" y="645" width="0.0839%" height="15" fill="rgb(213,46,41)" fg:x="62" fg:w="1"/><text x="5.4513%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.08%)</title><rect x="5.2013%" y="629" width="0.0839%" height="15" fill="rgb(215,133,35)" fg:x="62" fg:w="1"/><text x="5.4513%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="5.2013%" y="613" width="0.0839%" height="15" fill="rgb(213,28,5)" fg:x="62" fg:w="1"/><text x="5.4513%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2013%" y="597" width="0.0839%" height="15" fill="rgb(215,77,49)" fg:x="62" fg:w="1"/><text x="5.4513%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2013%" y="581" width="0.0839%" height="15" fill="rgb(248,100,22)" fg:x="62" fg:w="1"/><text x="5.4513%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="5.2013%" y="565" width="0.0839%" height="15" fill="rgb(208,67,9)" fg:x="62" fg:w="1"/><text x="5.4513%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="5.2013%" y="549" width="0.0839%" height="15" fill="rgb(219,133,21)" fg:x="62" fg:w="1"/><text x="5.4513%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.08%)</title><rect x="5.2013%" y="533" width="0.0839%" height="15" fill="rgb(246,46,29)" fg:x="62" fg:w="1"/><text x="5.4513%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.2013%" y="517" width="0.0839%" height="15" fill="rgb(246,185,52)" fg:x="62" fg:w="1"/><text x="5.4513%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.08%)</title><rect x="5.2013%" y="501" width="0.0839%" height="15" fill="rgb(252,136,11)" fg:x="62" fg:w="1"/><text x="5.4513%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="5.2013%" y="485" width="0.0839%" height="15" fill="rgb(219,138,53)" fg:x="62" fg:w="1"/><text x="5.4513%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="5.2013%" y="469" width="0.0839%" height="15" fill="rgb(211,51,23)" fg:x="62" fg:w="1"/><text x="5.4513%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.08%)</title><rect x="5.2013%" y="453" width="0.0839%" height="15" fill="rgb(247,221,28)" fg:x="62" fg:w="1"/><text x="5.4513%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.08%)</title><rect x="5.2013%" y="437" width="0.0839%" height="15" fill="rgb(251,222,45)" fg:x="62" fg:w="1"/><text x="5.4513%" y="447.50"></text></g><g><title>actix_server::accept::Accept::start::{{closure}} (1 samples, 0.08%)</title><rect x="5.2013%" y="421" width="0.0839%" height="15" fill="rgb(217,162,53)" fg:x="62" fg:w="1"/><text x="5.4513%" y="431.50"></text></g><g><title>actix_server::worker::ServerWorker::start (1 samples, 0.08%)</title><rect x="5.2013%" y="405" width="0.0839%" height="15" fill="rgb(229,93,14)" fg:x="62" fg:w="1"/><text x="5.4513%" y="415.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (1 samples, 0.08%)</title><rect x="5.2013%" y="389" width="0.0839%" height="15" fill="rgb(209,67,49)" fg:x="62" fg:w="1"/><text x="5.4513%" y="399.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv (1 samples, 0.08%)</title><rect x="5.2013%" y="373" width="0.0839%" height="15" fill="rgb(213,87,29)" fg:x="62" fg:w="1"/><text x="5.4513%" y="383.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (1 samples, 0.08%)</title><rect x="5.2013%" y="357" width="0.0839%" height="15" fill="rgb(205,151,52)" fg:x="62" fg:w="1"/><text x="5.4513%" y="367.50"></text></g><g><title>std::sync::mpmc::context::Context::with (1 samples, 0.08%)</title><rect x="5.2013%" y="341" width="0.0839%" height="15" fill="rgb(253,215,39)" fg:x="62" fg:w="1"/><text x="5.4513%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.08%)</title><rect x="5.2013%" y="325" width="0.0839%" height="15" fill="rgb(221,220,41)" fg:x="62" fg:w="1"/><text x="5.4513%" y="335.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (1 samples, 0.08%)</title><rect x="5.2013%" y="309" width="0.0839%" height="15" fill="rgb(218,133,21)" fg:x="62" fg:w="1"/><text x="5.4513%" y="319.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (1 samples, 0.08%)</title><rect x="5.2013%" y="293" width="0.0839%" height="15" fill="rgb(221,193,43)" fg:x="62" fg:w="1"/><text x="5.4513%" y="303.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv::{{closure}} (1 samples, 0.08%)</title><rect x="5.2013%" y="277" width="0.0839%" height="15" fill="rgb(240,128,52)" fg:x="62" fg:w="1"/><text x="5.4513%" y="287.50"></text></g><g><title>std::sync::mpmc::context::Context::wait_until (1 samples, 0.08%)</title><rect x="5.2013%" y="261" width="0.0839%" height="15" fill="rgb(253,114,12)" fg:x="62" fg:w="1"/><text x="5.4513%" y="271.50"></text></g><g><title>std::thread::park (1 samples, 0.08%)</title><rect x="5.2013%" y="245" width="0.0839%" height="15" fill="rgb(215,223,47)" fg:x="62" fg:w="1"/><text x="5.4513%" y="255.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (1 samples, 0.08%)</title><rect x="5.2013%" y="229" width="0.0839%" height="15" fill="rgb(248,225,23)" fg:x="62" fg:w="1"/><text x="5.4513%" y="239.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.08%)</title><rect x="5.2013%" y="213" width="0.0839%" height="15" fill="rgb(250,108,0)" fg:x="62" fg:w="1"/><text x="5.4513%" y="223.50"></text></g><g><title>syscall (1 samples, 0.08%)</title><rect x="5.2013%" y="197" width="0.0839%" height="15" fill="rgb(228,208,7)" fg:x="62" fg:w="1"/><text x="5.4513%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="181" width="0.0839%" height="15" fill="rgb(244,45,10)" fg:x="62" fg:w="1"/><text x="5.4513%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="165" width="0.0839%" height="15" fill="rgb(207,125,25)" fg:x="62" fg:w="1"/><text x="5.4513%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="149" width="0.0839%" height="15" fill="rgb(210,195,18)" fg:x="62" fg:w="1"/><text x="5.4513%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="133" width="0.0839%" height="15" fill="rgb(249,80,12)" fg:x="62" fg:w="1"/><text x="5.4513%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="117" width="0.0839%" height="15" fill="rgb(221,65,9)" fg:x="62" fg:w="1"/><text x="5.4513%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="101" width="0.0839%" height="15" fill="rgb(235,49,36)" fg:x="62" fg:w="1"/><text x="5.4513%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="85" width="0.0839%" height="15" fill="rgb(225,32,20)" fg:x="62" fg:w="1"/><text x="5.4513%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="69" width="0.0839%" height="15" fill="rgb(215,141,46)" fg:x="62" fg:w="1"/><text x="5.4513%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="53" width="0.0839%" height="15" fill="rgb(250,160,47)" fg:x="62" fg:w="1"/><text x="5.4513%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2013%" y="37" width="0.0839%" height="15" fill="rgb(216,222,40)" fg:x="62" fg:w="1"/><text x="5.4513%" y="47.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.17%)</title><rect x="5.2013%" y="1349" width="0.1678%" height="15" fill="rgb(234,217,39)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1359.50"></text></g><g><title>std::panicking::try (2 samples, 0.17%)</title><rect x="5.2013%" y="1333" width="0.1678%" height="15" fill="rgb(207,178,40)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.17%)</title><rect x="5.2013%" y="1317" width="0.1678%" height="15" fill="rgb(221,136,13)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.17%)</title><rect x="5.2013%" y="1301" width="0.1678%" height="15" fill="rgb(249,199,10)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="1285" width="0.1678%" height="15" fill="rgb(249,222,13)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.17%)</title><rect x="5.2013%" y="1269" width="0.1678%" height="15" fill="rgb(244,185,38)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1279.50"></text></g><g><title>bridge::main::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="1253" width="0.1678%" height="15" fill="rgb(236,202,9)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1263.50"></text></g><g><title>actix_rt::system::SystemRunner::block_on (2 samples, 0.17%)</title><rect x="5.2013%" y="1237" width="0.1678%" height="15" fill="rgb(250,229,37)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1247.50"></text></g><g><title>actix_rt::runtime::Runtime::block_on (2 samples, 0.17%)</title><rect x="5.2013%" y="1221" width="0.1678%" height="15" fill="rgb(206,174,23)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1231.50"></text></g><g><title>tokio::task::local::LocalSet::block_on (2 samples, 0.17%)</title><rect x="5.2013%" y="1205" width="0.1678%" height="15" fill="rgb(211,33,43)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1215.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (2 samples, 0.17%)</title><rect x="5.2013%" y="1189" width="0.1678%" height="15" fill="rgb(245,58,50)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on (2 samples, 0.17%)</title><rect x="5.2013%" y="1173" width="0.1678%" height="15" fill="rgb(244,68,36)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1183.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2 samples, 0.17%)</title><rect x="5.2013%" y="1157" width="0.1678%" height="15" fill="rgb(232,229,15)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="1141" width="0.1678%" height="15" fill="rgb(254,30,23)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (2 samples, 0.17%)</title><rect x="5.2013%" y="1125" width="0.1678%" height="15" fill="rgb(235,160,14)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter (2 samples, 0.17%)</title><rect x="5.2013%" y="1109" width="0.1678%" height="15" fill="rgb(212,155,44)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1119.50"></text></g><g><title>tokio::runtime::context::set_scheduler (2 samples, 0.17%)</title><rect x="5.2013%" y="1093" width="0.1678%" height="15" fill="rgb(226,2,50)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.17%)</title><rect x="5.2013%" y="1077" width="0.1678%" height="15" fill="rgb(234,177,6)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.17%)</title><rect x="5.2013%" y="1061" width="0.1678%" height="15" fill="rgb(217,24,9)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1071.50"></text></g><g><title>tokio::runtime::context::set_scheduler::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="1045" width="0.1678%" height="15" fill="rgb(220,13,46)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1055.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (2 samples, 0.17%)</title><rect x="5.2013%" y="1029" width="0.1678%" height="15" fill="rgb(239,221,27)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="1013" width="0.1678%" height="15" fill="rgb(222,198,25)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="997" width="0.1678%" height="15" fill="rgb(211,99,13)" fg:x="62" fg:w="2"/><text x="5.4513%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (2 samples, 0.17%)</title><rect x="5.2013%" y="981" width="0.1678%" height="15" fill="rgb(232,111,31)" fg:x="62" fg:w="2"/><text x="5.4513%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="965" width="0.1678%" height="15" fill="rgb(245,82,37)" fg:x="62" fg:w="2"/><text x="5.4513%" y="975.50"></text></g><g><title>tokio::runtime::coop::budget (2 samples, 0.17%)</title><rect x="5.2013%" y="949" width="0.1678%" height="15" fill="rgb(227,149,46)" fg:x="62" fg:w="2"/><text x="5.4513%" y="959.50"></text></g><g><title>tokio::runtime::coop::with_budget (2 samples, 0.17%)</title><rect x="5.2013%" y="933" width="0.1678%" height="15" fill="rgb(218,36,50)" fg:x="62" fg:w="2"/><text x="5.4513%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="917" width="0.1678%" height="15" fill="rgb(226,80,48)" fg:x="62" fg:w="2"/><text x="5.4513%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.17%)</title><rect x="5.2013%" y="901" width="0.1678%" height="15" fill="rgb(238,224,15)" fg:x="62" fg:w="2"/><text x="5.4513%" y="911.50"></text></g><g><title>tokio::task::local::LocalSet::run_until::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="885" width="0.1678%" height="15" fill="rgb(241,136,10)" fg:x="62" fg:w="2"/><text x="5.4513%" y="895.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.17%)</title><rect x="5.2013%" y="869" width="0.1678%" height="15" fill="rgb(208,32,45)" fg:x="62" fg:w="2"/><text x="5.4513%" y="879.50"></text></g><g><title>tokio::task::local::LocalSet::with (2 samples, 0.17%)</title><rect x="5.2013%" y="853" width="0.1678%" height="15" fill="rgb(207,135,9)" fg:x="62" fg:w="2"/><text x="5.4513%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.17%)</title><rect x="5.2013%" y="837" width="0.1678%" height="15" fill="rgb(206,86,44)" fg:x="62" fg:w="2"/><text x="5.4513%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.17%)</title><rect x="5.2013%" y="821" width="0.1678%" height="15" fill="rgb(245,177,15)" fg:x="62" fg:w="2"/><text x="5.4513%" y="831.50"></text></g><g><title>tokio::task::local::LocalSet::with::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="805" width="0.1678%" height="15" fill="rgb(206,64,50)" fg:x="62" fg:w="2"/><text x="5.4513%" y="815.50"></text></g><g><title>&lt;tokio::task::local::RunUntil&lt;T&gt; as core::future::future::Future&gt;::poll::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="789" width="0.1678%" height="15" fill="rgb(234,36,40)" fg:x="62" fg:w="2"/><text x="5.4513%" y="799.50"></text></g><g><title>bridge::api::create_api::{{closure}} (2 samples, 0.17%)</title><rect x="5.2013%" y="773" width="0.1678%" height="15" fill="rgb(213,64,8)" fg:x="62" fg:w="2"/><text x="5.4513%" y="783.50"></text></g><g><title>actix_web::server::HttpServer&lt;F,I,S,B&gt;::new (1 samples, 0.08%)</title><rect x="5.2852%" y="757" width="0.0839%" height="15" fill="rgb(210,75,36)" fg:x="63" fg:w="1"/><text x="5.5352%" y="767.50"></text></g><g><title>&lt;actix_server::builder::ServerBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="5.2852%" y="741" width="0.0839%" height="15" fill="rgb(229,88,21)" fg:x="63" fg:w="1"/><text x="5.5352%" y="751.50"></text></g><g><title>actix_server::builder::ServerBuilder::new (1 samples, 0.08%)</title><rect x="5.2852%" y="725" width="0.0839%" height="15" fill="rgb(252,204,47)" fg:x="63" fg:w="1"/><text x="5.5352%" y="735.50"></text></g><g><title>num_cpus::get_physical (1 samples, 0.08%)</title><rect x="5.2852%" y="709" width="0.0839%" height="15" fill="rgb(208,77,27)" fg:x="63" fg:w="1"/><text x="5.5352%" y="719.50"></text></g><g><title>num_cpus::linux::get_num_physical_cpus (1 samples, 0.08%)</title><rect x="5.2852%" y="693" width="0.0839%" height="15" fill="rgb(221,76,26)" fg:x="63" fg:w="1"/><text x="5.5352%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.2852%" y="677" width="0.0839%" height="15" fill="rgb(225,139,18)" fg:x="63" fg:w="1"/><text x="5.5352%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.08%)</title><rect x="5.2852%" y="661" width="0.0839%" height="15" fill="rgb(230,137,11)" fg:x="63" fg:w="1"/><text x="5.5352%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.08%)</title><rect x="5.2852%" y="645" width="0.0839%" height="15" fill="rgb(212,28,1)" fg:x="63" fg:w="1"/><text x="5.5352%" y="655.50"></text></g><g><title>&lt;std::io::Lines&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.2852%" y="629" width="0.0839%" height="15" fill="rgb(248,164,17)" fg:x="63" fg:w="1"/><text x="5.5352%" y="639.50"></text></g><g><title>std::io::BufRead::read_line (1 samples, 0.08%)</title><rect x="5.2852%" y="613" width="0.0839%" height="15" fill="rgb(222,171,42)" fg:x="63" fg:w="1"/><text x="5.5352%" y="623.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.08%)</title><rect x="5.2852%" y="597" width="0.0839%" height="15" fill="rgb(243,84,45)" fg:x="63" fg:w="1"/><text x="5.5352%" y="607.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1 samples, 0.08%)</title><rect x="5.2852%" y="581" width="0.0839%" height="15" fill="rgb(252,49,23)" fg:x="63" fg:w="1"/><text x="5.5352%" y="591.50"></text></g><g><title>std::io::read_until (1 samples, 0.08%)</title><rect x="5.2852%" y="565" width="0.0839%" height="15" fill="rgb(215,19,7)" fg:x="63" fg:w="1"/><text x="5.5352%" y="575.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.08%)</title><rect x="5.2852%" y="549" width="0.0839%" height="15" fill="rgb(238,81,41)" fg:x="63" fg:w="1"/><text x="5.5352%" y="559.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.08%)</title><rect x="5.2852%" y="533" width="0.0839%" height="15" fill="rgb(210,199,37)" fg:x="63" fg:w="1"/><text x="5.5352%" y="543.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (1 samples, 0.08%)</title><rect x="5.2852%" y="517" width="0.0839%" height="15" fill="rgb(244,192,49)" fg:x="63" fg:w="1"/><text x="5.5352%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.08%)</title><rect x="5.2852%" y="501" width="0.0839%" height="15" fill="rgb(226,211,11)" fg:x="63" fg:w="1"/><text x="5.5352%" y="511.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 0.08%)</title><rect x="5.2852%" y="485" width="0.0839%" height="15" fill="rgb(236,162,54)" fg:x="63" fg:w="1"/><text x="5.5352%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 0.08%)</title><rect x="5.2852%" y="469" width="0.0839%" height="15" fill="rgb(220,229,9)" fg:x="63" fg:w="1"/><text x="5.5352%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 0.08%)</title><rect x="5.2852%" y="453" width="0.0839%" height="15" fill="rgb(250,87,22)" fg:x="63" fg:w="1"/><text x="5.5352%" y="463.50"></text></g><g><title>read (1 samples, 0.08%)</title><rect x="5.2852%" y="437" width="0.0839%" height="15" fill="rgb(239,43,17)" fg:x="63" fg:w="1"/><text x="5.5352%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2852%" y="421" width="0.0839%" height="15" fill="rgb(231,177,25)" fg:x="63" fg:w="1"/><text x="5.5352%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2852%" y="405" width="0.0839%" height="15" fill="rgb(219,179,1)" fg:x="63" fg:w="1"/><text x="5.5352%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2852%" y="389" width="0.0839%" height="15" fill="rgb(238,219,53)" fg:x="63" fg:w="1"/><text x="5.5352%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2852%" y="373" width="0.0839%" height="15" fill="rgb(232,167,36)" fg:x="63" fg:w="1"/><text x="5.5352%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2852%" y="357" width="0.0839%" height="15" fill="rgb(244,19,51)" fg:x="63" fg:w="1"/><text x="5.5352%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.2852%" y="341" width="0.0839%" height="15" fill="rgb(224,6,22)" fg:x="63" fg:w="1"/><text x="5.5352%" y="351.50"></text></g><g><title>__mmap (1 samples, 0.08%)</title><rect x="5.3691%" y="1253" width="0.0839%" height="15" fill="rgb(224,145,5)" fg:x="64" fg:w="1"/><text x="5.6191%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.3691%" y="1237" width="0.0839%" height="15" fill="rgb(234,130,49)" fg:x="64" fg:w="1"/><text x="5.6191%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.3691%" y="1221" width="0.0839%" height="15" fill="rgb(254,6,2)" fg:x="64" fg:w="1"/><text x="5.6191%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.3691%" y="1205" width="0.0839%" height="15" fill="rgb(208,96,46)" fg:x="64" fg:w="1"/><text x="5.6191%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.3691%" y="1189" width="0.0839%" height="15" fill="rgb(239,3,39)" fg:x="64" fg:w="1"/><text x="5.6191%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.3691%" y="1173" width="0.0839%" height="15" fill="rgb(233,210,1)" fg:x="64" fg:w="1"/><text x="5.6191%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.3691%" y="1157" width="0.0839%" height="15" fill="rgb(244,137,37)" fg:x="64" fg:w="1"/><text x="5.6191%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.34%)</title><rect x="5.2013%" y="1413" width="0.3356%" height="15" fill="rgb(240,136,2)" fg:x="62" fg:w="4"/><text x="5.4513%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.34%)</title><rect x="5.2013%" y="1397" width="0.3356%" height="15" fill="rgb(239,18,37)" fg:x="62" fg:w="4"/><text x="5.4513%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.34%)</title><rect x="5.2013%" y="1381" width="0.3356%" height="15" fill="rgb(218,185,22)" fg:x="62" fg:w="4"/><text x="5.4513%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (4 samples, 0.34%)</title><rect x="5.2013%" y="1365" width="0.3356%" height="15" fill="rgb(225,218,4)" fg:x="62" fg:w="4"/><text x="5.4513%" y="1375.50"></text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.17%)</title><rect x="5.3691%" y="1349" width="0.1678%" height="15" fill="rgb(230,182,32)" fg:x="64" fg:w="2"/><text x="5.6191%" y="1359.50"></text></g><g><title>pthread_getattr_np (2 samples, 0.17%)</title><rect x="5.3691%" y="1333" width="0.1678%" height="15" fill="rgb(242,56,43)" fg:x="64" fg:w="2"/><text x="5.6191%" y="1343.50"></text></g><g><title>malloc (2 samples, 0.17%)</title><rect x="5.3691%" y="1317" width="0.1678%" height="15" fill="rgb(233,99,24)" fg:x="64" fg:w="2"/><text x="5.6191%" y="1327.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="5.3691%" y="1301" width="0.1678%" height="15" fill="rgb(234,209,42)" fg:x="64" fg:w="2"/><text x="5.6191%" y="1311.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="5.3691%" y="1285" width="0.1678%" height="15" fill="rgb(227,7,12)" fg:x="64" fg:w="2"/><text x="5.6191%" y="1295.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="5.3691%" y="1269" width="0.1678%" height="15" fill="rgb(245,203,43)" fg:x="64" fg:w="2"/><text x="5.6191%" y="1279.50"></text></g><g><title>__munmap (1 samples, 0.08%)</title><rect x="5.4530%" y="1253" width="0.0839%" height="15" fill="rgb(238,205,33)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1237" width="0.0839%" height="15" fill="rgb(231,56,7)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1221" width="0.0839%" height="15" fill="rgb(244,186,29)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1205" width="0.0839%" height="15" fill="rgb(234,111,31)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1189" width="0.0839%" height="15" fill="rgb(241,149,10)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1173" width="0.0839%" height="15" fill="rgb(249,206,44)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1157" width="0.0839%" height="15" fill="rgb(251,153,30)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1141" width="0.0839%" height="15" fill="rgb(239,152,38)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1125" width="0.0839%" height="15" fill="rgb(249,139,47)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1109" width="0.0839%" height="15" fill="rgb(244,64,35)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1093" width="0.0839%" height="15" fill="rgb(216,46,15)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.4530%" y="1077" width="0.0839%" height="15" fill="rgb(250,74,19)" fg:x="65" fg:w="1"/><text x="5.7030%" y="1087.50"></text></g><g><title>[libc.so.6] (10 samples, 0.84%)</title><rect x="5.2013%" y="1445" width="0.8389%" height="15" fill="rgb(249,42,33)" fg:x="62" fg:w="10"/><text x="5.4513%" y="1455.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.84%)</title><rect x="5.2013%" y="1429" width="0.8389%" height="15" fill="rgb(242,149,17)" fg:x="62" fg:w="10"/><text x="5.4513%" y="1439.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (6 samples, 0.50%)</title><rect x="5.5369%" y="1413" width="0.5034%" height="15" fill="rgb(244,29,21)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1423.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (6 samples, 0.50%)</title><rect x="5.5369%" y="1397" width="0.5034%" height="15" fill="rgb(220,130,37)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1407.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (6 samples, 0.50%)</title><rect x="5.5369%" y="1381" width="0.5034%" height="15" fill="rgb(211,67,2)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1391.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (6 samples, 0.50%)</title><rect x="5.5369%" y="1365" width="0.5034%" height="15" fill="rgb(235,68,52)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1375.50"></text></g><g><title>__mmap (6 samples, 0.50%)</title><rect x="5.5369%" y="1349" width="0.5034%" height="15" fill="rgb(246,142,3)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1359.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="5.5369%" y="1333" width="0.5034%" height="15" fill="rgb(241,25,7)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1343.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="5.5369%" y="1317" width="0.5034%" height="15" fill="rgb(242,119,39)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1327.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="5.5369%" y="1301" width="0.5034%" height="15" fill="rgb(241,98,45)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1311.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="5.5369%" y="1285" width="0.5034%" height="15" fill="rgb(254,28,30)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1295.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="5.5369%" y="1269" width="0.5034%" height="15" fill="rgb(241,142,54)" fg:x="66" fg:w="6"/><text x="5.7869%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="5.6208%" y="1253" width="0.4195%" height="15" fill="rgb(222,85,15)" fg:x="67" fg:w="5"/><text x="5.8708%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="5.6208%" y="1237" width="0.4195%" height="15" fill="rgb(210,85,47)" fg:x="67" fg:w="5"/><text x="5.8708%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="5.7886%" y="1221" width="0.2517%" height="15" fill="rgb(224,206,25)" fg:x="69" fg:w="3"/><text x="6.0386%" y="1231.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="5.7886%" y="1205" width="0.2517%" height="15" fill="rgb(243,201,19)" fg:x="69" fg:w="3"/><text x="6.0386%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.9564%" y="1189" width="0.0839%" height="15" fill="rgb(236,59,4)" fg:x="71" fg:w="1"/><text x="6.2064%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.9564%" y="1173" width="0.0839%" height="15" fill="rgb(254,179,45)" fg:x="71" fg:w="1"/><text x="6.2064%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="5.9564%" y="1157" width="0.0839%" height="15" fill="rgb(226,14,10)" fg:x="71" fg:w="1"/><text x="6.2064%" y="1167.50"></text></g><g><title>[libc.so.6] (17 samples, 1.43%)</title><rect x="5.2013%" y="1461" width="1.4262%" height="15" fill="rgb(244,27,41)" fg:x="62" fg:w="17"/><text x="5.4513%" y="1471.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="6.0403%" y="1445" width="0.5872%" height="15" fill="rgb(235,35,32)" fg:x="72" fg:w="7"/><text x="6.2903%" y="1455.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="6.0403%" y="1429" width="0.5872%" height="15" fill="rgb(218,68,31)" fg:x="72" fg:w="7"/><text x="6.2903%" y="1439.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="6.0403%" y="1413" width="0.5872%" height="15" fill="rgb(207,120,37)" fg:x="72" fg:w="7"/><text x="6.2903%" y="1423.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="6.0403%" y="1397" width="0.5872%" height="15" fill="rgb(227,98,0)" fg:x="72" fg:w="7"/><text x="6.2903%" y="1407.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="6.0403%" y="1381" width="0.5872%" height="15" fill="rgb(207,7,3)" fg:x="72" fg:w="7"/><text x="6.2903%" y="1391.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="6.0403%" y="1365" width="0.5872%" height="15" fill="rgb(206,98,19)" fg:x="72" fg:w="7"/><text x="6.2903%" y="1375.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="6.0403%" y="1349" width="0.5872%" height="15" fill="rgb(217,5,26)" fg:x="72" fg:w="7"/><text x="6.2903%" y="1359.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="6.0403%" y="1333" width="0.5872%" height="15" fill="rgb(235,190,38)" fg:x="72" fg:w="7"/><text x="6.2903%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="6.2081%" y="1317" width="0.4195%" height="15" fill="rgb(247,86,24)" fg:x="74" fg:w="5"/><text x="6.4581%" y="1327.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="6.3758%" y="1301" width="0.2517%" height="15" fill="rgb(205,101,16)" fg:x="76" fg:w="3"/><text x="6.6258%" y="1311.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="6.3758%" y="1285" width="0.2517%" height="15" fill="rgb(246,168,33)" fg:x="76" fg:w="3"/><text x="6.6258%" y="1295.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="6.3758%" y="1269" width="0.2517%" height="15" fill="rgb(231,114,1)" fg:x="76" fg:w="3"/><text x="6.6258%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="6.3758%" y="1253" width="0.2517%" height="15" fill="rgb(207,184,53)" fg:x="76" fg:w="3"/><text x="6.6258%" y="1263.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="6.3758%" y="1237" width="0.2517%" height="15" fill="rgb(224,95,51)" fg:x="76" fg:w="3"/><text x="6.6258%" y="1247.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="6.4597%" y="1221" width="0.1678%" height="15" fill="rgb(212,188,45)" fg:x="77" fg:w="2"/><text x="6.7097%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5436%" y="1205" width="0.0839%" height="15" fill="rgb(223,154,38)" fg:x="78" fg:w="1"/><text x="6.7936%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="6.5436%" y="1189" width="0.0839%" height="15" fill="rgb(251,22,52)" fg:x="78" fg:w="1"/><text x="6.7936%" y="1199.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="7.5503%" y="1445" width="0.0839%" height="15" fill="rgb(229,209,22)" fg:x="90" fg:w="1"/><text x="7.8003%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="7.5503%" y="1429" width="0.0839%" height="15" fill="rgb(234,138,34)" fg:x="90" fg:w="1"/><text x="7.8003%" y="1439.50"></text></g><g><title>[unknown] (93 samples, 7.80%)</title><rect x="7.6342%" y="1445" width="7.8020%" height="15" fill="rgb(212,95,11)" fg:x="91" fg:w="93"/><text x="7.8842%" y="1455.50">[unknown]</text></g><g><title>[unknown] (93 samples, 7.80%)</title><rect x="7.6342%" y="1429" width="7.8020%" height="15" fill="rgb(240,179,47)" fg:x="91" fg:w="93"/><text x="7.8842%" y="1439.50">[unknown]</text></g><g><title>[unknown] (93 samples, 7.80%)</title><rect x="7.6342%" y="1413" width="7.8020%" height="15" fill="rgb(240,163,11)" fg:x="91" fg:w="93"/><text x="7.8842%" y="1423.50">[unknown]</text></g><g><title>[unknown] (65 samples, 5.45%)</title><rect x="9.9832%" y="1397" width="5.4530%" height="15" fill="rgb(236,37,12)" fg:x="119" fg:w="65"/><text x="10.2332%" y="1407.50">[unknow..</text></g><g><title>[unknown] (38 samples, 3.19%)</title><rect x="12.2483%" y="1381" width="3.1879%" height="15" fill="rgb(232,164,16)" fg:x="146" fg:w="38"/><text x="12.4983%" y="1391.50">[un..</text></g><g><title>[unknown] (38 samples, 3.19%)</title><rect x="12.2483%" y="1365" width="3.1879%" height="15" fill="rgb(244,205,15)" fg:x="146" fg:w="38"/><text x="12.4983%" y="1375.50">[un..</text></g><g><title>[unknown] (37 samples, 3.10%)</title><rect x="12.3322%" y="1349" width="3.1040%" height="15" fill="rgb(223,117,47)" fg:x="147" fg:w="37"/><text x="12.5822%" y="1359.50">[un..</text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="15.2685%" y="1333" width="0.1678%" height="15" fill="rgb(244,107,35)" fg:x="182" fg:w="2"/><text x="15.5185%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="15.2685%" y="1317" width="0.1678%" height="15" fill="rgb(205,140,8)" fg:x="182" fg:w="2"/><text x="15.5185%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="15.2685%" y="1301" width="0.1678%" height="15" fill="rgb(228,84,46)" fg:x="182" fg:w="2"/><text x="15.5185%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="15.2685%" y="1285" width="0.1678%" height="15" fill="rgb(254,188,9)" fg:x="182" fg:w="2"/><text x="15.5185%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.3523%" y="1269" width="0.0839%" height="15" fill="rgb(206,112,54)" fg:x="183" fg:w="1"/><text x="15.6023%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.3523%" y="1253" width="0.0839%" height="15" fill="rgb(216,84,49)" fg:x="183" fg:w="1"/><text x="15.6023%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.3523%" y="1237" width="0.0839%" height="15" fill="rgb(214,194,35)" fg:x="183" fg:w="1"/><text x="15.6023%" y="1247.50"></text></g><g><title>[unknown] (106 samples, 8.89%)</title><rect x="6.6275%" y="1461" width="8.8926%" height="15" fill="rgb(249,28,3)" fg:x="79" fg:w="106"/><text x="6.8775%" y="1471.50">[unknown]</text></g><g><title>__close (1 samples, 0.08%)</title><rect x="15.4362%" y="1445" width="0.0839%" height="15" fill="rgb(222,56,52)" fg:x="184" fg:w="1"/><text x="15.6862%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.4362%" y="1429" width="0.0839%" height="15" fill="rgb(245,217,50)" fg:x="184" fg:w="1"/><text x="15.6862%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="15.7718%" y="1173" width="0.0839%" height="15" fill="rgb(213,201,24)" fg:x="188" fg:w="1"/><text x="16.0218%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1 samples, 0.08%)</title><rect x="15.7718%" y="1157" width="0.0839%" height="15" fill="rgb(248,116,28)" fg:x="188" fg:w="1"/><text x="16.0218%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.08%)</title><rect x="15.7718%" y="1141" width="0.0839%" height="15" fill="rgb(219,72,43)" fg:x="188" fg:w="1"/><text x="16.0218%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1173" width="0.0839%" height="15" fill="rgb(209,138,14)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1157" width="0.0839%" height="15" fill="rgb(222,18,33)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1141" width="0.0839%" height="15" fill="rgb(213,199,7)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1125" width="0.0839%" height="15" fill="rgb(250,110,10)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1109" width="0.0839%" height="15" fill="rgb(248,123,6)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1093" width="0.0839%" height="15" fill="rgb(206,91,31)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1077" width="0.0839%" height="15" fill="rgb(211,154,13)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1061" width="0.0839%" height="15" fill="rgb(225,148,7)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1045" width="0.0839%" height="15" fill="rgb(220,160,43)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1029" width="0.0839%" height="15" fill="rgb(213,52,39)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="1013" width="0.0839%" height="15" fill="rgb(243,137,7)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="997" width="0.0839%" height="15" fill="rgb(230,79,13)" fg:x="189" fg:w="1"/><text x="16.1057%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="981" width="0.0839%" height="15" fill="rgb(247,105,23)" fg:x="189" fg:w="1"/><text x="16.1057%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="965" width="0.0839%" height="15" fill="rgb(223,179,41)" fg:x="189" fg:w="1"/><text x="16.1057%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="15.8557%" y="949" width="0.0839%" height="15" fill="rgb(218,9,34)" fg:x="189" fg:w="1"/><text x="16.1057%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;serde_json::raw::RawValue&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="15.9396%" y="1109" width="0.0839%" height="15" fill="rgb(222,106,8)" fg:x="190" fg:w="1"/><text x="16.1896%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="15.9396%" y="1093" width="0.0839%" height="15" fill="rgb(211,220,0)" fg:x="190" fg:w="1"/><text x="16.1896%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;serde_json::raw::RawValue&gt;]&gt; (1 samples, 0.08%)</title><rect x="15.9396%" y="1077" width="0.0839%" height="15" fill="rgb(229,52,16)" fg:x="190" fg:w="1"/><text x="16.1896%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;serde_json::raw::RawValue&gt;&gt; (1 samples, 0.08%)</title><rect x="15.9396%" y="1061" width="0.0839%" height="15" fill="rgb(212,155,18)" fg:x="190" fg:w="1"/><text x="16.1896%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="15.9396%" y="1045" width="0.0839%" height="15" fill="rgb(242,21,14)" fg:x="190" fg:w="1"/><text x="16.1896%" y="1055.50"></text></g><g><title>jsonrpc::Response::result (1 samples, 0.08%)</title><rect x="16.0235%" y="1109" width="0.0839%" height="15" fill="rgb(222,19,48)" fg:x="191" fg:w="1"/><text x="16.2735%" y="1119.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="16.0235%" y="1093" width="0.0839%" height="15" fill="rgb(232,45,27)" fg:x="191" fg:w="1"/><text x="16.2735%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="16.1074%" y="1061" width="0.0839%" height="15" fill="rgb(249,103,42)" fg:x="192" fg:w="1"/><text x="16.3574%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="16.1074%" y="1045" width="0.0839%" height="15" fill="rgb(246,81,33)" fg:x="192" fg:w="1"/><text x="16.3574%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.1074%" y="1029" width="0.0839%" height="15" fill="rgb(252,33,42)" fg:x="192" fg:w="1"/><text x="16.3574%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="16.1074%" y="1013" width="0.0839%" height="15" fill="rgb(209,212,41)" fg:x="192" fg:w="1"/><text x="16.3574%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="16.1074%" y="997" width="0.0839%" height="15" fill="rgb(207,154,6)" fg:x="192" fg:w="1"/><text x="16.3574%" y="1007.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="16.1074%" y="981" width="0.0839%" height="15" fill="rgb(223,64,47)" fg:x="192" fg:w="1"/><text x="16.3574%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="16.1074%" y="965" width="0.0839%" height="15" fill="rgb(211,161,38)" fg:x="192" fg:w="1"/><text x="16.3574%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufreader::BufReader&lt;std::net::tcp::TcpStream&gt;&gt; (16 samples, 1.34%)</title><rect x="16.1913%" y="1061" width="1.3423%" height="15" fill="rgb(219,138,40)" fg:x="193" fg:w="16"/><text x="16.4413%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::net::tcp::TcpStream&gt; (16 samples, 1.34%)</title><rect x="16.1913%" y="1045" width="1.3423%" height="15" fill="rgb(241,228,46)" fg:x="193" fg:w="16"/><text x="16.4413%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::net::TcpStream&gt; (16 samples, 1.34%)</title><rect x="16.1913%" y="1029" width="1.3423%" height="15" fill="rgb(223,209,38)" fg:x="193" fg:w="16"/><text x="16.4413%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::net::Socket&gt; (16 samples, 1.34%)</title><rect x="16.1913%" y="1013" width="1.3423%" height="15" fill="rgb(236,164,45)" fg:x="193" fg:w="16"/><text x="16.4413%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (16 samples, 1.34%)</title><rect x="16.1913%" y="997" width="1.3423%" height="15" fill="rgb(231,15,5)" fg:x="193" fg:w="16"/><text x="16.4413%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (16 samples, 1.34%)</title><rect x="16.1913%" y="981" width="1.3423%" height="15" fill="rgb(252,35,15)" fg:x="193" fg:w="16"/><text x="16.4413%" y="991.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (16 samples, 1.34%)</title><rect x="16.1913%" y="965" width="1.3423%" height="15" fill="rgb(248,181,18)" fg:x="193" fg:w="16"/><text x="16.4413%" y="975.50"></text></g><g><title>__close (16 samples, 1.34%)</title><rect x="16.1913%" y="949" width="1.3423%" height="15" fill="rgb(233,39,42)" fg:x="193" fg:w="16"/><text x="16.4413%" y="959.50"></text></g><g><title>[unknown] (16 samples, 1.34%)</title><rect x="16.1913%" y="933" width="1.3423%" height="15" fill="rgb(238,110,33)" fg:x="193" fg:w="16"/><text x="16.4413%" y="943.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="16.2752%" y="917" width="1.2584%" height="15" fill="rgb(233,195,10)" fg:x="194" fg:w="15"/><text x="16.5252%" y="927.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="16.2752%" y="901" width="1.2584%" height="15" fill="rgb(254,105,3)" fg:x="194" fg:w="15"/><text x="16.5252%" y="911.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="16.2752%" y="885" width="1.2584%" height="15" fill="rgb(221,225,9)" fg:x="194" fg:w="15"/><text x="16.5252%" y="895.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="16.2752%" y="869" width="1.2584%" height="15" fill="rgb(224,227,45)" fg:x="194" fg:w="15"/><text x="16.5252%" y="879.50"></text></g><g><title>[unknown] (14 samples, 1.17%)</title><rect x="16.3591%" y="853" width="1.1745%" height="15" fill="rgb(229,198,43)" fg:x="195" fg:w="14"/><text x="16.6091%" y="863.50"></text></g><g><title>[unknown] (14 samples, 1.17%)</title><rect x="16.3591%" y="837" width="1.1745%" height="15" fill="rgb(206,209,35)" fg:x="195" fg:w="14"/><text x="16.6091%" y="847.50"></text></g><g><title>[unknown] (14 samples, 1.17%)</title><rect x="16.3591%" y="821" width="1.1745%" height="15" fill="rgb(245,195,53)" fg:x="195" fg:w="14"/><text x="16.6091%" y="831.50"></text></g><g><title>[unknown] (14 samples, 1.17%)</title><rect x="16.3591%" y="805" width="1.1745%" height="15" fill="rgb(240,92,26)" fg:x="195" fg:w="14"/><text x="16.6091%" y="815.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="16.4430%" y="789" width="1.0906%" height="15" fill="rgb(207,40,23)" fg:x="196" fg:w="13"/><text x="16.6930%" y="799.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="16.4430%" y="773" width="1.0906%" height="15" fill="rgb(223,111,35)" fg:x="196" fg:w="13"/><text x="16.6930%" y="783.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="16.4430%" y="757" width="1.0906%" height="15" fill="rgb(229,147,28)" fg:x="196" fg:w="13"/><text x="16.6930%" y="767.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="16.4430%" y="741" width="1.0906%" height="15" fill="rgb(211,29,28)" fg:x="196" fg:w="13"/><text x="16.6930%" y="751.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="16.4430%" y="725" width="1.0906%" height="15" fill="rgb(228,72,33)" fg:x="196" fg:w="13"/><text x="16.6930%" y="735.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="16.5268%" y="709" width="1.0067%" height="15" fill="rgb(205,214,31)" fg:x="197" fg:w="12"/><text x="16.7768%" y="719.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="16.6107%" y="693" width="0.9228%" height="15" fill="rgb(224,111,15)" fg:x="198" fg:w="11"/><text x="16.8607%" y="703.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="16.6107%" y="677" width="0.9228%" height="15" fill="rgb(253,21,26)" fg:x="198" fg:w="11"/><text x="16.8607%" y="687.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="16.6107%" y="661" width="0.9228%" height="15" fill="rgb(245,139,43)" fg:x="198" fg:w="11"/><text x="16.8607%" y="671.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="16.6107%" y="645" width="0.9228%" height="15" fill="rgb(252,170,7)" fg:x="198" fg:w="11"/><text x="16.8607%" y="655.50"></text></g><g><title>[unknown] (10 samples, 0.84%)</title><rect x="16.6946%" y="629" width="0.8389%" height="15" fill="rgb(231,118,14)" fg:x="199" fg:w="10"/><text x="16.9446%" y="639.50"></text></g><g><title>[unknown] (9 samples, 0.76%)</title><rect x="16.7785%" y="613" width="0.7550%" height="15" fill="rgb(238,83,0)" fg:x="200" fg:w="9"/><text x="17.0285%" y="623.50"></text></g><g><title>[unknown] (9 samples, 0.76%)</title><rect x="16.7785%" y="597" width="0.7550%" height="15" fill="rgb(221,39,39)" fg:x="200" fg:w="9"/><text x="17.0285%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.76%)</title><rect x="16.7785%" y="581" width="0.7550%" height="15" fill="rgb(222,119,46)" fg:x="200" fg:w="9"/><text x="17.0285%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.76%)</title><rect x="16.7785%" y="565" width="0.7550%" height="15" fill="rgb(222,165,49)" fg:x="200" fg:w="9"/><text x="17.0285%" y="575.50"></text></g><g><title>[unknown] (9 samples, 0.76%)</title><rect x="16.7785%" y="549" width="0.7550%" height="15" fill="rgb(219,113,52)" fg:x="200" fg:w="9"/><text x="17.0285%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.76%)</title><rect x="16.7785%" y="533" width="0.7550%" height="15" fill="rgb(214,7,15)" fg:x="200" fg:w="9"/><text x="17.0285%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="16.8624%" y="517" width="0.6711%" height="15" fill="rgb(235,32,4)" fg:x="201" fg:w="8"/><text x="17.1124%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="17.1980%" y="501" width="0.3356%" height="15" fill="rgb(238,90,54)" fg:x="205" fg:w="4"/><text x="17.4480%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="17.2819%" y="485" width="0.2517%" height="15" fill="rgb(213,208,19)" fg:x="206" fg:w="3"/><text x="17.5319%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="17.2819%" y="469" width="0.2517%" height="15" fill="rgb(233,156,4)" fg:x="206" fg:w="3"/><text x="17.5319%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="17.2819%" y="453" width="0.2517%" height="15" fill="rgb(207,194,5)" fg:x="206" fg:w="3"/><text x="17.5319%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="17.2819%" y="437" width="0.2517%" height="15" fill="rgb(206,111,30)" fg:x="206" fg:w="3"/><text x="17.5319%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="17.2819%" y="421" width="0.2517%" height="15" fill="rgb(243,70,54)" fg:x="206" fg:w="3"/><text x="17.5319%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="17.2819%" y="405" width="0.2517%" height="15" fill="rgb(242,28,8)" fg:x="206" fg:w="3"/><text x="17.5319%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="17.4497%" y="389" width="0.0839%" height="15" fill="rgb(219,106,18)" fg:x="208" fg:w="1"/><text x="17.6997%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="17.4497%" y="373" width="0.0839%" height="15" fill="rgb(244,222,10)" fg:x="208" fg:w="1"/><text x="17.6997%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="17.4497%" y="357" width="0.0839%" height="15" fill="rgb(236,179,52)" fg:x="208" fg:w="1"/><text x="17.6997%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="17.4497%" y="341" width="0.0839%" height="15" fill="rgb(213,23,39)" fg:x="208" fg:w="1"/><text x="17.6997%" y="351.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (7 samples, 0.59%)</title><rect x="17.5336%" y="981" width="0.5872%" height="15" fill="rgb(238,48,10)" fg:x="209" fg:w="7"/><text x="17.7836%" y="991.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (7 samples, 0.59%)</title><rect x="17.5336%" y="965" width="0.5872%" height="15" fill="rgb(251,196,23)" fg:x="209" fg:w="7"/><text x="17.7836%" y="975.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (7 samples, 0.59%)</title><rect x="17.5336%" y="949" width="0.5872%" height="15" fill="rgb(250,152,24)" fg:x="209" fg:w="7"/><text x="17.7836%" y="959.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read_buf (7 samples, 0.59%)</title><rect x="17.5336%" y="933" width="0.5872%" height="15" fill="rgb(209,150,17)" fg:x="209" fg:w="7"/><text x="17.7836%" y="943.50"></text></g><g><title>std::sys_common::net::TcpStream::read_buf (7 samples, 0.59%)</title><rect x="17.5336%" y="917" width="0.5872%" height="15" fill="rgb(234,202,34)" fg:x="209" fg:w="7"/><text x="17.7836%" y="927.50"></text></g><g><title>std::sys::unix::net::Socket::read_buf (7 samples, 0.59%)</title><rect x="17.5336%" y="901" width="0.5872%" height="15" fill="rgb(253,148,53)" fg:x="209" fg:w="7"/><text x="17.7836%" y="911.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (7 samples, 0.59%)</title><rect x="17.5336%" y="885" width="0.5872%" height="15" fill="rgb(218,129,16)" fg:x="209" fg:w="7"/><text x="17.7836%" y="895.50"></text></g><g><title>recv (7 samples, 0.59%)</title><rect x="17.5336%" y="869" width="0.5872%" height="15" fill="rgb(216,85,19)" fg:x="209" fg:w="7"/><text x="17.7836%" y="879.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="17.5336%" y="853" width="0.5872%" height="15" fill="rgb(235,228,7)" fg:x="209" fg:w="7"/><text x="17.7836%" y="863.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="17.5336%" y="837" width="0.5872%" height="15" fill="rgb(245,175,0)" fg:x="209" fg:w="7"/><text x="17.7836%" y="847.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="17.5336%" y="821" width="0.5872%" height="15" fill="rgb(208,168,36)" fg:x="209" fg:w="7"/><text x="17.7836%" y="831.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="17.5336%" y="805" width="0.5872%" height="15" fill="rgb(246,171,24)" fg:x="209" fg:w="7"/><text x="17.7836%" y="815.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="17.5336%" y="789" width="0.5872%" height="15" fill="rgb(215,142,24)" fg:x="209" fg:w="7"/><text x="17.7836%" y="799.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="17.5336%" y="773" width="0.5872%" height="15" fill="rgb(250,187,7)" fg:x="209" fg:w="7"/><text x="17.7836%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="17.6174%" y="757" width="0.5034%" height="15" fill="rgb(228,66,33)" fg:x="210" fg:w="6"/><text x="17.8674%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="17.6174%" y="741" width="0.5034%" height="15" fill="rgb(234,215,21)" fg:x="210" fg:w="6"/><text x="17.8674%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="17.6174%" y="725" width="0.5034%" height="15" fill="rgb(222,191,20)" fg:x="210" fg:w="6"/><text x="17.8674%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="17.6174%" y="709" width="0.5034%" height="15" fill="rgb(245,79,54)" fg:x="210" fg:w="6"/><text x="17.8674%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="17.7013%" y="693" width="0.4195%" height="15" fill="rgb(240,10,37)" fg:x="211" fg:w="5"/><text x="17.9513%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="17.7013%" y="677" width="0.4195%" height="15" fill="rgb(214,192,32)" fg:x="211" fg:w="5"/><text x="17.9513%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="17.7013%" y="661" width="0.4195%" height="15" fill="rgb(209,36,54)" fg:x="211" fg:w="5"/><text x="17.9513%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="17.9530%" y="645" width="0.1678%" height="15" fill="rgb(220,10,11)" fg:x="214" fg:w="2"/><text x="18.2030%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="18.0369%" y="629" width="0.0839%" height="15" fill="rgb(221,106,17)" fg:x="215" fg:w="1"/><text x="18.2869%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="18.0369%" y="613" width="0.0839%" height="15" fill="rgb(251,142,44)" fg:x="215" fg:w="1"/><text x="18.2869%" y="623.50"></text></g><g><title>jsonrpc::simple_http::get_line (8 samples, 0.67%)</title><rect x="17.5336%" y="1061" width="0.6711%" height="15" fill="rgb(238,13,15)" fg:x="209" fg:w="8"/><text x="17.7836%" y="1071.50"></text></g><g><title>std::io::BufRead::read_line (8 samples, 0.67%)</title><rect x="17.5336%" y="1045" width="0.6711%" height="15" fill="rgb(208,107,27)" fg:x="209" fg:w="8"/><text x="17.7836%" y="1055.50"></text></g><g><title>std::io::append_to_string (8 samples, 0.67%)</title><rect x="17.5336%" y="1029" width="0.6711%" height="15" fill="rgb(205,136,37)" fg:x="209" fg:w="8"/><text x="17.7836%" y="1039.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (8 samples, 0.67%)</title><rect x="17.5336%" y="1013" width="0.6711%" height="15" fill="rgb(250,205,27)" fg:x="209" fg:w="8"/><text x="17.7836%" y="1023.50"></text></g><g><title>std::io::read_until (8 samples, 0.67%)</title><rect x="17.5336%" y="997" width="0.6711%" height="15" fill="rgb(210,80,43)" fg:x="209" fg:w="8"/><text x="17.7836%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="18.1208%" y="981" width="0.0839%" height="15" fill="rgb(247,160,36)" fg:x="216" fg:w="1"/><text x="18.3708%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="18.1208%" y="965" width="0.0839%" height="15" fill="rgb(234,13,49)" fg:x="216" fg:w="1"/><text x="18.3708%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="18.1208%" y="949" width="0.0839%" height="15" fill="rgb(234,122,0)" fg:x="216" fg:w="1"/><text x="18.3708%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.1208%" y="933" width="0.0839%" height="15" fill="rgb(207,146,38)" fg:x="216" fg:w="1"/><text x="18.3708%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="18.1208%" y="917" width="0.0839%" height="15" fill="rgb(207,177,25)" fg:x="216" fg:w="1"/><text x="18.3708%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.1208%" y="901" width="0.0839%" height="15" fill="rgb(211,178,42)" fg:x="216" fg:w="1"/><text x="18.3708%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="18.1208%" y="885" width="0.0839%" height="15" fill="rgb(230,69,54)" fg:x="216" fg:w="1"/><text x="18.3708%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.1208%" y="869" width="0.0839%" height="15" fill="rgb(214,135,41)" fg:x="216" fg:w="1"/><text x="18.3708%" y="879.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="18.1208%" y="853" width="0.0839%" height="15" fill="rgb(237,67,25)" fg:x="216" fg:w="1"/><text x="18.3708%" y="863.50"></text></g><g><title>serde_json::de::from_str (1 samples, 0.08%)</title><rect x="18.2047%" y="1061" width="0.0839%" height="15" fill="rgb(222,189,50)" fg:x="217" fg:w="1"/><text x="18.4547%" y="1071.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="18.2047%" y="1045" width="0.0839%" height="15" fill="rgb(245,148,34)" fg:x="217" fg:w="1"/><text x="18.4547%" y="1055.50"></text></g><g><title>jsonrpc::_::&lt;impl serde::de::Deserialize for jsonrpc::Response&gt;::deserialize (1 samples, 0.08%)</title><rect x="18.2047%" y="1029" width="0.0839%" height="15" fill="rgb(222,29,6)" fg:x="217" fg:w="1"/><text x="18.4547%" y="1039.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.2047%" y="1013" width="0.0839%" height="15" fill="rgb(221,189,43)" fg:x="217" fg:w="1"/><text x="18.4547%" y="1023.50"></text></g><g><title>&lt;jsonrpc::_::&lt;impl serde::de::Deserialize for jsonrpc::Response&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="18.2047%" y="997" width="0.0839%" height="15" fill="rgb(207,36,27)" fg:x="217" fg:w="1"/><text x="18.4547%" y="1007.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.08%)</title><rect x="18.2047%" y="981" width="0.0839%" height="15" fill="rgb(217,90,24)" fg:x="217" fg:w="1"/><text x="18.4547%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="18.2047%" y="965" width="0.0839%" height="15" fill="rgb(224,66,35)" fg:x="217" fg:w="1"/><text x="18.4547%" y="975.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.08%)</title><rect x="18.2047%" y="949" width="0.0839%" height="15" fill="rgb(221,13,50)" fg:x="217" fg:w="1"/><text x="18.4547%" y="959.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.08%)</title><rect x="18.2047%" y="933" width="0.0839%" height="15" fill="rgb(236,68,49)" fg:x="217" fg:w="1"/><text x="18.4547%" y="943.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.08%)</title><rect x="18.2047%" y="917" width="0.0839%" height="15" fill="rgb(229,146,28)" fg:x="217" fg:w="1"/><text x="18.4547%" y="927.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.08%)</title><rect x="18.2047%" y="901" width="0.0839%" height="15" fill="rgb(225,31,38)" fg:x="217" fg:w="1"/><text x="18.4547%" y="911.50"></text></g><g><title>std::io::Write::write_all (65 samples, 5.45%)</title><rect x="18.2886%" y="1061" width="5.4530%" height="15" fill="rgb(250,208,3)" fg:x="218" fg:w="65"/><text x="18.5386%" y="1071.50">std::io..</text></g><g><title>std::net::udp::UdpSocket::send (65 samples, 5.45%)</title><rect x="18.2886%" y="1045" width="5.4530%" height="15" fill="rgb(246,54,23)" fg:x="218" fg:w="65"/><text x="18.5386%" y="1055.50">std::ne..</text></g><g><title>std::sys_common::net::UdpSocket::send (65 samples, 5.45%)</title><rect x="18.2886%" y="1029" width="5.4530%" height="15" fill="rgb(243,76,11)" fg:x="218" fg:w="65"/><text x="18.5386%" y="1039.50">std::sy..</text></g><g><title>__send (65 samples, 5.45%)</title><rect x="18.2886%" y="1013" width="5.4530%" height="15" fill="rgb(245,21,50)" fg:x="218" fg:w="65"/><text x="18.5386%" y="1023.50">__send</text></g><g><title>[unknown] (64 samples, 5.37%)</title><rect x="18.3725%" y="997" width="5.3691%" height="15" fill="rgb(228,9,43)" fg:x="219" fg:w="64"/><text x="18.6225%" y="1007.50">[unknow..</text></g><g><title>[unknown] (63 samples, 5.29%)</title><rect x="18.4564%" y="981" width="5.2852%" height="15" fill="rgb(208,100,47)" fg:x="220" fg:w="63"/><text x="18.7064%" y="991.50">[unkno..</text></g><g><title>[unknown] (63 samples, 5.29%)</title><rect x="18.4564%" y="965" width="5.2852%" height="15" fill="rgb(232,26,8)" fg:x="220" fg:w="63"/><text x="18.7064%" y="975.50">[unkno..</text></g><g><title>[unknown] (63 samples, 5.29%)</title><rect x="18.4564%" y="949" width="5.2852%" height="15" fill="rgb(216,166,38)" fg:x="220" fg:w="63"/><text x="18.7064%" y="959.50">[unkno..</text></g><g><title>[unknown] (63 samples, 5.29%)</title><rect x="18.4564%" y="933" width="5.2852%" height="15" fill="rgb(251,202,51)" fg:x="220" fg:w="63"/><text x="18.7064%" y="943.50">[unkno..</text></g><g><title>[unknown] (63 samples, 5.29%)</title><rect x="18.4564%" y="917" width="5.2852%" height="15" fill="rgb(254,216,34)" fg:x="220" fg:w="63"/><text x="18.7064%" y="927.50">[unkno..</text></g><g><title>[unknown] (61 samples, 5.12%)</title><rect x="18.6242%" y="901" width="5.1174%" height="15" fill="rgb(251,32,27)" fg:x="222" fg:w="61"/><text x="18.8742%" y="911.50">[unkno..</text></g><g><title>[unknown] (59 samples, 4.95%)</title><rect x="18.7919%" y="885" width="4.9497%" height="15" fill="rgb(208,127,28)" fg:x="224" fg:w="59"/><text x="19.0419%" y="895.50">[unkno..</text></g><g><title>[unknown] (58 samples, 4.87%)</title><rect x="18.8758%" y="869" width="4.8658%" height="15" fill="rgb(224,137,22)" fg:x="225" fg:w="58"/><text x="19.1258%" y="879.50">[unkno..</text></g><g><title>[unknown] (54 samples, 4.53%)</title><rect x="19.2114%" y="853" width="4.5302%" height="15" fill="rgb(254,70,32)" fg:x="229" fg:w="54"/><text x="19.4614%" y="863.50">[unkn..</text></g><g><title>[unknown] (51 samples, 4.28%)</title><rect x="19.4631%" y="837" width="4.2785%" height="15" fill="rgb(229,75,37)" fg:x="232" fg:w="51"/><text x="19.7131%" y="847.50">[unkn..</text></g><g><title>[unknown] (46 samples, 3.86%)</title><rect x="19.8826%" y="821" width="3.8591%" height="15" fill="rgb(252,64,23)" fg:x="237" fg:w="46"/><text x="20.1326%" y="831.50">[unk..</text></g><g><title>[unknown] (42 samples, 3.52%)</title><rect x="20.2181%" y="805" width="3.5235%" height="15" fill="rgb(232,162,48)" fg:x="241" fg:w="42"/><text x="20.4681%" y="815.50">[un..</text></g><g><title>[unknown] (41 samples, 3.44%)</title><rect x="20.3020%" y="789" width="3.4396%" height="15" fill="rgb(246,160,12)" fg:x="242" fg:w="41"/><text x="20.5520%" y="799.50">[un..</text></g><g><title>[unknown] (39 samples, 3.27%)</title><rect x="20.4698%" y="773" width="3.2718%" height="15" fill="rgb(247,166,0)" fg:x="244" fg:w="39"/><text x="20.7198%" y="783.50">[un..</text></g><g><title>[unknown] (37 samples, 3.10%)</title><rect x="20.6376%" y="757" width="3.1040%" height="15" fill="rgb(249,219,21)" fg:x="246" fg:w="37"/><text x="20.8876%" y="767.50">[un..</text></g><g><title>[unknown] (36 samples, 3.02%)</title><rect x="20.7215%" y="741" width="3.0201%" height="15" fill="rgb(205,209,3)" fg:x="247" fg:w="36"/><text x="20.9715%" y="751.50">[un..</text></g><g><title>[unknown] (34 samples, 2.85%)</title><rect x="20.8893%" y="725" width="2.8523%" height="15" fill="rgb(243,44,1)" fg:x="249" fg:w="34"/><text x="21.1393%" y="735.50">[u..</text></g><g><title>[unknown] (32 samples, 2.68%)</title><rect x="21.0570%" y="709" width="2.6846%" height="15" fill="rgb(206,159,16)" fg:x="251" fg:w="32"/><text x="21.3070%" y="719.50">[u..</text></g><g><title>[unknown] (31 samples, 2.60%)</title><rect x="21.1409%" y="693" width="2.6007%" height="15" fill="rgb(244,77,30)" fg:x="252" fg:w="31"/><text x="21.3909%" y="703.50">[u..</text></g><g><title>[unknown] (31 samples, 2.60%)</title><rect x="21.1409%" y="677" width="2.6007%" height="15" fill="rgb(218,69,12)" fg:x="252" fg:w="31"/><text x="21.3909%" y="687.50">[u..</text></g><g><title>[unknown] (27 samples, 2.27%)</title><rect x="21.4765%" y="661" width="2.2651%" height="15" fill="rgb(212,87,7)" fg:x="256" fg:w="27"/><text x="21.7265%" y="671.50">[..</text></g><g><title>[unknown] (24 samples, 2.01%)</title><rect x="21.7282%" y="645" width="2.0134%" height="15" fill="rgb(245,114,25)" fg:x="259" fg:w="24"/><text x="21.9782%" y="655.50">[..</text></g><g><title>[unknown] (20 samples, 1.68%)</title><rect x="22.0638%" y="629" width="1.6779%" height="15" fill="rgb(210,61,42)" fg:x="263" fg:w="20"/><text x="22.3138%" y="639.50"></text></g><g><title>[unknown] (18 samples, 1.51%)</title><rect x="22.2315%" y="613" width="1.5101%" height="15" fill="rgb(211,52,33)" fg:x="265" fg:w="18"/><text x="22.4815%" y="623.50"></text></g><g><title>[unknown] (17 samples, 1.43%)</title><rect x="22.3154%" y="597" width="1.4262%" height="15" fill="rgb(234,58,33)" fg:x="266" fg:w="17"/><text x="22.5654%" y="607.50"></text></g><g><title>[unknown] (16 samples, 1.34%)</title><rect x="22.3993%" y="581" width="1.3423%" height="15" fill="rgb(220,115,36)" fg:x="267" fg:w="16"/><text x="22.6493%" y="591.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="22.4832%" y="565" width="1.2584%" height="15" fill="rgb(243,153,54)" fg:x="268" fg:w="15"/><text x="22.7332%" y="575.50"></text></g><g><title>[unknown] (14 samples, 1.17%)</title><rect x="22.5671%" y="549" width="1.1745%" height="15" fill="rgb(251,47,18)" fg:x="269" fg:w="14"/><text x="22.8171%" y="559.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="22.7349%" y="533" width="1.0067%" height="15" fill="rgb(242,102,42)" fg:x="271" fg:w="12"/><text x="22.9849%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="22.8188%" y="517" width="0.9228%" height="15" fill="rgb(234,31,38)" fg:x="272" fg:w="11"/><text x="23.0688%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="23.3221%" y="501" width="0.4195%" height="15" fill="rgb(221,117,51)" fg:x="278" fg:w="5"/><text x="23.5721%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="23.4060%" y="485" width="0.3356%" height="15" fill="rgb(212,20,18)" fg:x="279" fg:w="4"/><text x="23.6560%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="23.4060%" y="469" width="0.3356%" height="15" fill="rgb(245,133,36)" fg:x="279" fg:w="4"/><text x="23.6560%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.6577%" y="453" width="0.0839%" height="15" fill="rgb(212,6,19)" fg:x="282" fg:w="1"/><text x="23.9077%" y="463.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (1 samples, 0.08%)</title><rect x="23.7416%" y="1061" width="0.0839%" height="15" fill="rgb(218,1,36)" fg:x="283" fg:w="1"/><text x="23.9916%" y="1071.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::with_capacity (1 samples, 0.08%)</title><rect x="23.7416%" y="1045" width="0.0839%" height="15" fill="rgb(246,84,54)" fg:x="283" fg:w="1"/><text x="23.9916%" y="1055.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::with_capacity (1 samples, 0.08%)</title><rect x="23.7416%" y="1029" width="0.0839%" height="15" fill="rgb(242,110,6)" fg:x="283" fg:w="1"/><text x="23.9916%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;[T]&gt;::new_uninit_slice (1 samples, 0.08%)</title><rect x="23.7416%" y="1013" width="0.0839%" height="15" fill="rgb(214,47,5)" fg:x="283" fg:w="1"/><text x="23.9916%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="23.7416%" y="997" width="0.0839%" height="15" fill="rgb(218,159,25)" fg:x="283" fg:w="1"/><text x="23.9916%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.7416%" y="981" width="0.0839%" height="15" fill="rgb(215,211,28)" fg:x="283" fg:w="1"/><text x="23.9916%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.7416%" y="965" width="0.0839%" height="15" fill="rgb(238,59,32)" fg:x="283" fg:w="1"/><text x="23.9916%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.7416%" y="949" width="0.0839%" height="15" fill="rgb(226,82,3)" fg:x="283" fg:w="1"/><text x="23.9916%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.7416%" y="933" width="0.0839%" height="15" fill="rgb(240,164,32)" fg:x="283" fg:w="1"/><text x="23.9916%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.7416%" y="917" width="0.0839%" height="15" fill="rgb(232,46,7)" fg:x="283" fg:w="1"/><text x="23.9916%" y="927.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="23.7416%" y="901" width="0.0839%" height="15" fill="rgb(229,129,53)" fg:x="283" fg:w="1"/><text x="23.9916%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="23.7416%" y="885" width="0.0839%" height="15" fill="rgb(234,188,29)" fg:x="283" fg:w="1"/><text x="23.9916%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="869" width="0.0839%" height="15" fill="rgb(246,141,4)" fg:x="283" fg:w="1"/><text x="23.9916%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="853" width="0.0839%" height="15" fill="rgb(229,23,39)" fg:x="283" fg:w="1"/><text x="23.9916%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="837" width="0.0839%" height="15" fill="rgb(206,12,3)" fg:x="283" fg:w="1"/><text x="23.9916%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="821" width="0.0839%" height="15" fill="rgb(252,226,20)" fg:x="283" fg:w="1"/><text x="23.9916%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="805" width="0.0839%" height="15" fill="rgb(216,123,35)" fg:x="283" fg:w="1"/><text x="23.9916%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="789" width="0.0839%" height="15" fill="rgb(212,68,40)" fg:x="283" fg:w="1"/><text x="23.9916%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="773" width="0.0839%" height="15" fill="rgb(254,125,32)" fg:x="283" fg:w="1"/><text x="23.9916%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="757" width="0.0839%" height="15" fill="rgb(253,97,22)" fg:x="283" fg:w="1"/><text x="23.9916%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="23.7416%" y="741" width="0.0839%" height="15" fill="rgb(241,101,14)" fg:x="283" fg:w="1"/><text x="23.9916%" y="751.50"></text></g><g><title>connect (16 samples, 1.34%)</title><rect x="23.8255%" y="1013" width="1.3423%" height="15" fill="rgb(238,103,29)" fg:x="284" fg:w="16"/><text x="24.0755%" y="1023.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="23.9094%" y="997" width="1.2584%" height="15" fill="rgb(233,195,47)" fg:x="285" fg:w="15"/><text x="24.1594%" y="1007.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="23.9094%" y="981" width="1.2584%" height="15" fill="rgb(246,218,30)" fg:x="285" fg:w="15"/><text x="24.1594%" y="991.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="23.9094%" y="965" width="1.2584%" height="15" fill="rgb(219,145,47)" fg:x="285" fg:w="15"/><text x="24.1594%" y="975.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="23.9094%" y="949" width="1.2584%" height="15" fill="rgb(243,12,26)" fg:x="285" fg:w="15"/><text x="24.1594%" y="959.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="23.9094%" y="933" width="1.2584%" height="15" fill="rgb(214,87,16)" fg:x="285" fg:w="15"/><text x="24.1594%" y="943.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="23.9094%" y="917" width="1.2584%" height="15" fill="rgb(208,99,42)" fg:x="285" fg:w="15"/><text x="24.1594%" y="927.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="23.9094%" y="901" width="1.2584%" height="15" fill="rgb(253,99,2)" fg:x="285" fg:w="15"/><text x="24.1594%" y="911.50"></text></g><g><title>[unknown] (15 samples, 1.26%)</title><rect x="23.9094%" y="885" width="1.2584%" height="15" fill="rgb(220,168,23)" fg:x="285" fg:w="15"/><text x="24.1594%" y="895.50"></text></g><g><title>[unknown] (14 samples, 1.17%)</title><rect x="23.9933%" y="869" width="1.1745%" height="15" fill="rgb(242,38,24)" fg:x="286" fg:w="14"/><text x="24.2433%" y="879.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="24.0772%" y="853" width="1.0906%" height="15" fill="rgb(225,182,9)" fg:x="287" fg:w="13"/><text x="24.3272%" y="863.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="24.2450%" y="837" width="0.9228%" height="15" fill="rgb(243,178,37)" fg:x="289" fg:w="11"/><text x="24.4950%" y="847.50"></text></g><g><title>[unknown] (9 samples, 0.76%)</title><rect x="24.4128%" y="821" width="0.7550%" height="15" fill="rgb(232,139,19)" fg:x="291" fg:w="9"/><text x="24.6628%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="24.4966%" y="805" width="0.6711%" height="15" fill="rgb(225,201,24)" fg:x="292" fg:w="8"/><text x="24.7466%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="24.4966%" y="789" width="0.6711%" height="15" fill="rgb(221,47,46)" fg:x="292" fg:w="8"/><text x="24.7466%" y="799.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="24.4966%" y="773" width="0.6711%" height="15" fill="rgb(249,23,13)" fg:x="292" fg:w="8"/><text x="24.7466%" y="783.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="24.5805%" y="757" width="0.5872%" height="15" fill="rgb(219,9,5)" fg:x="293" fg:w="7"/><text x="24.8305%" y="767.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="24.5805%" y="741" width="0.5872%" height="15" fill="rgb(254,171,16)" fg:x="293" fg:w="7"/><text x="24.8305%" y="751.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="24.5805%" y="725" width="0.5872%" height="15" fill="rgb(230,171,20)" fg:x="293" fg:w="7"/><text x="24.8305%" y="735.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="24.5805%" y="709" width="0.5872%" height="15" fill="rgb(210,71,41)" fg:x="293" fg:w="7"/><text x="24.8305%" y="719.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="24.5805%" y="693" width="0.5872%" height="15" fill="rgb(206,173,20)" fg:x="293" fg:w="7"/><text x="24.8305%" y="703.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="24.5805%" y="677" width="0.5872%" height="15" fill="rgb(233,88,34)" fg:x="293" fg:w="7"/><text x="24.8305%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="24.6644%" y="661" width="0.5034%" height="15" fill="rgb(223,209,46)" fg:x="294" fg:w="6"/><text x="24.9144%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="24.6644%" y="645" width="0.5034%" height="15" fill="rgb(250,43,18)" fg:x="294" fg:w="6"/><text x="24.9144%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="24.6644%" y="629" width="0.5034%" height="15" fill="rgb(208,13,10)" fg:x="294" fg:w="6"/><text x="24.9144%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="24.7483%" y="613" width="0.4195%" height="15" fill="rgb(212,200,36)" fg:x="295" fg:w="5"/><text x="24.9983%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="24.8322%" y="597" width="0.3356%" height="15" fill="rgb(225,90,30)" fg:x="296" fg:w="4"/><text x="25.0822%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="24.9161%" y="581" width="0.2517%" height="15" fill="rgb(236,182,39)" fg:x="297" fg:w="3"/><text x="25.1661%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="24.9161%" y="565" width="0.2517%" height="15" fill="rgb(212,144,35)" fg:x="297" fg:w="3"/><text x="25.1661%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="24.9161%" y="549" width="0.2517%" height="15" fill="rgb(228,63,44)" fg:x="297" fg:w="3"/><text x="25.1661%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.0000%" y="533" width="0.1678%" height="15" fill="rgb(228,109,6)" fg:x="298" fg:w="2"/><text x="25.2500%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="25.0839%" y="517" width="0.0839%" height="15" fill="rgb(238,117,24)" fg:x="299" fg:w="1"/><text x="25.3339%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::connect_timeout (17 samples, 1.43%)</title><rect x="23.8255%" y="1029" width="1.4262%" height="15" fill="rgb(242,26,26)" fg:x="284" fg:w="17"/><text x="24.0755%" y="1039.50"></text></g><g><title>std::sys::unix::net::Socket::set_nonblocking (1 samples, 0.08%)</title><rect x="25.1678%" y="1013" width="0.0839%" height="15" fill="rgb(221,92,48)" fg:x="300" fg:w="1"/><text x="25.4178%" y="1023.50"></text></g><g><title>ioctl (1 samples, 0.08%)</title><rect x="25.1678%" y="997" width="0.0839%" height="15" fill="rgb(209,209,32)" fg:x="300" fg:w="1"/><text x="25.4178%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="25.1678%" y="981" width="0.0839%" height="15" fill="rgb(221,70,22)" fg:x="300" fg:w="1"/><text x="25.4178%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="25.1678%" y="965" width="0.0839%" height="15" fill="rgb(248,145,5)" fg:x="300" fg:w="1"/><text x="25.4178%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="25.1678%" y="949" width="0.0839%" height="15" fill="rgb(226,116,26)" fg:x="300" fg:w="1"/><text x="25.4178%" y="959.50"></text></g><g><title>&lt;bitcoincore_rpc::client::Client as bitcoincore_rpc::client::RpcApi&gt;::call (113 samples, 9.48%)</title><rect x="15.9396%" y="1125" width="9.4799%" height="15" fill="rgb(244,5,17)" fg:x="190" fg:w="113"/><text x="16.1896%" y="1135.50">&lt;bitcoincore_r..</text></g><g><title>jsonrpc::client::Client::send_request (111 samples, 9.31%)</title><rect x="16.1074%" y="1109" width="9.3121%" height="15" fill="rgb(252,159,33)" fg:x="192" fg:w="111"/><text x="16.3574%" y="1119.50">jsonrpc::clie..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (111 samples, 9.31%)</title><rect x="16.1074%" y="1093" width="9.3121%" height="15" fill="rgb(206,71,0)" fg:x="192" fg:w="111"/><text x="16.3574%" y="1103.50">&lt;jsonrpc::sim..</text></g><g><title>jsonrpc::simple_http::SimpleHttpTransport::request (111 samples, 9.31%)</title><rect x="16.1074%" y="1077" width="9.3121%" height="15" fill="rgb(233,118,54)" fg:x="192" fg:w="111"/><text x="16.3574%" y="1087.50">jsonrpc::simp..</text></g><g><title>std::net::tcp::TcpStream::connect_timeout (19 samples, 1.59%)</title><rect x="23.8255%" y="1061" width="1.5940%" height="15" fill="rgb(234,83,48)" fg:x="284" fg:w="19"/><text x="24.0755%" y="1071.50"></text></g><g><title>std::sys_common::net::TcpStream::connect_timeout (19 samples, 1.59%)</title><rect x="23.8255%" y="1045" width="1.5940%" height="15" fill="rgb(228,3,54)" fg:x="284" fg:w="19"/><text x="24.0755%" y="1055.50"></text></g><g><title>std::sys::unix::net::Socket::new (2 samples, 0.17%)</title><rect x="25.2517%" y="1029" width="0.1678%" height="15" fill="rgb(226,155,13)" fg:x="301" fg:w="2"/><text x="25.5017%" y="1039.50"></text></g><g><title>std::sys::unix::net::Socket::new_raw (2 samples, 0.17%)</title><rect x="25.2517%" y="1013" width="0.1678%" height="15" fill="rgb(241,28,37)" fg:x="301" fg:w="2"/><text x="25.5017%" y="1023.50"></text></g><g><title>__socket (2 samples, 0.17%)</title><rect x="25.2517%" y="997" width="0.1678%" height="15" fill="rgb(233,93,10)" fg:x="301" fg:w="2"/><text x="25.5017%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.2517%" y="981" width="0.1678%" height="15" fill="rgb(225,113,19)" fg:x="301" fg:w="2"/><text x="25.5017%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.2517%" y="965" width="0.1678%" height="15" fill="rgb(241,2,18)" fg:x="301" fg:w="2"/><text x="25.5017%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.2517%" y="949" width="0.1678%" height="15" fill="rgb(228,207,21)" fg:x="301" fg:w="2"/><text x="25.5017%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.2517%" y="933" width="0.1678%" height="15" fill="rgb(213,211,35)" fg:x="301" fg:w="2"/><text x="25.5017%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.2517%" y="917" width="0.1678%" height="15" fill="rgb(209,83,10)" fg:x="301" fg:w="2"/><text x="25.5017%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.2517%" y="901" width="0.1678%" height="15" fill="rgb(209,164,1)" fg:x="301" fg:w="2"/><text x="25.5017%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.2517%" y="885" width="0.1678%" height="15" fill="rgb(213,184,43)" fg:x="301" fg:w="2"/><text x="25.5017%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="25.2517%" y="869" width="0.1678%" height="15" fill="rgb(231,61,34)" fg:x="301" fg:w="2"/><text x="25.5017%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="25.3356%" y="853" width="0.0839%" height="15" fill="rgb(235,75,3)" fg:x="302" fg:w="1"/><text x="25.5856%" y="863.50"></text></g><g><title>&lt;core::str::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.5034%" y="853" width="0.0839%" height="15" fill="rgb(220,106,47)" fg:x="304" fg:w="1"/><text x="25.7534%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.5034%" y="837" width="0.0839%" height="15" fill="rgb(210,196,33)" fg:x="304" fg:w="1"/><text x="25.7534%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.5034%" y="821" width="0.0839%" height="15" fill="rgb(229,154,42)" fg:x="304" fg:w="1"/><text x="25.7534%" y="831.50"></text></g><g><title>bitcoin_hashes::hex::FromHex::from_hex (3 samples, 0.25%)</title><rect x="25.4195%" y="1125" width="0.2517%" height="15" fill="rgb(228,114,26)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bitcoin_hashes::hex::FromHex&gt;::from_byte_iter (3 samples, 0.25%)</title><rect x="25.4195%" y="1109" width="0.2517%" height="15" fill="rgb(208,144,1)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.25%)</title><rect x="25.4195%" y="1093" width="0.2517%" height="15" fill="rgb(239,112,37)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="25.4195%" y="1077" width="0.2517%" height="15" fill="rgb(210,96,50)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1087.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.25%)</title><rect x="25.4195%" y="1061" width="0.2517%" height="15" fill="rgb(222,178,2)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3 samples, 0.25%)</title><rect x="25.4195%" y="1045" width="0.2517%" height="15" fill="rgb(226,74,18)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.25%)</title><rect x="25.4195%" y="1029" width="0.2517%" height="15" fill="rgb(225,67,54)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="25.4195%" y="1013" width="0.2517%" height="15" fill="rgb(251,92,32)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="25.4195%" y="997" width="0.2517%" height="15" fill="rgb(228,149,22)" fg:x="303" fg:w="3"/><text x="25.6695%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.25%)</title><rect x="25.4195%" y="981" width="0.2517%" height="15" fill="rgb(243,54,13)" fg:x="303" fg:w="3"/><text x="25.6695%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.17%)</title><rect x="25.5034%" y="965" width="0.1678%" height="15" fill="rgb(243,180,28)" fg:x="304" fg:w="2"/><text x="25.7534%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.17%)</title><rect x="25.5034%" y="949" width="0.1678%" height="15" fill="rgb(208,167,24)" fg:x="304" fg:w="2"/><text x="25.7534%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="25.5034%" y="933" width="0.1678%" height="15" fill="rgb(245,73,45)" fg:x="304" fg:w="2"/><text x="25.7534%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.17%)</title><rect x="25.5034%" y="917" width="0.1678%" height="15" fill="rgb(237,203,48)" fg:x="304" fg:w="2"/><text x="25.7534%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="25.5034%" y="901" width="0.1678%" height="15" fill="rgb(211,197,16)" fg:x="304" fg:w="2"/><text x="25.7534%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.17%)</title><rect x="25.5034%" y="885" width="0.1678%" height="15" fill="rgb(243,99,51)" fg:x="304" fg:w="2"/><text x="25.7534%" y="895.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="25.5034%" y="869" width="0.1678%" height="15" fill="rgb(215,123,29)" fg:x="304" fg:w="2"/><text x="25.7534%" y="879.50"></text></g><g><title>bitcoin_hashes::hex::chars_to_hex (1 samples, 0.08%)</title><rect x="25.5872%" y="853" width="0.0839%" height="15" fill="rgb(239,186,37)" fg:x="305" fg:w="1"/><text x="25.8372%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="25.5872%" y="837" width="0.0839%" height="15" fill="rgb(252,136,39)" fg:x="305" fg:w="1"/><text x="25.8372%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.7550%" y="917" width="0.0839%" height="15" fill="rgb(223,213,32)" fg:x="307" fg:w="1"/><text x="26.0050%" y="927.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.7550%" y="901" width="0.0839%" height="15" fill="rgb(233,115,5)" fg:x="307" fg:w="1"/><text x="26.0050%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.7550%" y="885" width="0.0839%" height="15" fill="rgb(207,226,44)" fg:x="307" fg:w="1"/><text x="26.0050%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.7550%" y="869" width="0.0839%" height="15" fill="rgb(208,126,0)" fg:x="307" fg:w="1"/><text x="26.0050%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.7550%" y="853" width="0.0839%" height="15" fill="rgb(244,66,21)" fg:x="307" fg:w="1"/><text x="26.0050%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.7550%" y="837" width="0.0839%" height="15" fill="rgb(222,97,12)" fg:x="307" fg:w="1"/><text x="26.0050%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="25.7550%" y="821" width="0.0839%" height="15" fill="rgb(219,213,19)" fg:x="307" fg:w="1"/><text x="26.0050%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="25.7550%" y="805" width="0.0839%" height="15" fill="rgb(252,169,30)" fg:x="307" fg:w="1"/><text x="26.0050%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="25.7550%" y="789" width="0.0839%" height="15" fill="rgb(206,32,51)" fg:x="307" fg:w="1"/><text x="26.0050%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="25.7550%" y="773" width="0.0839%" height="15" fill="rgb(250,172,42)" fg:x="307" fg:w="1"/><text x="26.0050%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="25.7550%" y="757" width="0.0839%" height="15" fill="rgb(209,34,43)" fg:x="307" fg:w="1"/><text x="26.0050%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="25.7550%" y="741" width="0.0839%" height="15" fill="rgb(223,11,35)" fg:x="307" fg:w="1"/><text x="26.0050%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="25.7550%" y="725" width="0.0839%" height="15" fill="rgb(251,219,26)" fg:x="307" fg:w="1"/><text x="26.0050%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="25.7550%" y="709" width="0.0839%" height="15" fill="rgb(231,119,3)" fg:x="307" fg:w="1"/><text x="26.0050%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="25.7550%" y="693" width="0.0839%" height="15" fill="rgb(216,97,11)" fg:x="307" fg:w="1"/><text x="26.0050%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="25.7550%" y="677" width="0.0839%" height="15" fill="rgb(223,59,9)" fg:x="307" fg:w="1"/><text x="26.0050%" y="687.50"></text></g><g><title>&lt;bitcoincore_rpc::client::Client as bridge::chaininterface::Blockchain&gt;::get_block (120 samples, 10.07%)</title><rect x="15.9396%" y="1157" width="10.0671%" height="15" fill="rgb(233,93,31)" fg:x="190" fg:w="120"/><text x="16.1896%" y="1167.50">&lt;bitcoincore_rp..</text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block (120 samples, 10.07%)</title><rect x="15.9396%" y="1141" width="10.0671%" height="15" fill="rgb(239,81,33)" fg:x="190" fg:w="120"/><text x="16.1896%" y="1151.50">bitcoincore_rpc..</text></g><g><title>bitcoincore_rpc::client::into_json (4 samples, 0.34%)</title><rect x="25.6711%" y="1125" width="0.3356%" height="15" fill="rgb(213,120,34)" fg:x="306" fg:w="4"/><text x="25.9211%" y="1135.50"></text></g><g><title>serde_json::value::to_value (4 samples, 0.34%)</title><rect x="25.6711%" y="1109" width="0.3356%" height="15" fill="rgb(243,49,53)" fg:x="306" fg:w="4"/><text x="25.9211%" y="1119.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.34%)</title><rect x="25.6711%" y="1093" width="0.3356%" height="15" fill="rgb(247,216,33)" fg:x="306" fg:w="4"/><text x="25.9211%" y="1103.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as serde::ser::Serialize&gt;::serialize (4 samples, 0.34%)</title><rect x="25.6711%" y="1077" width="0.3356%" height="15" fill="rgb(226,26,14)" fg:x="306" fg:w="4"/><text x="25.9211%" y="1087.50"></text></g><g><title>bitcoin_hashes::serde_macros::serde_details::SerdeHash::serialize (4 samples, 0.34%)</title><rect x="25.6711%" y="1061" width="0.3356%" height="15" fill="rgb(215,49,53)" fg:x="306" fg:w="4"/><text x="25.9211%" y="1071.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::collect_str (4 samples, 0.34%)</title><rect x="25.6711%" y="1045" width="0.3356%" height="15" fill="rgb(245,162,40)" fg:x="306" fg:w="4"/><text x="25.9211%" y="1055.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (4 samples, 0.34%)</title><rect x="25.6711%" y="1029" width="0.3356%" height="15" fill="rgb(229,68,17)" fg:x="306" fg:w="4"/><text x="25.9211%" y="1039.50"></text></g><g><title>bitcoin_hashes::hex::format_hex_reverse (4 samples, 0.34%)</title><rect x="25.6711%" y="1013" width="0.3356%" height="15" fill="rgb(213,182,10)" fg:x="306" fg:w="4"/><text x="25.9211%" y="1023.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="25.7550%" y="997" width="0.2517%" height="15" fill="rgb(245,125,30)" fg:x="307" fg:w="3"/><text x="26.0050%" y="1007.50"></text></g><g><title>core::fmt::run (3 samples, 0.25%)</title><rect x="25.7550%" y="981" width="0.2517%" height="15" fill="rgb(232,202,2)" fg:x="307" fg:w="3"/><text x="26.0050%" y="991.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="25.7550%" y="965" width="0.2517%" height="15" fill="rgb(237,140,51)" fg:x="307" fg:w="3"/><text x="26.0050%" y="975.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (3 samples, 0.25%)</title><rect x="25.7550%" y="949" width="0.2517%" height="15" fill="rgb(236,157,25)" fg:x="307" fg:w="3"/><text x="26.0050%" y="959.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (3 samples, 0.25%)</title><rect x="25.7550%" y="933" width="0.2517%" height="15" fill="rgb(219,209,0)" fg:x="307" fg:w="3"/><text x="26.0050%" y="943.50"></text></g><g><title>core::fmt::Formatter::pad_integral (2 samples, 0.17%)</title><rect x="25.8389%" y="917" width="0.1678%" height="15" fill="rgb(240,116,54)" fg:x="308" fg:w="2"/><text x="26.0889%" y="927.50"></text></g><g><title>core::fmt::Formatter::padding (1 samples, 0.08%)</title><rect x="25.9228%" y="901" width="0.0839%" height="15" fill="rgb(216,10,36)" fg:x="309" fg:w="1"/><text x="26.1728%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.08%)</title><rect x="25.9228%" y="885" width="0.0839%" height="15" fill="rgb(222,72,44)" fg:x="309" fg:w="1"/><text x="26.1728%" y="895.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.08%)</title><rect x="25.9228%" y="869" width="0.0839%" height="15" fill="rgb(232,159,9)" fg:x="309" fg:w="1"/><text x="26.1728%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="25.9228%" y="853" width="0.0839%" height="15" fill="rgb(210,39,32)" fg:x="309" fg:w="1"/><text x="26.1728%" y="863.50"></text></g><g><title>core::ptr::write (1 samples, 0.08%)</title><rect x="25.9228%" y="837" width="0.0839%" height="15" fill="rgb(216,194,45)" fg:x="309" fg:w="1"/><text x="26.1728%" y="847.50"></text></g><g><title>&lt;bitcoin_hashes::serde_macros::serde_details::HexVisitor&lt;ValueT&gt; as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="26.0067%" y="1013" width="0.0839%" height="15" fill="rgb(218,18,35)" fg:x="310" fg:w="1"/><text x="26.2567%" y="1023.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as core::str::traits::FromStr&gt;::from_str (1 samples, 0.08%)</title><rect x="26.0067%" y="997" width="0.0839%" height="15" fill="rgb(207,83,51)" fg:x="310" fg:w="1"/><text x="26.2567%" y="1007.50"></text></g><g><title>bitcoin_hashes::hex::FromHex::from_hex (1 samples, 0.08%)</title><rect x="26.0067%" y="981" width="0.0839%" height="15" fill="rgb(225,63,43)" fg:x="310" fg:w="1"/><text x="26.2567%" y="991.50"></text></g><g><title>&lt;T as bitcoin_hashes::hex::FromHex&gt;::from_byte_iter (1 samples, 0.08%)</title><rect x="26.0067%" y="965" width="0.0839%" height="15" fill="rgb(207,57,36)" fg:x="310" fg:w="1"/><text x="26.2567%" y="975.50"></text></g><g><title>&lt;[u8: 32] as bitcoin_hashes::hex::FromHex&gt;::from_byte_iter (1 samples, 0.08%)</title><rect x="26.0067%" y="949" width="0.0839%" height="15" fill="rgb(216,99,33)" fg:x="310" fg:w="1"/><text x="26.2567%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.0067%" y="933" width="0.0839%" height="15" fill="rgb(225,42,16)" fg:x="310" fg:w="1"/><text x="26.2567%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="26.0067%" y="917" width="0.0839%" height="15" fill="rgb(220,201,45)" fg:x="310" fg:w="1"/><text x="26.2567%" y="927.50"></text></g><g><title>&lt;bitcoin_hashes::hex::HexIterator as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.08%)</title><rect x="26.0067%" y="901" width="0.0839%" height="15" fill="rgb(225,33,4)" fg:x="310" fg:w="1"/><text x="26.2567%" y="911.50"></text></g><g><title>&lt;core::str::iter::Bytes as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.08%)</title><rect x="26.0067%" y="885" width="0.0839%" height="15" fill="rgb(224,33,50)" fg:x="310" fg:w="1"/><text x="26.2567%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.08%)</title><rect x="26.0067%" y="869" width="0.0839%" height="15" fill="rgb(246,198,51)" fg:x="310" fg:w="1"/><text x="26.2567%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.08%)</title><rect x="26.0067%" y="853" width="0.0839%" height="15" fill="rgb(205,22,4)" fg:x="310" fg:w="1"/><text x="26.2567%" y="863.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::pre_dec_end (1 samples, 0.08%)</title><rect x="26.0067%" y="837" width="0.0839%" height="15" fill="rgb(206,3,8)" fg:x="310" fg:w="1"/><text x="26.2567%" y="847.50"></text></g><g><title>jsonrpc::Response::result (2 samples, 0.17%)</title><rect x="26.0067%" y="1109" width="0.1678%" height="15" fill="rgb(251,23,15)" fg:x="310" fg:w="2"/><text x="26.2567%" y="1119.50"></text></g><g><title>serde_json::de::from_str (2 samples, 0.17%)</title><rect x="26.0067%" y="1093" width="0.1678%" height="15" fill="rgb(252,88,28)" fg:x="310" fg:w="2"/><text x="26.2567%" y="1103.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.17%)</title><rect x="26.0067%" y="1077" width="0.1678%" height="15" fill="rgb(212,127,14)" fg:x="310" fg:w="2"/><text x="26.2567%" y="1087.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as serde::de::Deserialize&gt;::deserialize (2 samples, 0.17%)</title><rect x="26.0067%" y="1061" width="0.1678%" height="15" fill="rgb(247,145,37)" fg:x="310" fg:w="2"/><text x="26.2567%" y="1071.50"></text></g><g><title>bitcoin_hashes::serde_macros::serde_details::SerdeHash::deserialize (2 samples, 0.17%)</title><rect x="26.0067%" y="1045" width="0.1678%" height="15" fill="rgb(209,117,53)" fg:x="310" fg:w="2"/><text x="26.2567%" y="1055.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (2 samples, 0.17%)</title><rect x="26.0067%" y="1029" width="0.1678%" height="15" fill="rgb(212,90,42)" fg:x="310" fg:w="2"/><text x="26.2567%" y="1039.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="26.0906%" y="1013" width="0.0839%" height="15" fill="rgb(218,164,37)" fg:x="311" fg:w="1"/><text x="26.3406%" y="1023.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1 samples, 0.08%)</title><rect x="26.0906%" y="997" width="0.0839%" height="15" fill="rgb(246,65,34)" fg:x="311" fg:w="1"/><text x="26.3406%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="26.1745%" y="1061" width="0.0839%" height="15" fill="rgb(231,100,33)" fg:x="312" fg:w="1"/><text x="26.4245%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.08%)</title><rect x="26.1745%" y="1045" width="0.0839%" height="15" fill="rgb(228,126,14)" fg:x="312" fg:w="1"/><text x="26.4245%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.1745%" y="1029" width="0.0839%" height="15" fill="rgb(215,173,21)" fg:x="312" fg:w="1"/><text x="26.4245%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.08%)</title><rect x="26.1745%" y="1013" width="0.0839%" height="15" fill="rgb(210,6,40)" fg:x="312" fg:w="1"/><text x="26.4245%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.08%)</title><rect x="26.1745%" y="997" width="0.0839%" height="15" fill="rgb(212,48,18)" fg:x="312" fg:w="1"/><text x="26.4245%" y="1007.50"></text></g><g><title>cfree (1 samples, 0.08%)</title><rect x="26.1745%" y="981" width="0.0839%" height="15" fill="rgb(230,214,11)" fg:x="312" fg:w="1"/><text x="26.4245%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::buffered::bufreader::BufReader&lt;std::net::tcp::TcpStream&gt;&gt; (12 samples, 1.01%)</title><rect x="26.2584%" y="1061" width="1.0067%" height="15" fill="rgb(254,105,39)" fg:x="313" fg:w="12"/><text x="26.5084%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::net::tcp::TcpStream&gt; (12 samples, 1.01%)</title><rect x="26.2584%" y="1045" width="1.0067%" height="15" fill="rgb(245,158,5)" fg:x="313" fg:w="12"/><text x="26.5084%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::net::TcpStream&gt; (12 samples, 1.01%)</title><rect x="26.2584%" y="1029" width="1.0067%" height="15" fill="rgb(249,208,11)" fg:x="313" fg:w="12"/><text x="26.5084%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::net::Socket&gt; (12 samples, 1.01%)</title><rect x="26.2584%" y="1013" width="1.0067%" height="15" fill="rgb(210,39,28)" fg:x="313" fg:w="12"/><text x="26.5084%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (12 samples, 1.01%)</title><rect x="26.2584%" y="997" width="1.0067%" height="15" fill="rgb(211,56,53)" fg:x="313" fg:w="12"/><text x="26.5084%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (12 samples, 1.01%)</title><rect x="26.2584%" y="981" width="1.0067%" height="15" fill="rgb(226,201,30)" fg:x="313" fg:w="12"/><text x="26.5084%" y="991.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (12 samples, 1.01%)</title><rect x="26.2584%" y="965" width="1.0067%" height="15" fill="rgb(239,101,34)" fg:x="313" fg:w="12"/><text x="26.5084%" y="975.50"></text></g><g><title>__close (12 samples, 1.01%)</title><rect x="26.2584%" y="949" width="1.0067%" height="15" fill="rgb(226,209,5)" fg:x="313" fg:w="12"/><text x="26.5084%" y="959.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="26.2584%" y="933" width="1.0067%" height="15" fill="rgb(250,105,47)" fg:x="313" fg:w="12"/><text x="26.5084%" y="943.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="26.2584%" y="917" width="1.0067%" height="15" fill="rgb(230,72,3)" fg:x="313" fg:w="12"/><text x="26.5084%" y="927.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="26.2584%" y="901" width="1.0067%" height="15" fill="rgb(232,218,39)" fg:x="313" fg:w="12"/><text x="26.5084%" y="911.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="26.2584%" y="885" width="1.0067%" height="15" fill="rgb(248,166,6)" fg:x="313" fg:w="12"/><text x="26.5084%" y="895.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="26.2584%" y="869" width="1.0067%" height="15" fill="rgb(247,89,20)" fg:x="313" fg:w="12"/><text x="26.5084%" y="879.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="26.2584%" y="853" width="1.0067%" height="15" fill="rgb(248,130,54)" fg:x="313" fg:w="12"/><text x="26.5084%" y="863.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="26.2584%" y="837" width="1.0067%" height="15" fill="rgb(234,196,4)" fg:x="313" fg:w="12"/><text x="26.5084%" y="847.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="26.2584%" y="821" width="1.0067%" height="15" fill="rgb(250,143,31)" fg:x="313" fg:w="12"/><text x="26.5084%" y="831.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="26.3423%" y="805" width="0.9228%" height="15" fill="rgb(211,110,34)" fg:x="314" fg:w="11"/><text x="26.5923%" y="815.50"></text></g><g><title>[unknown] (10 samples, 0.84%)</title><rect x="26.4262%" y="789" width="0.8389%" height="15" fill="rgb(215,124,48)" fg:x="315" fg:w="10"/><text x="26.6762%" y="799.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="773" width="0.6711%" height="15" fill="rgb(216,46,13)" fg:x="317" fg:w="8"/><text x="26.8440%" y="783.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="757" width="0.6711%" height="15" fill="rgb(205,184,25)" fg:x="317" fg:w="8"/><text x="26.8440%" y="767.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="741" width="0.6711%" height="15" fill="rgb(228,1,10)" fg:x="317" fg:w="8"/><text x="26.8440%" y="751.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="725" width="0.6711%" height="15" fill="rgb(213,116,27)" fg:x="317" fg:w="8"/><text x="26.8440%" y="735.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="709" width="0.6711%" height="15" fill="rgb(241,95,50)" fg:x="317" fg:w="8"/><text x="26.8440%" y="719.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="693" width="0.6711%" height="15" fill="rgb(238,48,32)" fg:x="317" fg:w="8"/><text x="26.8440%" y="703.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="677" width="0.6711%" height="15" fill="rgb(235,113,49)" fg:x="317" fg:w="8"/><text x="26.8440%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="661" width="0.6711%" height="15" fill="rgb(205,127,43)" fg:x="317" fg:w="8"/><text x="26.8440%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="26.5940%" y="645" width="0.6711%" height="15" fill="rgb(250,162,2)" fg:x="317" fg:w="8"/><text x="26.8440%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="26.6779%" y="629" width="0.5872%" height="15" fill="rgb(220,13,41)" fg:x="318" fg:w="7"/><text x="26.9279%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="26.7617%" y="613" width="0.5034%" height="15" fill="rgb(249,221,25)" fg:x="319" fg:w="6"/><text x="27.0117%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="26.7617%" y="597" width="0.5034%" height="15" fill="rgb(215,208,19)" fg:x="319" fg:w="6"/><text x="27.0117%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="26.7617%" y="581" width="0.5034%" height="15" fill="rgb(236,175,2)" fg:x="319" fg:w="6"/><text x="27.0117%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="565" width="0.4195%" height="15" fill="rgb(241,52,2)" fg:x="320" fg:w="5"/><text x="27.0956%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="549" width="0.4195%" height="15" fill="rgb(248,140,14)" fg:x="320" fg:w="5"/><text x="27.0956%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="533" width="0.4195%" height="15" fill="rgb(253,22,42)" fg:x="320" fg:w="5"/><text x="27.0956%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="517" width="0.4195%" height="15" fill="rgb(234,61,47)" fg:x="320" fg:w="5"/><text x="27.0956%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="501" width="0.4195%" height="15" fill="rgb(208,226,15)" fg:x="320" fg:w="5"/><text x="27.0956%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="485" width="0.4195%" height="15" fill="rgb(217,221,4)" fg:x="320" fg:w="5"/><text x="27.0956%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="469" width="0.4195%" height="15" fill="rgb(212,174,34)" fg:x="320" fg:w="5"/><text x="27.0956%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="453" width="0.4195%" height="15" fill="rgb(253,83,4)" fg:x="320" fg:w="5"/><text x="27.0956%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="26.8456%" y="437" width="0.4195%" height="15" fill="rgb(250,195,49)" fg:x="320" fg:w="5"/><text x="27.0956%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.0134%" y="421" width="0.2517%" height="15" fill="rgb(241,192,25)" fg:x="322" fg:w="3"/><text x="27.2634%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="27.0973%" y="405" width="0.1678%" height="15" fill="rgb(208,124,10)" fg:x="323" fg:w="2"/><text x="27.3473%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="27.0973%" y="389" width="0.1678%" height="15" fill="rgb(222,33,0)" fg:x="323" fg:w="2"/><text x="27.3473%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="27.0973%" y="373" width="0.1678%" height="15" fill="rgb(234,209,28)" fg:x="323" fg:w="2"/><text x="27.3473%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="27.0973%" y="357" width="0.1678%" height="15" fill="rgb(224,11,23)" fg:x="323" fg:w="2"/><text x="27.3473%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="27.0973%" y="341" width="0.1678%" height="15" fill="rgb(232,99,1)" fg:x="323" fg:w="2"/><text x="27.3473%" y="351.50"></text></g><g><title>jsonrpc::simple_http::get_line (4 samples, 0.34%)</title><rect x="27.2651%" y="1061" width="0.3356%" height="15" fill="rgb(237,95,45)" fg:x="325" fg:w="4"/><text x="27.5151%" y="1071.50"></text></g><g><title>std::io::BufRead::read_line (4 samples, 0.34%)</title><rect x="27.2651%" y="1045" width="0.3356%" height="15" fill="rgb(208,109,11)" fg:x="325" fg:w="4"/><text x="27.5151%" y="1055.50"></text></g><g><title>std::io::append_to_string (4 samples, 0.34%)</title><rect x="27.2651%" y="1029" width="0.3356%" height="15" fill="rgb(216,190,48)" fg:x="325" fg:w="4"/><text x="27.5151%" y="1039.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (4 samples, 0.34%)</title><rect x="27.2651%" y="1013" width="0.3356%" height="15" fill="rgb(251,171,36)" fg:x="325" fg:w="4"/><text x="27.5151%" y="1023.50"></text></g><g><title>std::io::read_until (4 samples, 0.34%)</title><rect x="27.2651%" y="997" width="0.3356%" height="15" fill="rgb(230,62,22)" fg:x="325" fg:w="4"/><text x="27.5151%" y="1007.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (4 samples, 0.34%)</title><rect x="27.2651%" y="981" width="0.3356%" height="15" fill="rgb(225,114,35)" fg:x="325" fg:w="4"/><text x="27.5151%" y="991.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (4 samples, 0.34%)</title><rect x="27.2651%" y="965" width="0.3356%" height="15" fill="rgb(215,118,42)" fg:x="325" fg:w="4"/><text x="27.5151%" y="975.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (4 samples, 0.34%)</title><rect x="27.2651%" y="949" width="0.3356%" height="15" fill="rgb(243,119,21)" fg:x="325" fg:w="4"/><text x="27.5151%" y="959.50"></text></g><g><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read_buf (4 samples, 0.34%)</title><rect x="27.2651%" y="933" width="0.3356%" height="15" fill="rgb(252,177,53)" fg:x="325" fg:w="4"/><text x="27.5151%" y="943.50"></text></g><g><title>std::sys_common::net::TcpStream::read_buf (4 samples, 0.34%)</title><rect x="27.2651%" y="917" width="0.3356%" height="15" fill="rgb(237,209,29)" fg:x="325" fg:w="4"/><text x="27.5151%" y="927.50"></text></g><g><title>std::sys::unix::net::Socket::read_buf (4 samples, 0.34%)</title><rect x="27.2651%" y="901" width="0.3356%" height="15" fill="rgb(212,65,23)" fg:x="325" fg:w="4"/><text x="27.5151%" y="911.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (4 samples, 0.34%)</title><rect x="27.2651%" y="885" width="0.3356%" height="15" fill="rgb(230,222,46)" fg:x="325" fg:w="4"/><text x="27.5151%" y="895.50"></text></g><g><title>recv (4 samples, 0.34%)</title><rect x="27.2651%" y="869" width="0.3356%" height="15" fill="rgb(215,135,32)" fg:x="325" fg:w="4"/><text x="27.5151%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="27.2651%" y="853" width="0.3356%" height="15" fill="rgb(246,101,22)" fg:x="325" fg:w="4"/><text x="27.5151%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="27.2651%" y="837" width="0.3356%" height="15" fill="rgb(206,107,13)" fg:x="325" fg:w="4"/><text x="27.5151%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="27.2651%" y="821" width="0.3356%" height="15" fill="rgb(250,100,44)" fg:x="325" fg:w="4"/><text x="27.5151%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="27.2651%" y="805" width="0.3356%" height="15" fill="rgb(231,147,38)" fg:x="325" fg:w="4"/><text x="27.5151%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="27.2651%" y="789" width="0.3356%" height="15" fill="rgb(229,8,40)" fg:x="325" fg:w="4"/><text x="27.5151%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="773" width="0.2517%" height="15" fill="rgb(221,135,30)" fg:x="326" fg:w="3"/><text x="27.5990%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="757" width="0.2517%" height="15" fill="rgb(249,193,18)" fg:x="326" fg:w="3"/><text x="27.5990%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="741" width="0.2517%" height="15" fill="rgb(209,133,39)" fg:x="326" fg:w="3"/><text x="27.5990%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="725" width="0.2517%" height="15" fill="rgb(232,100,14)" fg:x="326" fg:w="3"/><text x="27.5990%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="709" width="0.2517%" height="15" fill="rgb(224,185,1)" fg:x="326" fg:w="3"/><text x="27.5990%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="693" width="0.2517%" height="15" fill="rgb(223,139,8)" fg:x="326" fg:w="3"/><text x="27.5990%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="677" width="0.2517%" height="15" fill="rgb(232,213,38)" fg:x="326" fg:w="3"/><text x="27.5990%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="661" width="0.2517%" height="15" fill="rgb(207,94,22)" fg:x="326" fg:w="3"/><text x="27.5990%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="645" width="0.2517%" height="15" fill="rgb(219,183,54)" fg:x="326" fg:w="3"/><text x="27.5990%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="27.3490%" y="629" width="0.2517%" height="15" fill="rgb(216,185,54)" fg:x="326" fg:w="3"/><text x="27.5990%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="27.4329%" y="613" width="0.1678%" height="15" fill="rgb(254,217,39)" fg:x="327" fg:w="2"/><text x="27.6829%" y="623.50"></text></g><g><title>serde::de::MapAccess::next_key (1 samples, 0.08%)</title><rect x="27.6007%" y="981" width="0.0839%" height="15" fill="rgb(240,178,23)" fg:x="329" fg:w="1"/><text x="27.8507%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="27.6007%" y="965" width="0.0839%" height="15" fill="rgb(218,11,47)" fg:x="329" fg:w="1"/><text x="27.8507%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="27.6007%" y="949" width="0.0839%" height="15" fill="rgb(218,51,51)" fg:x="329" fg:w="1"/><text x="27.8507%" y="959.50"></text></g><g><title>&lt;jsonrpc::_::&lt;impl serde::de::Deserialize for jsonrpc::Response&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.08%)</title><rect x="27.6007%" y="933" width="0.0839%" height="15" fill="rgb(238,126,27)" fg:x="329" fg:w="1"/><text x="27.8507%" y="943.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.08%)</title><rect x="27.6007%" y="917" width="0.0839%" height="15" fill="rgb(249,202,22)" fg:x="329" fg:w="1"/><text x="27.8507%" y="927.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="27.6007%" y="901" width="0.0839%" height="15" fill="rgb(254,195,49)" fg:x="329" fg:w="1"/><text x="27.8507%" y="911.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="27.6007%" y="885" width="0.0839%" height="15" fill="rgb(208,123,14)" fg:x="329" fg:w="1"/><text x="27.8507%" y="895.50"></text></g><g><title>serde_json::de::from_str (2 samples, 0.17%)</title><rect x="27.6007%" y="1061" width="0.1678%" height="15" fill="rgb(224,200,8)" fg:x="329" fg:w="2"/><text x="27.8507%" y="1071.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.17%)</title><rect x="27.6007%" y="1045" width="0.1678%" height="15" fill="rgb(217,61,36)" fg:x="329" fg:w="2"/><text x="27.8507%" y="1055.50"></text></g><g><title>jsonrpc::_::&lt;impl serde::de::Deserialize for jsonrpc::Response&gt;::deserialize (2 samples, 0.17%)</title><rect x="27.6007%" y="1029" width="0.1678%" height="15" fill="rgb(206,35,45)" fg:x="329" fg:w="2"/><text x="27.8507%" y="1039.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.17%)</title><rect x="27.6007%" y="1013" width="0.1678%" height="15" fill="rgb(217,65,33)" fg:x="329" fg:w="2"/><text x="27.8507%" y="1023.50"></text></g><g><title>&lt;jsonrpc::_::&lt;impl serde::de::Deserialize for jsonrpc::Response&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.17%)</title><rect x="27.6007%" y="997" width="0.1678%" height="15" fill="rgb(222,158,48)" fg:x="329" fg:w="2"/><text x="27.8507%" y="1007.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.08%)</title><rect x="27.6846%" y="981" width="0.0839%" height="15" fill="rgb(254,2,54)" fg:x="330" fg:w="1"/><text x="27.9346%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="27.6846%" y="965" width="0.0839%" height="15" fill="rgb(250,143,38)" fg:x="330" fg:w="1"/><text x="27.9346%" y="975.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="27.6846%" y="949" width="0.0839%" height="15" fill="rgb(248,25,0)" fg:x="330" fg:w="1"/><text x="27.9346%" y="959.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for core::option::Option&lt;T&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="27.6846%" y="933" width="0.0839%" height="15" fill="rgb(206,152,27)" fg:x="330" fg:w="1"/><text x="27.9346%" y="943.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_option (1 samples, 0.08%)</title><rect x="27.6846%" y="917" width="0.0839%" height="15" fill="rgb(240,77,30)" fg:x="330" fg:w="1"/><text x="27.9346%" y="927.50"></text></g><g><title>&lt;serde::de::impls::OptionVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_some (1 samples, 0.08%)</title><rect x="27.6846%" y="901" width="0.0839%" height="15" fill="rgb(231,5,3)" fg:x="330" fg:w="1"/><text x="27.9346%" y="911.50"></text></g><g><title>serde_json::raw::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;serde_json::raw::RawValue&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="27.6846%" y="885" width="0.0839%" height="15" fill="rgb(207,226,32)" fg:x="330" fg:w="1"/><text x="27.9346%" y="895.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_newtype_struct (1 samples, 0.08%)</title><rect x="27.6846%" y="869" width="0.0839%" height="15" fill="rgb(222,207,47)" fg:x="330" fg:w="1"/><text x="27.9346%" y="879.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_raw_value (1 samples, 0.08%)</title><rect x="27.6846%" y="853" width="0.0839%" height="15" fill="rgb(229,115,45)" fg:x="330" fg:w="1"/><text x="27.9346%" y="863.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::end_raw_buffering (1 samples, 0.08%)</title><rect x="27.6846%" y="837" width="0.0839%" height="15" fill="rgb(224,191,6)" fg:x="330" fg:w="1"/><text x="27.9346%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.08%)</title><rect x="27.6846%" y="821" width="0.0839%" height="15" fill="rgb(230,227,24)" fg:x="330" fg:w="1"/><text x="27.9346%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (1 samples, 0.08%)</title><rect x="27.6846%" y="805" width="0.0839%" height="15" fill="rgb(228,80,19)" fg:x="330" fg:w="1"/><text x="27.9346%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (1 samples, 0.08%)</title><rect x="27.6846%" y="789" width="0.0839%" height="15" fill="rgb(247,229,0)" fg:x="330" fg:w="1"/><text x="27.9346%" y="799.50"></text></g><g><title>std::io::Write::write_all (77 samples, 6.46%)</title><rect x="27.7685%" y="1061" width="6.4597%" height="15" fill="rgb(237,194,15)" fg:x="331" fg:w="77"/><text x="28.0185%" y="1071.50">std::io:..</text></g><g><title>std::net::udp::UdpSocket::send (76 samples, 6.38%)</title><rect x="27.8523%" y="1045" width="6.3758%" height="15" fill="rgb(219,203,20)" fg:x="332" fg:w="76"/><text x="28.1023%" y="1055.50">std::net..</text></g><g><title>std::sys_common::net::UdpSocket::send (76 samples, 6.38%)</title><rect x="27.8523%" y="1029" width="6.3758%" height="15" fill="rgb(234,128,8)" fg:x="332" fg:w="76"/><text x="28.1023%" y="1039.50">std::sys..</text></g><g><title>__send (76 samples, 6.38%)</title><rect x="27.8523%" y="1013" width="6.3758%" height="15" fill="rgb(248,202,8)" fg:x="332" fg:w="76"/><text x="28.1023%" y="1023.50">__send</text></g><g><title>[unknown] (76 samples, 6.38%)</title><rect x="27.8523%" y="997" width="6.3758%" height="15" fill="rgb(206,104,37)" fg:x="332" fg:w="76"/><text x="28.1023%" y="1007.50">[unknown]</text></g><g><title>[unknown] (75 samples, 6.29%)</title><rect x="27.9362%" y="981" width="6.2919%" height="15" fill="rgb(223,8,27)" fg:x="333" fg:w="75"/><text x="28.1862%" y="991.50">[unknown]</text></g><g><title>[unknown] (70 samples, 5.87%)</title><rect x="28.3557%" y="965" width="5.8725%" height="15" fill="rgb(216,217,28)" fg:x="338" fg:w="70"/><text x="28.6057%" y="975.50">[unknow..</text></g><g><title>[unknown] (69 samples, 5.79%)</title><rect x="28.4396%" y="949" width="5.7886%" height="15" fill="rgb(249,199,1)" fg:x="339" fg:w="69"/><text x="28.6896%" y="959.50">[unknow..</text></g><g><title>[unknown] (67 samples, 5.62%)</title><rect x="28.6074%" y="933" width="5.6208%" height="15" fill="rgb(240,85,17)" fg:x="341" fg:w="67"/><text x="28.8574%" y="943.50">[unknow..</text></g><g><title>[unknown] (67 samples, 5.62%)</title><rect x="28.6074%" y="917" width="5.6208%" height="15" fill="rgb(206,108,45)" fg:x="341" fg:w="67"/><text x="28.8574%" y="927.50">[unknow..</text></g><g><title>[unknown] (66 samples, 5.54%)</title><rect x="28.6913%" y="901" width="5.5369%" height="15" fill="rgb(245,210,41)" fg:x="342" fg:w="66"/><text x="28.9413%" y="911.50">[unknow..</text></g><g><title>[unknown] (65 samples, 5.45%)</title><rect x="28.7752%" y="885" width="5.4530%" height="15" fill="rgb(206,13,37)" fg:x="343" fg:w="65"/><text x="29.0252%" y="895.50">[unknow..</text></g><g><title>[unknown] (63 samples, 5.29%)</title><rect x="28.9430%" y="869" width="5.2852%" height="15" fill="rgb(250,61,18)" fg:x="345" fg:w="63"/><text x="29.1930%" y="879.50">[unkno..</text></g><g><title>[unknown] (62 samples, 5.20%)</title><rect x="29.0268%" y="853" width="5.2013%" height="15" fill="rgb(235,172,48)" fg:x="346" fg:w="62"/><text x="29.2768%" y="863.50">[unkno..</text></g><g><title>[unknown] (58 samples, 4.87%)</title><rect x="29.3624%" y="837" width="4.8658%" height="15" fill="rgb(249,201,17)" fg:x="350" fg:w="58"/><text x="29.6124%" y="847.50">[unkno..</text></g><g><title>[unknown] (52 samples, 4.36%)</title><rect x="29.8658%" y="821" width="4.3624%" height="15" fill="rgb(219,208,6)" fg:x="356" fg:w="52"/><text x="30.1158%" y="831.50">[unkn..</text></g><g><title>[unknown] (47 samples, 3.94%)</title><rect x="30.2852%" y="805" width="3.9430%" height="15" fill="rgb(248,31,23)" fg:x="361" fg:w="47"/><text x="30.5352%" y="815.50">[unk..</text></g><g><title>[unknown] (46 samples, 3.86%)</title><rect x="30.3691%" y="789" width="3.8591%" height="15" fill="rgb(245,15,42)" fg:x="362" fg:w="46"/><text x="30.6191%" y="799.50">[unk..</text></g><g><title>[unknown] (45 samples, 3.78%)</title><rect x="30.4530%" y="773" width="3.7752%" height="15" fill="rgb(222,217,39)" fg:x="363" fg:w="45"/><text x="30.7030%" y="783.50">[unk..</text></g><g><title>[unknown] (43 samples, 3.61%)</title><rect x="30.6208%" y="757" width="3.6074%" height="15" fill="rgb(210,219,27)" fg:x="365" fg:w="43"/><text x="30.8708%" y="767.50">[unk..</text></g><g><title>[unknown] (39 samples, 3.27%)</title><rect x="30.9564%" y="741" width="3.2718%" height="15" fill="rgb(252,166,36)" fg:x="369" fg:w="39"/><text x="31.2064%" y="751.50">[un..</text></g><g><title>[unknown] (38 samples, 3.19%)</title><rect x="31.0403%" y="725" width="3.1879%" height="15" fill="rgb(245,132,34)" fg:x="370" fg:w="38"/><text x="31.2903%" y="735.50">[un..</text></g><g><title>[unknown] (38 samples, 3.19%)</title><rect x="31.0403%" y="709" width="3.1879%" height="15" fill="rgb(236,54,3)" fg:x="370" fg:w="38"/><text x="31.2903%" y="719.50">[un..</text></g><g><title>[unknown] (38 samples, 3.19%)</title><rect x="31.0403%" y="693" width="3.1879%" height="15" fill="rgb(241,173,43)" fg:x="370" fg:w="38"/><text x="31.2903%" y="703.50">[un..</text></g><g><title>[unknown] (38 samples, 3.19%)</title><rect x="31.0403%" y="677" width="3.1879%" height="15" fill="rgb(215,190,9)" fg:x="370" fg:w="38"/><text x="31.2903%" y="687.50">[un..</text></g><g><title>[unknown] (36 samples, 3.02%)</title><rect x="31.2081%" y="661" width="3.0201%" height="15" fill="rgb(242,101,16)" fg:x="372" fg:w="36"/><text x="31.4581%" y="671.50">[un..</text></g><g><title>[unknown] (35 samples, 2.94%)</title><rect x="31.2919%" y="645" width="2.9362%" height="15" fill="rgb(223,190,21)" fg:x="373" fg:w="35"/><text x="31.5419%" y="655.50">[u..</text></g><g><title>[unknown] (29 samples, 2.43%)</title><rect x="31.7953%" y="629" width="2.4329%" height="15" fill="rgb(215,228,25)" fg:x="379" fg:w="29"/><text x="32.0453%" y="639.50">[u..</text></g><g><title>[unknown] (26 samples, 2.18%)</title><rect x="32.0470%" y="613" width="2.1812%" height="15" fill="rgb(225,36,22)" fg:x="382" fg:w="26"/><text x="32.2970%" y="623.50">[..</text></g><g><title>[unknown] (20 samples, 1.68%)</title><rect x="32.5503%" y="597" width="1.6779%" height="15" fill="rgb(251,106,46)" fg:x="388" fg:w="20"/><text x="32.8003%" y="607.50"></text></g><g><title>[unknown] (19 samples, 1.59%)</title><rect x="32.6342%" y="581" width="1.5940%" height="15" fill="rgb(208,90,1)" fg:x="389" fg:w="19"/><text x="32.8842%" y="591.50"></text></g><g><title>[unknown] (18 samples, 1.51%)</title><rect x="32.7181%" y="565" width="1.5101%" height="15" fill="rgb(243,10,4)" fg:x="390" fg:w="18"/><text x="32.9681%" y="575.50"></text></g><g><title>[unknown] (16 samples, 1.34%)</title><rect x="32.8859%" y="549" width="1.3423%" height="15" fill="rgb(212,137,27)" fg:x="392" fg:w="16"/><text x="33.1359%" y="559.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="33.1376%" y="533" width="1.0906%" height="15" fill="rgb(231,220,49)" fg:x="395" fg:w="13"/><text x="33.3876%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="33.6409%" y="517" width="0.5872%" height="15" fill="rgb(237,96,20)" fg:x="401" fg:w="7"/><text x="33.8909%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="33.8926%" y="501" width="0.3356%" height="15" fill="rgb(239,229,30)" fg:x="404" fg:w="4"/><text x="34.1426%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="33.8926%" y="485" width="0.3356%" height="15" fill="rgb(219,65,33)" fg:x="404" fg:w="4"/><text x="34.1426%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="33.9765%" y="469" width="0.2517%" height="15" fill="rgb(243,134,7)" fg:x="405" fg:w="3"/><text x="34.2265%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="34.0604%" y="453" width="0.1678%" height="15" fill="rgb(216,177,54)" fg:x="406" fg:w="2"/><text x="34.3104%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.08%)</title><rect x="34.2282%" y="901" width="0.0839%" height="15" fill="rgb(211,160,20)" fg:x="408" fg:w="1"/><text x="34.4782%" y="911.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::new (3 samples, 0.25%)</title><rect x="34.2282%" y="1061" width="0.2517%" height="15" fill="rgb(239,85,39)" fg:x="408" fg:w="3"/><text x="34.4782%" y="1071.50"></text></g><g><title>std::io::buffered::bufreader::BufReader&lt;R&gt;::with_capacity (3 samples, 0.25%)</title><rect x="34.2282%" y="1045" width="0.2517%" height="15" fill="rgb(232,125,22)" fg:x="408" fg:w="3"/><text x="34.4782%" y="1055.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::with_capacity (3 samples, 0.25%)</title><rect x="34.2282%" y="1029" width="0.2517%" height="15" fill="rgb(244,57,34)" fg:x="408" fg:w="3"/><text x="34.4782%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;[T]&gt;::new_uninit_slice (3 samples, 0.25%)</title><rect x="34.2282%" y="1013" width="0.2517%" height="15" fill="rgb(214,203,32)" fg:x="408" fg:w="3"/><text x="34.4782%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.25%)</title><rect x="34.2282%" y="997" width="0.2517%" height="15" fill="rgb(207,58,43)" fg:x="408" fg:w="3"/><text x="34.4782%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.25%)</title><rect x="34.2282%" y="981" width="0.2517%" height="15" fill="rgb(215,193,15)" fg:x="408" fg:w="3"/><text x="34.4782%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.25%)</title><rect x="34.2282%" y="965" width="0.2517%" height="15" fill="rgb(232,15,44)" fg:x="408" fg:w="3"/><text x="34.4782%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.25%)</title><rect x="34.2282%" y="949" width="0.2517%" height="15" fill="rgb(212,3,48)" fg:x="408" fg:w="3"/><text x="34.4782%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.25%)</title><rect x="34.2282%" y="933" width="0.2517%" height="15" fill="rgb(218,128,7)" fg:x="408" fg:w="3"/><text x="34.4782%" y="943.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.25%)</title><rect x="34.2282%" y="917" width="0.2517%" height="15" fill="rgb(226,216,39)" fg:x="408" fg:w="3"/><text x="34.4782%" y="927.50"></text></g><g><title>malloc (2 samples, 0.17%)</title><rect x="34.3121%" y="901" width="0.1678%" height="15" fill="rgb(243,47,51)" fg:x="409" fg:w="2"/><text x="34.5621%" y="911.50"></text></g><g><title>[libc.so.6] (2 samples, 0.17%)</title><rect x="34.3121%" y="885" width="0.1678%" height="15" fill="rgb(241,183,40)" fg:x="409" fg:w="2"/><text x="34.5621%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="34.3121%" y="869" width="0.1678%" height="15" fill="rgb(231,217,32)" fg:x="409" fg:w="2"/><text x="34.5621%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="34.3121%" y="853" width="0.1678%" height="15" fill="rgb(229,61,38)" fg:x="409" fg:w="2"/><text x="34.5621%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="34.3121%" y="837" width="0.1678%" height="15" fill="rgb(225,210,5)" fg:x="409" fg:w="2"/><text x="34.5621%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="34.3121%" y="821" width="0.1678%" height="15" fill="rgb(231,79,45)" fg:x="409" fg:w="2"/><text x="34.5621%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="34.3121%" y="805" width="0.1678%" height="15" fill="rgb(224,100,7)" fg:x="409" fg:w="2"/><text x="34.5621%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3960%" y="789" width="0.0839%" height="15" fill="rgb(241,198,18)" fg:x="410" fg:w="1"/><text x="34.6460%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3960%" y="773" width="0.0839%" height="15" fill="rgb(252,97,53)" fg:x="410" fg:w="1"/><text x="34.6460%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3960%" y="757" width="0.0839%" height="15" fill="rgb(220,88,7)" fg:x="410" fg:w="1"/><text x="34.6460%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3960%" y="741" width="0.0839%" height="15" fill="rgb(213,176,14)" fg:x="410" fg:w="1"/><text x="34.6460%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3960%" y="725" width="0.0839%" height="15" fill="rgb(246,73,7)" fg:x="410" fg:w="1"/><text x="34.6460%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.3960%" y="709" width="0.0839%" height="15" fill="rgb(245,64,36)" fg:x="410" fg:w="1"/><text x="34.6460%" y="719.50"></text></g><g><title>__poll (2 samples, 0.17%)</title><rect x="34.4799%" y="1013" width="0.1678%" height="15" fill="rgb(245,80,10)" fg:x="411" fg:w="2"/><text x="34.7299%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.5638%" y="997" width="0.0839%" height="15" fill="rgb(232,107,50)" fg:x="412" fg:w="1"/><text x="34.8138%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.5638%" y="981" width="0.0839%" height="15" fill="rgb(253,3,0)" fg:x="412" fg:w="1"/><text x="34.8138%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.5638%" y="965" width="0.0839%" height="15" fill="rgb(212,99,53)" fg:x="412" fg:w="1"/><text x="34.8138%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="34.5638%" y="949" width="0.0839%" height="15" fill="rgb(249,111,54)" fg:x="412" fg:w="1"/><text x="34.8138%" y="959.50"></text></g><g><title>connect (11 samples, 0.92%)</title><rect x="34.6477%" y="1013" width="0.9228%" height="15" fill="rgb(249,55,30)" fg:x="413" fg:w="11"/><text x="34.8977%" y="1023.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="34.6477%" y="997" width="0.9228%" height="15" fill="rgb(237,47,42)" fg:x="413" fg:w="11"/><text x="34.8977%" y="1007.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="34.6477%" y="981" width="0.9228%" height="15" fill="rgb(211,20,18)" fg:x="413" fg:w="11"/><text x="34.8977%" y="991.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="34.6477%" y="965" width="0.9228%" height="15" fill="rgb(231,203,46)" fg:x="413" fg:w="11"/><text x="34.8977%" y="975.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="34.6477%" y="949" width="0.9228%" height="15" fill="rgb(237,142,3)" fg:x="413" fg:w="11"/><text x="34.8977%" y="959.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="34.6477%" y="933" width="0.9228%" height="15" fill="rgb(241,107,1)" fg:x="413" fg:w="11"/><text x="34.8977%" y="943.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="34.6477%" y="917" width="0.9228%" height="15" fill="rgb(229,83,13)" fg:x="413" fg:w="11"/><text x="34.8977%" y="927.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="34.6477%" y="901" width="0.9228%" height="15" fill="rgb(241,91,40)" fg:x="413" fg:w="11"/><text x="34.8977%" y="911.50"></text></g><g><title>[unknown] (11 samples, 0.92%)</title><rect x="34.6477%" y="885" width="0.9228%" height="15" fill="rgb(225,3,45)" fg:x="413" fg:w="11"/><text x="34.8977%" y="895.50"></text></g><g><title>[unknown] (10 samples, 0.84%)</title><rect x="34.7315%" y="869" width="0.8389%" height="15" fill="rgb(244,223,14)" fg:x="414" fg:w="10"/><text x="34.9815%" y="879.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="34.8993%" y="853" width="0.6711%" height="15" fill="rgb(224,124,37)" fg:x="416" fg:w="8"/><text x="35.1493%" y="863.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="34.8993%" y="837" width="0.6711%" height="15" fill="rgb(251,171,30)" fg:x="416" fg:w="8"/><text x="35.1493%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="34.8993%" y="821" width="0.6711%" height="15" fill="rgb(236,46,54)" fg:x="416" fg:w="8"/><text x="35.1493%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="34.8993%" y="805" width="0.6711%" height="15" fill="rgb(245,213,5)" fg:x="416" fg:w="8"/><text x="35.1493%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="34.8993%" y="789" width="0.6711%" height="15" fill="rgb(230,144,27)" fg:x="416" fg:w="8"/><text x="35.1493%" y="799.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="34.8993%" y="773" width="0.6711%" height="15" fill="rgb(220,86,6)" fg:x="416" fg:w="8"/><text x="35.1493%" y="783.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="34.8993%" y="757" width="0.6711%" height="15" fill="rgb(240,20,13)" fg:x="416" fg:w="8"/><text x="35.1493%" y="767.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="34.8993%" y="741" width="0.6711%" height="15" fill="rgb(217,89,34)" fg:x="416" fg:w="8"/><text x="35.1493%" y="751.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="34.9832%" y="725" width="0.5872%" height="15" fill="rgb(229,13,5)" fg:x="417" fg:w="7"/><text x="35.2332%" y="735.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="34.9832%" y="709" width="0.5872%" height="15" fill="rgb(244,67,35)" fg:x="417" fg:w="7"/><text x="35.2332%" y="719.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="34.9832%" y="693" width="0.5872%" height="15" fill="rgb(221,40,2)" fg:x="417" fg:w="7"/><text x="35.2332%" y="703.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="34.9832%" y="677" width="0.5872%" height="15" fill="rgb(237,157,21)" fg:x="417" fg:w="7"/><text x="35.2332%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="34.9832%" y="661" width="0.5872%" height="15" fill="rgb(222,94,11)" fg:x="417" fg:w="7"/><text x="35.2332%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="35.0671%" y="645" width="0.5034%" height="15" fill="rgb(249,113,6)" fg:x="418" fg:w="6"/><text x="35.3171%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="35.2349%" y="629" width="0.3356%" height="15" fill="rgb(238,137,36)" fg:x="420" fg:w="4"/><text x="35.4849%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="35.3188%" y="613" width="0.2517%" height="15" fill="rgb(210,102,26)" fg:x="421" fg:w="3"/><text x="35.5688%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="35.3188%" y="597" width="0.2517%" height="15" fill="rgb(218,30,30)" fg:x="421" fg:w="3"/><text x="35.5688%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="35.4027%" y="581" width="0.1678%" height="15" fill="rgb(214,67,26)" fg:x="422" fg:w="2"/><text x="35.6527%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="35.4027%" y="565" width="0.1678%" height="15" fill="rgb(251,9,53)" fg:x="422" fg:w="2"/><text x="35.6527%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4866%" y="549" width="0.0839%" height="15" fill="rgb(228,204,25)" fg:x="423" fg:w="1"/><text x="35.7366%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4866%" y="533" width="0.0839%" height="15" fill="rgb(207,153,8)" fg:x="423" fg:w="1"/><text x="35.7366%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4866%" y="517" width="0.0839%" height="15" fill="rgb(242,9,16)" fg:x="423" fg:w="1"/><text x="35.7366%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4866%" y="501" width="0.0839%" height="15" fill="rgb(217,211,10)" fg:x="423" fg:w="1"/><text x="35.7366%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4866%" y="485" width="0.0839%" height="15" fill="rgb(219,228,52)" fg:x="423" fg:w="1"/><text x="35.7366%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.4866%" y="469" width="0.0839%" height="15" fill="rgb(231,92,29)" fg:x="423" fg:w="1"/><text x="35.7366%" y="479.50"></text></g><g><title>std::net::tcp::TcpStream::connect_timeout (14 samples, 1.17%)</title><rect x="34.4799%" y="1061" width="1.1745%" height="15" fill="rgb(232,8,23)" fg:x="411" fg:w="14"/><text x="34.7299%" y="1071.50"></text></g><g><title>std::sys_common::net::TcpStream::connect_timeout (14 samples, 1.17%)</title><rect x="34.4799%" y="1045" width="1.1745%" height="15" fill="rgb(216,211,34)" fg:x="411" fg:w="14"/><text x="34.7299%" y="1055.50"></text></g><g><title>std::sys::unix::net::Socket::connect_timeout (14 samples, 1.17%)</title><rect x="34.4799%" y="1029" width="1.1745%" height="15" fill="rgb(236,151,0)" fg:x="411" fg:w="14"/><text x="34.7299%" y="1039.50"></text></g><g><title>std::sys::unix::net::Socket::set_nonblocking (1 samples, 0.08%)</title><rect x="35.5705%" y="1013" width="0.0839%" height="15" fill="rgb(209,168,3)" fg:x="424" fg:w="1"/><text x="35.8205%" y="1023.50"></text></g><g><title>__socket (1 samples, 0.08%)</title><rect x="35.5705%" y="997" width="0.0839%" height="15" fill="rgb(208,129,28)" fg:x="424" fg:w="1"/><text x="35.8205%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="35.5705%" y="981" width="0.0839%" height="15" fill="rgb(229,78,22)" fg:x="424" fg:w="1"/><text x="35.8205%" y="991.50"></text></g><g><title>&lt;bitcoincore_rpc::client::Client as bridge::chaininterface::Blockchain&gt;::get_block_hash (117 samples, 9.82%)</title><rect x="26.0067%" y="1157" width="9.8154%" height="15" fill="rgb(228,187,13)" fg:x="310" fg:w="117"/><text x="26.2567%" y="1167.50">&lt;bitcoincore_r..</text></g><g><title>bitcoincore_rpc::client::RpcApi::get_block_hash (117 samples, 9.82%)</title><rect x="26.0067%" y="1141" width="9.8154%" height="15" fill="rgb(240,119,24)" fg:x="310" fg:w="117"/><text x="26.2567%" y="1151.50">bitcoincore_rp..</text></g><g><title>&lt;bitcoincore_rpc::client::Client as bitcoincore_rpc::client::RpcApi&gt;::call (117 samples, 9.82%)</title><rect x="26.0067%" y="1125" width="9.8154%" height="15" fill="rgb(209,194,42)" fg:x="310" fg:w="117"/><text x="26.2567%" y="1135.50">&lt;bitcoincore_r..</text></g><g><title>jsonrpc::client::Client::send_request (115 samples, 9.65%)</title><rect x="26.1745%" y="1109" width="9.6477%" height="15" fill="rgb(247,200,46)" fg:x="312" fg:w="115"/><text x="26.4245%" y="1119.50">jsonrpc::clien..</text></g><g><title>&lt;jsonrpc::simple_http::SimpleHttpTransport as jsonrpc::client::Transport&gt;::send_request (115 samples, 9.65%)</title><rect x="26.1745%" y="1093" width="9.6477%" height="15" fill="rgb(218,76,16)" fg:x="312" fg:w="115"/><text x="26.4245%" y="1103.50">&lt;jsonrpc::simp..</text></g><g><title>jsonrpc::simple_http::SimpleHttpTransport::request (115 samples, 9.65%)</title><rect x="26.1745%" y="1077" width="9.6477%" height="15" fill="rgb(225,21,48)" fg:x="312" fg:w="115"/><text x="26.4245%" y="1087.50">jsonrpc::simpl..</text></g><g><title>std::os::unix::net::stream::UnixStream::set_write_timeout (2 samples, 0.17%)</title><rect x="35.6544%" y="1061" width="0.1678%" height="15" fill="rgb(239,223,50)" fg:x="425" fg:w="2"/><text x="35.9044%" y="1071.50"></text></g><g><title>std::sys::unix::net::Socket::set_timeout (2 samples, 0.17%)</title><rect x="35.6544%" y="1045" width="0.1678%" height="15" fill="rgb(244,45,21)" fg:x="425" fg:w="2"/><text x="35.9044%" y="1055.50"></text></g><g><title>std::sys_common::net::setsockopt (2 samples, 0.17%)</title><rect x="35.6544%" y="1029" width="0.1678%" height="15" fill="rgb(232,33,43)" fg:x="425" fg:w="2"/><text x="35.9044%" y="1039.50"></text></g><g><title>setsockopt (2 samples, 0.17%)</title><rect x="35.6544%" y="1013" width="0.1678%" height="15" fill="rgb(209,8,3)" fg:x="425" fg:w="2"/><text x="35.9044%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="35.6544%" y="997" width="0.1678%" height="15" fill="rgb(214,25,53)" fg:x="425" fg:w="2"/><text x="35.9044%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="35.6544%" y="981" width="0.1678%" height="15" fill="rgb(254,186,54)" fg:x="425" fg:w="2"/><text x="35.9044%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="35.6544%" y="965" width="0.1678%" height="15" fill="rgb(208,174,49)" fg:x="425" fg:w="2"/><text x="35.9044%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="35.6544%" y="949" width="0.1678%" height="15" fill="rgb(233,191,51)" fg:x="425" fg:w="2"/><text x="35.9044%" y="959.50"></text></g><g><title>bitcoin::blockdata::block::Block::block_hash (1 samples, 0.08%)</title><rect x="35.8221%" y="1157" width="0.0839%" height="15" fill="rgb(222,134,10)" fg:x="427" fg:w="1"/><text x="36.0721%" y="1167.50"></text></g><g><title>bitcoin::blockdata::block::BlockHeader::block_hash (1 samples, 0.08%)</title><rect x="35.8221%" y="1141" width="0.0839%" height="15" fill="rgb(230,226,20)" fg:x="427" fg:w="1"/><text x="36.0721%" y="1151.50"></text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="35.8221%" y="1125" width="0.0839%" height="15" fill="rgb(251,111,25)" fg:x="427" fg:w="1"/><text x="36.0721%" y="1135.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="35.8221%" y="1109" width="0.0839%" height="15" fill="rgb(224,40,46)" fg:x="427" fg:w="1"/><text x="36.0721%" y="1119.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="35.8221%" y="1093" width="0.0839%" height="15" fill="rgb(236,108,47)" fg:x="427" fg:w="1"/><text x="36.0721%" y="1103.50"></text></g><g><title>sled::pagecache::PageCache::link (1 samples, 0.08%)</title><rect x="35.9060%" y="1093" width="0.0839%" height="15" fill="rgb(234,93,0)" fg:x="428" fg:w="1"/><text x="36.1560%" y="1103.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9060%" y="1077" width="0.0839%" height="15" fill="rgb(224,213,32)" fg:x="428" fg:w="1"/><text x="36.1560%" y="1087.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9060%" y="1061" width="0.0839%" height="15" fill="rgb(251,11,48)" fg:x="428" fg:w="1"/><text x="36.1560%" y="1071.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9060%" y="1045" width="0.0839%" height="15" fill="rgb(236,173,5)" fg:x="428" fg:w="1"/><text x="36.1560%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9060%" y="1029" width="0.0839%" height="15" fill="rgb(230,95,12)" fg:x="428" fg:w="1"/><text x="36.1560%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.9060%" y="1013" width="0.0839%" height="15" fill="rgb(232,209,1)" fg:x="428" fg:w="1"/><text x="36.1560%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.9060%" y="997" width="0.0839%" height="15" fill="rgb(232,6,1)" fg:x="428" fg:w="1"/><text x="36.1560%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.9060%" y="981" width="0.0839%" height="15" fill="rgb(210,224,50)" fg:x="428" fg:w="1"/><text x="36.1560%" y="991.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9060%" y="965" width="0.0839%" height="15" fill="rgb(228,127,35)" fg:x="428" fg:w="1"/><text x="36.1560%" y="975.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9060%" y="949" width="0.0839%" height="15" fill="rgb(245,102,45)" fg:x="428" fg:w="1"/><text x="36.1560%" y="959.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9060%" y="933" width="0.0839%" height="15" fill="rgb(214,1,49)" fg:x="428" fg:w="1"/><text x="36.1560%" y="943.50"></text></g><g><title>&lt;sled::tree::View as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="35.9899%" y="1077" width="0.0839%" height="15" fill="rgb(226,163,40)" fg:x="429" fg:w="1"/><text x="36.2399%" y="1087.50"></text></g><g><title>&lt;sled::pagecache::NodeView as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="35.9899%" y="1061" width="0.0839%" height="15" fill="rgb(239,212,28)" fg:x="429" fg:w="1"/><text x="36.2399%" y="1071.50"></text></g><g><title>sled::pagecache::Page::as_node (1 samples, 0.08%)</title><rect x="35.9899%" y="1045" width="0.0839%" height="15" fill="rgb(220,20,13)" fg:x="429" fg:w="1"/><text x="36.2399%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.08%)</title><rect x="35.9899%" y="1029" width="0.0839%" height="15" fill="rgb(210,164,35)" fg:x="429" fg:w="1"/><text x="36.2399%" y="1039.50"></text></g><g><title>bridge::chainview::ChainView::save_block_hash (3 samples, 0.25%)</title><rect x="35.9060%" y="1157" width="0.2517%" height="15" fill="rgb(248,109,41)" fg:x="428" fg:w="3"/><text x="36.1560%" y="1167.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (3 samples, 0.25%)</title><rect x="35.9060%" y="1141" width="0.2517%" height="15" fill="rgb(238,23,50)" fg:x="428" fg:w="3"/><text x="36.1560%" y="1151.50"></text></g><g><title>sled::tree::Tree::insert (3 samples, 0.25%)</title><rect x="35.9060%" y="1125" width="0.2517%" height="15" fill="rgb(211,48,49)" fg:x="428" fg:w="3"/><text x="36.1560%" y="1135.50"></text></g><g><title>sled::tree::Tree::insert_inner (3 samples, 0.25%)</title><rect x="35.9060%" y="1109" width="0.2517%" height="15" fill="rgb(223,36,21)" fg:x="428" fg:w="3"/><text x="36.1560%" y="1119.50"></text></g><g><title>sled::tree::Tree::view_for_key (2 samples, 0.17%)</title><rect x="35.9899%" y="1093" width="0.1678%" height="15" fill="rgb(207,123,46)" fg:x="429" fg:w="2"/><text x="36.2399%" y="1103.50"></text></g><g><title>sled::tree::Tree::view_for_pid (1 samples, 0.08%)</title><rect x="36.0738%" y="1077" width="0.0839%" height="15" fill="rgb(240,218,32)" fg:x="430" fg:w="1"/><text x="36.3238%" y="1087.50"></text></g><g><title>sled::pagecache::PageCache::get (1 samples, 0.08%)</title><rect x="36.0738%" y="1061" width="0.0839%" height="15" fill="rgb(252,5,43)" fg:x="430" fg:w="1"/><text x="36.3238%" y="1071.50"></text></g><g><title>sled::pagecache::pagetable::PageTable::get (1 samples, 0.08%)</title><rect x="36.0738%" y="1045" width="0.0839%" height="15" fill="rgb(252,84,19)" fg:x="430" fg:w="1"/><text x="36.3238%" y="1055.50"></text></g><g><title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1577%" y="1077" width="0.0839%" height="15" fill="rgb(243,152,39)" fg:x="431" fg:w="1"/><text x="36.4077%" y="1087.50"></text></g><g><title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1577%" y="1061" width="0.0839%" height="15" fill="rgb(234,160,15)" fg:x="431" fg:w="1"/><text x="36.4077%" y="1071.50"></text></g><g><title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1577%" y="1045" width="0.0839%" height="15" fill="rgb(237,34,20)" fg:x="431" fg:w="1"/><text x="36.4077%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1577%" y="1029" width="0.0839%" height="15" fill="rgb(229,97,13)" fg:x="431" fg:w="1"/><text x="36.4077%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.1577%" y="1013" width="0.0839%" height="15" fill="rgb(234,71,50)" fg:x="431" fg:w="1"/><text x="36.4077%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.1577%" y="997" width="0.0839%" height="15" fill="rgb(253,155,4)" fg:x="431" fg:w="1"/><text x="36.4077%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.1577%" y="981" width="0.0839%" height="15" fill="rgb(222,185,37)" fg:x="431" fg:w="1"/><text x="36.4077%" y="991.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1577%" y="965" width="0.0839%" height="15" fill="rgb(251,177,13)" fg:x="431" fg:w="1"/><text x="36.4077%" y="975.50"></text></g><g><title>&lt;sled::ivec::IVecInner as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1577%" y="949" width="0.0839%" height="15" fill="rgb(250,179,40)" fg:x="431" fg:w="1"/><text x="36.4077%" y="959.50"></text></g><g><title>sled::pagecache::PageCache::link (2 samples, 0.17%)</title><rect x="36.1577%" y="1093" width="0.1678%" height="15" fill="rgb(242,44,2)" fg:x="431" fg:w="2"/><text x="36.4077%" y="1103.50"></text></g><g><title>sled::pagecache::logger::Log::reserve (1 samples, 0.08%)</title><rect x="36.2416%" y="1077" width="0.0839%" height="15" fill="rgb(216,177,13)" fg:x="432" fg:w="1"/><text x="36.4916%" y="1087.50"></text></g><g><title>sled::pagecache::logger::Log::reserve_inner (1 samples, 0.08%)</title><rect x="36.2416%" y="1061" width="0.0839%" height="15" fill="rgb(216,106,43)" fg:x="432" fg:w="1"/><text x="36.4916%" y="1071.50"></text></g><g><title>sled::pagecache::iobuf::IoBuf::get_mut_range (1 samples, 0.08%)</title><rect x="36.2416%" y="1045" width="0.0839%" height="15" fill="rgb(216,183,2)" fg:x="432" fg:w="1"/><text x="36.4916%" y="1055.50"></text></g><g><title>bridge::chainview::ChainView::save_header (3 samples, 0.25%)</title><rect x="36.1577%" y="1157" width="0.2517%" height="15" fill="rgb(249,75,3)" fg:x="431" fg:w="3"/><text x="36.4077%" y="1167.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (3 samples, 0.25%)</title><rect x="36.1577%" y="1141" width="0.2517%" height="15" fill="rgb(219,67,39)" fg:x="431" fg:w="3"/><text x="36.4077%" y="1151.50"></text></g><g><title>sled::tree::Tree::insert (3 samples, 0.25%)</title><rect x="36.1577%" y="1125" width="0.2517%" height="15" fill="rgb(253,228,2)" fg:x="431" fg:w="3"/><text x="36.4077%" y="1135.50"></text></g><g><title>sled::tree::Tree::insert_inner (3 samples, 0.25%)</title><rect x="36.1577%" y="1109" width="0.2517%" height="15" fill="rgb(235,138,27)" fg:x="431" fg:w="3"/><text x="36.4077%" y="1119.50"></text></g><g><title>sled::tree::Tree::view_for_key (1 samples, 0.08%)</title><rect x="36.3255%" y="1093" width="0.0839%" height="15" fill="rgb(236,97,51)" fg:x="433" fg:w="1"/><text x="36.5755%" y="1103.50"></text></g><g><title>sled::tree::Tree::split_node (1 samples, 0.08%)</title><rect x="36.3255%" y="1077" width="0.0839%" height="15" fill="rgb(240,80,30)" fg:x="433" fg:w="1"/><text x="36.5755%" y="1087.50"></text></g><g><title>sled::node::Node::parent_split (1 samples, 0.08%)</title><rect x="36.3255%" y="1061" width="0.0839%" height="15" fill="rgb(230,178,19)" fg:x="433" fg:w="1"/><text x="36.5755%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (1 samples, 0.08%)</title><rect x="36.3255%" y="1045" width="0.0839%" height="15" fill="rgb(210,190,27)" fg:x="433" fg:w="1"/><text x="36.5755%" y="1055.50"></text></g><g><title>sled::pagecache::PageCache::link (1 samples, 0.08%)</title><rect x="36.4933%" y="1093" width="0.0839%" height="15" fill="rgb(222,107,31)" fg:x="435" fg:w="1"/><text x="36.7433%" y="1103.50"></text></g><g><title>sled::node::Node::apply (1 samples, 0.08%)</title><rect x="36.4933%" y="1077" width="0.0839%" height="15" fill="rgb(216,127,34)" fg:x="435" fg:w="1"/><text x="36.7433%" y="1087.50"></text></g><g><title>&lt;sled::ivec::IVec as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.4933%" y="1061" width="0.0839%" height="15" fill="rgb(234,116,52)" fg:x="435" fg:w="1"/><text x="36.7433%" y="1071.50"></text></g><g><title>bridge::chainview::ChainView::save_height (3 samples, 0.25%)</title><rect x="36.4094%" y="1157" width="0.2517%" height="15" fill="rgb(222,124,15)" fg:x="434" fg:w="3"/><text x="36.6594%" y="1167.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (3 samples, 0.25%)</title><rect x="36.4094%" y="1141" width="0.2517%" height="15" fill="rgb(231,179,28)" fg:x="434" fg:w="3"/><text x="36.6594%" y="1151.50"></text></g><g><title>sled::tree::Tree::insert (3 samples, 0.25%)</title><rect x="36.4094%" y="1125" width="0.2517%" height="15" fill="rgb(226,93,45)" fg:x="434" fg:w="3"/><text x="36.6594%" y="1135.50"></text></g><g><title>sled::tree::Tree::insert_inner (2 samples, 0.17%)</title><rect x="36.4933%" y="1109" width="0.1678%" height="15" fill="rgb(215,8,51)" fg:x="435" fg:w="2"/><text x="36.7433%" y="1119.50"></text></g><g><title>sled::tree::Tree::view_for_key (1 samples, 0.08%)</title><rect x="36.5772%" y="1093" width="0.0839%" height="15" fill="rgb(223,106,5)" fg:x="436" fg:w="1"/><text x="36.8272%" y="1103.50"></text></g><g><title>sled::node::Node::index_next_node (1 samples, 0.08%)</title><rect x="36.5772%" y="1077" width="0.0839%" height="15" fill="rgb(250,191,5)" fg:x="436" fg:w="1"/><text x="36.8272%" y="1087.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="36.6611%" y="1029" width="0.1678%" height="15" fill="rgb(242,132,44)" fg:x="437" fg:w="2"/><text x="36.9111%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="36.6611%" y="1013" width="0.1678%" height="15" fill="rgb(251,152,29)" fg:x="437" fg:w="2"/><text x="36.9111%" y="1023.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (2 samples, 0.17%)</title><rect x="36.6611%" y="997" width="0.1678%" height="15" fill="rgb(218,179,5)" fg:x="437" fg:w="2"/><text x="36.9111%" y="1007.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="36.6611%" y="981" width="0.1678%" height="15" fill="rgb(227,67,19)" fg:x="437" fg:w="2"/><text x="36.9111%" y="991.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="36.6611%" y="965" width="0.1678%" height="15" fill="rgb(233,119,31)" fg:x="437" fg:w="2"/><text x="36.9111%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (2 samples, 0.17%)</title><rect x="36.6611%" y="949" width="0.1678%" height="15" fill="rgb(241,120,22)" fg:x="437" fg:w="2"/><text x="36.9111%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.17%)</title><rect x="36.6611%" y="933" width="0.1678%" height="15" fill="rgb(224,102,30)" fg:x="437" fg:w="2"/><text x="36.9111%" y="943.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="36.6611%" y="917" width="0.1678%" height="15" fill="rgb(210,164,37)" fg:x="437" fg:w="2"/><text x="36.9111%" y="927.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="36.6611%" y="901" width="0.1678%" height="15" fill="rgb(226,191,16)" fg:x="437" fg:w="2"/><text x="36.9111%" y="911.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="36.6611%" y="885" width="0.1678%" height="15" fill="rgb(214,40,45)" fg:x="437" fg:w="2"/><text x="36.9111%" y="895.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.17%)</title><rect x="36.6611%" y="869" width="0.1678%" height="15" fill="rgb(244,29,26)" fg:x="437" fg:w="2"/><text x="36.9111%" y="879.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.17%)</title><rect x="36.6611%" y="853" width="0.1678%" height="15" fill="rgb(216,16,5)" fg:x="437" fg:w="2"/><text x="36.9111%" y="863.50"></text></g><g><title>write (2 samples, 0.17%)</title><rect x="36.6611%" y="837" width="0.1678%" height="15" fill="rgb(249,76,35)" fg:x="437" fg:w="2"/><text x="36.9111%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="36.6611%" y="821" width="0.1678%" height="15" fill="rgb(207,11,44)" fg:x="437" fg:w="2"/><text x="36.9111%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="36.6611%" y="805" width="0.1678%" height="15" fill="rgb(228,190,49)" fg:x="437" fg:w="2"/><text x="36.9111%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="36.6611%" y="789" width="0.1678%" height="15" fill="rgb(214,173,12)" fg:x="437" fg:w="2"/><text x="36.9111%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="36.6611%" y="773" width="0.1678%" height="15" fill="rgb(218,26,35)" fg:x="437" fg:w="2"/><text x="36.9111%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="36.6611%" y="757" width="0.1678%" height="15" fill="rgb(220,200,19)" fg:x="437" fg:w="2"/><text x="36.9111%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7450%" y="741" width="0.0839%" height="15" fill="rgb(239,95,49)" fg:x="438" fg:w="1"/><text x="36.9950%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7450%" y="725" width="0.0839%" height="15" fill="rgb(235,85,53)" fg:x="438" fg:w="1"/><text x="36.9950%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7450%" y="709" width="0.0839%" height="15" fill="rgb(233,133,31)" fg:x="438" fg:w="1"/><text x="36.9950%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7450%" y="693" width="0.0839%" height="15" fill="rgb(218,25,20)" fg:x="438" fg:w="1"/><text x="36.9950%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7450%" y="677" width="0.0839%" height="15" fill="rgb(252,210,38)" fg:x="438" fg:w="1"/><text x="36.9950%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7450%" y="661" width="0.0839%" height="15" fill="rgb(242,134,21)" fg:x="438" fg:w="1"/><text x="36.9950%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7450%" y="645" width="0.0839%" height="15" fill="rgb(213,28,48)" fg:x="438" fg:w="1"/><text x="36.9950%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.7450%" y="629" width="0.0839%" height="15" fill="rgb(250,196,2)" fg:x="438" fg:w="1"/><text x="36.9950%" y="639.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (3 samples, 0.25%)</title><rect x="36.8289%" y="1013" width="0.2517%" height="15" fill="rgb(227,5,17)" fg:x="439" fg:w="3"/><text x="37.0789%" y="1023.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (3 samples, 0.25%)</title><rect x="36.8289%" y="997" width="0.2517%" height="15" fill="rgb(221,226,24)" fg:x="439" fg:w="3"/><text x="37.0789%" y="1007.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (3 samples, 0.25%)</title><rect x="36.8289%" y="981" width="0.2517%" height="15" fill="rgb(211,5,48)" fg:x="439" fg:w="3"/><text x="37.0789%" y="991.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (3 samples, 0.25%)</title><rect x="36.8289%" y="965" width="0.2517%" height="15" fill="rgb(219,150,6)" fg:x="439" fg:w="3"/><text x="37.0789%" y="975.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="36.8289%" y="949" width="0.2517%" height="15" fill="rgb(251,46,16)" fg:x="439" fg:w="3"/><text x="37.0789%" y="959.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="36.8289%" y="933" width="0.2517%" height="15" fill="rgb(220,204,40)" fg:x="439" fg:w="3"/><text x="37.0789%" y="943.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="36.8289%" y="917" width="0.2517%" height="15" fill="rgb(211,85,2)" fg:x="439" fg:w="3"/><text x="37.0789%" y="927.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.25%)</title><rect x="36.8289%" y="901" width="0.2517%" height="15" fill="rgb(229,17,7)" fg:x="439" fg:w="3"/><text x="37.0789%" y="911.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.25%)</title><rect x="36.8289%" y="885" width="0.2517%" height="15" fill="rgb(239,72,28)" fg:x="439" fg:w="3"/><text x="37.0789%" y="895.50"></text></g><g><title>write (3 samples, 0.25%)</title><rect x="36.8289%" y="869" width="0.2517%" height="15" fill="rgb(230,47,54)" fg:x="439" fg:w="3"/><text x="37.0789%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="36.8289%" y="853" width="0.2517%" height="15" fill="rgb(214,50,8)" fg:x="439" fg:w="3"/><text x="37.0789%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="36.8289%" y="837" width="0.2517%" height="15" fill="rgb(216,198,43)" fg:x="439" fg:w="3"/><text x="37.0789%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="36.8289%" y="821" width="0.2517%" height="15" fill="rgb(234,20,35)" fg:x="439" fg:w="3"/><text x="37.0789%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="36.8289%" y="805" width="0.2517%" height="15" fill="rgb(254,45,19)" fg:x="439" fg:w="3"/><text x="37.0789%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="36.9128%" y="789" width="0.1678%" height="15" fill="rgb(219,14,44)" fg:x="440" fg:w="2"/><text x="37.1628%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.9966%" y="773" width="0.0839%" height="15" fill="rgb(217,220,26)" fg:x="441" fg:w="1"/><text x="37.2466%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.9966%" y="757" width="0.0839%" height="15" fill="rgb(213,158,28)" fg:x="441" fg:w="1"/><text x="37.2466%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.9966%" y="741" width="0.0839%" height="15" fill="rgb(252,51,52)" fg:x="441" fg:w="1"/><text x="37.2466%" y="751.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::OutPoint as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (4 samples, 0.34%)</title><rect x="36.8289%" y="1029" width="0.3356%" height="15" fill="rgb(246,89,16)" fg:x="439" fg:w="4"/><text x="37.0789%" y="1039.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="37.0805%" y="1013" width="0.0839%" height="15" fill="rgb(216,158,49)" fg:x="442" fg:w="1"/><text x="37.3305%" y="1023.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (1 samples, 0.08%)</title><rect x="37.0805%" y="997" width="0.0839%" height="15" fill="rgb(236,107,19)" fg:x="442" fg:w="1"/><text x="37.3305%" y="1007.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.0805%" y="981" width="0.0839%" height="15" fill="rgb(228,185,30)" fg:x="442" fg:w="1"/><text x="37.3305%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.0805%" y="965" width="0.0839%" height="15" fill="rgb(246,134,8)" fg:x="442" fg:w="1"/><text x="37.3305%" y="975.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.0805%" y="949" width="0.0839%" height="15" fill="rgb(214,143,50)" fg:x="442" fg:w="1"/><text x="37.3305%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="37.0805%" y="933" width="0.0839%" height="15" fill="rgb(228,75,8)" fg:x="442" fg:w="1"/><text x="37.3305%" y="943.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="37.0805%" y="917" width="0.0839%" height="15" fill="rgb(207,175,4)" fg:x="442" fg:w="1"/><text x="37.3305%" y="927.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="37.0805%" y="901" width="0.0839%" height="15" fill="rgb(205,108,24)" fg:x="442" fg:w="1"/><text x="37.3305%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="885" width="0.0839%" height="15" fill="rgb(244,120,49)" fg:x="442" fg:w="1"/><text x="37.3305%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="869" width="0.0839%" height="15" fill="rgb(223,47,38)" fg:x="442" fg:w="1"/><text x="37.3305%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="853" width="0.0839%" height="15" fill="rgb(229,179,11)" fg:x="442" fg:w="1"/><text x="37.3305%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="837" width="0.0839%" height="15" fill="rgb(231,122,1)" fg:x="442" fg:w="1"/><text x="37.3305%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="821" width="0.0839%" height="15" fill="rgb(245,119,9)" fg:x="442" fg:w="1"/><text x="37.3305%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="805" width="0.0839%" height="15" fill="rgb(241,163,25)" fg:x="442" fg:w="1"/><text x="37.3305%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="789" width="0.0839%" height="15" fill="rgb(217,214,3)" fg:x="442" fg:w="1"/><text x="37.3305%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="773" width="0.0839%" height="15" fill="rgb(240,86,28)" fg:x="442" fg:w="1"/><text x="37.3305%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="757" width="0.0839%" height="15" fill="rgb(215,47,9)" fg:x="442" fg:w="1"/><text x="37.3305%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.0805%" y="741" width="0.0839%" height="15" fill="rgb(252,25,45)" fg:x="442" fg:w="1"/><text x="37.3305%" y="751.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxIn as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (8 samples, 0.67%)</title><rect x="36.6611%" y="1045" width="0.6711%" height="15" fill="rgb(251,164,9)" fg:x="437" fg:w="8"/><text x="36.9111%" y="1055.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Sequence as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="37.1644%" y="1029" width="0.1678%" height="15" fill="rgb(233,194,0)" fg:x="443" fg:w="2"/><text x="37.4144%" y="1039.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="37.1644%" y="1013" width="0.1678%" height="15" fill="rgb(249,111,24)" fg:x="443" fg:w="2"/><text x="37.4144%" y="1023.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (2 samples, 0.17%)</title><rect x="37.1644%" y="997" width="0.1678%" height="15" fill="rgb(250,223,3)" fg:x="443" fg:w="2"/><text x="37.4144%" y="1007.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="37.1644%" y="981" width="0.1678%" height="15" fill="rgb(236,178,37)" fg:x="443" fg:w="2"/><text x="37.4144%" y="991.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="37.1644%" y="965" width="0.1678%" height="15" fill="rgb(241,158,50)" fg:x="443" fg:w="2"/><text x="37.4144%" y="975.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="37.1644%" y="949" width="0.1678%" height="15" fill="rgb(213,121,41)" fg:x="443" fg:w="2"/><text x="37.4144%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.17%)</title><rect x="37.1644%" y="933" width="0.1678%" height="15" fill="rgb(240,92,3)" fg:x="443" fg:w="2"/><text x="37.4144%" y="943.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.17%)</title><rect x="37.1644%" y="917" width="0.1678%" height="15" fill="rgb(205,123,3)" fg:x="443" fg:w="2"/><text x="37.4144%" y="927.50"></text></g><g><title>write (2 samples, 0.17%)</title><rect x="37.1644%" y="901" width="0.1678%" height="15" fill="rgb(205,97,47)" fg:x="443" fg:w="2"/><text x="37.4144%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.1644%" y="885" width="0.1678%" height="15" fill="rgb(247,152,14)" fg:x="443" fg:w="2"/><text x="37.4144%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.1644%" y="869" width="0.1678%" height="15" fill="rgb(248,195,53)" fg:x="443" fg:w="2"/><text x="37.4144%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.1644%" y="853" width="0.1678%" height="15" fill="rgb(226,201,16)" fg:x="443" fg:w="2"/><text x="37.4144%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.1644%" y="837" width="0.1678%" height="15" fill="rgb(205,98,0)" fg:x="443" fg:w="2"/><text x="37.4144%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.1644%" y="821" width="0.1678%" height="15" fill="rgb(214,191,48)" fg:x="443" fg:w="2"/><text x="37.4144%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.1644%" y="805" width="0.1678%" height="15" fill="rgb(237,112,39)" fg:x="443" fg:w="2"/><text x="37.4144%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.1644%" y="789" width="0.1678%" height="15" fill="rgb(247,203,27)" fg:x="443" fg:w="2"/><text x="37.4144%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.1644%" y="773" width="0.1678%" height="15" fill="rgb(235,124,28)" fg:x="443" fg:w="2"/><text x="37.4144%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxIn&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (9 samples, 0.76%)</title><rect x="36.6611%" y="1061" width="0.7550%" height="15" fill="rgb(208,207,46)" fg:x="437" fg:w="9"/><text x="36.9111%" y="1071.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="37.3322%" y="1045" width="0.0839%" height="15" fill="rgb(234,176,4)" fg:x="445" fg:w="1"/><text x="37.5822%" y="1055.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="37.3322%" y="1029" width="0.0839%" height="15" fill="rgb(230,133,28)" fg:x="445" fg:w="1"/><text x="37.5822%" y="1039.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (1 samples, 0.08%)</title><rect x="37.3322%" y="1013" width="0.0839%" height="15" fill="rgb(211,137,40)" fg:x="445" fg:w="1"/><text x="37.5822%" y="1023.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.3322%" y="997" width="0.0839%" height="15" fill="rgb(254,35,13)" fg:x="445" fg:w="1"/><text x="37.5822%" y="1007.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.3322%" y="981" width="0.0839%" height="15" fill="rgb(225,49,51)" fg:x="445" fg:w="1"/><text x="37.5822%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.3322%" y="965" width="0.0839%" height="15" fill="rgb(251,10,15)" fg:x="445" fg:w="1"/><text x="37.5822%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="37.3322%" y="949" width="0.0839%" height="15" fill="rgb(228,207,15)" fg:x="445" fg:w="1"/><text x="37.5822%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="37.3322%" y="933" width="0.0839%" height="15" fill="rgb(241,99,19)" fg:x="445" fg:w="1"/><text x="37.5822%" y="943.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="37.3322%" y="917" width="0.0839%" height="15" fill="rgb(207,104,49)" fg:x="445" fg:w="1"/><text x="37.5822%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="901" width="0.0839%" height="15" fill="rgb(234,99,18)" fg:x="445" fg:w="1"/><text x="37.5822%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="885" width="0.0839%" height="15" fill="rgb(213,191,49)" fg:x="445" fg:w="1"/><text x="37.5822%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="869" width="0.0839%" height="15" fill="rgb(210,226,19)" fg:x="445" fg:w="1"/><text x="37.5822%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="853" width="0.0839%" height="15" fill="rgb(229,97,18)" fg:x="445" fg:w="1"/><text x="37.5822%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="837" width="0.0839%" height="15" fill="rgb(211,167,15)" fg:x="445" fg:w="1"/><text x="37.5822%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="821" width="0.0839%" height="15" fill="rgb(210,169,34)" fg:x="445" fg:w="1"/><text x="37.5822%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="805" width="0.0839%" height="15" fill="rgb(241,121,31)" fg:x="445" fg:w="1"/><text x="37.5822%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="789" width="0.0839%" height="15" fill="rgb(232,40,11)" fg:x="445" fg:w="1"/><text x="37.5822%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.3322%" y="773" width="0.0839%" height="15" fill="rgb(205,86,26)" fg:x="445" fg:w="1"/><text x="37.5822%" y="783.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (7 samples, 0.59%)</title><rect x="37.4161%" y="981" width="0.5872%" height="15" fill="rgb(231,126,28)" fg:x="446" fg:w="7"/><text x="37.6661%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (7 samples, 0.59%)</title><rect x="37.4161%" y="965" width="0.5872%" height="15" fill="rgb(219,221,18)" fg:x="446" fg:w="7"/><text x="37.6661%" y="975.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.59%)</title><rect x="37.4161%" y="949" width="0.5872%" height="15" fill="rgb(211,40,0)" fg:x="446" fg:w="7"/><text x="37.6661%" y="959.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (7 samples, 0.59%)</title><rect x="37.4161%" y="933" width="0.5872%" height="15" fill="rgb(239,85,43)" fg:x="446" fg:w="7"/><text x="37.6661%" y="943.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (7 samples, 0.59%)</title><rect x="37.4161%" y="917" width="0.5872%" height="15" fill="rgb(231,55,21)" fg:x="446" fg:w="7"/><text x="37.6661%" y="927.50"></text></g><g><title>std::sys::unix::fs::File::write (7 samples, 0.59%)</title><rect x="37.4161%" y="901" width="0.5872%" height="15" fill="rgb(225,184,43)" fg:x="446" fg:w="7"/><text x="37.6661%" y="911.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (7 samples, 0.59%)</title><rect x="37.4161%" y="885" width="0.5872%" height="15" fill="rgb(251,158,41)" fg:x="446" fg:w="7"/><text x="37.6661%" y="895.50"></text></g><g><title>write (7 samples, 0.59%)</title><rect x="37.4161%" y="869" width="0.5872%" height="15" fill="rgb(234,159,37)" fg:x="446" fg:w="7"/><text x="37.6661%" y="879.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="37.4161%" y="853" width="0.5872%" height="15" fill="rgb(216,204,22)" fg:x="446" fg:w="7"/><text x="37.6661%" y="863.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="37.4161%" y="837" width="0.5872%" height="15" fill="rgb(214,17,3)" fg:x="446" fg:w="7"/><text x="37.6661%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="37.5839%" y="821" width="0.4195%" height="15" fill="rgb(212,111,17)" fg:x="448" fg:w="5"/><text x="37.8339%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="37.5839%" y="805" width="0.4195%" height="15" fill="rgb(221,157,24)" fg:x="448" fg:w="5"/><text x="37.8339%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="37.7517%" y="789" width="0.2517%" height="15" fill="rgb(252,16,13)" fg:x="450" fg:w="3"/><text x="38.0017%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.8356%" y="773" width="0.1678%" height="15" fill="rgb(221,62,2)" fg:x="451" fg:w="2"/><text x="38.0856%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.8356%" y="757" width="0.1678%" height="15" fill="rgb(247,87,22)" fg:x="451" fg:w="2"/><text x="38.0856%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="37.8356%" y="741" width="0.1678%" height="15" fill="rgb(215,73,9)" fg:x="451" fg:w="2"/><text x="38.0856%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="725" width="0.0839%" height="15" fill="rgb(207,175,33)" fg:x="452" fg:w="1"/><text x="38.1695%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="709" width="0.0839%" height="15" fill="rgb(243,129,54)" fg:x="452" fg:w="1"/><text x="38.1695%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="693" width="0.0839%" height="15" fill="rgb(227,119,45)" fg:x="452" fg:w="1"/><text x="38.1695%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="677" width="0.0839%" height="15" fill="rgb(205,109,36)" fg:x="452" fg:w="1"/><text x="38.1695%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="661" width="0.0839%" height="15" fill="rgb(205,6,39)" fg:x="452" fg:w="1"/><text x="38.1695%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="645" width="0.0839%" height="15" fill="rgb(221,32,16)" fg:x="452" fg:w="1"/><text x="38.1695%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="629" width="0.0839%" height="15" fill="rgb(228,144,50)" fg:x="452" fg:w="1"/><text x="38.1695%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="613" width="0.0839%" height="15" fill="rgb(229,201,53)" fg:x="452" fg:w="1"/><text x="38.1695%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="597" width="0.0839%" height="15" fill="rgb(249,153,27)" fg:x="452" fg:w="1"/><text x="38.1695%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="581" width="0.0839%" height="15" fill="rgb(227,106,25)" fg:x="452" fg:w="1"/><text x="38.1695%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="565" width="0.0839%" height="15" fill="rgb(230,65,29)" fg:x="452" fg:w="1"/><text x="38.1695%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="549" width="0.0839%" height="15" fill="rgb(221,57,46)" fg:x="452" fg:w="1"/><text x="38.1695%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="533" width="0.0839%" height="15" fill="rgb(229,161,17)" fg:x="452" fg:w="1"/><text x="38.1695%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="517" width="0.0839%" height="15" fill="rgb(222,213,11)" fg:x="452" fg:w="1"/><text x="38.1695%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="501" width="0.0839%" height="15" fill="rgb(235,35,13)" fg:x="452" fg:w="1"/><text x="38.1695%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="37.9195%" y="485" width="0.0839%" height="15" fill="rgb(233,158,34)" fg:x="452" fg:w="1"/><text x="38.1695%" y="495.50"></text></g><g><title>&lt;bitcoin::blockdata::script::Script as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (9 samples, 0.76%)</title><rect x="37.4161%" y="1029" width="0.7550%" height="15" fill="rgb(215,151,48)" fg:x="446" fg:w="9"/><text x="37.6661%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[u8]&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (9 samples, 0.76%)</title><rect x="37.4161%" y="1013" width="0.7550%" height="15" fill="rgb(229,84,14)" fg:x="446" fg:w="9"/><text x="37.6661%" y="1023.50"></text></g><g><title>bitcoin::consensus::encode::consensus_encode_with_size (9 samples, 0.76%)</title><rect x="37.4161%" y="997" width="0.7550%" height="15" fill="rgb(229,68,14)" fg:x="446" fg:w="9"/><text x="37.6661%" y="1007.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="38.0034%" y="981" width="0.1678%" height="15" fill="rgb(243,106,26)" fg:x="453" fg:w="2"/><text x="38.2534%" y="991.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="38.0034%" y="965" width="0.1678%" height="15" fill="rgb(206,45,38)" fg:x="453" fg:w="2"/><text x="38.2534%" y="975.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (2 samples, 0.17%)</title><rect x="38.0034%" y="949" width="0.1678%" height="15" fill="rgb(226,6,15)" fg:x="453" fg:w="2"/><text x="38.2534%" y="959.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (2 samples, 0.17%)</title><rect x="38.0034%" y="933" width="0.1678%" height="15" fill="rgb(232,22,54)" fg:x="453" fg:w="2"/><text x="38.2534%" y="943.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="38.0034%" y="917" width="0.1678%" height="15" fill="rgb(229,222,32)" fg:x="453" fg:w="2"/><text x="38.2534%" y="927.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="38.0034%" y="901" width="0.1678%" height="15" fill="rgb(228,62,29)" fg:x="453" fg:w="2"/><text x="38.2534%" y="911.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="38.0034%" y="885" width="0.1678%" height="15" fill="rgb(251,103,34)" fg:x="453" fg:w="2"/><text x="38.2534%" y="895.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.17%)</title><rect x="38.0034%" y="869" width="0.1678%" height="15" fill="rgb(233,12,30)" fg:x="453" fg:w="2"/><text x="38.2534%" y="879.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.17%)</title><rect x="38.0034%" y="853" width="0.1678%" height="15" fill="rgb(238,52,0)" fg:x="453" fg:w="2"/><text x="38.2534%" y="863.50"></text></g><g><title>write (2 samples, 0.17%)</title><rect x="38.0034%" y="837" width="0.1678%" height="15" fill="rgb(223,98,5)" fg:x="453" fg:w="2"/><text x="38.2534%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="821" width="0.1678%" height="15" fill="rgb(228,75,37)" fg:x="453" fg:w="2"/><text x="38.2534%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="805" width="0.1678%" height="15" fill="rgb(205,115,49)" fg:x="453" fg:w="2"/><text x="38.2534%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="789" width="0.1678%" height="15" fill="rgb(250,154,43)" fg:x="453" fg:w="2"/><text x="38.2534%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="773" width="0.1678%" height="15" fill="rgb(226,43,29)" fg:x="453" fg:w="2"/><text x="38.2534%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="757" width="0.1678%" height="15" fill="rgb(249,228,39)" fg:x="453" fg:w="2"/><text x="38.2534%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="741" width="0.1678%" height="15" fill="rgb(216,79,43)" fg:x="453" fg:w="2"/><text x="38.2534%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="725" width="0.1678%" height="15" fill="rgb(228,95,12)" fg:x="453" fg:w="2"/><text x="38.2534%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="709" width="0.1678%" height="15" fill="rgb(249,221,15)" fg:x="453" fg:w="2"/><text x="38.2534%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="693" width="0.1678%" height="15" fill="rgb(233,34,13)" fg:x="453" fg:w="2"/><text x="38.2534%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="677" width="0.1678%" height="15" fill="rgb(214,103,39)" fg:x="453" fg:w="2"/><text x="38.2534%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="661" width="0.1678%" height="15" fill="rgb(251,126,39)" fg:x="453" fg:w="2"/><text x="38.2534%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="645" width="0.1678%" height="15" fill="rgb(214,216,36)" fg:x="453" fg:w="2"/><text x="38.2534%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.0034%" y="629" width="0.1678%" height="15" fill="rgb(220,221,8)" fg:x="453" fg:w="2"/><text x="38.2534%" y="639.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::TxOut as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (12 samples, 1.01%)</title><rect x="37.4161%" y="1045" width="1.0067%" height="15" fill="rgb(240,216,3)" fg:x="446" fg:w="12"/><text x="37.6661%" y="1055.50"></text></g><g><title>&lt;u64 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (3 samples, 0.25%)</title><rect x="38.1711%" y="1029" width="0.2517%" height="15" fill="rgb(232,218,17)" fg:x="455" fg:w="3"/><text x="38.4211%" y="1039.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u64 (3 samples, 0.25%)</title><rect x="38.1711%" y="1013" width="0.2517%" height="15" fill="rgb(229,163,45)" fg:x="455" fg:w="3"/><text x="38.4211%" y="1023.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="38.1711%" y="997" width="0.2517%" height="15" fill="rgb(231,110,42)" fg:x="455" fg:w="3"/><text x="38.4211%" y="1007.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="38.1711%" y="981" width="0.2517%" height="15" fill="rgb(208,170,48)" fg:x="455" fg:w="3"/><text x="38.4211%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="38.1711%" y="965" width="0.2517%" height="15" fill="rgb(239,116,25)" fg:x="455" fg:w="3"/><text x="38.4211%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.25%)</title><rect x="38.1711%" y="949" width="0.2517%" height="15" fill="rgb(219,200,50)" fg:x="455" fg:w="3"/><text x="38.4211%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.25%)</title><rect x="38.1711%" y="933" width="0.2517%" height="15" fill="rgb(245,200,0)" fg:x="455" fg:w="3"/><text x="38.4211%" y="943.50"></text></g><g><title>write (3 samples, 0.25%)</title><rect x="38.1711%" y="917" width="0.2517%" height="15" fill="rgb(245,119,33)" fg:x="455" fg:w="3"/><text x="38.4211%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="38.1711%" y="901" width="0.2517%" height="15" fill="rgb(231,125,12)" fg:x="455" fg:w="3"/><text x="38.4211%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="38.1711%" y="885" width="0.2517%" height="15" fill="rgb(216,96,41)" fg:x="455" fg:w="3"/><text x="38.4211%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="38.1711%" y="869" width="0.2517%" height="15" fill="rgb(248,43,45)" fg:x="455" fg:w="3"/><text x="38.4211%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="853" width="0.1678%" height="15" fill="rgb(217,222,7)" fg:x="456" fg:w="2"/><text x="38.5050%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="837" width="0.1678%" height="15" fill="rgb(233,28,6)" fg:x="456" fg:w="2"/><text x="38.5050%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="821" width="0.1678%" height="15" fill="rgb(231,218,15)" fg:x="456" fg:w="2"/><text x="38.5050%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="805" width="0.1678%" height="15" fill="rgb(226,171,48)" fg:x="456" fg:w="2"/><text x="38.5050%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="789" width="0.1678%" height="15" fill="rgb(235,201,9)" fg:x="456" fg:w="2"/><text x="38.5050%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="773" width="0.1678%" height="15" fill="rgb(217,80,15)" fg:x="456" fg:w="2"/><text x="38.5050%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="757" width="0.1678%" height="15" fill="rgb(219,152,8)" fg:x="456" fg:w="2"/><text x="38.5050%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="741" width="0.1678%" height="15" fill="rgb(243,107,38)" fg:x="456" fg:w="2"/><text x="38.5050%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="725" width="0.1678%" height="15" fill="rgb(231,17,5)" fg:x="456" fg:w="2"/><text x="38.5050%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="709" width="0.1678%" height="15" fill="rgb(209,25,54)" fg:x="456" fg:w="2"/><text x="38.5050%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="693" width="0.1678%" height="15" fill="rgb(219,0,2)" fg:x="456" fg:w="2"/><text x="38.5050%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.2550%" y="677" width="0.1678%" height="15" fill="rgb(246,9,5)" fg:x="456" fg:w="2"/><text x="38.5050%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.3389%" y="661" width="0.0839%" height="15" fill="rgb(226,159,4)" fg:x="457" fg:w="1"/><text x="38.5889%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::TxOut&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (13 samples, 1.09%)</title><rect x="37.4161%" y="1061" width="1.0906%" height="15" fill="rgb(219,175,34)" fg:x="446" fg:w="13"/><text x="37.6661%" y="1071.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="38.4228%" y="1045" width="0.0839%" height="15" fill="rgb(236,10,46)" fg:x="458" fg:w="1"/><text x="38.6728%" y="1055.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="38.4228%" y="1029" width="0.0839%" height="15" fill="rgb(240,211,16)" fg:x="458" fg:w="1"/><text x="38.6728%" y="1039.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (1 samples, 0.08%)</title><rect x="38.4228%" y="1013" width="0.0839%" height="15" fill="rgb(205,3,43)" fg:x="458" fg:w="1"/><text x="38.6728%" y="1023.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.4228%" y="997" width="0.0839%" height="15" fill="rgb(245,7,22)" fg:x="458" fg:w="1"/><text x="38.6728%" y="1007.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.4228%" y="981" width="0.0839%" height="15" fill="rgb(239,132,32)" fg:x="458" fg:w="1"/><text x="38.6728%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.4228%" y="965" width="0.0839%" height="15" fill="rgb(228,202,34)" fg:x="458" fg:w="1"/><text x="38.6728%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="38.4228%" y="949" width="0.0839%" height="15" fill="rgb(254,200,22)" fg:x="458" fg:w="1"/><text x="38.6728%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="38.4228%" y="933" width="0.0839%" height="15" fill="rgb(219,10,39)" fg:x="458" fg:w="1"/><text x="38.6728%" y="943.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="38.4228%" y="917" width="0.0839%" height="15" fill="rgb(226,210,39)" fg:x="458" fg:w="1"/><text x="38.6728%" y="927.50"></text></g><g><title>&lt;bitcoin::blockdata::locktime::PackedLockTime as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="38.5067%" y="1061" width="0.0839%" height="15" fill="rgb(208,219,16)" fg:x="459" fg:w="1"/><text x="38.7567%" y="1071.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="38.5067%" y="1045" width="0.0839%" height="15" fill="rgb(216,158,51)" fg:x="459" fg:w="1"/><text x="38.7567%" y="1055.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (1 samples, 0.08%)</title><rect x="38.5067%" y="1029" width="0.0839%" height="15" fill="rgb(233,14,44)" fg:x="459" fg:w="1"/><text x="38.7567%" y="1039.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.5067%" y="1013" width="0.0839%" height="15" fill="rgb(237,97,39)" fg:x="459" fg:w="1"/><text x="38.7567%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.5067%" y="997" width="0.0839%" height="15" fill="rgb(218,198,43)" fg:x="459" fg:w="1"/><text x="38.7567%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.5067%" y="981" width="0.0839%" height="15" fill="rgb(231,104,20)" fg:x="459" fg:w="1"/><text x="38.7567%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="38.5067%" y="965" width="0.0839%" height="15" fill="rgb(254,36,13)" fg:x="459" fg:w="1"/><text x="38.7567%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="38.5067%" y="949" width="0.0839%" height="15" fill="rgb(248,14,50)" fg:x="459" fg:w="1"/><text x="38.7567%" y="959.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="38.5067%" y="933" width="0.0839%" height="15" fill="rgb(217,107,29)" fg:x="459" fg:w="1"/><text x="38.7567%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="917" width="0.0839%" height="15" fill="rgb(251,169,33)" fg:x="459" fg:w="1"/><text x="38.7567%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="901" width="0.0839%" height="15" fill="rgb(217,108,32)" fg:x="459" fg:w="1"/><text x="38.7567%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="885" width="0.0839%" height="15" fill="rgb(219,66,42)" fg:x="459" fg:w="1"/><text x="38.7567%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="869" width="0.0839%" height="15" fill="rgb(206,180,7)" fg:x="459" fg:w="1"/><text x="38.7567%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="853" width="0.0839%" height="15" fill="rgb(208,226,31)" fg:x="459" fg:w="1"/><text x="38.7567%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="837" width="0.0839%" height="15" fill="rgb(218,26,49)" fg:x="459" fg:w="1"/><text x="38.7567%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="821" width="0.0839%" height="15" fill="rgb(233,197,48)" fg:x="459" fg:w="1"/><text x="38.7567%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="805" width="0.0839%" height="15" fill="rgb(252,181,51)" fg:x="459" fg:w="1"/><text x="38.7567%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="789" width="0.0839%" height="15" fill="rgb(253,90,19)" fg:x="459" fg:w="1"/><text x="38.7567%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.5067%" y="773" width="0.0839%" height="15" fill="rgb(215,171,30)" fg:x="459" fg:w="1"/><text x="38.7567%" y="783.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (3 samples, 0.25%)</title><rect x="38.5906%" y="1045" width="0.2517%" height="15" fill="rgb(214,222,9)" fg:x="460" fg:w="3"/><text x="38.8406%" y="1055.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="38.5906%" y="1029" width="0.2517%" height="15" fill="rgb(223,3,22)" fg:x="460" fg:w="3"/><text x="38.8406%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="38.5906%" y="1013" width="0.2517%" height="15" fill="rgb(225,196,46)" fg:x="460" fg:w="3"/><text x="38.8406%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="38.5906%" y="997" width="0.2517%" height="15" fill="rgb(209,110,37)" fg:x="460" fg:w="3"/><text x="38.8406%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.25%)</title><rect x="38.5906%" y="981" width="0.2517%" height="15" fill="rgb(249,89,12)" fg:x="460" fg:w="3"/><text x="38.8406%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.25%)</title><rect x="38.5906%" y="965" width="0.2517%" height="15" fill="rgb(226,27,33)" fg:x="460" fg:w="3"/><text x="38.8406%" y="975.50"></text></g><g><title>write (3 samples, 0.25%)</title><rect x="38.5906%" y="949" width="0.2517%" height="15" fill="rgb(213,82,22)" fg:x="460" fg:w="3"/><text x="38.8406%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="38.5906%" y="933" width="0.2517%" height="15" fill="rgb(248,140,0)" fg:x="460" fg:w="3"/><text x="38.8406%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="38.5906%" y="917" width="0.2517%" height="15" fill="rgb(228,106,3)" fg:x="460" fg:w="3"/><text x="38.8406%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.6745%" y="901" width="0.1678%" height="15" fill="rgb(209,23,37)" fg:x="461" fg:w="2"/><text x="38.9245%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.6745%" y="885" width="0.1678%" height="15" fill="rgb(241,93,50)" fg:x="461" fg:w="2"/><text x="38.9245%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.6745%" y="869" width="0.1678%" height="15" fill="rgb(253,46,43)" fg:x="461" fg:w="2"/><text x="38.9245%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.6745%" y="853" width="0.1678%" height="15" fill="rgb(226,206,43)" fg:x="461" fg:w="2"/><text x="38.9245%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.6745%" y="837" width="0.1678%" height="15" fill="rgb(217,54,7)" fg:x="461" fg:w="2"/><text x="38.9245%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.7584%" y="821" width="0.0839%" height="15" fill="rgb(223,5,52)" fg:x="462" fg:w="1"/><text x="39.0084%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.7584%" y="805" width="0.0839%" height="15" fill="rgb(206,52,46)" fg:x="462" fg:w="1"/><text x="39.0084%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.7584%" y="789" width="0.0839%" height="15" fill="rgb(253,136,11)" fg:x="462" fg:w="1"/><text x="39.0084%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.7584%" y="773" width="0.0839%" height="15" fill="rgb(208,106,33)" fg:x="462" fg:w="1"/><text x="39.0084%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.7584%" y="757" width="0.0839%" height="15" fill="rgb(206,54,4)" fg:x="462" fg:w="1"/><text x="39.0084%" y="767.50"></text></g><g><title>&lt;bitcoin::blockdata::witness::Witness as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (5 samples, 0.42%)</title><rect x="38.5906%" y="1061" width="0.4195%" height="15" fill="rgb(213,3,15)" fg:x="460" fg:w="5"/><text x="38.8406%" y="1071.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="38.8423%" y="1045" width="0.1678%" height="15" fill="rgb(252,211,39)" fg:x="463" fg:w="2"/><text x="39.0923%" y="1055.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="38.8423%" y="1029" width="0.1678%" height="15" fill="rgb(223,6,36)" fg:x="463" fg:w="2"/><text x="39.0923%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="38.8423%" y="1013" width="0.1678%" height="15" fill="rgb(252,169,45)" fg:x="463" fg:w="2"/><text x="39.0923%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="38.8423%" y="997" width="0.1678%" height="15" fill="rgb(212,48,26)" fg:x="463" fg:w="2"/><text x="39.0923%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.17%)</title><rect x="38.8423%" y="981" width="0.1678%" height="15" fill="rgb(251,102,48)" fg:x="463" fg:w="2"/><text x="39.0923%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.17%)</title><rect x="38.8423%" y="965" width="0.1678%" height="15" fill="rgb(243,208,16)" fg:x="463" fg:w="2"/><text x="39.0923%" y="975.50"></text></g><g><title>write (2 samples, 0.17%)</title><rect x="38.8423%" y="949" width="0.1678%" height="15" fill="rgb(219,96,24)" fg:x="463" fg:w="2"/><text x="39.0923%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.8423%" y="933" width="0.1678%" height="15" fill="rgb(219,33,29)" fg:x="463" fg:w="2"/><text x="39.0923%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.8423%" y="917" width="0.1678%" height="15" fill="rgb(223,176,5)" fg:x="463" fg:w="2"/><text x="39.0923%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.8423%" y="901" width="0.1678%" height="15" fill="rgb(228,140,14)" fg:x="463" fg:w="2"/><text x="39.0923%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.8423%" y="885" width="0.1678%" height="15" fill="rgb(217,179,31)" fg:x="463" fg:w="2"/><text x="39.0923%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.8423%" y="869" width="0.1678%" height="15" fill="rgb(230,9,30)" fg:x="463" fg:w="2"/><text x="39.0923%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.8423%" y="853" width="0.1678%" height="15" fill="rgb(230,136,20)" fg:x="463" fg:w="2"/><text x="39.0923%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="38.8423%" y="837" width="0.1678%" height="15" fill="rgb(215,210,22)" fg:x="463" fg:w="2"/><text x="39.0923%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.9262%" y="821" width="0.0839%" height="15" fill="rgb(218,43,5)" fg:x="464" fg:w="1"/><text x="39.1762%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.9262%" y="805" width="0.0839%" height="15" fill="rgb(216,11,5)" fg:x="464" fg:w="1"/><text x="39.1762%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.9262%" y="789" width="0.0839%" height="15" fill="rgb(209,82,29)" fg:x="464" fg:w="1"/><text x="39.1762%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.9262%" y="773" width="0.0839%" height="15" fill="rgb(244,115,12)" fg:x="464" fg:w="1"/><text x="39.1762%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="38.9262%" y="757" width="0.0839%" height="15" fill="rgb(222,82,18)" fg:x="464" fg:w="1"/><text x="39.1762%" y="767.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="39.0101%" y="1061" width="0.0839%" height="15" fill="rgb(249,227,8)" fg:x="465" fg:w="1"/><text x="39.2601%" y="1071.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (1 samples, 0.08%)</title><rect x="39.0101%" y="1045" width="0.0839%" height="15" fill="rgb(253,141,45)" fg:x="465" fg:w="1"/><text x="39.2601%" y="1055.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.0101%" y="1029" width="0.0839%" height="15" fill="rgb(234,184,4)" fg:x="465" fg:w="1"/><text x="39.2601%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.0101%" y="1013" width="0.0839%" height="15" fill="rgb(218,194,23)" fg:x="465" fg:w="1"/><text x="39.2601%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.0101%" y="997" width="0.0839%" height="15" fill="rgb(235,66,41)" fg:x="465" fg:w="1"/><text x="39.2601%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="39.0101%" y="981" width="0.0839%" height="15" fill="rgb(245,217,1)" fg:x="465" fg:w="1"/><text x="39.2601%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="39.0101%" y="965" width="0.0839%" height="15" fill="rgb(229,91,1)" fg:x="465" fg:w="1"/><text x="39.2601%" y="975.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="39.0101%" y="949" width="0.0839%" height="15" fill="rgb(207,101,30)" fg:x="465" fg:w="1"/><text x="39.2601%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.0101%" y="933" width="0.0839%" height="15" fill="rgb(223,82,49)" fg:x="465" fg:w="1"/><text x="39.2601%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.0101%" y="917" width="0.0839%" height="15" fill="rgb(218,167,17)" fg:x="465" fg:w="1"/><text x="39.2601%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.0101%" y="901" width="0.0839%" height="15" fill="rgb(208,103,14)" fg:x="465" fg:w="1"/><text x="39.2601%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.0101%" y="885" width="0.0839%" height="15" fill="rgb(238,20,8)" fg:x="465" fg:w="1"/><text x="39.2601%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.0101%" y="869" width="0.0839%" height="15" fill="rgb(218,80,54)" fg:x="465" fg:w="1"/><text x="39.2601%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.0101%" y="853" width="0.0839%" height="15" fill="rgb(240,144,17)" fg:x="465" fg:w="1"/><text x="39.2601%" y="863.50"></text></g><g><title>&lt;bitcoin::blockdata::transaction::Transaction as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (32 samples, 2.68%)</title><rect x="36.6611%" y="1077" width="2.6846%" height="15" fill="rgb(245,27,50)" fg:x="437" fg:w="32"/><text x="36.9111%" y="1087.50">&lt;b..</text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (3 samples, 0.25%)</title><rect x="39.0940%" y="1061" width="0.2517%" height="15" fill="rgb(251,51,7)" fg:x="466" fg:w="3"/><text x="39.3440%" y="1071.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (2 samples, 0.17%)</title><rect x="39.1779%" y="1045" width="0.1678%" height="15" fill="rgb(245,217,29)" fg:x="467" fg:w="2"/><text x="39.4279%" y="1055.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="39.1779%" y="1029" width="0.1678%" height="15" fill="rgb(221,176,29)" fg:x="467" fg:w="2"/><text x="39.4279%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="39.1779%" y="1013" width="0.1678%" height="15" fill="rgb(212,180,24)" fg:x="467" fg:w="2"/><text x="39.4279%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="39.1779%" y="997" width="0.1678%" height="15" fill="rgb(254,24,2)" fg:x="467" fg:w="2"/><text x="39.4279%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.17%)</title><rect x="39.1779%" y="981" width="0.1678%" height="15" fill="rgb(230,100,2)" fg:x="467" fg:w="2"/><text x="39.4279%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.17%)</title><rect x="39.1779%" y="965" width="0.1678%" height="15" fill="rgb(219,142,25)" fg:x="467" fg:w="2"/><text x="39.4279%" y="975.50"></text></g><g><title>write (2 samples, 0.17%)</title><rect x="39.1779%" y="949" width="0.1678%" height="15" fill="rgb(240,73,43)" fg:x="467" fg:w="2"/><text x="39.4279%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="933" width="0.0839%" height="15" fill="rgb(214,114,15)" fg:x="468" fg:w="1"/><text x="39.5117%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="917" width="0.0839%" height="15" fill="rgb(207,130,4)" fg:x="468" fg:w="1"/><text x="39.5117%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="901" width="0.0839%" height="15" fill="rgb(221,25,40)" fg:x="468" fg:w="1"/><text x="39.5117%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="885" width="0.0839%" height="15" fill="rgb(241,184,7)" fg:x="468" fg:w="1"/><text x="39.5117%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="869" width="0.0839%" height="15" fill="rgb(235,159,4)" fg:x="468" fg:w="1"/><text x="39.5117%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="853" width="0.0839%" height="15" fill="rgb(214,87,48)" fg:x="468" fg:w="1"/><text x="39.5117%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="837" width="0.0839%" height="15" fill="rgb(246,198,24)" fg:x="468" fg:w="1"/><text x="39.5117%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="821" width="0.0839%" height="15" fill="rgb(209,66,40)" fg:x="468" fg:w="1"/><text x="39.5117%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="805" width="0.0839%" height="15" fill="rgb(233,147,39)" fg:x="468" fg:w="1"/><text x="39.5117%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="789" width="0.0839%" height="15" fill="rgb(231,145,52)" fg:x="468" fg:w="1"/><text x="39.5117%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="773" width="0.0839%" height="15" fill="rgb(206,20,26)" fg:x="468" fg:w="1"/><text x="39.5117%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.2617%" y="757" width="0.0839%" height="15" fill="rgb(238,220,4)" fg:x="468" fg:w="1"/><text x="39.5117%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::blockdata::transaction::Transaction&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (33 samples, 2.77%)</title><rect x="36.6611%" y="1093" width="2.7685%" height="15" fill="rgb(252,195,42)" fg:x="437" fg:w="33"/><text x="36.9111%" y="1103.50">&lt;a..</text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="39.3456%" y="1077" width="0.0839%" height="15" fill="rgb(209,10,6)" fg:x="469" fg:w="1"/><text x="39.5956%" y="1087.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="39.3456%" y="1061" width="0.0839%" height="15" fill="rgb(229,3,52)" fg:x="469" fg:w="1"/><text x="39.5956%" y="1071.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (1 samples, 0.08%)</title><rect x="39.3456%" y="1045" width="0.0839%" height="15" fill="rgb(253,49,37)" fg:x="469" fg:w="1"/><text x="39.5956%" y="1055.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.3456%" y="1029" width="0.0839%" height="15" fill="rgb(240,103,49)" fg:x="469" fg:w="1"/><text x="39.5956%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.3456%" y="1013" width="0.0839%" height="15" fill="rgb(250,182,30)" fg:x="469" fg:w="1"/><text x="39.5956%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.3456%" y="997" width="0.0839%" height="15" fill="rgb(248,8,30)" fg:x="469" fg:w="1"/><text x="39.5956%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="39.3456%" y="981" width="0.0839%" height="15" fill="rgb(237,120,30)" fg:x="469" fg:w="1"/><text x="39.5956%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="39.3456%" y="965" width="0.0839%" height="15" fill="rgb(221,146,34)" fg:x="469" fg:w="1"/><text x="39.5956%" y="975.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="39.3456%" y="949" width="0.0839%" height="15" fill="rgb(242,55,13)" fg:x="469" fg:w="1"/><text x="39.5956%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.3456%" y="933" width="0.0839%" height="15" fill="rgb(242,112,31)" fg:x="469" fg:w="1"/><text x="39.5956%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.3456%" y="917" width="0.0839%" height="15" fill="rgb(249,192,27)" fg:x="469" fg:w="1"/><text x="39.5956%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.3456%" y="901" width="0.0839%" height="15" fill="rgb(208,204,44)" fg:x="469" fg:w="1"/><text x="39.5956%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.3456%" y="885" width="0.0839%" height="15" fill="rgb(208,93,54)" fg:x="469" fg:w="1"/><text x="39.5956%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.3456%" y="869" width="0.0839%" height="15" fill="rgb(242,1,31)" fg:x="469" fg:w="1"/><text x="39.5956%" y="879.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::BlockHash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="39.4295%" y="1077" width="0.0839%" height="15" fill="rgb(241,83,25)" fg:x="470" fg:w="1"/><text x="39.6795%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="39.4295%" y="1061" width="0.0839%" height="15" fill="rgb(205,169,50)" fg:x="470" fg:w="1"/><text x="39.6795%" y="1071.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="39.4295%" y="1045" width="0.0839%" height="15" fill="rgb(239,186,37)" fg:x="470" fg:w="1"/><text x="39.6795%" y="1055.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (1 samples, 0.08%)</title><rect x="39.4295%" y="1029" width="0.0839%" height="15" fill="rgb(205,221,10)" fg:x="470" fg:w="1"/><text x="39.6795%" y="1039.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.4295%" y="1013" width="0.0839%" height="15" fill="rgb(218,196,15)" fg:x="470" fg:w="1"/><text x="39.6795%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.4295%" y="997" width="0.0839%" height="15" fill="rgb(218,196,35)" fg:x="470" fg:w="1"/><text x="39.6795%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.4295%" y="981" width="0.0839%" height="15" fill="rgb(233,63,24)" fg:x="470" fg:w="1"/><text x="39.6795%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="39.4295%" y="965" width="0.0839%" height="15" fill="rgb(225,8,4)" fg:x="470" fg:w="1"/><text x="39.6795%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="39.4295%" y="949" width="0.0839%" height="15" fill="rgb(234,105,35)" fg:x="470" fg:w="1"/><text x="39.6795%" y="959.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="39.4295%" y="933" width="0.0839%" height="15" fill="rgb(236,21,32)" fg:x="470" fg:w="1"/><text x="39.6795%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.4295%" y="917" width="0.0839%" height="15" fill="rgb(228,109,6)" fg:x="470" fg:w="1"/><text x="39.6795%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.4295%" y="901" width="0.0839%" height="15" fill="rgb(229,215,31)" fg:x="470" fg:w="1"/><text x="39.6795%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.4295%" y="885" width="0.0839%" height="15" fill="rgb(221,52,54)" fg:x="470" fg:w="1"/><text x="39.6795%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.4295%" y="869" width="0.0839%" height="15" fill="rgb(252,129,43)" fg:x="470" fg:w="1"/><text x="39.6795%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.4295%" y="853" width="0.0839%" height="15" fill="rgb(248,183,27)" fg:x="470" fg:w="1"/><text x="39.6795%" y="863.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::TxMerkleNode as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (4 samples, 0.34%)</title><rect x="39.5134%" y="1077" width="0.3356%" height="15" fill="rgb(250,0,22)" fg:x="471" fg:w="4"/><text x="39.7634%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (4 samples, 0.34%)</title><rect x="39.5134%" y="1061" width="0.3356%" height="15" fill="rgb(213,166,10)" fg:x="471" fg:w="4"/><text x="39.7634%" y="1071.50"></text></g><g><title>&lt;[u8: 32] as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (4 samples, 0.34%)</title><rect x="39.5134%" y="1045" width="0.3356%" height="15" fill="rgb(207,163,36)" fg:x="471" fg:w="4"/><text x="39.7634%" y="1055.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_slice (4 samples, 0.34%)</title><rect x="39.5134%" y="1029" width="0.3356%" height="15" fill="rgb(208,122,22)" fg:x="471" fg:w="4"/><text x="39.7634%" y="1039.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.34%)</title><rect x="39.5134%" y="1013" width="0.3356%" height="15" fill="rgb(207,104,49)" fg:x="471" fg:w="4"/><text x="39.7634%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (4 samples, 0.34%)</title><rect x="39.5134%" y="997" width="0.3356%" height="15" fill="rgb(248,211,50)" fg:x="471" fg:w="4"/><text x="39.7634%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (4 samples, 0.34%)</title><rect x="39.5134%" y="981" width="0.3356%" height="15" fill="rgb(217,13,45)" fg:x="471" fg:w="4"/><text x="39.7634%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (4 samples, 0.34%)</title><rect x="39.5134%" y="965" width="0.3356%" height="15" fill="rgb(211,216,49)" fg:x="471" fg:w="4"/><text x="39.7634%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.34%)</title><rect x="39.5134%" y="949" width="0.3356%" height="15" fill="rgb(221,58,53)" fg:x="471" fg:w="4"/><text x="39.7634%" y="959.50"></text></g><g><title>write (4 samples, 0.34%)</title><rect x="39.5134%" y="933" width="0.3356%" height="15" fill="rgb(220,112,41)" fg:x="471" fg:w="4"/><text x="39.7634%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="917" width="0.2517%" height="15" fill="rgb(236,38,28)" fg:x="472" fg:w="3"/><text x="39.8473%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="901" width="0.2517%" height="15" fill="rgb(227,195,22)" fg:x="472" fg:w="3"/><text x="39.8473%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="885" width="0.2517%" height="15" fill="rgb(214,55,33)" fg:x="472" fg:w="3"/><text x="39.8473%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="869" width="0.2517%" height="15" fill="rgb(248,80,13)" fg:x="472" fg:w="3"/><text x="39.8473%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="853" width="0.2517%" height="15" fill="rgb(238,52,6)" fg:x="472" fg:w="3"/><text x="39.8473%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="837" width="0.2517%" height="15" fill="rgb(224,198,47)" fg:x="472" fg:w="3"/><text x="39.8473%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="821" width="0.2517%" height="15" fill="rgb(233,171,20)" fg:x="472" fg:w="3"/><text x="39.8473%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="805" width="0.2517%" height="15" fill="rgb(241,30,25)" fg:x="472" fg:w="3"/><text x="39.8473%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="39.5973%" y="789" width="0.2517%" height="15" fill="rgb(207,171,38)" fg:x="472" fg:w="3"/><text x="39.8473%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="39.6812%" y="773" width="0.1678%" height="15" fill="rgb(234,70,1)" fg:x="473" fg:w="2"/><text x="39.9312%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="39.6812%" y="757" width="0.1678%" height="15" fill="rgb(232,178,18)" fg:x="473" fg:w="2"/><text x="39.9312%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.7651%" y="741" width="0.0839%" height="15" fill="rgb(241,78,40)" fg:x="474" fg:w="1"/><text x="40.0151%" y="751.50"></text></g><g><title>&lt;i32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="39.8490%" y="1077" width="0.0839%" height="15" fill="rgb(222,35,25)" fg:x="475" fg:w="1"/><text x="40.0990%" y="1087.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_i32 (1 samples, 0.08%)</title><rect x="39.8490%" y="1061" width="0.0839%" height="15" fill="rgb(207,92,16)" fg:x="475" fg:w="1"/><text x="40.0990%" y="1071.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="39.8490%" y="1045" width="0.0839%" height="15" fill="rgb(216,59,51)" fg:x="475" fg:w="1"/><text x="40.0990%" y="1055.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.8490%" y="1029" width="0.0839%" height="15" fill="rgb(213,80,28)" fg:x="475" fg:w="1"/><text x="40.0990%" y="1039.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="39.8490%" y="1013" width="0.0839%" height="15" fill="rgb(220,93,7)" fg:x="475" fg:w="1"/><text x="40.0990%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="39.8490%" y="997" width="0.0839%" height="15" fill="rgb(225,24,44)" fg:x="475" fg:w="1"/><text x="40.0990%" y="1007.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="39.8490%" y="981" width="0.0839%" height="15" fill="rgb(243,74,40)" fg:x="475" fg:w="1"/><text x="40.0990%" y="991.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="39.8490%" y="965" width="0.0839%" height="15" fill="rgb(228,39,7)" fg:x="475" fg:w="1"/><text x="40.0990%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="949" width="0.0839%" height="15" fill="rgb(227,79,8)" fg:x="475" fg:w="1"/><text x="40.0990%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="933" width="0.0839%" height="15" fill="rgb(236,58,11)" fg:x="475" fg:w="1"/><text x="40.0990%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="917" width="0.0839%" height="15" fill="rgb(249,63,35)" fg:x="475" fg:w="1"/><text x="40.0990%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="901" width="0.0839%" height="15" fill="rgb(252,114,16)" fg:x="475" fg:w="1"/><text x="40.0990%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="885" width="0.0839%" height="15" fill="rgb(254,151,24)" fg:x="475" fg:w="1"/><text x="40.0990%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="869" width="0.0839%" height="15" fill="rgb(253,54,39)" fg:x="475" fg:w="1"/><text x="40.0990%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="853" width="0.0839%" height="15" fill="rgb(243,25,45)" fg:x="475" fg:w="1"/><text x="40.0990%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="837" width="0.0839%" height="15" fill="rgb(234,134,9)" fg:x="475" fg:w="1"/><text x="40.0990%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="39.8490%" y="821" width="0.0839%" height="15" fill="rgb(227,166,31)" fg:x="475" fg:w="1"/><text x="40.0990%" y="831.50"></text></g><g><title>&lt;bitcoin::blockdata::block::Block as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (46 samples, 3.86%)</title><rect x="36.6611%" y="1109" width="3.8591%" height="15" fill="rgb(245,143,41)" fg:x="437" fg:w="46"/><text x="36.9111%" y="1119.50">&lt;bit..</text></g><g><title>&lt;bitcoin::blockdata::block::BlockHeader as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (13 samples, 1.09%)</title><rect x="39.4295%" y="1093" width="1.0906%" height="15" fill="rgb(238,181,32)" fg:x="470" fg:w="13"/><text x="39.6795%" y="1103.50"></text></g><g><title>&lt;u32 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (7 samples, 0.59%)</title><rect x="39.9329%" y="1077" width="0.5872%" height="15" fill="rgb(224,113,18)" fg:x="476" fg:w="7"/><text x="40.1829%" y="1087.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u32 (7 samples, 0.59%)</title><rect x="39.9329%" y="1061" width="0.5872%" height="15" fill="rgb(240,229,28)" fg:x="476" fg:w="7"/><text x="40.1829%" y="1071.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.59%)</title><rect x="39.9329%" y="1045" width="0.5872%" height="15" fill="rgb(250,185,3)" fg:x="476" fg:w="7"/><text x="40.1829%" y="1055.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (7 samples, 0.59%)</title><rect x="39.9329%" y="1029" width="0.5872%" height="15" fill="rgb(212,59,25)" fg:x="476" fg:w="7"/><text x="40.1829%" y="1039.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (7 samples, 0.59%)</title><rect x="39.9329%" y="1013" width="0.5872%" height="15" fill="rgb(221,87,20)" fg:x="476" fg:w="7"/><text x="40.1829%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::write (7 samples, 0.59%)</title><rect x="39.9329%" y="997" width="0.5872%" height="15" fill="rgb(213,74,28)" fg:x="476" fg:w="7"/><text x="40.1829%" y="1007.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (7 samples, 0.59%)</title><rect x="39.9329%" y="981" width="0.5872%" height="15" fill="rgb(224,132,34)" fg:x="476" fg:w="7"/><text x="40.1829%" y="991.50"></text></g><g><title>write (7 samples, 0.59%)</title><rect x="39.9329%" y="965" width="0.5872%" height="15" fill="rgb(222,101,24)" fg:x="476" fg:w="7"/><text x="40.1829%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="39.9329%" y="949" width="0.5872%" height="15" fill="rgb(254,142,4)" fg:x="476" fg:w="7"/><text x="40.1829%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="39.9329%" y="933" width="0.5872%" height="15" fill="rgb(230,229,49)" fg:x="476" fg:w="7"/><text x="40.1829%" y="943.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="39.9329%" y="917" width="0.5872%" height="15" fill="rgb(238,70,47)" fg:x="476" fg:w="7"/><text x="40.1829%" y="927.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="39.9329%" y="901" width="0.5872%" height="15" fill="rgb(231,160,17)" fg:x="476" fg:w="7"/><text x="40.1829%" y="911.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="39.9329%" y="885" width="0.5872%" height="15" fill="rgb(218,68,53)" fg:x="476" fg:w="7"/><text x="40.1829%" y="895.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="39.9329%" y="869" width="0.5872%" height="15" fill="rgb(236,111,10)" fg:x="476" fg:w="7"/><text x="40.1829%" y="879.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="39.9329%" y="853" width="0.5872%" height="15" fill="rgb(224,34,41)" fg:x="476" fg:w="7"/><text x="40.1829%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="40.0168%" y="837" width="0.5034%" height="15" fill="rgb(241,118,19)" fg:x="477" fg:w="6"/><text x="40.2668%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="40.2685%" y="821" width="0.2517%" height="15" fill="rgb(238,129,25)" fg:x="480" fg:w="3"/><text x="40.5185%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="40.2685%" y="805" width="0.2517%" height="15" fill="rgb(238,22,31)" fg:x="480" fg:w="3"/><text x="40.5185%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="40.2685%" y="789" width="0.2517%" height="15" fill="rgb(222,174,48)" fg:x="480" fg:w="3"/><text x="40.5185%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::network::utreexo::CompactLeafData&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="40.5201%" y="1093" width="0.1678%" height="15" fill="rgb(206,152,40)" fg:x="483" fg:w="2"/><text x="40.7701%" y="1103.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="40.5201%" y="1077" width="0.1678%" height="15" fill="rgb(218,99,54)" fg:x="483" fg:w="2"/><text x="40.7701%" y="1087.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (2 samples, 0.17%)</title><rect x="40.5201%" y="1061" width="0.1678%" height="15" fill="rgb(220,174,26)" fg:x="483" fg:w="2"/><text x="40.7701%" y="1071.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (2 samples, 0.17%)</title><rect x="40.5201%" y="1045" width="0.1678%" height="15" fill="rgb(245,116,9)" fg:x="483" fg:w="2"/><text x="40.7701%" y="1055.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="40.5201%" y="1029" width="0.1678%" height="15" fill="rgb(209,72,35)" fg:x="483" fg:w="2"/><text x="40.7701%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="40.5201%" y="1013" width="0.1678%" height="15" fill="rgb(226,126,21)" fg:x="483" fg:w="2"/><text x="40.7701%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="40.5201%" y="997" width="0.1678%" height="15" fill="rgb(227,192,1)" fg:x="483" fg:w="2"/><text x="40.7701%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.17%)</title><rect x="40.5201%" y="981" width="0.1678%" height="15" fill="rgb(237,180,29)" fg:x="483" fg:w="2"/><text x="40.7701%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.17%)</title><rect x="40.5201%" y="965" width="0.1678%" height="15" fill="rgb(230,197,35)" fg:x="483" fg:w="2"/><text x="40.7701%" y="975.50"></text></g><g><title>write (2 samples, 0.17%)</title><rect x="40.5201%" y="949" width="0.1678%" height="15" fill="rgb(246,193,31)" fg:x="483" fg:w="2"/><text x="40.7701%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.5201%" y="933" width="0.1678%" height="15" fill="rgb(241,36,4)" fg:x="483" fg:w="2"/><text x="40.7701%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.5201%" y="917" width="0.1678%" height="15" fill="rgb(241,130,17)" fg:x="483" fg:w="2"/><text x="40.7701%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.5201%" y="901" width="0.1678%" height="15" fill="rgb(206,137,32)" fg:x="483" fg:w="2"/><text x="40.7701%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.5201%" y="885" width="0.1678%" height="15" fill="rgb(237,228,51)" fg:x="483" fg:w="2"/><text x="40.7701%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.5201%" y="869" width="0.1678%" height="15" fill="rgb(243,6,42)" fg:x="483" fg:w="2"/><text x="40.7701%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.6040%" y="853" width="0.0839%" height="15" fill="rgb(251,74,28)" fg:x="484" fg:w="1"/><text x="40.8540%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::consensus::encode::VarInt&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (4 samples, 0.34%)</title><rect x="40.6879%" y="1077" width="0.3356%" height="15" fill="rgb(218,20,49)" fg:x="485" fg:w="4"/><text x="40.9379%" y="1087.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (4 samples, 0.34%)</title><rect x="40.6879%" y="1061" width="0.3356%" height="15" fill="rgb(238,28,14)" fg:x="485" fg:w="4"/><text x="40.9379%" y="1071.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (4 samples, 0.34%)</title><rect x="40.6879%" y="1045" width="0.3356%" height="15" fill="rgb(229,40,46)" fg:x="485" fg:w="4"/><text x="40.9379%" y="1055.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (4 samples, 0.34%)</title><rect x="40.6879%" y="1029" width="0.3356%" height="15" fill="rgb(244,195,20)" fg:x="485" fg:w="4"/><text x="40.9379%" y="1039.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.34%)</title><rect x="40.6879%" y="1013" width="0.3356%" height="15" fill="rgb(253,56,35)" fg:x="485" fg:w="4"/><text x="40.9379%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (4 samples, 0.34%)</title><rect x="40.6879%" y="997" width="0.3356%" height="15" fill="rgb(210,149,44)" fg:x="485" fg:w="4"/><text x="40.9379%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="40.7718%" y="981" width="0.2517%" height="15" fill="rgb(240,135,12)" fg:x="486" fg:w="3"/><text x="41.0218%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.25%)</title><rect x="40.7718%" y="965" width="0.2517%" height="15" fill="rgb(251,24,50)" fg:x="486" fg:w="3"/><text x="41.0218%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.25%)</title><rect x="40.7718%" y="949" width="0.2517%" height="15" fill="rgb(243,200,47)" fg:x="486" fg:w="3"/><text x="41.0218%" y="959.50"></text></g><g><title>write (3 samples, 0.25%)</title><rect x="40.7718%" y="933" width="0.2517%" height="15" fill="rgb(224,166,26)" fg:x="486" fg:w="3"/><text x="41.0218%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.8557%" y="917" width="0.1678%" height="15" fill="rgb(233,0,47)" fg:x="487" fg:w="2"/><text x="41.1057%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.8557%" y="901" width="0.1678%" height="15" fill="rgb(253,80,5)" fg:x="487" fg:w="2"/><text x="41.1057%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.8557%" y="885" width="0.1678%" height="15" fill="rgb(214,133,25)" fg:x="487" fg:w="2"/><text x="41.1057%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="40.8557%" y="869" width="0.1678%" height="15" fill="rgb(209,27,14)" fg:x="487" fg:w="2"/><text x="41.1057%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="853" width="0.0839%" height="15" fill="rgb(219,102,51)" fg:x="488" fg:w="1"/><text x="41.1896%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="837" width="0.0839%" height="15" fill="rgb(237,18,16)" fg:x="488" fg:w="1"/><text x="41.1896%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="821" width="0.0839%" height="15" fill="rgb(241,85,17)" fg:x="488" fg:w="1"/><text x="41.1896%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="805" width="0.0839%" height="15" fill="rgb(236,90,42)" fg:x="488" fg:w="1"/><text x="41.1896%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="789" width="0.0839%" height="15" fill="rgb(249,57,21)" fg:x="488" fg:w="1"/><text x="41.1896%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="773" width="0.0839%" height="15" fill="rgb(243,12,36)" fg:x="488" fg:w="1"/><text x="41.1896%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="757" width="0.0839%" height="15" fill="rgb(253,128,47)" fg:x="488" fg:w="1"/><text x="41.1896%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="741" width="0.0839%" height="15" fill="rgb(207,33,20)" fg:x="488" fg:w="1"/><text x="41.1896%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="40.9396%" y="725" width="0.0839%" height="15" fill="rgb(233,215,35)" fg:x="488" fg:w="1"/><text x="41.1896%" y="735.50"></text></g><g><title>&lt;bitcoin::network::utreexo::UtreexoBlock as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (53 samples, 4.45%)</title><rect x="36.6611%" y="1125" width="4.4463%" height="15" fill="rgb(249,188,52)" fg:x="437" fg:w="53"/><text x="36.9111%" y="1135.50">&lt;bitc..</text></g><g><title>&lt;bitcoin::network::utreexo::UData as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (7 samples, 0.59%)</title><rect x="40.5201%" y="1109" width="0.5872%" height="15" fill="rgb(225,12,32)" fg:x="483" fg:w="7"/><text x="40.7701%" y="1119.50"></text></g><g><title>&lt;bitcoin::network::utreexo::BatchProof as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (5 samples, 0.42%)</title><rect x="40.6879%" y="1093" width="0.4195%" height="15" fill="rgb(247,98,14)" fg:x="485" fg:w="5"/><text x="40.9379%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;bitcoin::hash_types::newtypes::BlockHash&gt; as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="41.0235%" y="1077" width="0.0839%" height="15" fill="rgb(247,219,48)" fg:x="489" fg:w="1"/><text x="41.2735%" y="1087.50"></text></g><g><title>&lt;bitcoin::consensus::encode::VarInt as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="41.0235%" y="1061" width="0.0839%" height="15" fill="rgb(253,60,48)" fg:x="489" fg:w="1"/><text x="41.2735%" y="1071.50"></text></g><g><title>&lt;u8 as bitcoin::consensus::encode::Encodable&gt;::consensus_encode (1 samples, 0.08%)</title><rect x="41.0235%" y="1045" width="0.0839%" height="15" fill="rgb(245,15,52)" fg:x="489" fg:w="1"/><text x="41.2735%" y="1055.50"></text></g><g><title>&lt;W as bitcoin::consensus::encode::WriteExt&gt;::emit_u8 (1 samples, 0.08%)</title><rect x="41.0235%" y="1029" width="0.0839%" height="15" fill="rgb(220,133,28)" fg:x="489" fg:w="1"/><text x="41.2735%" y="1039.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="41.0235%" y="1013" width="0.0839%" height="15" fill="rgb(217,180,4)" fg:x="489" fg:w="1"/><text x="41.2735%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.0235%" y="997" width="0.0839%" height="15" fill="rgb(251,24,1)" fg:x="489" fg:w="1"/><text x="41.2735%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="41.0235%" y="981" width="0.0839%" height="15" fill="rgb(212,185,49)" fg:x="489" fg:w="1"/><text x="41.2735%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="41.0235%" y="965" width="0.0839%" height="15" fill="rgb(215,175,22)" fg:x="489" fg:w="1"/><text x="41.2735%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="41.0235%" y="949" width="0.0839%" height="15" fill="rgb(250,205,14)" fg:x="489" fg:w="1"/><text x="41.2735%" y="959.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="41.0235%" y="933" width="0.0839%" height="15" fill="rgb(225,211,22)" fg:x="489" fg:w="1"/><text x="41.2735%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.0235%" y="917" width="0.0839%" height="15" fill="rgb(251,179,42)" fg:x="489" fg:w="1"/><text x="41.2735%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.0235%" y="901" width="0.0839%" height="15" fill="rgb(208,216,51)" fg:x="489" fg:w="1"/><text x="41.2735%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.0235%" y="885" width="0.0839%" height="15" fill="rgb(235,36,11)" fg:x="489" fg:w="1"/><text x="41.2735%" y="895.50"></text></g><g><title>bridge::prove::BlockFile::append (54 samples, 4.53%)</title><rect x="36.6611%" y="1141" width="4.5302%" height="15" fill="rgb(213,189,28)" fg:x="437" fg:w="54"/><text x="36.9111%" y="1151.50">bridg..</text></g><g><title>&lt;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.08%)</title><rect x="41.1074%" y="1125" width="0.0839%" height="15" fill="rgb(227,203,42)" fg:x="490" fg:w="1"/><text x="41.3574%" y="1135.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.08%)</title><rect x="41.1074%" y="1109" width="0.0839%" height="15" fill="rgb(244,72,36)" fg:x="490" fg:w="1"/><text x="41.3574%" y="1119.50"></text></g><g><title>bridge::prove::BlocksFileManager::append (55 samples, 4.61%)</title><rect x="36.6611%" y="1157" width="4.6141%" height="15" fill="rgb(213,53,17)" fg:x="437" fg:w="55"/><text x="36.9111%" y="1167.50">bridg..</text></g><g><title>bridge::prove::BlocksFileManager::get_file (1 samples, 0.08%)</title><rect x="41.1913%" y="1141" width="0.0839%" height="15" fill="rgb(207,167,3)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1151.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.08%)</title><rect x="41.1913%" y="1125" width="0.0839%" height="15" fill="rgb(216,98,30)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1135.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.08%)</title><rect x="41.1913%" y="1109" width="0.0839%" height="15" fill="rgb(236,123,15)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1119.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.08%)</title><rect x="41.1913%" y="1093" width="0.0839%" height="15" fill="rgb(248,81,50)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1103.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="41.1913%" y="1077" width="0.0839%" height="15" fill="rgb(214,120,4)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1087.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="41.1913%" y="1061" width="0.0839%" height="15" fill="rgb(208,179,34)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1071.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (1 samples, 0.08%)</title><rect x="41.1913%" y="1045" width="0.0839%" height="15" fill="rgb(227,140,7)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1055.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.08%)</title><rect x="41.1913%" y="1029" width="0.0839%" height="15" fill="rgb(214,22,6)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1039.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.08%)</title><rect x="41.1913%" y="1013" width="0.0839%" height="15" fill="rgb(207,137,27)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.08%)</title><rect x="41.1913%" y="997" width="0.0839%" height="15" fill="rgb(210,8,46)" fg:x="491" fg:w="1"/><text x="41.4413%" y="1007.50"></text></g><g><title>open64 (1 samples, 0.08%)</title><rect x="41.1913%" y="981" width="0.0839%" height="15" fill="rgb(240,16,54)" fg:x="491" fg:w="1"/><text x="41.4413%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="965" width="0.0839%" height="15" fill="rgb(211,209,29)" fg:x="491" fg:w="1"/><text x="41.4413%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="949" width="0.0839%" height="15" fill="rgb(226,228,24)" fg:x="491" fg:w="1"/><text x="41.4413%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="933" width="0.0839%" height="15" fill="rgb(222,84,9)" fg:x="491" fg:w="1"/><text x="41.4413%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="917" width="0.0839%" height="15" fill="rgb(234,203,30)" fg:x="491" fg:w="1"/><text x="41.4413%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="901" width="0.0839%" height="15" fill="rgb(238,109,14)" fg:x="491" fg:w="1"/><text x="41.4413%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="885" width="0.0839%" height="15" fill="rgb(233,206,34)" fg:x="491" fg:w="1"/><text x="41.4413%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="869" width="0.0839%" height="15" fill="rgb(220,167,47)" fg:x="491" fg:w="1"/><text x="41.4413%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="853" width="0.0839%" height="15" fill="rgb(238,105,10)" fg:x="491" fg:w="1"/><text x="41.4413%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="837" width="0.0839%" height="15" fill="rgb(213,227,17)" fg:x="491" fg:w="1"/><text x="41.4413%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="821" width="0.0839%" height="15" fill="rgb(217,132,38)" fg:x="491" fg:w="1"/><text x="41.4413%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="805" width="0.0839%" height="15" fill="rgb(242,146,4)" fg:x="491" fg:w="1"/><text x="41.4413%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="789" width="0.0839%" height="15" fill="rgb(212,61,9)" fg:x="491" fg:w="1"/><text x="41.4413%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="773" width="0.0839%" height="15" fill="rgb(247,126,22)" fg:x="491" fg:w="1"/><text x="41.4413%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="41.1913%" y="757" width="0.0839%" height="15" fill="rgb(220,196,2)" fg:x="491" fg:w="1"/><text x="41.4413%" y="767.50"></text></g><g><title>sled::pin (1 samples, 0.08%)</title><rect x="41.2752%" y="1109" width="0.0839%" height="15" fill="rgb(208,46,4)" fg:x="492" fg:w="1"/><text x="41.5252%" y="1119.50"></text></g><g><title>crossbeam_epoch::default::pin (1 samples, 0.08%)</title><rect x="41.2752%" y="1093" width="0.0839%" height="15" fill="rgb(252,104,46)" fg:x="492" fg:w="1"/><text x="41.5252%" y="1103.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.08%)</title><rect x="41.2752%" y="1077" width="0.0839%" height="15" fill="rgb(237,152,48)" fg:x="492" fg:w="1"/><text x="41.5252%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.08%)</title><rect x="41.2752%" y="1061" width="0.0839%" height="15" fill="rgb(221,59,37)" fg:x="492" fg:w="1"/><text x="41.5252%" y="1071.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (1 samples, 0.08%)</title><rect x="41.2752%" y="1045" width="0.0839%" height="15" fill="rgb(209,202,51)" fg:x="492" fg:w="1"/><text x="41.5252%" y="1055.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (1 samples, 0.08%)</title><rect x="41.2752%" y="1029" width="0.0839%" height="15" fill="rgb(228,81,30)" fg:x="492" fg:w="1"/><text x="41.5252%" y="1039.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (1 samples, 0.08%)</title><rect x="41.2752%" y="1013" width="0.0839%" height="15" fill="rgb(227,42,39)" fg:x="492" fg:w="1"/><text x="41.5252%" y="1023.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (1 samples, 0.08%)</title><rect x="41.2752%" y="997" width="0.0839%" height="15" fill="rgb(221,26,2)" fg:x="492" fg:w="1"/><text x="41.5252%" y="1007.50"></text></g><g><title>crossbeam_epoch::internal::Global::collect (1 samples, 0.08%)</title><rect x="41.2752%" y="981" width="0.0839%" height="15" fill="rgb(254,61,31)" fg:x="492" fg:w="1"/><text x="41.5252%" y="991.50"></text></g><g><title>core::mem::drop (1 samples, 0.08%)</title><rect x="41.2752%" y="965" width="0.0839%" height="15" fill="rgb(222,173,38)" fg:x="492" fg:w="1"/><text x="41.5252%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::SealedBag&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="949" width="0.0839%" height="15" fill="rgb(218,50,12)" fg:x="492" fg:w="1"/><text x="41.5252%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::internal::Bag&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="933" width="0.0839%" height="15" fill="rgb(223,88,40)" fg:x="492" fg:w="1"/><text x="41.5252%" y="943.50"></text></g><g><title>&lt;crossbeam_epoch::internal::Bag as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.2752%" y="917" width="0.0839%" height="15" fill="rgb(237,54,19)" fg:x="492" fg:w="1"/><text x="41.5252%" y="927.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::call (1 samples, 0.08%)</title><rect x="41.2752%" y="901" width="0.0839%" height="15" fill="rgb(251,129,25)" fg:x="492" fg:w="1"/><text x="41.5252%" y="911.50"></text></g><g><title>crossbeam_epoch::deferred::Deferred::new::call (1 samples, 0.08%)</title><rect x="41.2752%" y="885" width="0.0839%" height="15" fill="rgb(238,97,19)" fg:x="492" fg:w="1"/><text x="41.5252%" y="895.50"></text></g><g><title>crossbeam_epoch::guard::Guard::defer_unchecked::{{closure}} (1 samples, 0.08%)</title><rect x="41.2752%" y="869" width="0.0839%" height="15" fill="rgb(240,169,18)" fg:x="492" fg:w="1"/><text x="41.5252%" y="879.50"></text></g><g><title>core::mem::drop (1 samples, 0.08%)</title><rect x="41.2752%" y="853" width="0.0839%" height="15" fill="rgb(230,187,49)" fg:x="492" fg:w="1"/><text x="41.5252%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_epoch::atomic::Owned&lt;sled::pagecache::Page&gt;&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="837" width="0.0839%" height="15" fill="rgb(209,44,26)" fg:x="492" fg:w="1"/><text x="41.5252%" y="847.50"></text></g><g><title>&lt;crossbeam_epoch::atomic::Owned&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.2752%" y="821" width="0.0839%" height="15" fill="rgb(244,0,6)" fg:x="492" fg:w="1"/><text x="41.5252%" y="831.50"></text></g><g><title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::drop (1 samples, 0.08%)</title><rect x="41.2752%" y="805" width="0.0839%" height="15" fill="rgb(248,18,21)" fg:x="492" fg:w="1"/><text x="41.5252%" y="815.50"></text></g><g><title>core::mem::drop (1 samples, 0.08%)</title><rect x="41.2752%" y="789" width="0.0839%" height="15" fill="rgb(245,180,19)" fg:x="492" fg:w="1"/><text x="41.5252%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Page&gt;&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="773" width="0.0839%" height="15" fill="rgb(252,118,36)" fg:x="492" fg:w="1"/><text x="41.5252%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Page&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="757" width="0.0839%" height="15" fill="rgb(210,224,19)" fg:x="492" fg:w="1"/><text x="41.5252%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="741" width="0.0839%" height="15" fill="rgb(218,30,24)" fg:x="492" fg:w="1"/><text x="41.5252%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;sled::pagecache::Update&gt;&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="725" width="0.0839%" height="15" fill="rgb(219,75,50)" fg:x="492" fg:w="1"/><text x="41.5252%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::pagecache::Update&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="709" width="0.0839%" height="15" fill="rgb(234,72,50)" fg:x="492" fg:w="1"/><text x="41.5252%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Data&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="693" width="0.0839%" height="15" fill="rgb(219,100,48)" fg:x="492" fg:w="1"/><text x="41.5252%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::node::Leaf&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="677" width="0.0839%" height="15" fill="rgb(253,5,41)" fg:x="492" fg:w="1"/><text x="41.5252%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;sled::ivec::IVec&gt;&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="661" width="0.0839%" height="15" fill="rgb(247,181,11)" fg:x="492" fg:w="1"/><text x="41.5252%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.2752%" y="645" width="0.0839%" height="15" fill="rgb(222,223,25)" fg:x="492" fg:w="1"/><text x="41.5252%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[sled::ivec::IVec]&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="629" width="0.0839%" height="15" fill="rgb(214,198,28)" fg:x="492" fg:w="1"/><text x="41.5252%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVec&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="613" width="0.0839%" height="15" fill="rgb(230,46,43)" fg:x="492" fg:w="1"/><text x="41.5252%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::ivec::IVecInner&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="597" width="0.0839%" height="15" fill="rgb(233,65,53)" fg:x="492" fg:w="1"/><text x="41.5252%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;sled::arc::Arc&lt;[u8]&gt;&gt; (1 samples, 0.08%)</title><rect x="41.2752%" y="581" width="0.0839%" height="15" fill="rgb(221,121,27)" fg:x="492" fg:w="1"/><text x="41.5252%" y="591.50"></text></g><g><title>&lt;sled::arc::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.2752%" y="565" width="0.0839%" height="15" fill="rgb(247,70,47)" fg:x="492" fg:w="1"/><text x="41.5252%" y="575.50"></text></g><g><title>bridge::prove::BlocksIndex::append (2 samples, 0.17%)</title><rect x="41.2752%" y="1157" width="0.1678%" height="15" fill="rgb(228,85,35)" fg:x="492" fg:w="2"/><text x="41.5252%" y="1167.50"></text></g><g><title>kv::bucket::Bucket&lt;K,V&gt;::set (2 samples, 0.17%)</title><rect x="41.2752%" y="1141" width="0.1678%" height="15" fill="rgb(209,50,18)" fg:x="492" fg:w="2"/><text x="41.5252%" y="1151.50"></text></g><g><title>sled::tree::Tree::insert (2 samples, 0.17%)</title><rect x="41.2752%" y="1125" width="0.1678%" height="15" fill="rgb(250,19,35)" fg:x="492" fg:w="2"/><text x="41.5252%" y="1135.50"></text></g><g><title>sled::tree::Tree::insert_inner (1 samples, 0.08%)</title><rect x="41.3591%" y="1109" width="0.0839%" height="15" fill="rgb(253,107,29)" fg:x="493" fg:w="1"/><text x="41.6091%" y="1119.50"></text></g><g><title>sled::pagecache::PageCache::link (1 samples, 0.08%)</title><rect x="41.3591%" y="1093" width="0.0839%" height="15" fill="rgb(252,179,29)" fg:x="493" fg:w="1"/><text x="41.6091%" y="1103.50"></text></g><g><title>sled::node::Node::apply (1 samples, 0.08%)</title><rect x="41.3591%" y="1077" width="0.0839%" height="15" fill="rgb(238,194,6)" fg:x="493" fg:w="1"/><text x="41.6091%" y="1087.50"></text></g><g><title>sled::node::Node::set_leaf (1 samples, 0.08%)</title><rect x="41.3591%" y="1061" width="0.0839%" height="15" fill="rgb(238,164,29)" fg:x="493" fg:w="1"/><text x="41.6091%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.3591%" y="1045" width="0.0839%" height="15" fill="rgb(224,25,9)" fg:x="493" fg:w="1"/><text x="41.6091%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.3591%" y="1029" width="0.0839%" height="15" fill="rgb(244,153,23)" fg:x="493" fg:w="1"/><text x="41.6091%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="41.3591%" y="1013" width="0.0839%" height="15" fill="rgb(212,203,14)" fg:x="493" fg:w="1"/><text x="41.6091%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.3591%" y="997" width="0.0839%" height="15" fill="rgb(220,164,20)" fg:x="493" fg:w="1"/><text x="41.6091%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="41.3591%" y="981" width="0.0839%" height="15" fill="rgb(222,203,48)" fg:x="493" fg:w="1"/><text x="41.6091%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="41.3591%" y="965" width="0.0839%" height="15" fill="rgb(215,159,22)" fg:x="493" fg:w="1"/><text x="41.6091%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="41.3591%" y="949" width="0.0839%" height="15" fill="rgb(216,183,47)" fg:x="493" fg:w="1"/><text x="41.6091%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="41.3591%" y="933" width="0.0839%" height="15" fill="rgb(229,195,25)" fg:x="493" fg:w="1"/><text x="41.6091%" y="943.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="41.3591%" y="917" width="0.0839%" height="15" fill="rgb(224,132,51)" fg:x="493" fg:w="1"/><text x="41.6091%" y="927.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="41.3591%" y="901" width="0.0839%" height="15" fill="rgb(240,63,7)" fg:x="493" fg:w="1"/><text x="41.6091%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="41.3591%" y="885" width="0.0839%" height="15" fill="rgb(249,182,41)" fg:x="493" fg:w="1"/><text x="41.6091%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="41.3591%" y="869" width="0.0839%" height="15" fill="rgb(243,47,26)" fg:x="493" fg:w="1"/><text x="41.6091%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="41.3591%" y="853" width="0.0839%" height="15" fill="rgb(233,48,2)" fg:x="493" fg:w="1"/><text x="41.6091%" y="863.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (2 samples, 0.17%)</title><rect x="41.5268%" y="1093" width="0.1678%" height="15" fill="rgb(244,165,34)" fg:x="495" fg:w="2"/><text x="41.7768%" y="1103.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::input (2 samples, 0.17%)</title><rect x="41.5268%" y="1077" width="0.1678%" height="15" fill="rgb(207,89,7)" fg:x="495" fg:w="2"/><text x="41.7768%" y="1087.50"></text></g><g><title>bitcoin_hashes::sha256::HashEngine::process_block (2 samples, 0.17%)</title><rect x="41.5268%" y="1061" width="0.1678%" height="15" fill="rgb(244,117,36)" fg:x="495" fg:w="2"/><text x="41.7768%" y="1071.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (1 samples, 0.08%)</title><rect x="41.6107%" y="1045" width="0.0839%" height="15" fill="rgb(226,144,34)" fg:x="496" fg:w="1"/><text x="41.8607%" y="1055.50"></text></g><g><title>bitcoin::blockdata::transaction::Transaction::txid (3 samples, 0.25%)</title><rect x="41.5268%" y="1141" width="0.2517%" height="15" fill="rgb(213,23,19)" fg:x="495" fg:w="3"/><text x="41.7768%" y="1151.50"></text></g><g><title>&lt;bitcoin::hash_types::newtypes::Txid as bitcoin_hashes::Hash&gt;::from_engine (3 samples, 0.25%)</title><rect x="41.5268%" y="1125" width="0.2517%" height="15" fill="rgb(217,75,12)" fg:x="495" fg:w="3"/><text x="41.7768%" y="1135.50"></text></g><g><title>&lt;bitcoin_hashes::sha256d::Hash as bitcoin_hashes::Hash&gt;::from_engine (3 samples, 0.25%)</title><rect x="41.5268%" y="1109" width="0.2517%" height="15" fill="rgb(224,159,17)" fg:x="495" fg:w="3"/><text x="41.7768%" y="1119.50"></text></g><g><title>bitcoin_hashes::Hash::hash (1 samples, 0.08%)</title><rect x="41.6946%" y="1093" width="0.0839%" height="15" fill="rgb(217,118,1)" fg:x="497" fg:w="1"/><text x="41.9446%" y="1103.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::Hash as bitcoin_hashes::Hash&gt;::from_engine (1 samples, 0.08%)</title><rect x="41.6946%" y="1077" width="0.0839%" height="15" fill="rgb(232,180,48)" fg:x="497" fg:w="1"/><text x="41.9446%" y="1087.50"></text></g><g><title>&lt;bitcoin_hashes::sha256::HashEngine as bitcoin_hashes::HashEngine&gt;::midstate (1 samples, 0.08%)</title><rect x="41.6946%" y="1061" width="0.0839%" height="15" fill="rgb(230,27,33)" fg:x="497" fg:w="1"/><text x="41.9446%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.08%)</title><rect x="41.6946%" y="1045" width="0.0839%" height="15" fill="rgb(205,31,21)" fg:x="497" fg:w="1"/><text x="41.9446%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.6946%" y="1029" width="0.0839%" height="15" fill="rgb(253,59,4)" fg:x="497" fg:w="1"/><text x="41.9446%" y="1039.50"></text></g><g><title>bridge::prover::Prover::process_block (5 samples, 0.42%)</title><rect x="41.4430%" y="1157" width="0.4195%" height="15" fill="rgb(224,201,9)" fg:x="494" fg:w="5"/><text x="41.6930%" y="1167.50"></text></g><g><title>rustreexo::accumulator::pollard::Pollard::modify (1 samples, 0.08%)</title><rect x="41.7785%" y="1141" width="0.0839%" height="15" fill="rgb(229,206,30)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1151.50"></text></g><g><title>rustreexo::accumulator::pollard::Pollard::del (1 samples, 0.08%)</title><rect x="41.7785%" y="1125" width="0.0839%" height="15" fill="rgb(212,67,47)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="41.7785%" y="1109" width="0.0839%" height="15" fill="rgb(211,96,50)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="41.7785%" y="1093" width="0.0839%" height="15" fill="rgb(252,114,18)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="41.7785%" y="1077" width="0.0839%" height="15" fill="rgb(223,58,37)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="41.7785%" y="1061" width="0.0839%" height="15" fill="rgb(237,70,4)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.7785%" y="1045" width="0.0839%" height="15" fill="rgb(244,85,46)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.08%)</title><rect x="41.7785%" y="1029" width="0.0839%" height="15" fill="rgb(223,39,52)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.08%)</title><rect x="41.7785%" y="1013" width="0.0839%" height="15" fill="rgb(218,200,14)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="41.7785%" y="997" width="0.0839%" height="15" fill="rgb(208,171,16)" fg:x="498" fg:w="1"/><text x="42.0285%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="41.7785%" y="981" width="0.0839%" height="15" fill="rgb(234,200,18)" fg:x="498" fg:w="1"/><text x="42.0285%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::map_fold&lt;&amp;rustreexo::accumulator::node_hash::NodeHash,(u64,&amp;rustreexo::accumulator::node_hash::NodeHash),(),rustreexo::accumulator::pollard::Pollard::del::{{closure}},core::iter::traits::iterator::Iterator::for_each::call&lt;(u64,&amp;rustreexo::accumulator::node_hash::NodeHash),alloc::vec::Vec&lt;(u64,&amp;rustreexo::accumulator::node_hash::NodeHash)&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustreexo::accumulator::node_hash::NodeHash&gt;,rustreexo::accumulator::pollard::Pollard::del::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.08%)</title><rect x="41.7785%" y="965" width="0.0839%" height="15" fill="rgb(228,45,11)" fg:x="498" fg:w="1"/><text x="42.0285%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::traits::iterator::Iterator::for_each::call&lt;(u64,&amp;rustreexo::accumulator::node_hash::NodeHash),alloc::vec::Vec&lt;(u64,&amp;rustreexo::accumulator::node_hash::NodeHash)&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustreexo::accumulator::node_hash::NodeHash&gt;,rustreexo::accumulator::pollard::Pollard::del::{{closure}}&gt;&gt;::{{closure}}&gt;::{{closure}}&gt; (1 samples, 0.08%)</title><rect x="41.7785%" y="949" width="0.0839%" height="15" fill="rgb(237,182,11)" fg:x="498" fg:w="1"/><text x="42.0285%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u64,&amp;rustreexo::accumulator::node_hash::NodeHash)&gt;::extend_trusted&lt;core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;rustreexo::accumulator::node_hash::NodeHash&gt;,rustreexo::accumulator::pollard::Pollard::del::{{closure}}&gt;&gt;::{{closure}}&gt; (1 samples, 0.08%)</title><rect x="41.7785%" y="933" width="0.0839%" height="15" fill="rgb(241,175,49)" fg:x="498" fg:w="1"/><text x="42.0285%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (1 samples, 0.08%)</title><rect x="41.7785%" y="917" width="0.0839%" height="15" fill="rgb(247,38,35)" fg:x="498" fg:w="1"/><text x="42.0285%" y="927.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="41.7785%" y="901" width="0.0839%" height="15" fill="rgb(228,39,49)" fg:x="498" fg:w="1"/><text x="42.0285%" y="911.50"></text></g><g><title>&lt;termcolor::BufferedStandardStream as std::io::Write&gt;::flush (5 samples, 0.42%)</title><rect x="41.8624%" y="1061" width="0.4195%" height="15" fill="rgb(226,101,26)" fg:x="499" fg:w="5"/><text x="42.1124%" y="1071.50"></text></g><g><title>&lt;termcolor::LossyStandardStream&lt;W&gt; as std::io::Write&gt;::flush (5 samples, 0.42%)</title><rect x="41.8624%" y="1045" width="0.4195%" height="15" fill="rgb(206,141,19)" fg:x="499" fg:w="5"/><text x="42.1124%" y="1055.50"></text></g><g><title>&lt;termcolor::WriterInner&lt;W&gt; as std::io::Write&gt;::flush (5 samples, 0.42%)</title><rect x="41.8624%" y="1029" width="0.4195%" height="15" fill="rgb(211,200,13)" fg:x="499" fg:w="5"/><text x="42.1124%" y="1039.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (5 samples, 0.42%)</title><rect x="41.8624%" y="1013" width="0.4195%" height="15" fill="rgb(241,121,6)" fg:x="499" fg:w="5"/><text x="42.1124%" y="1023.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (5 samples, 0.42%)</title><rect x="41.8624%" y="997" width="0.4195%" height="15" fill="rgb(234,221,29)" fg:x="499" fg:w="5"/><text x="42.1124%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (5 samples, 0.42%)</title><rect x="41.8624%" y="981" width="0.4195%" height="15" fill="rgb(229,136,5)" fg:x="499" fg:w="5"/><text x="42.1124%" y="991.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (5 samples, 0.42%)</title><rect x="41.8624%" y="965" width="0.4195%" height="15" fill="rgb(238,36,11)" fg:x="499" fg:w="5"/><text x="42.1124%" y="975.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (5 samples, 0.42%)</title><rect x="41.8624%" y="949" width="0.4195%" height="15" fill="rgb(251,55,41)" fg:x="499" fg:w="5"/><text x="42.1124%" y="959.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (5 samples, 0.42%)</title><rect x="41.8624%" y="933" width="0.4195%" height="15" fill="rgb(242,34,40)" fg:x="499" fg:w="5"/><text x="42.1124%" y="943.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (5 samples, 0.42%)</title><rect x="41.8624%" y="917" width="0.4195%" height="15" fill="rgb(215,42,17)" fg:x="499" fg:w="5"/><text x="42.1124%" y="927.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (5 samples, 0.42%)</title><rect x="41.8624%" y="901" width="0.4195%" height="15" fill="rgb(207,44,46)" fg:x="499" fg:w="5"/><text x="42.1124%" y="911.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (5 samples, 0.42%)</title><rect x="41.8624%" y="885" width="0.4195%" height="15" fill="rgb(211,206,28)" fg:x="499" fg:w="5"/><text x="42.1124%" y="895.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (5 samples, 0.42%)</title><rect x="41.8624%" y="869" width="0.4195%" height="15" fill="rgb(237,167,16)" fg:x="499" fg:w="5"/><text x="42.1124%" y="879.50"></text></g><g><title>write (5 samples, 0.42%)</title><rect x="41.8624%" y="853" width="0.4195%" height="15" fill="rgb(233,66,6)" fg:x="499" fg:w="5"/><text x="42.1124%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="41.8624%" y="837" width="0.4195%" height="15" fill="rgb(246,123,29)" fg:x="499" fg:w="5"/><text x="42.1124%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="41.8624%" y="821" width="0.4195%" height="15" fill="rgb(209,62,40)" fg:x="499" fg:w="5"/><text x="42.1124%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="41.8624%" y="805" width="0.4195%" height="15" fill="rgb(218,4,25)" fg:x="499" fg:w="5"/><text x="42.1124%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="41.8624%" y="789" width="0.4195%" height="15" fill="rgb(253,91,49)" fg:x="499" fg:w="5"/><text x="42.1124%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="42.0302%" y="773" width="0.2517%" height="15" fill="rgb(228,155,29)" fg:x="501" fg:w="3"/><text x="42.2802%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="42.0302%" y="757" width="0.2517%" height="15" fill="rgb(243,57,37)" fg:x="501" fg:w="3"/><text x="42.2802%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.1141%" y="741" width="0.1678%" height="15" fill="rgb(244,167,17)" fg:x="502" fg:w="2"/><text x="42.3641%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.1141%" y="725" width="0.1678%" height="15" fill="rgb(207,181,38)" fg:x="502" fg:w="2"/><text x="42.3641%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.1141%" y="709" width="0.1678%" height="15" fill="rgb(211,8,23)" fg:x="502" fg:w="2"/><text x="42.3641%" y="719.50"></text></g><g><title>&lt;simplelog::loggers::termlog::TermLogger as log::Log&gt;::log (6 samples, 0.50%)</title><rect x="41.8624%" y="1109" width="0.5034%" height="15" fill="rgb(235,11,44)" fg:x="499" fg:w="6"/><text x="42.1124%" y="1119.50"></text></g><g><title>simplelog::loggers::termlog::TermLogger::try_log (6 samples, 0.50%)</title><rect x="41.8624%" y="1093" width="0.5034%" height="15" fill="rgb(248,18,52)" fg:x="499" fg:w="6"/><text x="42.1124%" y="1103.50"></text></g><g><title>simplelog::loggers::termlog::TermLogger::try_log_term (6 samples, 0.50%)</title><rect x="41.8624%" y="1077" width="0.5034%" height="15" fill="rgb(208,4,7)" fg:x="499" fg:w="6"/><text x="42.1124%" y="1087.50"></text></g><g><title>simplelog::loggers::logging::write_time (1 samples, 0.08%)</title><rect x="42.2819%" y="1061" width="0.0839%" height="15" fill="rgb(240,17,39)" fg:x="504" fg:w="1"/><text x="42.5319%" y="1071.50"></text></g><g><title>time::offset_date_time::OffsetDateTime::format_into (1 samples, 0.08%)</title><rect x="42.2819%" y="1045" width="0.0839%" height="15" fill="rgb(207,170,3)" fg:x="504" fg:w="1"/><text x="42.5319%" y="1055.50"></text></g><g><title>time::date_time::DateTime&lt;O&gt;::format_into (1 samples, 0.08%)</title><rect x="42.2819%" y="1029" width="0.0839%" height="15" fill="rgb(236,100,52)" fg:x="504" fg:w="1"/><text x="42.5319%" y="1039.50"></text></g><g><title>time::formatting::formattable::&lt;impl time::formatting::formattable::sealed::Sealed for T&gt;::format_into (1 samples, 0.08%)</title><rect x="42.2819%" y="1013" width="0.0839%" height="15" fill="rgb(246,78,51)" fg:x="504" fg:w="1"/><text x="42.5319%" y="1023.50"></text></g><g><title>time::formatting::formattable::&lt;impl time::formatting::formattable::sealed::Sealed for [time::format_description::borrowed_format_item::BorrowedFormatItem]&gt;::format_into (1 samples, 0.08%)</title><rect x="42.2819%" y="997" width="0.0839%" height="15" fill="rgb(211,17,15)" fg:x="504" fg:w="1"/><text x="42.5319%" y="1007.50"></text></g><g><title>time::formatting::formattable::&lt;impl time::formatting::formattable::sealed::Sealed for time::format_description::borrowed_format_item::BorrowedFormatItem&gt;::format_into (1 samples, 0.08%)</title><rect x="42.2819%" y="981" width="0.0839%" height="15" fill="rgb(209,59,46)" fg:x="504" fg:w="1"/><text x="42.5319%" y="991.50"></text></g><g><title>time::formatting::format_component (1 samples, 0.08%)</title><rect x="42.2819%" y="965" width="0.0839%" height="15" fill="rgb(210,92,25)" fg:x="504" fg:w="1"/><text x="42.5319%" y="975.50"></text></g><g><title>time::formatting::format_number_pad_zero (1 samples, 0.08%)</title><rect x="42.2819%" y="949" width="0.0839%" height="15" fill="rgb(238,174,52)" fg:x="504" fg:w="1"/><text x="42.5319%" y="959.50"></text></g><g><title>&lt;simplelog::loggers::writelog::WriteLogger&lt;W&gt; as log::Log&gt;::enabled (1 samples, 0.08%)</title><rect x="42.3658%" y="1093" width="0.0839%" height="15" fill="rgb(230,73,7)" fg:x="505" fg:w="1"/><text x="42.6158%" y="1103.50"></text></g><g><title>log::Metadata::level (1 samples, 0.08%)</title><rect x="42.3658%" y="1077" width="0.0839%" height="15" fill="rgb(243,124,40)" fg:x="505" fg:w="1"/><text x="42.6158%" y="1087.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.4497%" y="1029" width="0.0839%" height="15" fill="rgb(244,170,11)" fg:x="506" fg:w="1"/><text x="42.6997%" y="1039.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="42.4497%" y="1013" width="0.0839%" height="15" fill="rgb(207,114,54)" fg:x="506" fg:w="1"/><text x="42.6997%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="42.4497%" y="997" width="0.0839%" height="15" fill="rgb(205,42,20)" fg:x="506" fg:w="1"/><text x="42.6997%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="42.4497%" y="981" width="0.0839%" height="15" fill="rgb(230,30,28)" fg:x="506" fg:w="1"/><text x="42.6997%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="42.4497%" y="965" width="0.0839%" height="15" fill="rgb(205,73,54)" fg:x="506" fg:w="1"/><text x="42.6997%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="42.4497%" y="949" width="0.0839%" height="15" fill="rgb(254,227,23)" fg:x="506" fg:w="1"/><text x="42.6997%" y="959.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="42.4497%" y="933" width="0.0839%" height="15" fill="rgb(228,202,34)" fg:x="506" fg:w="1"/><text x="42.6997%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.4497%" y="917" width="0.0839%" height="15" fill="rgb(222,225,37)" fg:x="506" fg:w="1"/><text x="42.6997%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.4497%" y="901" width="0.0839%" height="15" fill="rgb(221,14,54)" fg:x="506" fg:w="1"/><text x="42.6997%" y="911.50"></text></g><g><title>simplelog::loggers::logging::write_args (3 samples, 0.25%)</title><rect x="42.4497%" y="1077" width="0.2517%" height="15" fill="rgb(254,102,2)" fg:x="506" fg:w="3"/><text x="42.6997%" y="1087.50"></text></g><g><title>std::io::Write::write_fmt (3 samples, 0.25%)</title><rect x="42.4497%" y="1061" width="0.2517%" height="15" fill="rgb(232,104,17)" fg:x="506" fg:w="3"/><text x="42.6997%" y="1071.50"></text></g><g><title>core::fmt::write (3 samples, 0.25%)</title><rect x="42.4497%" y="1045" width="0.2517%" height="15" fill="rgb(250,220,14)" fg:x="506" fg:w="3"/><text x="42.6997%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="42.5336%" y="1029" width="0.1678%" height="15" fill="rgb(241,158,9)" fg:x="507" fg:w="2"/><text x="42.7836%" y="1039.50"></text></g><g><title>core::fmt::write (2 samples, 0.17%)</title><rect x="42.5336%" y="1013" width="0.1678%" height="15" fill="rgb(246,9,43)" fg:x="507" fg:w="2"/><text x="42.7836%" y="1023.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.17%)</title><rect x="42.5336%" y="997" width="0.1678%" height="15" fill="rgb(206,73,33)" fg:x="507" fg:w="2"/><text x="42.7836%" y="1007.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (2 samples, 0.17%)</title><rect x="42.5336%" y="981" width="0.1678%" height="15" fill="rgb(222,79,8)" fg:x="507" fg:w="2"/><text x="42.7836%" y="991.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.17%)</title><rect x="42.5336%" y="965" width="0.1678%" height="15" fill="rgb(234,8,54)" fg:x="507" fg:w="2"/><text x="42.7836%" y="975.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.17%)</title><rect x="42.5336%" y="949" width="0.1678%" height="15" fill="rgb(209,134,38)" fg:x="507" fg:w="2"/><text x="42.7836%" y="959.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.17%)</title><rect x="42.5336%" y="933" width="0.1678%" height="15" fill="rgb(230,127,29)" fg:x="507" fg:w="2"/><text x="42.7836%" y="943.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="42.5336%" y="917" width="0.1678%" height="15" fill="rgb(242,44,41)" fg:x="507" fg:w="2"/><text x="42.7836%" y="927.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.17%)</title><rect x="42.5336%" y="901" width="0.1678%" height="15" fill="rgb(222,56,43)" fg:x="507" fg:w="2"/><text x="42.7836%" y="911.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.17%)</title><rect x="42.5336%" y="885" width="0.1678%" height="15" fill="rgb(238,39,47)" fg:x="507" fg:w="2"/><text x="42.7836%" y="895.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.17%)</title><rect x="42.5336%" y="869" width="0.1678%" height="15" fill="rgb(226,79,43)" fg:x="507" fg:w="2"/><text x="42.7836%" y="879.50"></text></g><g><title>write (2 samples, 0.17%)</title><rect x="42.5336%" y="853" width="0.1678%" height="15" fill="rgb(242,105,53)" fg:x="507" fg:w="2"/><text x="42.7836%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.5336%" y="837" width="0.1678%" height="15" fill="rgb(251,132,46)" fg:x="507" fg:w="2"/><text x="42.7836%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.5336%" y="821" width="0.1678%" height="15" fill="rgb(231,77,14)" fg:x="507" fg:w="2"/><text x="42.7836%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.5336%" y="805" width="0.1678%" height="15" fill="rgb(240,135,9)" fg:x="507" fg:w="2"/><text x="42.7836%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.5336%" y="789" width="0.1678%" height="15" fill="rgb(248,109,14)" fg:x="507" fg:w="2"/><text x="42.7836%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.5336%" y="773" width="0.1678%" height="15" fill="rgb(227,146,52)" fg:x="507" fg:w="2"/><text x="42.7836%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="42.5336%" y="757" width="0.1678%" height="15" fill="rgb(232,54,3)" fg:x="507" fg:w="2"/><text x="42.7836%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="741" width="0.0839%" height="15" fill="rgb(229,201,43)" fg:x="508" fg:w="1"/><text x="42.8674%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="725" width="0.0839%" height="15" fill="rgb(252,161,33)" fg:x="508" fg:w="1"/><text x="42.8674%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="709" width="0.0839%" height="15" fill="rgb(226,146,40)" fg:x="508" fg:w="1"/><text x="42.8674%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="693" width="0.0839%" height="15" fill="rgb(219,47,25)" fg:x="508" fg:w="1"/><text x="42.8674%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="677" width="0.0839%" height="15" fill="rgb(250,135,13)" fg:x="508" fg:w="1"/><text x="42.8674%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="661" width="0.0839%" height="15" fill="rgb(219,229,18)" fg:x="508" fg:w="1"/><text x="42.8674%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="645" width="0.0839%" height="15" fill="rgb(217,152,27)" fg:x="508" fg:w="1"/><text x="42.8674%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="629" width="0.0839%" height="15" fill="rgb(225,71,47)" fg:x="508" fg:w="1"/><text x="42.8674%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.6174%" y="613" width="0.0839%" height="15" fill="rgb(220,139,14)" fg:x="508" fg:w="1"/><text x="42.8674%" y="623.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="42.7013%" y="1029" width="0.2517%" height="15" fill="rgb(247,54,32)" fg:x="509" fg:w="3"/><text x="42.9513%" y="1039.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="42.7013%" y="1013" width="0.2517%" height="15" fill="rgb(252,131,39)" fg:x="509" fg:w="3"/><text x="42.9513%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="42.7013%" y="997" width="0.2517%" height="15" fill="rgb(210,108,39)" fg:x="509" fg:w="3"/><text x="42.9513%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="42.7013%" y="981" width="0.2517%" height="15" fill="rgb(205,23,29)" fg:x="509" fg:w="3"/><text x="42.9513%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.25%)</title><rect x="42.7013%" y="965" width="0.2517%" height="15" fill="rgb(246,139,46)" fg:x="509" fg:w="3"/><text x="42.9513%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.25%)</title><rect x="42.7013%" y="949" width="0.2517%" height="15" fill="rgb(250,81,26)" fg:x="509" fg:w="3"/><text x="42.9513%" y="959.50"></text></g><g><title>write (3 samples, 0.25%)</title><rect x="42.7013%" y="933" width="0.2517%" height="15" fill="rgb(214,104,7)" fg:x="509" fg:w="3"/><text x="42.9513%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="42.7013%" y="917" width="0.2517%" height="15" fill="rgb(233,189,8)" fg:x="509" fg:w="3"/><text x="42.9513%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="42.7013%" y="901" width="0.2517%" height="15" fill="rgb(228,141,17)" fg:x="509" fg:w="3"/><text x="42.9513%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.8691%" y="885" width="0.0839%" height="15" fill="rgb(247,157,1)" fg:x="511" fg:w="1"/><text x="43.1191%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.8691%" y="869" width="0.0839%" height="15" fill="rgb(249,225,5)" fg:x="511" fg:w="1"/><text x="43.1191%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.8691%" y="853" width="0.0839%" height="15" fill="rgb(242,55,13)" fg:x="511" fg:w="1"/><text x="43.1191%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.8691%" y="837" width="0.0839%" height="15" fill="rgb(230,49,50)" fg:x="511" fg:w="1"/><text x="43.1191%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="42.8691%" y="821" width="0.0839%" height="15" fill="rgb(241,111,38)" fg:x="511" fg:w="1"/><text x="43.1191%" y="831.50"></text></g><g><title>simplelog::loggers::logging::write_level (6 samples, 0.50%)</title><rect x="42.7013%" y="1077" width="0.5034%" height="15" fill="rgb(252,155,4)" fg:x="509" fg:w="6"/><text x="42.9513%" y="1087.50"></text></g><g><title>std::io::Write::write_fmt (6 samples, 0.50%)</title><rect x="42.7013%" y="1061" width="0.5034%" height="15" fill="rgb(212,69,32)" fg:x="509" fg:w="6"/><text x="42.9513%" y="1071.50"></text></g><g><title>core::fmt::write (6 samples, 0.50%)</title><rect x="42.7013%" y="1045" width="0.5034%" height="15" fill="rgb(243,107,47)" fg:x="509" fg:w="6"/><text x="42.9513%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.25%)</title><rect x="42.9530%" y="1029" width="0.2517%" height="15" fill="rgb(247,130,12)" fg:x="512" fg:w="3"/><text x="43.2030%" y="1039.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (3 samples, 0.25%)</title><rect x="42.9530%" y="1013" width="0.2517%" height="15" fill="rgb(233,74,16)" fg:x="512" fg:w="3"/><text x="43.2030%" y="1023.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="42.9530%" y="997" width="0.2517%" height="15" fill="rgb(208,58,18)" fg:x="512" fg:w="3"/><text x="43.2030%" y="1007.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="42.9530%" y="981" width="0.2517%" height="15" fill="rgb(242,225,1)" fg:x="512" fg:w="3"/><text x="43.2030%" y="991.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="42.9530%" y="965" width="0.2517%" height="15" fill="rgb(249,39,40)" fg:x="512" fg:w="3"/><text x="43.2030%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.25%)</title><rect x="42.9530%" y="949" width="0.2517%" height="15" fill="rgb(207,72,44)" fg:x="512" fg:w="3"/><text x="43.2030%" y="959.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.25%)</title><rect x="42.9530%" y="933" width="0.2517%" height="15" fill="rgb(215,193,12)" fg:x="512" fg:w="3"/><text x="43.2030%" y="943.50"></text></g><g><title>write (3 samples, 0.25%)</title><rect x="42.9530%" y="917" width="0.2517%" height="15" fill="rgb(248,41,39)" fg:x="512" fg:w="3"/><text x="43.2030%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="43.0369%" y="901" width="0.1678%" height="15" fill="rgb(253,85,4)" fg:x="513" fg:w="2"/><text x="43.2869%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="43.0369%" y="885" width="0.1678%" height="15" fill="rgb(243,70,31)" fg:x="513" fg:w="2"/><text x="43.2869%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="43.0369%" y="869" width="0.1678%" height="15" fill="rgb(253,195,26)" fg:x="513" fg:w="2"/><text x="43.2869%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="43.0369%" y="853" width="0.1678%" height="15" fill="rgb(243,42,11)" fg:x="513" fg:w="2"/><text x="43.2869%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="43.0369%" y="837" width="0.1678%" height="15" fill="rgb(239,66,17)" fg:x="513" fg:w="2"/><text x="43.2869%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="43.0369%" y="821" width="0.1678%" height="15" fill="rgb(217,132,21)" fg:x="513" fg:w="2"/><text x="43.2869%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="43.0369%" y="805" width="0.1678%" height="15" fill="rgb(252,202,21)" fg:x="513" fg:w="2"/><text x="43.2869%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.1208%" y="789" width="0.0839%" height="15" fill="rgb(233,98,36)" fg:x="514" fg:w="1"/><text x="43.3708%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.1208%" y="773" width="0.0839%" height="15" fill="rgb(216,153,54)" fg:x="514" fg:w="1"/><text x="43.3708%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.1208%" y="757" width="0.0839%" height="15" fill="rgb(250,99,7)" fg:x="514" fg:w="1"/><text x="43.3708%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.1208%" y="741" width="0.0839%" height="15" fill="rgb(207,56,50)" fg:x="514" fg:w="1"/><text x="43.3708%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.1208%" y="725" width="0.0839%" height="15" fill="rgb(244,61,34)" fg:x="514" fg:w="1"/><text x="43.3708%" y="735.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="43.2047%" y="1061" width="0.0839%" height="15" fill="rgb(241,50,38)" fg:x="515" fg:w="1"/><text x="43.4547%" y="1071.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="43.2047%" y="1045" width="0.0839%" height="15" fill="rgb(212,166,30)" fg:x="515" fg:w="1"/><text x="43.4547%" y="1055.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.2047%" y="1029" width="0.0839%" height="15" fill="rgb(249,127,32)" fg:x="515" fg:w="1"/><text x="43.4547%" y="1039.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="43.2047%" y="1013" width="0.0839%" height="15" fill="rgb(209,103,0)" fg:x="515" fg:w="1"/><text x="43.4547%" y="1023.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.2047%" y="997" width="0.0839%" height="15" fill="rgb(238,209,51)" fg:x="515" fg:w="1"/><text x="43.4547%" y="1007.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.2047%" y="981" width="0.0839%" height="15" fill="rgb(237,56,23)" fg:x="515" fg:w="1"/><text x="43.4547%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="43.2047%" y="965" width="0.0839%" height="15" fill="rgb(215,153,46)" fg:x="515" fg:w="1"/><text x="43.4547%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="43.2047%" y="949" width="0.0839%" height="15" fill="rgb(224,49,31)" fg:x="515" fg:w="1"/><text x="43.4547%" y="959.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="43.2047%" y="933" width="0.0839%" height="15" fill="rgb(250,18,42)" fg:x="515" fg:w="1"/><text x="43.4547%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.2047%" y="917" width="0.0839%" height="15" fill="rgb(215,176,39)" fg:x="515" fg:w="1"/><text x="43.4547%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.2047%" y="901" width="0.0839%" height="15" fill="rgb(223,77,29)" fg:x="515" fg:w="1"/><text x="43.4547%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.2047%" y="885" width="0.0839%" height="15" fill="rgb(234,94,52)" fg:x="515" fg:w="1"/><text x="43.4547%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="43.2047%" y="869" width="0.0839%" height="15" fill="rgb(220,154,50)" fg:x="515" fg:w="1"/><text x="43.4547%" y="879.50"></text></g><g><title>time::formatting::format_component (14 samples, 1.17%)</title><rect x="43.2886%" y="981" width="1.1745%" height="15" fill="rgb(212,11,10)" fg:x="516" fg:w="14"/><text x="43.5386%" y="991.50"></text></g><g><title>time::formatting::format_number_pad_zero (13 samples, 1.09%)</title><rect x="43.3725%" y="965" width="1.0906%" height="15" fill="rgb(205,166,19)" fg:x="517" fg:w="13"/><text x="43.6225%" y="975.50"></text></g><g><title>time::formatting::write (13 samples, 1.09%)</title><rect x="43.3725%" y="949" width="1.0906%" height="15" fill="rgb(244,198,16)" fg:x="517" fg:w="13"/><text x="43.6225%" y="959.50"></text></g><g><title>std::io::Write::write_all (13 samples, 1.09%)</title><rect x="43.3725%" y="933" width="1.0906%" height="15" fill="rgb(219,69,12)" fg:x="517" fg:w="13"/><text x="43.6225%" y="943.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (13 samples, 1.09%)</title><rect x="43.3725%" y="917" width="1.0906%" height="15" fill="rgb(245,30,7)" fg:x="517" fg:w="13"/><text x="43.6225%" y="927.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (13 samples, 1.09%)</title><rect x="43.3725%" y="901" width="1.0906%" height="15" fill="rgb(218,221,48)" fg:x="517" fg:w="13"/><text x="43.6225%" y="911.50"></text></g><g><title>std::sys::unix::fs::File::write (13 samples, 1.09%)</title><rect x="43.3725%" y="885" width="1.0906%" height="15" fill="rgb(216,66,15)" fg:x="517" fg:w="13"/><text x="43.6225%" y="895.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (13 samples, 1.09%)</title><rect x="43.3725%" y="869" width="1.0906%" height="15" fill="rgb(226,122,50)" fg:x="517" fg:w="13"/><text x="43.6225%" y="879.50"></text></g><g><title>write (13 samples, 1.09%)</title><rect x="43.3725%" y="853" width="1.0906%" height="15" fill="rgb(239,156,16)" fg:x="517" fg:w="13"/><text x="43.6225%" y="863.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="43.3725%" y="837" width="1.0906%" height="15" fill="rgb(224,27,38)" fg:x="517" fg:w="13"/><text x="43.6225%" y="847.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="43.3725%" y="821" width="1.0906%" height="15" fill="rgb(224,39,27)" fg:x="517" fg:w="13"/><text x="43.6225%" y="831.50"></text></g><g><title>[unknown] (13 samples, 1.09%)</title><rect x="43.3725%" y="805" width="1.0906%" height="15" fill="rgb(215,92,29)" fg:x="517" fg:w="13"/><text x="43.6225%" y="815.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="43.4564%" y="789" width="1.0067%" height="15" fill="rgb(207,159,16)" fg:x="518" fg:w="12"/><text x="43.7064%" y="799.50"></text></g><g><title>[unknown] (12 samples, 1.01%)</title><rect x="43.4564%" y="773" width="1.0067%" height="15" fill="rgb(238,163,47)" fg:x="518" fg:w="12"/><text x="43.7064%" y="783.50"></text></g><g><title>[unknown] (10 samples, 0.84%)</title><rect x="43.6242%" y="757" width="0.8389%" height="15" fill="rgb(219,91,49)" fg:x="520" fg:w="10"/><text x="43.8742%" y="767.50"></text></g><g><title>[unknown] (10 samples, 0.84%)</title><rect x="43.6242%" y="741" width="0.8389%" height="15" fill="rgb(227,167,31)" fg:x="520" fg:w="10"/><text x="43.8742%" y="751.50"></text></g><g><title>[unknown] (9 samples, 0.76%)</title><rect x="43.7081%" y="725" width="0.7550%" height="15" fill="rgb(234,80,54)" fg:x="521" fg:w="9"/><text x="43.9581%" y="735.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="43.7919%" y="709" width="0.6711%" height="15" fill="rgb(212,114,2)" fg:x="522" fg:w="8"/><text x="44.0419%" y="719.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="43.7919%" y="693" width="0.6711%" height="15" fill="rgb(234,50,24)" fg:x="522" fg:w="8"/><text x="44.0419%" y="703.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="43.7919%" y="677" width="0.6711%" height="15" fill="rgb(221,68,8)" fg:x="522" fg:w="8"/><text x="44.0419%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="43.8758%" y="661" width="0.5872%" height="15" fill="rgb(254,180,31)" fg:x="523" fg:w="7"/><text x="44.1258%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="44.1275%" y="645" width="0.3356%" height="15" fill="rgb(247,130,50)" fg:x="526" fg:w="4"/><text x="44.3775%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="44.1275%" y="629" width="0.3356%" height="15" fill="rgb(211,109,4)" fg:x="526" fg:w="4"/><text x="44.3775%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="44.2953%" y="613" width="0.1678%" height="15" fill="rgb(238,50,21)" fg:x="528" fg:w="2"/><text x="44.5453%" y="623.50"></text></g><g><title>bridge::prover::Prover::prove_range (343 samples, 28.78%)</title><rect x="15.9396%" y="1173" width="28.7752%" height="15" fill="rgb(225,57,45)" fg:x="190" fg:w="343"/><text x="16.1896%" y="1183.50">bridge::prover::Prover::prove_range</text></g><g><title>log::__private_api_log (34 samples, 2.85%)</title><rect x="41.8624%" y="1157" width="2.8523%" height="15" fill="rgb(209,196,50)" fg:x="499" fg:w="34"/><text x="42.1124%" y="1167.50">lo..</text></g><g><title>&lt;simplelog::loggers::comblog::CombinedLogger as log::Log&gt;::log (34 samples, 2.85%)</title><rect x="41.8624%" y="1141" width="2.8523%" height="15" fill="rgb(242,140,13)" fg:x="499" fg:w="34"/><text x="42.1124%" y="1151.50">&lt;s..</text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as log::Log&gt;::log (34 samples, 2.85%)</title><rect x="41.8624%" y="1125" width="2.8523%" height="15" fill="rgb(217,111,7)" fg:x="499" fg:w="34"/><text x="42.1124%" y="1135.50">&lt;a..</text></g><g><title>&lt;simplelog::loggers::writelog::WriteLogger&lt;W&gt; as log::Log&gt;::log (28 samples, 2.35%)</title><rect x="42.3658%" y="1109" width="2.3490%" height="15" fill="rgb(253,193,51)" fg:x="505" fg:w="28"/><text x="42.6158%" y="1119.50">&lt;..</text></g><g><title>simplelog::loggers::logging::try_log (27 samples, 2.27%)</title><rect x="42.4497%" y="1093" width="2.2651%" height="15" fill="rgb(252,70,29)" fg:x="506" fg:w="27"/><text x="42.6997%" y="1103.50">s..</text></g><g><title>simplelog::loggers::logging::write_time (18 samples, 1.51%)</title><rect x="43.2047%" y="1077" width="1.5101%" height="15" fill="rgb(232,127,12)" fg:x="515" fg:w="18"/><text x="43.4547%" y="1087.50"></text></g><g><title>time::offset_date_time::OffsetDateTime::format_into (17 samples, 1.43%)</title><rect x="43.2886%" y="1061" width="1.4262%" height="15" fill="rgb(211,180,21)" fg:x="516" fg:w="17"/><text x="43.5386%" y="1071.50"></text></g><g><title>time::date_time::DateTime&lt;O&gt;::format_into (17 samples, 1.43%)</title><rect x="43.2886%" y="1045" width="1.4262%" height="15" fill="rgb(229,72,13)" fg:x="516" fg:w="17"/><text x="43.5386%" y="1055.50"></text></g><g><title>time::formatting::formattable::&lt;impl time::formatting::formattable::sealed::Sealed for T&gt;::format_into (17 samples, 1.43%)</title><rect x="43.2886%" y="1029" width="1.4262%" height="15" fill="rgb(240,211,49)" fg:x="516" fg:w="17"/><text x="43.5386%" y="1039.50"></text></g><g><title>time::formatting::formattable::&lt;impl time::formatting::formattable::sealed::Sealed for [time::format_description::borrowed_format_item::BorrowedFormatItem]&gt;::format_into (17 samples, 1.43%)</title><rect x="43.2886%" y="1013" width="1.4262%" height="15" fill="rgb(219,149,40)" fg:x="516" fg:w="17"/><text x="43.5386%" y="1023.50"></text></g><g><title>time::formatting::formattable::&lt;impl time::formatting::formattable::sealed::Sealed for time::format_description::borrowed_format_item::BorrowedFormatItem&gt;::format_into (17 samples, 1.43%)</title><rect x="43.2886%" y="997" width="1.4262%" height="15" fill="rgb(210,127,46)" fg:x="516" fg:w="17"/><text x="43.5386%" y="1007.50"></text></g><g><title>time::formatting::write (3 samples, 0.25%)</title><rect x="44.4631%" y="981" width="0.2517%" height="15" fill="rgb(220,106,7)" fg:x="530" fg:w="3"/><text x="44.7131%" y="991.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.25%)</title><rect x="44.4631%" y="965" width="0.2517%" height="15" fill="rgb(249,31,22)" fg:x="530" fg:w="3"/><text x="44.7131%" y="975.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="44.4631%" y="949" width="0.2517%" height="15" fill="rgb(253,1,49)" fg:x="530" fg:w="3"/><text x="44.7131%" y="959.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (3 samples, 0.25%)</title><rect x="44.4631%" y="933" width="0.2517%" height="15" fill="rgb(227,144,33)" fg:x="530" fg:w="3"/><text x="44.7131%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::write (3 samples, 0.25%)</title><rect x="44.4631%" y="917" width="0.2517%" height="15" fill="rgb(249,163,44)" fg:x="530" fg:w="3"/><text x="44.7131%" y="927.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.25%)</title><rect x="44.4631%" y="901" width="0.2517%" height="15" fill="rgb(234,15,39)" fg:x="530" fg:w="3"/><text x="44.7131%" y="911.50"></text></g><g><title>write (3 samples, 0.25%)</title><rect x="44.4631%" y="885" width="0.2517%" height="15" fill="rgb(207,66,16)" fg:x="530" fg:w="3"/><text x="44.7131%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="869" width="0.2517%" height="15" fill="rgb(233,112,24)" fg:x="530" fg:w="3"/><text x="44.7131%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="853" width="0.2517%" height="15" fill="rgb(230,90,22)" fg:x="530" fg:w="3"/><text x="44.7131%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="837" width="0.2517%" height="15" fill="rgb(229,61,13)" fg:x="530" fg:w="3"/><text x="44.7131%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="821" width="0.2517%" height="15" fill="rgb(225,57,24)" fg:x="530" fg:w="3"/><text x="44.7131%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="805" width="0.2517%" height="15" fill="rgb(208,169,48)" fg:x="530" fg:w="3"/><text x="44.7131%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="789" width="0.2517%" height="15" fill="rgb(244,218,51)" fg:x="530" fg:w="3"/><text x="44.7131%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="773" width="0.2517%" height="15" fill="rgb(214,148,10)" fg:x="530" fg:w="3"/><text x="44.7131%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="757" width="0.2517%" height="15" fill="rgb(225,174,27)" fg:x="530" fg:w="3"/><text x="44.7131%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="44.4631%" y="741" width="0.2517%" height="15" fill="rgb(230,96,26)" fg:x="530" fg:w="3"/><text x="44.7131%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="44.6309%" y="725" width="0.0839%" height="15" fill="rgb(232,10,30)" fg:x="532" fg:w="1"/><text x="44.8809%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="44.6309%" y="709" width="0.0839%" height="15" fill="rgb(222,8,50)" fg:x="532" fg:w="1"/><text x="44.8809%" y="719.50"></text></g><g><title>futures_channel::mpsc::State::is_closed (1 samples, 0.08%)</title><rect x="44.7148%" y="1141" width="0.0839%" height="15" fill="rgb(213,81,27)" fg:x="533" fg:w="1"/><text x="44.9648%" y="1151.50"></text></g><g><title>futures_channel::mpsc::decode_state (1 samples, 0.08%)</title><rect x="44.7987%" y="1141" width="0.0839%" height="15" fill="rgb(245,50,10)" fg:x="534" fg:w="1"/><text x="45.0487%" y="1151.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::try_next (4 samples, 0.34%)</title><rect x="44.7148%" y="1173" width="0.3356%" height="15" fill="rgb(216,100,18)" fg:x="533" fg:w="4"/><text x="44.9648%" y="1183.50"></text></g><g><title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (4 samples, 0.34%)</title><rect x="44.7148%" y="1157" width="0.3356%" height="15" fill="rgb(236,147,54)" fg:x="533" fg:w="4"/><text x="44.9648%" y="1167.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop_spin (2 samples, 0.17%)</title><rect x="44.8826%" y="1141" width="0.1678%" height="15" fill="rgb(205,143,26)" fg:x="535" fg:w="2"/><text x="45.1326%" y="1151.50"></text></g><g><title>futures_channel::mpsc::queue::Queue&lt;T&gt;::pop (1 samples, 0.08%)</title><rect x="44.9664%" y="1125" width="0.0839%" height="15" fill="rgb(236,26,9)" fg:x="536" fg:w="1"/><text x="45.2164%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.08%)</title><rect x="44.9664%" y="1109" width="0.0839%" height="15" fill="rgb(221,165,53)" fg:x="536" fg:w="1"/><text x="45.2164%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.08%)</title><rect x="44.9664%" y="1093" width="0.0839%" height="15" fill="rgb(214,110,17)" fg:x="536" fg:w="1"/><text x="45.2164%" y="1103.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.17%)</title><rect x="45.0503%" y="1157" width="0.1678%" height="15" fill="rgb(237,197,12)" fg:x="537" fg:w="2"/><text x="45.3003%" y="1167.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.17%)</title><rect x="45.0503%" y="1141" width="0.1678%" height="15" fill="rgb(205,84,17)" fg:x="537" fg:w="2"/><text x="45.3003%" y="1151.50"></text></g><g><title>std::thread::panicking (2 samples, 0.17%)</title><rect x="45.0503%" y="1125" width="0.1678%" height="15" fill="rgb(237,18,45)" fg:x="537" fg:w="2"/><text x="45.3003%" y="1135.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.17%)</title><rect x="45.0503%" y="1109" width="0.1678%" height="15" fill="rgb(221,87,14)" fg:x="537" fg:w="2"/><text x="45.3003%" y="1119.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (2 samples, 0.17%)</title><rect x="45.0503%" y="1093" width="0.1678%" height="15" fill="rgb(238,186,15)" fg:x="537" fg:w="2"/><text x="45.3003%" y="1103.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.34%)</title><rect x="45.0503%" y="1173" width="0.3356%" height="15" fill="rgb(208,115,11)" fg:x="537" fg:w="4"/><text x="45.3003%" y="1183.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.17%)</title><rect x="45.2181%" y="1157" width="0.1678%" height="15" fill="rgb(254,175,0)" fg:x="539" fg:w="2"/><text x="45.4681%" y="1167.50"></text></g><g><title>std::thread::sleep (532 samples, 44.63%)</title><rect x="45.3859%" y="1173" width="44.6309%" height="15" fill="rgb(227,24,42)" fg:x="541" fg:w="532"/><text x="45.6359%" y="1183.50">std::thread::sleep</text></g><g><title>std::sys::unix::thread::Thread::sleep (531 samples, 44.55%)</title><rect x="45.4698%" y="1157" width="44.5470%" height="15" fill="rgb(223,211,37)" fg:x="542" fg:w="531"/><text x="45.7198%" y="1167.50">std::sys::unix::thread::Thread::sleep</text></g><g><title>__nanosleep (529 samples, 44.38%)</title><rect x="45.6376%" y="1141" width="44.3792%" height="15" fill="rgb(235,49,27)" fg:x="544" fg:w="529"/><text x="45.8876%" y="1151.50">__nanosleep</text></g><g><title>clock_nanosleep (528 samples, 44.30%)</title><rect x="45.7215%" y="1125" width="44.2953%" height="15" fill="rgb(254,97,51)" fg:x="545" fg:w="528"/><text x="45.9715%" y="1135.50">clock_nanosleep</text></g><g><title>[unknown] (519 samples, 43.54%)</title><rect x="46.4765%" y="1109" width="43.5403%" height="15" fill="rgb(249,51,40)" fg:x="554" fg:w="519"/><text x="46.7265%" y="1119.50">[unknown]</text></g><g><title>[unknown] (493 samples, 41.36%)</title><rect x="48.6577%" y="1093" width="41.3591%" height="15" fill="rgb(210,128,45)" fg:x="580" fg:w="493"/><text x="48.9077%" y="1103.50">[unknown]</text></g><g><title>[unknown] (484 samples, 40.60%)</title><rect x="49.4128%" y="1077" width="40.6040%" height="15" fill="rgb(224,137,50)" fg:x="589" fg:w="484"/><text x="49.6628%" y="1087.50">[unknown]</text></g><g><title>[unknown] (478 samples, 40.10%)</title><rect x="49.9161%" y="1061" width="40.1007%" height="15" fill="rgb(242,15,9)" fg:x="595" fg:w="478"/><text x="50.1661%" y="1071.50">[unknown]</text></g><g><title>[unknown] (468 samples, 39.26%)</title><rect x="50.7550%" y="1045" width="39.2617%" height="15" fill="rgb(233,187,41)" fg:x="605" fg:w="468"/><text x="51.0050%" y="1055.50">[unknown]</text></g><g><title>[unknown] (443 samples, 37.16%)</title><rect x="52.8523%" y="1029" width="37.1644%" height="15" fill="rgb(227,2,29)" fg:x="630" fg:w="443"/><text x="53.1023%" y="1039.50">[unknown]</text></g><g><title>[unknown] (417 samples, 34.98%)</title><rect x="55.0336%" y="1013" width="34.9832%" height="15" fill="rgb(222,70,3)" fg:x="656" fg:w="417"/><text x="55.2836%" y="1023.50">[unknown]</text></g><g><title>[unknown] (410 samples, 34.40%)</title><rect x="55.6208%" y="997" width="34.3960%" height="15" fill="rgb(213,11,42)" fg:x="663" fg:w="410"/><text x="55.8708%" y="1007.50">[unknown]</text></g><g><title>[unknown] (371 samples, 31.12%)</title><rect x="58.8926%" y="981" width="31.1242%" height="15" fill="rgb(225,150,9)" fg:x="702" fg:w="371"/><text x="59.1426%" y="991.50">[unknown]</text></g><g><title>[unknown] (311 samples, 26.09%)</title><rect x="63.9262%" y="965" width="26.0906%" height="15" fill="rgb(230,162,45)" fg:x="762" fg:w="311"/><text x="64.1762%" y="975.50">[unknown]</text></g><g><title>[unknown] (204 samples, 17.11%)</title><rect x="72.9027%" y="949" width="17.1141%" height="15" fill="rgb(222,14,52)" fg:x="869" fg:w="204"/><text x="73.1527%" y="959.50">[unknown]</text></g><g><title>[unknown] (102 samples, 8.56%)</title><rect x="81.4597%" y="933" width="8.5570%" height="15" fill="rgb(254,198,14)" fg:x="971" fg:w="102"/><text x="81.7097%" y="943.50">[unknown]</text></g><g><title>[unknown] (61 samples, 5.12%)</title><rect x="84.8993%" y="917" width="5.1174%" height="15" fill="rgb(220,217,30)" fg:x="1012" fg:w="61"/><text x="85.1493%" y="927.50">[unkno..</text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="89.5134%" y="901" width="0.5034%" height="15" fill="rgb(215,146,41)" fg:x="1067" fg:w="6"/><text x="89.7634%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.42%)</title><rect x="89.5973%" y="885" width="0.4195%" height="15" fill="rgb(217,27,36)" fg:x="1068" fg:w="5"/><text x="89.8473%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.25%)</title><rect x="89.7651%" y="869" width="0.2517%" height="15" fill="rgb(219,218,39)" fg:x="1070" fg:w="3"/><text x="90.0151%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="89.8490%" y="853" width="0.1678%" height="15" fill="rgb(219,4,42)" fg:x="1071" fg:w="2"/><text x="90.0990%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="89.8490%" y="837" width="0.1678%" height="15" fill="rgb(249,119,36)" fg:x="1071" fg:w="2"/><text x="90.0990%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="89.9329%" y="821" width="0.0839%" height="15" fill="rgb(209,23,33)" fg:x="1072" fg:w="1"/><text x="90.1829%" y="831.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="90.1846%" y="1157" width="0.0839%" height="15" fill="rgb(211,10,0)" fg:x="1075" fg:w="1"/><text x="90.4346%" y="1167.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="90.1846%" y="1141" width="0.0839%" height="15" fill="rgb(208,99,37)" fg:x="1075" fg:w="1"/><text x="90.4346%" y="1151.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="90.1846%" y="1125" width="0.0839%" height="15" fill="rgb(213,132,31)" fg:x="1075" fg:w="1"/><text x="90.4346%" y="1135.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="90.1846%" y="1109" width="0.0839%" height="15" fill="rgb(243,129,40)" fg:x="1075" fg:w="1"/><text x="90.4346%" y="1119.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="90.1846%" y="1093" width="0.0839%" height="15" fill="rgb(210,66,33)" fg:x="1075" fg:w="1"/><text x="90.4346%" y="1103.50"></text></g><g><title>bridge::prover::Prover::keep_up (895 samples, 75.08%)</title><rect x="15.5201%" y="1189" width="75.0839%" height="15" fill="rgb(209,189,4)" fg:x="185" fg:w="895"/><text x="15.7701%" y="1199.50">bridge::prover::Prover::keep_up</text></g><g><title>std::time::Instant::elapsed (7 samples, 0.59%)</title><rect x="90.0168%" y="1173" width="0.5872%" height="15" fill="rgb(214,107,37)" fg:x="1073" fg:w="7"/><text x="90.2668%" y="1183.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.34%)</title><rect x="90.2685%" y="1157" width="0.3356%" height="15" fill="rgb(245,88,54)" fg:x="1076" fg:w="4"/><text x="90.5185%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.34%)</title><rect x="90.2685%" y="1141" width="0.3356%" height="15" fill="rgb(205,146,20)" fg:x="1076" fg:w="4"/><text x="90.5185%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.34%)</title><rect x="90.2685%" y="1125" width="0.3356%" height="15" fill="rgb(220,161,25)" fg:x="1076" fg:w="4"/><text x="90.5185%" y="1135.50"></text></g><g><title>clock_gettime (4 samples, 0.34%)</title><rect x="90.2685%" y="1109" width="0.3356%" height="15" fill="rgb(215,152,15)" fg:x="1076" fg:w="4"/><text x="90.5185%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="90.5201%" y="1093" width="0.0839%" height="15" fill="rgb(233,192,44)" fg:x="1079" fg:w="1"/><text x="90.7701%" y="1103.50"></text></g><g><title>[[vdso]] (1 samples, 0.08%)</title><rect x="90.5201%" y="1077" width="0.0839%" height="15" fill="rgb(240,170,46)" fg:x="1079" fg:w="1"/><text x="90.7701%" y="1087.50"></text></g><g><title>bridge::prover::Prover::new (1 samples, 0.08%)</title><rect x="90.6040%" y="1189" width="0.0839%" height="15" fill="rgb(207,104,33)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1199.50"></text></g><g><title>log::__private_api_log (1 samples, 0.08%)</title><rect x="90.6040%" y="1173" width="0.0839%" height="15" fill="rgb(219,21,39)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1183.50"></text></g><g><title>&lt;simplelog::loggers::comblog::CombinedLogger as log::Log&gt;::log (1 samples, 0.08%)</title><rect x="90.6040%" y="1157" width="0.0839%" height="15" fill="rgb(214,133,29)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as log::Log&gt;::log (1 samples, 0.08%)</title><rect x="90.6040%" y="1141" width="0.0839%" height="15" fill="rgb(226,93,6)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1151.50"></text></g><g><title>&lt;simplelog::loggers::writelog::WriteLogger&lt;W&gt; as log::Log&gt;::log (1 samples, 0.08%)</title><rect x="90.6040%" y="1125" width="0.0839%" height="15" fill="rgb(252,222,34)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1135.50"></text></g><g><title>simplelog::loggers::logging::try_log (1 samples, 0.08%)</title><rect x="90.6040%" y="1109" width="0.0839%" height="15" fill="rgb(252,92,48)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1119.50"></text></g><g><title>simplelog::loggers::logging::write_args (1 samples, 0.08%)</title><rect x="90.6040%" y="1093" width="0.0839%" height="15" fill="rgb(245,223,24)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1103.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.6040%" y="1077" width="0.0839%" height="15" fill="rgb(205,176,3)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1087.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="90.6040%" y="1061" width="0.0839%" height="15" fill="rgb(235,151,15)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1071.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.6040%" y="1045" width="0.0839%" height="15" fill="rgb(237,209,11)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1055.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.6040%" y="1029" width="0.0839%" height="15" fill="rgb(243,227,24)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.6040%" y="1013" width="0.0839%" height="15" fill="rgb(239,193,16)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1023.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.6040%" y="997" width="0.0839%" height="15" fill="rgb(231,27,9)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="90.6040%" y="981" width="0.0839%" height="15" fill="rgb(219,169,10)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="90.6040%" y="965" width="0.0839%" height="15" fill="rgb(244,229,43)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="975.50"></text></g><g><title>write (1 samples, 0.08%)</title><rect x="90.6040%" y="949" width="0.0839%" height="15" fill="rgb(254,38,20)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="90.6040%" y="933" width="0.0839%" height="15" fill="rgb(250,47,30)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="90.6040%" y="917" width="0.0839%" height="15" fill="rgb(224,124,36)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="90.6040%" y="901" width="0.0839%" height="15" fill="rgb(246,68,51)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="90.6040%" y="885" width="0.0839%" height="15" fill="rgb(253,43,49)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="90.6040%" y="869" width="0.0839%" height="15" fill="rgb(219,54,36)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="90.6040%" y="853" width="0.0839%" height="15" fill="rgb(227,133,34)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="90.6040%" y="837" width="0.0839%" height="15" fill="rgb(247,227,15)" fg:x="1080" fg:w="1"/><text x="90.8540%" y="847.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 2.94%)</title><rect x="90.6879%" y="1125" width="2.9362%" height="15" fill="rgb(229,96,14)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1135.50">&lt;s..</text></g><g><title>core::ops::function::Fn::call (35 samples, 2.94%)</title><rect x="90.6879%" y="1109" width="2.9362%" height="15" fill="rgb(220,79,17)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1119.50">co..</text></g><g><title>&lt;sled::metrics::Metrics as core::default::Default&gt;::default (35 samples, 2.94%)</title><rect x="90.6879%" y="1093" width="2.9362%" height="15" fill="rgb(205,131,53)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1103.50">&lt;s..</text></g><g><title>&lt;sled::histogram::Histogram as core::default::Default&gt;::default (35 samples, 2.94%)</title><rect x="90.6879%" y="1077" width="2.9362%" height="15" fill="rgb(209,50,29)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1087.50">&lt;s..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (35 samples, 2.94%)</title><rect x="90.6879%" y="1061" width="2.9362%" height="15" fill="rgb(245,86,46)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1071.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (35 samples, 2.94%)</title><rect x="90.6879%" y="1045" width="2.9362%" height="15" fill="rgb(235,66,46)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1055.50">al..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (35 samples, 2.94%)</title><rect x="90.6879%" y="1029" width="2.9362%" height="15" fill="rgb(232,148,31)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1039.50">&lt;c..</text></g><g><title>&lt;core::iter::sources::repeat_with::RepeatWith&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 2.94%)</title><rect x="90.6879%" y="1013" width="2.9362%" height="15" fill="rgb(217,149,8)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1023.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::for_each::check::{{closure}} (35 samples, 2.94%)</title><rect x="90.6879%" y="997" width="2.9362%" height="15" fill="rgb(209,183,11)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="1007.50">&lt;c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (35 samples, 2.94%)</title><rect x="90.6879%" y="981" width="2.9362%" height="15" fill="rgb(208,55,20)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="991.50">al..</text></g><g><title>core::ptr::write (35 samples, 2.94%)</title><rect x="90.6879%" y="965" width="2.9362%" height="15" fill="rgb(218,39,14)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="975.50">co..</text></g><g><title>[libc.so.6] (35 samples, 2.94%)</title><rect x="90.6879%" y="949" width="2.9362%" height="15" fill="rgb(216,169,33)" fg:x="1081" fg:w="35"/><text x="90.9379%" y="959.50">[l..</text></g><g><title>[unknown] (33 samples, 2.77%)</title><rect x="90.8557%" y="933" width="2.7685%" height="15" fill="rgb(233,80,24)" fg:x="1083" fg:w="33"/><text x="91.1057%" y="943.50">[u..</text></g><g><title>[unknown] (30 samples, 2.52%)</title><rect x="91.1074%" y="917" width="2.5168%" height="15" fill="rgb(213,179,31)" fg:x="1086" fg:w="30"/><text x="91.3574%" y="927.50">[u..</text></g><g><title>[unknown] (29 samples, 2.43%)</title><rect x="91.1913%" y="901" width="2.4329%" height="15" fill="rgb(209,19,5)" fg:x="1087" fg:w="29"/><text x="91.4413%" y="911.50">[u..</text></g><g><title>[unknown] (28 samples, 2.35%)</title><rect x="91.2752%" y="885" width="2.3490%" height="15" fill="rgb(219,18,35)" fg:x="1088" fg:w="28"/><text x="91.5252%" y="895.50">[..</text></g><g><title>[unknown] (28 samples, 2.35%)</title><rect x="91.2752%" y="869" width="2.3490%" height="15" fill="rgb(209,169,16)" fg:x="1088" fg:w="28"/><text x="91.5252%" y="879.50">[..</text></g><g><title>[unknown] (22 samples, 1.85%)</title><rect x="91.7785%" y="853" width="1.8456%" height="15" fill="rgb(245,90,51)" fg:x="1094" fg:w="22"/><text x="92.0285%" y="863.50">[..</text></g><g><title>[unknown] (19 samples, 1.59%)</title><rect x="92.0302%" y="837" width="1.5940%" height="15" fill="rgb(220,99,45)" fg:x="1097" fg:w="19"/><text x="92.2802%" y="847.50"></text></g><g><title>[unknown] (16 samples, 1.34%)</title><rect x="92.2819%" y="821" width="1.3423%" height="15" fill="rgb(249,89,25)" fg:x="1100" fg:w="16"/><text x="92.5319%" y="831.50"></text></g><g><title>[unknown] (14 samples, 1.17%)</title><rect x="92.4497%" y="805" width="1.1745%" height="15" fill="rgb(239,193,0)" fg:x="1102" fg:w="14"/><text x="92.6997%" y="815.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="93.0369%" y="789" width="0.5872%" height="15" fill="rgb(231,126,1)" fg:x="1109" fg:w="7"/><text x="93.2869%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.50%)</title><rect x="93.1208%" y="773" width="0.5034%" height="15" fill="rgb(243,166,3)" fg:x="1110" fg:w="6"/><text x="93.3708%" y="783.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="93.6242%" y="789" width="0.0839%" height="15" fill="rgb(223,22,34)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="799.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.08%)</title><rect x="93.6242%" y="773" width="0.0839%" height="15" fill="rgb(251,52,51)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="783.50"></text></g><g><title>sled::threadpool::init_queue (1 samples, 0.08%)</title><rect x="93.6242%" y="757" width="0.0839%" height="15" fill="rgb(221,165,28)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="767.50"></text></g><g><title>sled::threadpool::spawn_new_thread (1 samples, 0.08%)</title><rect x="93.6242%" y="741" width="0.0839%" height="15" fill="rgb(218,121,47)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="751.50"></text></g><g><title>std::thread::Builder::spawn (1 samples, 0.08%)</title><rect x="93.6242%" y="725" width="0.0839%" height="15" fill="rgb(209,120,9)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="735.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.08%)</title><rect x="93.6242%" y="709" width="0.0839%" height="15" fill="rgb(236,68,12)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="719.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (1 samples, 0.08%)</title><rect x="93.6242%" y="693" width="0.0839%" height="15" fill="rgb(225,194,26)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.08%)</title><rect x="93.6242%" y="677" width="0.0839%" height="15" fill="rgb(231,84,39)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="687.50"></text></g><g><title>pthread_create (1 samples, 0.08%)</title><rect x="93.6242%" y="661" width="0.0839%" height="15" fill="rgb(210,11,45)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.6242%" y="645" width="0.0839%" height="15" fill="rgb(224,54,52)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.6242%" y="629" width="0.0839%" height="15" fill="rgb(238,102,14)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.6242%" y="613" width="0.0839%" height="15" fill="rgb(243,160,52)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.6242%" y="597" width="0.0839%" height="15" fill="rgb(216,114,19)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.6242%" y="581" width="0.0839%" height="15" fill="rgb(244,166,37)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.6242%" y="565" width="0.0839%" height="15" fill="rgb(246,29,44)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.6242%" y="549" width="0.0839%" height="15" fill="rgb(215,56,53)" fg:x="1116" fg:w="1"/><text x="93.8742%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.17%)</title><rect x="93.6242%" y="1045" width="0.1678%" height="15" fill="rgb(217,60,2)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="93.6242%" y="1029" width="0.1678%" height="15" fill="rgb(207,26,24)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="1039.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.17%)</title><rect x="93.6242%" y="1013" width="0.1678%" height="15" fill="rgb(252,210,15)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2 samples, 0.17%)</title><rect x="93.6242%" y="997" width="0.1678%" height="15" fill="rgb(253,209,26)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.17%)</title><rect x="93.6242%" y="981" width="0.1678%" height="15" fill="rgb(238,170,14)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="93.6242%" y="965" width="0.1678%" height="15" fill="rgb(216,178,15)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="93.6242%" y="949" width="0.1678%" height="15" fill="rgb(250,197,2)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="93.6242%" y="933" width="0.1678%" height="15" fill="rgb(212,70,42)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="93.6242%" y="917" width="0.1678%" height="15" fill="rgb(227,213,9)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.17%)</title><rect x="93.6242%" y="901" width="0.1678%" height="15" fill="rgb(245,99,25)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="93.6242%" y="885" width="0.1678%" height="15" fill="rgb(250,82,29)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="93.6242%" y="869" width="0.1678%" height="15" fill="rgb(241,226,54)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.17%)</title><rect x="93.6242%" y="853" width="0.1678%" height="15" fill="rgb(221,99,41)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.17%)</title><rect x="93.6242%" y="837" width="0.1678%" height="15" fill="rgb(213,90,21)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="847.50"></text></g><g><title>sled::pagecache::iterator::scan_segment_headers_and_tail::{{closure}} (2 samples, 0.17%)</title><rect x="93.6242%" y="821" width="0.1678%" height="15" fill="rgb(205,208,24)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="831.50"></text></g><g><title>sled::threadpool::spawn (2 samples, 0.17%)</title><rect x="93.6242%" y="805" width="0.1678%" height="15" fill="rgb(246,31,12)" fg:x="1116" fg:w="2"/><text x="93.8742%" y="815.50"></text></g><g><title>sled::threadpool::Queue::send (1 samples, 0.08%)</title><rect x="93.7081%" y="789" width="0.0839%" height="15" fill="rgb(213,154,6)" fg:x="1117" fg:w="1"/><text x="93.9581%" y="799.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_all (1 samples, 0.08%)</title><rect x="93.7081%" y="773" width="0.0839%" height="15" fill="rgb(222,163,29)" fg:x="1117" fg:w="1"/><text x="93.9581%" y="783.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_all_slow (1 samples, 0.08%)</title><rect x="93.7081%" y="757" width="0.0839%" height="15" fill="rgb(227,201,8)" fg:x="1117" fg:w="1"/><text x="93.9581%" y="767.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.08%)</title><rect x="93.7081%" y="741" width="0.0839%" height="15" fill="rgb(233,9,32)" fg:x="1117" fg:w="1"/><text x="93.9581%" y="751.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.08%)</title><rect x="93.7081%" y="725" width="0.0839%" height="15" fill="rgb(217,54,24)" fg:x="1117" fg:w="1"/><text x="93.9581%" y="735.50"></text></g><g><title>syscall (1 samples, 0.08%)</title><rect x="93.7081%" y="709" width="0.0839%" height="15" fill="rgb(235,192,0)" fg:x="1117" fg:w="1"/><text x="93.9581%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7081%" y="693" width="0.0839%" height="15" fill="rgb(235,45,9)" fg:x="1117" fg:w="1"/><text x="93.9581%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7081%" y="677" width="0.0839%" height="15" fill="rgb(246,42,40)" fg:x="1117" fg:w="1"/><text x="93.9581%" y="687.50"></text></g><g><title>sled::pagecache::iterator::raw_segment_iter_from (3 samples, 0.25%)</title><rect x="93.6242%" y="1077" width="0.2517%" height="15" fill="rgb(248,111,24)" fg:x="1116" fg:w="3"/><text x="93.8742%" y="1087.50"></text></g><g><title>sled::pagecache::iterator::scan_segment_headers_and_tail (3 samples, 0.25%)</title><rect x="93.6242%" y="1061" width="0.2517%" height="15" fill="rgb(249,65,22)" fg:x="1116" fg:w="3"/><text x="93.8742%" y="1071.50"></text></g><g><title>sled::pagecache::iterator::check_contiguity_in_unstable_tail (1 samples, 0.08%)</title><rect x="93.7919%" y="1045" width="0.0839%" height="15" fill="rgb(238,111,51)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="1055.50"></text></g><g><title>&lt;sled::pagecache::iterator::LogIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="93.7919%" y="1029" width="0.0839%" height="15" fill="rgb(250,118,22)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="1039.50"></text></g><g><title>sled::pagecache::iterator::LogIter::read_segment (1 samples, 0.08%)</title><rect x="93.7919%" y="1013" width="0.0839%" height="15" fill="rgb(234,84,26)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="1023.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pread_exact_or_eof (1 samples, 0.08%)</title><rect x="93.7919%" y="997" width="0.0839%" height="15" fill="rgb(243,172,12)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="1007.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (1 samples, 0.08%)</title><rect x="93.7919%" y="981" width="0.0839%" height="15" fill="rgb(236,150,49)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::read_at (1 samples, 0.08%)</title><rect x="93.7919%" y="965" width="0.0839%" height="15" fill="rgb(225,197,26)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="975.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (1 samples, 0.08%)</title><rect x="93.7919%" y="949" width="0.0839%" height="15" fill="rgb(214,17,42)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="959.50"></text></g><g><title>__libc_pread (1 samples, 0.08%)</title><rect x="93.7919%" y="933" width="0.0839%" height="15" fill="rgb(224,165,40)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="917" width="0.0839%" height="15" fill="rgb(246,100,4)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="901" width="0.0839%" height="15" fill="rgb(222,103,0)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="885" width="0.0839%" height="15" fill="rgb(227,189,26)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="869" width="0.0839%" height="15" fill="rgb(214,202,17)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="853" width="0.0839%" height="15" fill="rgb(229,111,3)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="837" width="0.0839%" height="15" fill="rgb(229,172,15)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="821" width="0.0839%" height="15" fill="rgb(230,224,35)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="805" width="0.0839%" height="15" fill="rgb(251,141,6)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.7919%" y="789" width="0.0839%" height="15" fill="rgb(225,208,6)" fg:x="1118" fg:w="1"/><text x="94.0419%" y="799.50"></text></g><g><title>&lt;sled::pagecache::iterator::LogIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="93.8758%" y="1061" width="0.1678%" height="15" fill="rgb(246,181,16)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="1071.50"></text></g><g><title>sled::pagecache::iterator::LogIter::read_segment (2 samples, 0.17%)</title><rect x="93.8758%" y="1045" width="0.1678%" height="15" fill="rgb(227,129,36)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="1055.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pread_exact_or_eof (2 samples, 0.17%)</title><rect x="93.8758%" y="1029" width="0.1678%" height="15" fill="rgb(248,117,24)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="1039.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::read_at (2 samples, 0.17%)</title><rect x="93.8758%" y="1013" width="0.1678%" height="15" fill="rgb(214,185,35)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::read_at (2 samples, 0.17%)</title><rect x="93.8758%" y="997" width="0.1678%" height="15" fill="rgb(236,150,34)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="1007.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_at (2 samples, 0.17%)</title><rect x="93.8758%" y="981" width="0.1678%" height="15" fill="rgb(243,228,27)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="991.50"></text></g><g><title>__libc_pread (2 samples, 0.17%)</title><rect x="93.8758%" y="965" width="0.1678%" height="15" fill="rgb(245,77,44)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="93.8758%" y="949" width="0.1678%" height="15" fill="rgb(235,214,42)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="93.8758%" y="933" width="0.1678%" height="15" fill="rgb(221,74,3)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="93.8758%" y="917" width="0.1678%" height="15" fill="rgb(206,121,29)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="93.8758%" y="901" width="0.1678%" height="15" fill="rgb(249,131,53)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="93.8758%" y="885" width="0.1678%" height="15" fill="rgb(236,170,29)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="93.8758%" y="869" width="0.1678%" height="15" fill="rgb(247,96,15)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="93.8758%" y="853" width="0.1678%" height="15" fill="rgb(211,210,7)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="93.8758%" y="837" width="0.1678%" height="15" fill="rgb(240,88,50)" fg:x="1119" fg:w="2"/><text x="94.1258%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.9597%" y="821" width="0.0839%" height="15" fill="rgb(209,229,26)" fg:x="1120" fg:w="1"/><text x="94.2097%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.9597%" y="805" width="0.0839%" height="15" fill="rgb(210,68,23)" fg:x="1120" fg:w="1"/><text x="94.2097%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.9597%" y="789" width="0.0839%" height="15" fill="rgb(229,180,13)" fg:x="1120" fg:w="1"/><text x="94.2097%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.9597%" y="773" width="0.0839%" height="15" fill="rgb(236,53,44)" fg:x="1120" fg:w="1"/><text x="94.2097%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.9597%" y="757" width="0.0839%" height="15" fill="rgb(244,214,29)" fg:x="1120" fg:w="1"/><text x="94.2097%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="93.9597%" y="741" width="0.0839%" height="15" fill="rgb(220,75,29)" fg:x="1120" fg:w="1"/><text x="94.2097%" y="751.50"></text></g><g><title>sled::pagecache::parallel_io_unix::pwrite_all (1 samples, 0.08%)</title><rect x="94.0436%" y="1061" width="0.0839%" height="15" fill="rgb(214,183,37)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="1071.50"></text></g><g><title>std::os::unix::fs::FileExt::write_all_at (1 samples, 0.08%)</title><rect x="94.0436%" y="1045" width="0.0839%" height="15" fill="rgb(239,117,29)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="1055.50"></text></g><g><title>&lt;std::fs::File as std::os::unix::fs::FileExt&gt;::write_at (1 samples, 0.08%)</title><rect x="94.0436%" y="1029" width="0.0839%" height="15" fill="rgb(237,171,35)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="1039.50"></text></g><g><title>std::sys::unix::fs::File::write_at (1 samples, 0.08%)</title><rect x="94.0436%" y="1013" width="0.0839%" height="15" fill="rgb(229,178,53)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="1023.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write_at (1 samples, 0.08%)</title><rect x="94.0436%" y="997" width="0.0839%" height="15" fill="rgb(210,102,19)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="1007.50"></text></g><g><title>__libc_pwrite (1 samples, 0.08%)</title><rect x="94.0436%" y="981" width="0.0839%" height="15" fill="rgb(235,127,22)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="965" width="0.0839%" height="15" fill="rgb(244,31,31)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="949" width="0.0839%" height="15" fill="rgb(231,43,21)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="933" width="0.0839%" height="15" fill="rgb(217,131,35)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="917" width="0.0839%" height="15" fill="rgb(221,149,4)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="901" width="0.0839%" height="15" fill="rgb(232,170,28)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="885" width="0.0839%" height="15" fill="rgb(238,56,10)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="869" width="0.0839%" height="15" fill="rgb(235,196,14)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="853" width="0.0839%" height="15" fill="rgb(216,45,48)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.0436%" y="837" width="0.0839%" height="15" fill="rgb(238,213,17)" fg:x="1121" fg:w="1"/><text x="94.2936%" y="847.50"></text></g><g><title>sled::pagecache::snapshot::write_snapshot (1 samples, 0.08%)</title><rect x="94.1275%" y="1061" width="0.0839%" height="15" fill="rgb(212,13,2)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="1071.50"></text></g><g><title>sled::config::RunningConfig::get_snapshot_files (1 samples, 0.08%)</title><rect x="94.1275%" y="1045" width="0.0839%" height="15" fill="rgb(240,114,20)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="1055.50"></text></g><g><title>std::path::Path::read_dir (1 samples, 0.08%)</title><rect x="94.1275%" y="1029" width="0.0839%" height="15" fill="rgb(228,41,40)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="1039.50"></text></g><g><title>std::fs::read_dir (1 samples, 0.08%)</title><rect x="94.1275%" y="1013" width="0.0839%" height="15" fill="rgb(244,132,35)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="1023.50"></text></g><g><title>std::sys::unix::fs::readdir (1 samples, 0.08%)</title><rect x="94.1275%" y="997" width="0.0839%" height="15" fill="rgb(253,189,4)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="1007.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.08%)</title><rect x="94.1275%" y="981" width="0.0839%" height="15" fill="rgb(224,37,19)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="991.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="94.1275%" y="965" width="0.0839%" height="15" fill="rgb(235,223,18)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="975.50"></text></g><g><title>std::sys::unix::fs::readdir::{{closure}} (1 samples, 0.08%)</title><rect x="94.1275%" y="949" width="0.0839%" height="15" fill="rgb(235,163,25)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="959.50"></text></g><g><title>opendir (1 samples, 0.08%)</title><rect x="94.1275%" y="933" width="0.0839%" height="15" fill="rgb(217,145,28)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="943.50"></text></g><g><title>__open64_nocancel (1 samples, 0.08%)</title><rect x="94.1275%" y="917" width="0.0839%" height="15" fill="rgb(223,223,32)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.1275%" y="901" width="0.0839%" height="15" fill="rgb(227,189,39)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.1275%" y="885" width="0.0839%" height="15" fill="rgb(248,10,22)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.1275%" y="869" width="0.0839%" height="15" fill="rgb(248,46,39)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.1275%" y="853" width="0.0839%" height="15" fill="rgb(248,113,48)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.1275%" y="837" width="0.0839%" height="15" fill="rgb(245,16,25)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.1275%" y="821" width="0.0839%" height="15" fill="rgb(249,152,16)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.1275%" y="805" width="0.0839%" height="15" fill="rgb(250,16,1)" fg:x="1122" fg:w="1"/><text x="94.3775%" y="815.50"></text></g><g><title>sled::pagecache::snapshot::advance_snapshot (6 samples, 0.50%)</title><rect x="93.8758%" y="1077" width="0.5034%" height="15" fill="rgb(249,138,3)" fg:x="1119" fg:w="6"/><text x="94.1258%" y="1087.50"></text></g><g><title>std::fs::File::sync_all (2 samples, 0.17%)</title><rect x="94.2114%" y="1061" width="0.1678%" height="15" fill="rgb(227,71,41)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="1071.50"></text></g><g><title>std::sys::unix::fs::File::fsync (2 samples, 0.17%)</title><rect x="94.2114%" y="1045" width="0.1678%" height="15" fill="rgb(209,184,23)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="1055.50"></text></g><g><title>std::sys::unix::cvt_r (2 samples, 0.17%)</title><rect x="94.2114%" y="1029" width="0.1678%" height="15" fill="rgb(223,215,31)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="1039.50"></text></g><g><title>std::sys::unix::fs::File::fsync::{{closure}} (2 samples, 0.17%)</title><rect x="94.2114%" y="1013" width="0.1678%" height="15" fill="rgb(210,146,28)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="1023.50"></text></g><g><title>std::sys::unix::fs::File::fsync::os_fsync (2 samples, 0.17%)</title><rect x="94.2114%" y="997" width="0.1678%" height="15" fill="rgb(209,183,41)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="1007.50"></text></g><g><title>fsync (2 samples, 0.17%)</title><rect x="94.2114%" y="981" width="0.1678%" height="15" fill="rgb(209,224,45)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="965" width="0.1678%" height="15" fill="rgb(224,209,51)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="949" width="0.1678%" height="15" fill="rgb(223,17,39)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="933" width="0.1678%" height="15" fill="rgb(234,204,37)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="917" width="0.1678%" height="15" fill="rgb(236,120,5)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="901" width="0.1678%" height="15" fill="rgb(248,97,27)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="885" width="0.1678%" height="15" fill="rgb(240,66,17)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="869" width="0.1678%" height="15" fill="rgb(210,79,3)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="853" width="0.1678%" height="15" fill="rgb(214,176,27)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="837" width="0.1678%" height="15" fill="rgb(235,185,3)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="821" width="0.1678%" height="15" fill="rgb(227,24,12)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="805" width="0.1678%" height="15" fill="rgb(252,169,48)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="789" width="0.1678%" height="15" fill="rgb(212,65,1)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="773" width="0.1678%" height="15" fill="rgb(242,39,24)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="94.2114%" y="757" width="0.1678%" height="15" fill="rgb(249,32,23)" fg:x="1123" fg:w="2"/><text x="94.4614%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.2953%" y="741" width="0.0839%" height="15" fill="rgb(251,195,23)" fg:x="1124" fg:w="1"/><text x="94.5453%" y="751.50"></text></g><g><title>kv::store::Store::new (45 samples, 3.78%)</title><rect x="90.6879%" y="1189" width="3.7752%" height="15" fill="rgb(236,174,8)" fg:x="1081" fg:w="45"/><text x="90.9379%" y="1199.50">kv::..</text></g><g><title>kv::config::Config::open (45 samples, 3.78%)</title><rect x="90.6879%" y="1173" width="3.7752%" height="15" fill="rgb(220,197,8)" fg:x="1081" fg:w="45"/><text x="90.9379%" y="1183.50">kv::..</text></g><g><title>sled::config::Config::open (45 samples, 3.78%)</title><rect x="90.6879%" y="1157" width="3.7752%" height="15" fill="rgb(240,108,37)" fg:x="1081" fg:w="45"/><text x="90.9379%" y="1167.50">sled..</text></g><g><title>sled::db::Db::start_inner (45 samples, 3.78%)</title><rect x="90.6879%" y="1141" width="3.7752%" height="15" fill="rgb(232,176,24)" fg:x="1081" fg:w="45"/><text x="90.9379%" y="1151.50">sled..</text></g><g><title>sled::context::Context::start (10 samples, 0.84%)</title><rect x="93.6242%" y="1125" width="0.8389%" height="15" fill="rgb(243,35,29)" fg:x="1116" fg:w="10"/><text x="93.8742%" y="1135.50"></text></g><g><title>sled::pagecache::PageCache::start (10 samples, 0.84%)</title><rect x="93.6242%" y="1109" width="0.8389%" height="15" fill="rgb(210,37,18)" fg:x="1116" fg:w="10"/><text x="93.8742%" y="1119.50"></text></g><g><title>sled::pagecache::snapshot::read_snapshot_or_default (10 samples, 0.84%)</title><rect x="93.6242%" y="1093" width="0.8389%" height="15" fill="rgb(224,184,40)" fg:x="1116" fg:w="10"/><text x="93.8742%" y="1103.50"></text></g><g><title>sled::pagecache::snapshot::read_snapshot (1 samples, 0.08%)</title><rect x="94.3792%" y="1077" width="0.0839%" height="15" fill="rgb(236,39,29)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="1087.50"></text></g><g><title>&lt;sled::pagecache::snapshot::Snapshot as sled::serialization::Serialize&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.3792%" y="1061" width="0.0839%" height="15" fill="rgb(232,48,39)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="1071.50"></text></g><g><title>sled::serialization::deserialize_sequence (1 samples, 0.08%)</title><rect x="94.3792%" y="1045" width="0.0839%" height="15" fill="rgb(236,34,42)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="94.3792%" y="1029" width="0.0839%" height="15" fill="rgb(243,106,37)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.3792%" y="1013" width="0.0839%" height="15" fill="rgb(218,96,6)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="1023.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="94.3792%" y="997" width="0.0839%" height="15" fill="rgb(235,130,12)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.08%)</title><rect x="94.3792%" y="981" width="0.0839%" height="15" fill="rgb(231,95,0)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.08%)</title><rect x="94.3792%" y="965" width="0.0839%" height="15" fill="rgb(228,12,23)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.3792%" y="949" width="0.0839%" height="15" fill="rgb(216,12,1)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.3792%" y="933" width="0.0839%" height="15" fill="rgb(219,59,3)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.3792%" y="917" width="0.0839%" height="15" fill="rgb(215,208,46)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="94.3792%" y="901" width="0.0839%" height="15" fill="rgb(254,224,29)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3792%" y="885" width="0.0839%" height="15" fill="rgb(232,14,29)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.3792%" y="869" width="0.0839%" height="15" fill="rgb(208,45,52)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.3792%" y="853" width="0.0839%" height="15" fill="rgb(234,191,28)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.3792%" y="837" width="0.0839%" height="15" fill="rgb(244,67,43)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.3792%" y="821" width="0.0839%" height="15" fill="rgb(236,189,24)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.3792%" y="805" width="0.0839%" height="15" fill="rgb(239,214,33)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="815.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="94.3792%" y="789" width="0.0839%" height="15" fill="rgb(226,176,41)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="94.3792%" y="773" width="0.0839%" height="15" fill="rgb(248,47,8)" fg:x="1125" fg:w="1"/><text x="94.6292%" y="783.50"></text></g><g><title>bridge (1,067 samples, 89.51%)</title><rect x="5.0336%" y="1477" width="89.5134%" height="15" fill="rgb(218,81,44)" fg:x="60" fg:w="1067"/><text x="5.2836%" y="1487.50">bridge</text></g><g><title>_start (942 samples, 79.03%)</title><rect x="15.5201%" y="1461" width="79.0268%" height="15" fill="rgb(213,98,6)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1471.50">_start</text></g><g><title>__libc_start_main (942 samples, 79.03%)</title><rect x="15.5201%" y="1445" width="79.0268%" height="15" fill="rgb(222,85,22)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1455.50">__libc_start_main</text></g><g><title>[libc.so.6] (942 samples, 79.03%)</title><rect x="15.5201%" y="1429" width="79.0268%" height="15" fill="rgb(239,46,39)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1439.50">[libc.so.6]</text></g><g><title>main (942 samples, 79.03%)</title><rect x="15.5201%" y="1413" width="79.0268%" height="15" fill="rgb(237,12,29)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1423.50">main</text></g><g><title>std::rt::lang_start_internal (942 samples, 79.03%)</title><rect x="15.5201%" y="1397" width="79.0268%" height="15" fill="rgb(214,77,8)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1407.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (942 samples, 79.03%)</title><rect x="15.5201%" y="1381" width="79.0268%" height="15" fill="rgb(217,168,37)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1391.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (942 samples, 79.03%)</title><rect x="15.5201%" y="1365" width="79.0268%" height="15" fill="rgb(221,217,23)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1375.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (942 samples, 79.03%)</title><rect x="15.5201%" y="1349" width="79.0268%" height="15" fill="rgb(243,229,36)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1359.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (942 samples, 79.03%)</title><rect x="15.5201%" y="1333" width="79.0268%" height="15" fill="rgb(251,163,40)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1343.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (942 samples, 79.03%)</title><rect x="15.5201%" y="1317" width="79.0268%" height="15" fill="rgb(237,222,12)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1327.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (942 samples, 79.03%)</title><rect x="15.5201%" y="1301" width="79.0268%" height="15" fill="rgb(248,132,6)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1311.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (942 samples, 79.03%)</title><rect x="15.5201%" y="1285" width="79.0268%" height="15" fill="rgb(227,167,50)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1295.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (942 samples, 79.03%)</title><rect x="15.5201%" y="1269" width="79.0268%" height="15" fill="rgb(242,84,37)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1279.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (942 samples, 79.03%)</title><rect x="15.5201%" y="1253" width="79.0268%" height="15" fill="rgb(212,4,50)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1263.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (942 samples, 79.03%)</title><rect x="15.5201%" y="1237" width="79.0268%" height="15" fill="rgb(230,228,32)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1247.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (942 samples, 79.03%)</title><rect x="15.5201%" y="1221" width="79.0268%" height="15" fill="rgb(248,217,23)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1231.50">core::ops::function::FnOnce::call_once</text></g><g><title>bridge::main (942 samples, 79.03%)</title><rect x="15.5201%" y="1205" width="79.0268%" height="15" fill="rgb(238,197,32)" fg:x="185" fg:w="942"/><text x="15.7701%" y="1215.50">bridge::main</text></g><g><title>std::thread::spawn (1 samples, 0.08%)</title><rect x="94.4631%" y="1189" width="0.0839%" height="15" fill="rgb(236,106,1)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn (1 samples, 0.08%)</title><rect x="94.4631%" y="1173" width="0.0839%" height="15" fill="rgb(219,228,13)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.08%)</title><rect x="94.4631%" y="1157" width="0.0839%" height="15" fill="rgb(238,30,35)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (1 samples, 0.08%)</title><rect x="94.4631%" y="1141" width="0.0839%" height="15" fill="rgb(236,70,23)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1151.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.08%)</title><rect x="94.4631%" y="1125" width="0.0839%" height="15" fill="rgb(249,104,48)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1135.50"></text></g><g><title>pthread_create (1 samples, 0.08%)</title><rect x="94.4631%" y="1109" width="0.0839%" height="15" fill="rgb(254,117,50)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1119.50"></text></g><g><title>__mprotect (1 samples, 0.08%)</title><rect x="94.4631%" y="1093" width="0.0839%" height="15" fill="rgb(223,152,4)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.4631%" y="1077" width="0.0839%" height="15" fill="rgb(245,6,2)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.4631%" y="1061" width="0.0839%" height="15" fill="rgb(249,150,24)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.4631%" y="1045" width="0.0839%" height="15" fill="rgb(228,185,42)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.4631%" y="1029" width="0.0839%" height="15" fill="rgb(226,39,33)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.4631%" y="1013" width="0.0839%" height="15" fill="rgb(221,166,19)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.4631%" y="997" width="0.0839%" height="15" fill="rgb(209,109,2)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="94.4631%" y="981" width="0.0839%" height="15" fill="rgb(252,216,26)" fg:x="1126" fg:w="1"/><text x="94.7131%" y="991.50"></text></g><g><title>perf-exec (8 samples, 0.67%)</title><rect x="94.5470%" y="1477" width="0.6711%" height="15" fill="rgb(227,173,36)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1487.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1461" width="0.6711%" height="15" fill="rgb(209,90,7)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1471.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1445" width="0.6711%" height="15" fill="rgb(250,194,11)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1455.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1429" width="0.6711%" height="15" fill="rgb(220,72,50)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1439.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1413" width="0.6711%" height="15" fill="rgb(222,106,48)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1423.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1397" width="0.6711%" height="15" fill="rgb(216,220,45)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1407.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1381" width="0.6711%" height="15" fill="rgb(234,112,18)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1391.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1365" width="0.6711%" height="15" fill="rgb(206,179,9)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1375.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1349" width="0.6711%" height="15" fill="rgb(215,115,40)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1359.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1333" width="0.6711%" height="15" fill="rgb(222,69,34)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1343.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="94.5470%" y="1317" width="0.6711%" height="15" fill="rgb(209,161,10)" fg:x="1127" fg:w="8"/><text x="94.7970%" y="1327.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.67%)</title><rect x="95.2181%" y="1157" width="0.6711%" height="15" fill="rgb(217,6,38)" fg:x="1135" fg:w="8"/><text x="95.4681%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.59%)</title><rect x="95.8893%" y="1141" width="0.5872%" height="15" fill="rgb(229,229,48)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.59%)</title><rect x="95.8893%" y="1125" width="0.5872%" height="15" fill="rgb(225,21,28)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1135.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (7 samples, 0.59%)</title><rect x="95.8893%" y="1109" width="0.5872%" height="15" fill="rgb(206,33,13)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1119.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="1093" width="0.5872%" height="15" fill="rgb(242,178,17)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1103.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="1077" width="0.5872%" height="15" fill="rgb(220,162,5)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1087.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="1061" width="0.5872%" height="15" fill="rgb(210,33,43)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1071.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="1045" width="0.5872%" height="15" fill="rgb(216,116,54)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1055.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="1029" width="0.5872%" height="15" fill="rgb(249,92,24)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1039.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="1013" width="0.5872%" height="15" fill="rgb(231,189,14)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1023.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="997" width="0.5872%" height="15" fill="rgb(230,8,41)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="1007.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="981" width="0.5872%" height="15" fill="rgb(249,7,27)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="965" width="0.5872%" height="15" fill="rgb(232,86,5)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="949" width="0.5872%" height="15" fill="rgb(224,175,18)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="95.8893%" y="933" width="0.5872%" height="15" fill="rgb(220,129,12)" fg:x="1143" fg:w="7"/><text x="96.1393%" y="943.50"></text></g><g><title>sled-io-0 (16 samples, 1.34%)</title><rect x="95.2181%" y="1477" width="1.3423%" height="15" fill="rgb(210,19,36)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1487.50"></text></g><g><title>[libc.so.6] (16 samples, 1.34%)</title><rect x="95.2181%" y="1461" width="1.3423%" height="15" fill="rgb(219,96,14)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1471.50"></text></g><g><title>[libc.so.6] (16 samples, 1.34%)</title><rect x="95.2181%" y="1445" width="1.3423%" height="15" fill="rgb(249,106,1)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1455.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 1.34%)</title><rect x="95.2181%" y="1429" width="1.3423%" height="15" fill="rgb(249,155,20)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 1.34%)</title><rect x="95.2181%" y="1413" width="1.3423%" height="15" fill="rgb(244,168,9)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 1.34%)</title><rect x="95.2181%" y="1397" width="1.3423%" height="15" fill="rgb(216,23,50)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (16 samples, 1.34%)</title><rect x="95.2181%" y="1381" width="1.3423%" height="15" fill="rgb(224,219,20)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (16 samples, 1.34%)</title><rect x="95.2181%" y="1365" width="1.3423%" height="15" fill="rgb(222,156,15)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 1.34%)</title><rect x="95.2181%" y="1349" width="1.3423%" height="15" fill="rgb(231,97,17)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1359.50"></text></g><g><title>std::panicking::try (16 samples, 1.34%)</title><rect x="95.2181%" y="1333" width="1.3423%" height="15" fill="rgb(218,70,48)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 1.34%)</title><rect x="95.2181%" y="1317" width="1.3423%" height="15" fill="rgb(212,196,52)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 1.34%)</title><rect x="95.2181%" y="1301" width="1.3423%" height="15" fill="rgb(243,203,18)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (16 samples, 1.34%)</title><rect x="95.2181%" y="1285" width="1.3423%" height="15" fill="rgb(252,125,41)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 1.34%)</title><rect x="95.2181%" y="1269" width="1.3423%" height="15" fill="rgb(223,180,33)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1279.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (16 samples, 1.34%)</title><rect x="95.2181%" y="1253" width="1.3423%" height="15" fill="rgb(254,159,46)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 1.34%)</title><rect x="95.2181%" y="1237" width="1.3423%" height="15" fill="rgb(254,38,10)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1247.50"></text></g><g><title>std::panicking::try (16 samples, 1.34%)</title><rect x="95.2181%" y="1221" width="1.3423%" height="15" fill="rgb(208,217,32)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 1.34%)</title><rect x="95.2181%" y="1205" width="1.3423%" height="15" fill="rgb(221,120,13)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1215.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (16 samples, 1.34%)</title><rect x="95.2181%" y="1189" width="1.3423%" height="15" fill="rgb(246,54,52)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1199.50"></text></g><g><title>sled::threadpool::perform_work (16 samples, 1.34%)</title><rect x="95.2181%" y="1173" width="1.3423%" height="15" fill="rgb(242,34,25)" fg:x="1135" fg:w="16"/><text x="95.4681%" y="1183.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (8 samples, 0.67%)</title><rect x="95.8893%" y="1157" width="0.6711%" height="15" fill="rgb(247,209,9)" fg:x="1143" fg:w="8"/><text x="96.1393%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (1 samples, 0.08%)</title><rect x="96.4765%" y="1141" width="0.0839%" height="15" fill="rgb(228,71,26)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.08%)</title><rect x="96.4765%" y="1125" width="0.0839%" height="15" fill="rgb(222,145,49)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.08%)</title><rect x="96.4765%" y="1109" width="0.0839%" height="15" fill="rgb(218,121,17)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.08%)</title><rect x="96.4765%" y="1093" width="0.0839%" height="15" fill="rgb(244,50,7)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.08%)</title><rect x="96.4765%" y="1077" width="0.0839%" height="15" fill="rgb(246,229,37)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (1 samples, 0.08%)</title><rect x="96.4765%" y="1061" width="0.0839%" height="15" fill="rgb(225,18,5)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1071.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.08%)</title><rect x="96.4765%" y="1045" width="0.0839%" height="15" fill="rgb(213,204,8)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1055.50"></text></g><g><title>syscall (1 samples, 0.08%)</title><rect x="96.4765%" y="1029" width="0.0839%" height="15" fill="rgb(238,103,6)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.4765%" y="1013" width="0.0839%" height="15" fill="rgb(222,25,35)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.4765%" y="997" width="0.0839%" height="15" fill="rgb(213,203,35)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.4765%" y="981" width="0.0839%" height="15" fill="rgb(221,79,53)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.4765%" y="965" width="0.0839%" height="15" fill="rgb(243,200,35)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.4765%" y="949" width="0.0839%" height="15" fill="rgb(248,60,25)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.4765%" y="933" width="0.0839%" height="15" fill="rgb(227,53,46)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.4765%" y="917" width="0.0839%" height="15" fill="rgb(216,120,32)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="96.4765%" y="901" width="0.0839%" height="15" fill="rgb(220,134,1)" fg:x="1150" fg:w="1"/><text x="96.7265%" y="911.50"></text></g><g><title>sled-io-1 (5 samples, 0.42%)</title><rect x="96.5604%" y="1477" width="0.4195%" height="15" fill="rgb(237,168,5)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1487.50"></text></g><g><title>[libc.so.6] (5 samples, 0.42%)</title><rect x="96.5604%" y="1461" width="0.4195%" height="15" fill="rgb(231,100,33)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1471.50"></text></g><g><title>[libc.so.6] (5 samples, 0.42%)</title><rect x="96.5604%" y="1445" width="0.4195%" height="15" fill="rgb(236,177,47)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1455.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5 samples, 0.42%)</title><rect x="96.5604%" y="1429" width="0.4195%" height="15" fill="rgb(235,7,49)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.42%)</title><rect x="96.5604%" y="1413" width="0.4195%" height="15" fill="rgb(232,119,22)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.42%)</title><rect x="96.5604%" y="1397" width="0.4195%" height="15" fill="rgb(254,73,53)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.42%)</title><rect x="96.5604%" y="1381" width="0.4195%" height="15" fill="rgb(251,35,20)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (5 samples, 0.42%)</title><rect x="96.5604%" y="1365" width="0.4195%" height="15" fill="rgb(241,119,20)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.42%)</title><rect x="96.5604%" y="1349" width="0.4195%" height="15" fill="rgb(207,102,14)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1359.50"></text></g><g><title>std::panicking::try (5 samples, 0.42%)</title><rect x="96.5604%" y="1333" width="0.4195%" height="15" fill="rgb(248,201,50)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.42%)</title><rect x="96.5604%" y="1317" width="0.4195%" height="15" fill="rgb(222,185,44)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.42%)</title><rect x="96.5604%" y="1301" width="0.4195%" height="15" fill="rgb(218,107,18)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (5 samples, 0.42%)</title><rect x="96.5604%" y="1285" width="0.4195%" height="15" fill="rgb(237,177,39)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.42%)</title><rect x="96.5604%" y="1269" width="0.4195%" height="15" fill="rgb(246,69,6)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1279.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (5 samples, 0.42%)</title><rect x="96.5604%" y="1253" width="0.4195%" height="15" fill="rgb(234,208,37)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.42%)</title><rect x="96.5604%" y="1237" width="0.4195%" height="15" fill="rgb(225,4,6)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1247.50"></text></g><g><title>std::panicking::try (5 samples, 0.42%)</title><rect x="96.5604%" y="1221" width="0.4195%" height="15" fill="rgb(233,45,0)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.42%)</title><rect x="96.5604%" y="1205" width="0.4195%" height="15" fill="rgb(226,136,5)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1215.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (5 samples, 0.42%)</title><rect x="96.5604%" y="1189" width="0.4195%" height="15" fill="rgb(211,91,47)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1199.50"></text></g><g><title>sled::threadpool::perform_work (5 samples, 0.42%)</title><rect x="96.5604%" y="1173" width="0.4195%" height="15" fill="rgb(242,88,51)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1183.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.42%)</title><rect x="96.5604%" y="1157" width="0.4195%" height="15" fill="rgb(230,91,28)" fg:x="1151" fg:w="5"/><text x="96.8104%" y="1167.50"></text></g><g><title>sled-io-2 (8 samples, 0.67%)</title><rect x="96.9799%" y="1477" width="0.6711%" height="15" fill="rgb(254,186,29)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1487.50"></text></g><g><title>[libc.so.6] (8 samples, 0.67%)</title><rect x="96.9799%" y="1461" width="0.6711%" height="15" fill="rgb(238,6,4)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1471.50"></text></g><g><title>[libc.so.6] (8 samples, 0.67%)</title><rect x="96.9799%" y="1445" width="0.6711%" height="15" fill="rgb(221,151,16)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1455.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 0.67%)</title><rect x="96.9799%" y="1429" width="0.6711%" height="15" fill="rgb(251,143,52)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.67%)</title><rect x="96.9799%" y="1413" width="0.6711%" height="15" fill="rgb(206,90,15)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8 samples, 0.67%)</title><rect x="96.9799%" y="1397" width="0.6711%" height="15" fill="rgb(218,35,8)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (8 samples, 0.67%)</title><rect x="96.9799%" y="1381" width="0.6711%" height="15" fill="rgb(239,215,6)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (8 samples, 0.67%)</title><rect x="96.9799%" y="1365" width="0.6711%" height="15" fill="rgb(245,116,39)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.67%)</title><rect x="96.9799%" y="1349" width="0.6711%" height="15" fill="rgb(242,65,28)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1359.50"></text></g><g><title>std::panicking::try (8 samples, 0.67%)</title><rect x="96.9799%" y="1333" width="0.6711%" height="15" fill="rgb(252,132,53)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.67%)</title><rect x="96.9799%" y="1317" width="0.6711%" height="15" fill="rgb(224,159,50)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.67%)</title><rect x="96.9799%" y="1301" width="0.6711%" height="15" fill="rgb(224,93,4)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (8 samples, 0.67%)</title><rect x="96.9799%" y="1285" width="0.6711%" height="15" fill="rgb(208,81,34)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.67%)</title><rect x="96.9799%" y="1269" width="0.6711%" height="15" fill="rgb(233,92,54)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1279.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (8 samples, 0.67%)</title><rect x="96.9799%" y="1253" width="0.6711%" height="15" fill="rgb(237,21,14)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.67%)</title><rect x="96.9799%" y="1237" width="0.6711%" height="15" fill="rgb(249,128,51)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1247.50"></text></g><g><title>std::panicking::try (8 samples, 0.67%)</title><rect x="96.9799%" y="1221" width="0.6711%" height="15" fill="rgb(223,129,24)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.67%)</title><rect x="96.9799%" y="1205" width="0.6711%" height="15" fill="rgb(231,168,25)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1215.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (8 samples, 0.67%)</title><rect x="96.9799%" y="1189" width="0.6711%" height="15" fill="rgb(224,39,20)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1199.50"></text></g><g><title>sled::threadpool::perform_work (8 samples, 0.67%)</title><rect x="96.9799%" y="1173" width="0.6711%" height="15" fill="rgb(225,152,53)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1183.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.67%)</title><rect x="96.9799%" y="1157" width="0.6711%" height="15" fill="rgb(252,17,24)" fg:x="1156" fg:w="8"/><text x="97.2299%" y="1167.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.34%)</title><rect x="97.6510%" y="1157" width="0.3356%" height="15" fill="rgb(250,114,30)" fg:x="1164" fg:w="4"/><text x="97.9010%" y="1167.50"></text></g><g><title>sled-io-3 (12 samples, 1.01%)</title><rect x="97.6510%" y="1477" width="1.0067%" height="15" fill="rgb(229,5,4)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1487.50"></text></g><g><title>[libc.so.6] (12 samples, 1.01%)</title><rect x="97.6510%" y="1461" width="1.0067%" height="15" fill="rgb(225,176,49)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1471.50"></text></g><g><title>[libc.so.6] (12 samples, 1.01%)</title><rect x="97.6510%" y="1445" width="1.0067%" height="15" fill="rgb(224,221,49)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1455.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (12 samples, 1.01%)</title><rect x="97.6510%" y="1429" width="1.0067%" height="15" fill="rgb(253,169,27)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 1.01%)</title><rect x="97.6510%" y="1413" width="1.0067%" height="15" fill="rgb(211,206,16)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 1.01%)</title><rect x="97.6510%" y="1397" width="1.0067%" height="15" fill="rgb(244,87,35)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 1.01%)</title><rect x="97.6510%" y="1381" width="1.0067%" height="15" fill="rgb(246,28,10)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (12 samples, 1.01%)</title><rect x="97.6510%" y="1365" width="1.0067%" height="15" fill="rgb(229,12,44)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 1.01%)</title><rect x="97.6510%" y="1349" width="1.0067%" height="15" fill="rgb(210,145,37)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1359.50"></text></g><g><title>std::panicking::try (12 samples, 1.01%)</title><rect x="97.6510%" y="1333" width="1.0067%" height="15" fill="rgb(227,112,52)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 1.01%)</title><rect x="97.6510%" y="1317" width="1.0067%" height="15" fill="rgb(238,155,34)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 1.01%)</title><rect x="97.6510%" y="1301" width="1.0067%" height="15" fill="rgb(239,226,36)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (12 samples, 1.01%)</title><rect x="97.6510%" y="1285" width="1.0067%" height="15" fill="rgb(230,16,23)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 1.01%)</title><rect x="97.6510%" y="1269" width="1.0067%" height="15" fill="rgb(236,171,36)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1279.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (12 samples, 1.01%)</title><rect x="97.6510%" y="1253" width="1.0067%" height="15" fill="rgb(221,22,14)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 1.01%)</title><rect x="97.6510%" y="1237" width="1.0067%" height="15" fill="rgb(242,43,11)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1247.50"></text></g><g><title>std::panicking::try (12 samples, 1.01%)</title><rect x="97.6510%" y="1221" width="1.0067%" height="15" fill="rgb(232,69,23)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 1.01%)</title><rect x="97.6510%" y="1205" width="1.0067%" height="15" fill="rgb(216,180,54)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1215.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (12 samples, 1.01%)</title><rect x="97.6510%" y="1189" width="1.0067%" height="15" fill="rgb(216,5,24)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1199.50"></text></g><g><title>sled::threadpool::perform_work (12 samples, 1.01%)</title><rect x="97.6510%" y="1173" width="1.0067%" height="15" fill="rgb(225,89,9)" fg:x="1164" fg:w="12"/><text x="97.9010%" y="1183.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (8 samples, 0.67%)</title><rect x="97.9866%" y="1157" width="0.6711%" height="15" fill="rgb(243,75,33)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (8 samples, 0.67%)</title><rect x="97.9866%" y="1141" width="0.6711%" height="15" fill="rgb(247,141,45)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (8 samples, 0.67%)</title><rect x="97.9866%" y="1125" width="0.6711%" height="15" fill="rgb(232,177,36)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park (8 samples, 0.67%)</title><rect x="97.9866%" y="1109" width="0.6711%" height="15" fill="rgb(219,125,36)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (8 samples, 0.67%)</title><rect x="97.9866%" y="1093" width="0.6711%" height="15" fill="rgb(227,94,9)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (8 samples, 0.67%)</title><rect x="97.9866%" y="1077" width="0.6711%" height="15" fill="rgb(240,34,52)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (8 samples, 0.67%)</title><rect x="97.9866%" y="1061" width="0.6711%" height="15" fill="rgb(216,45,12)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1071.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (8 samples, 0.67%)</title><rect x="97.9866%" y="1045" width="0.6711%" height="15" fill="rgb(246,21,19)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1055.50"></text></g><g><title>syscall (8 samples, 0.67%)</title><rect x="97.9866%" y="1029" width="0.6711%" height="15" fill="rgb(213,98,42)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1039.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="1013" width="0.6711%" height="15" fill="rgb(250,136,47)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1023.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="997" width="0.6711%" height="15" fill="rgb(251,124,27)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="1007.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="981" width="0.6711%" height="15" fill="rgb(229,180,14)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="991.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="965" width="0.6711%" height="15" fill="rgb(245,216,25)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="975.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="949" width="0.6711%" height="15" fill="rgb(251,43,5)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="959.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="933" width="0.6711%" height="15" fill="rgb(250,128,24)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="943.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="917" width="0.6711%" height="15" fill="rgb(217,117,27)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="927.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="901" width="0.6711%" height="15" fill="rgb(245,147,4)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="911.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="885" width="0.6711%" height="15" fill="rgb(242,201,35)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="895.50"></text></g><g><title>[unknown] (8 samples, 0.67%)</title><rect x="97.9866%" y="869" width="0.6711%" height="15" fill="rgb(218,181,1)" fg:x="1168" fg:w="8"/><text x="98.2366%" y="879.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="98.0705%" y="853" width="0.5872%" height="15" fill="rgb(222,6,29)" fg:x="1169" fg:w="7"/><text x="98.3205%" y="863.50"></text></g><g><title>&lt;sled::lazy::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.50%)</title><rect x="98.6577%" y="1157" width="0.5034%" height="15" fill="rgb(208,186,3)" fg:x="1176" fg:w="6"/><text x="98.9077%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.59%)</title><rect x="99.1611%" y="1141" width="0.5872%" height="15" fill="rgb(216,36,26)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.59%)</title><rect x="99.1611%" y="1125" width="0.5872%" height="15" fill="rgb(248,201,23)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1135.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (7 samples, 0.59%)</title><rect x="99.1611%" y="1109" width="0.5872%" height="15" fill="rgb(251,170,31)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1119.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="1093" width="0.5872%" height="15" fill="rgb(207,110,25)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1103.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="1077" width="0.5872%" height="15" fill="rgb(250,54,15)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1087.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="1061" width="0.5872%" height="15" fill="rgb(227,68,33)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1071.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="1045" width="0.5872%" height="15" fill="rgb(238,34,41)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1055.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="1029" width="0.5872%" height="15" fill="rgb(220,11,15)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1039.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="1013" width="0.5872%" height="15" fill="rgb(246,111,35)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1023.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="997" width="0.5872%" height="15" fill="rgb(209,88,53)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="1007.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="981" width="0.5872%" height="15" fill="rgb(231,185,47)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="965" width="0.5872%" height="15" fill="rgb(233,154,1)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="949" width="0.5872%" height="15" fill="rgb(225,15,46)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="933" width="0.5872%" height="15" fill="rgb(211,135,41)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="943.50"></text></g><g><title>[unknown] (7 samples, 0.59%)</title><rect x="99.1611%" y="917" width="0.5872%" height="15" fill="rgb(208,54,0)" fg:x="1182" fg:w="7"/><text x="99.4111%" y="927.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 1.17%)</title><rect x="98.6577%" y="1349" width="1.1745%" height="15" fill="rgb(244,136,14)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1359.50"></text></g><g><title>std::panicking::try (14 samples, 1.17%)</title><rect x="98.6577%" y="1333" width="1.1745%" height="15" fill="rgb(241,56,14)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 1.17%)</title><rect x="98.6577%" y="1317" width="1.1745%" height="15" fill="rgb(205,80,24)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 1.17%)</title><rect x="98.6577%" y="1301" width="1.1745%" height="15" fill="rgb(220,57,4)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (14 samples, 1.17%)</title><rect x="98.6577%" y="1285" width="1.1745%" height="15" fill="rgb(226,193,50)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 1.17%)</title><rect x="98.6577%" y="1269" width="1.1745%" height="15" fill="rgb(231,168,22)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1279.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (14 samples, 1.17%)</title><rect x="98.6577%" y="1253" width="1.1745%" height="15" fill="rgb(254,215,14)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 1.17%)</title><rect x="98.6577%" y="1237" width="1.1745%" height="15" fill="rgb(211,115,16)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1247.50"></text></g><g><title>std::panicking::try (14 samples, 1.17%)</title><rect x="98.6577%" y="1221" width="1.1745%" height="15" fill="rgb(236,210,16)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 1.17%)</title><rect x="98.6577%" y="1205" width="1.1745%" height="15" fill="rgb(221,94,12)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1215.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (14 samples, 1.17%)</title><rect x="98.6577%" y="1189" width="1.1745%" height="15" fill="rgb(235,218,49)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1199.50"></text></g><g><title>sled::threadpool::perform_work (14 samples, 1.17%)</title><rect x="98.6577%" y="1173" width="1.1745%" height="15" fill="rgb(217,114,14)" fg:x="1176" fg:w="14"/><text x="98.9077%" y="1183.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (8 samples, 0.67%)</title><rect x="99.1611%" y="1157" width="0.6711%" height="15" fill="rgb(216,145,22)" fg:x="1182" fg:w="8"/><text x="99.4111%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (1 samples, 0.08%)</title><rect x="99.7483%" y="1141" width="0.0839%" height="15" fill="rgb(217,112,39)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.08%)</title><rect x="99.7483%" y="1125" width="0.0839%" height="15" fill="rgb(225,85,32)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.08%)</title><rect x="99.7483%" y="1109" width="0.0839%" height="15" fill="rgb(245,209,47)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.08%)</title><rect x="99.7483%" y="1093" width="0.0839%" height="15" fill="rgb(218,220,15)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.08%)</title><rect x="99.7483%" y="1077" width="0.0839%" height="15" fill="rgb(222,202,31)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (1 samples, 0.08%)</title><rect x="99.7483%" y="1061" width="0.0839%" height="15" fill="rgb(243,203,4)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1071.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.08%)</title><rect x="99.7483%" y="1045" width="0.0839%" height="15" fill="rgb(237,92,17)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1055.50"></text></g><g><title>syscall (1 samples, 0.08%)</title><rect x="99.7483%" y="1029" width="0.0839%" height="15" fill="rgb(231,119,7)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.7483%" y="1013" width="0.0839%" height="15" fill="rgb(237,82,41)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.7483%" y="997" width="0.0839%" height="15" fill="rgb(226,81,48)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.7483%" y="981" width="0.0839%" height="15" fill="rgb(234,70,51)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.7483%" y="965" width="0.0839%" height="15" fill="rgb(251,86,4)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.7483%" y="949" width="0.0839%" height="15" fill="rgb(244,144,28)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.7483%" y="933" width="0.0839%" height="15" fill="rgb(232,161,39)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.7483%" y="917" width="0.0839%" height="15" fill="rgb(247,34,51)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.7483%" y="901" width="0.0839%" height="15" fill="rgb(225,132,2)" fg:x="1189" fg:w="1"/><text x="99.9983%" y="911.50"></text></g><g><title>sled-io-4 (15 samples, 1.26%)</title><rect x="98.6577%" y="1477" width="1.2584%" height="15" fill="rgb(209,159,44)" fg:x="1176" fg:w="15"/><text x="98.9077%" y="1487.50"></text></g><g><title>[libc.so.6] (15 samples, 1.26%)</title><rect x="98.6577%" y="1461" width="1.2584%" height="15" fill="rgb(251,214,1)" fg:x="1176" fg:w="15"/><text x="98.9077%" y="1471.50"></text></g><g><title>[libc.so.6] (15 samples, 1.26%)</title><rect x="98.6577%" y="1445" width="1.2584%" height="15" fill="rgb(247,84,47)" fg:x="1176" fg:w="15"/><text x="98.9077%" y="1455.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 1.26%)</title><rect x="98.6577%" y="1429" width="1.2584%" height="15" fill="rgb(240,111,43)" fg:x="1176" fg:w="15"/><text x="98.9077%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 1.26%)</title><rect x="98.6577%" y="1413" width="1.2584%" height="15" fill="rgb(215,214,35)" fg:x="1176" fg:w="15"/><text x="98.9077%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 1.26%)</title><rect x="98.6577%" y="1397" width="1.2584%" height="15" fill="rgb(248,207,23)" fg:x="1176" fg:w="15"/><text x="98.9077%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15 samples, 1.26%)</title><rect x="98.6577%" y="1381" width="1.2584%" height="15" fill="rgb(214,186,4)" fg:x="1176" fg:w="15"/><text x="98.9077%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (15 samples, 1.26%)</title><rect x="98.6577%" y="1365" width="1.2584%" height="15" fill="rgb(220,133,22)" fg:x="1176" fg:w="15"/><text x="98.9077%" y="1375.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.08%)</title><rect x="99.8322%" y="1349" width="0.0839%" height="15" fill="rgb(239,134,19)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1359.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.08%)</title><rect x="99.8322%" y="1333" width="0.0839%" height="15" fill="rgb(250,140,9)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1343.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="99.8322%" y="1317" width="0.0839%" height="15" fill="rgb(225,59,14)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1327.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="99.8322%" y="1301" width="0.0839%" height="15" fill="rgb(214,152,51)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1311.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="99.8322%" y="1285" width="0.0839%" height="15" fill="rgb(251,227,43)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1295.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="99.8322%" y="1269" width="0.0839%" height="15" fill="rgb(241,96,17)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1279.50"></text></g><g><title>__mmap (1 samples, 0.08%)</title><rect x="99.8322%" y="1253" width="0.0839%" height="15" fill="rgb(234,198,43)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.8322%" y="1237" width="0.0839%" height="15" fill="rgb(220,108,29)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.8322%" y="1221" width="0.0839%" height="15" fill="rgb(226,163,33)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.8322%" y="1205" width="0.0839%" height="15" fill="rgb(205,194,45)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.8322%" y="1189" width="0.0839%" height="15" fill="rgb(206,143,44)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.8322%" y="1173" width="0.0839%" height="15" fill="rgb(236,136,36)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.8322%" y="1157" width="0.0839%" height="15" fill="rgb(249,172,42)" fg:x="1190" fg:w="1"/><text x="100.0822%" y="1167.50"></text></g><g><title>all (1,192 samples, 100%)</title><rect x="0.0000%" y="1493" width="100.0000%" height="15" fill="rgb(216,139,23)" fg:x="0" fg:w="1192"/><text x="0.2500%" y="1503.50"></text></g><g><title>sled-io-5 (1 samples, 0.08%)</title><rect x="99.9161%" y="1477" width="0.0839%" height="15" fill="rgb(207,166,20)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1487.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="99.9161%" y="1461" width="0.0839%" height="15" fill="rgb(210,209,22)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1471.50"></text></g><g><title>[libc.so.6] (1 samples, 0.08%)</title><rect x="99.9161%" y="1445" width="0.0839%" height="15" fill="rgb(232,118,20)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1455.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.08%)</title><rect x="99.9161%" y="1429" width="0.0839%" height="15" fill="rgb(238,113,42)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="99.9161%" y="1413" width="0.0839%" height="15" fill="rgb(231,42,5)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1423.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="99.9161%" y="1397" width="0.0839%" height="15" fill="rgb(243,166,24)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1407.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="99.9161%" y="1381" width="0.0839%" height="15" fill="rgb(237,226,12)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1391.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.08%)</title><rect x="99.9161%" y="1365" width="0.0839%" height="15" fill="rgb(229,133,24)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.08%)</title><rect x="99.9161%" y="1349" width="0.0839%" height="15" fill="rgb(238,33,43)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1359.50"></text></g><g><title>std::panicking::try (1 samples, 0.08%)</title><rect x="99.9161%" y="1333" width="0.0839%" height="15" fill="rgb(227,59,38)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.08%)</title><rect x="99.9161%" y="1317" width="0.0839%" height="15" fill="rgb(230,97,0)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1327.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="99.9161%" y="1301" width="0.0839%" height="15" fill="rgb(250,173,50)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1311.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="99.9161%" y="1285" width="0.0839%" height="15" fill="rgb(240,15,50)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1295.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.08%)</title><rect x="99.9161%" y="1269" width="0.0839%" height="15" fill="rgb(221,93,22)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1279.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}} (1 samples, 0.08%)</title><rect x="99.9161%" y="1253" width="0.0839%" height="15" fill="rgb(245,180,53)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1263.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.08%)</title><rect x="99.9161%" y="1237" width="0.0839%" height="15" fill="rgb(231,88,51)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1247.50"></text></g><g><title>std::panicking::try (1 samples, 0.08%)</title><rect x="99.9161%" y="1221" width="0.0839%" height="15" fill="rgb(240,58,21)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1231.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.08%)</title><rect x="99.9161%" y="1205" width="0.0839%" height="15" fill="rgb(237,21,10)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1215.50"></text></g><g><title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (1 samples, 0.08%)</title><rect x="99.9161%" y="1189" width="0.0839%" height="15" fill="rgb(218,43,11)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1199.50"></text></g><g><title>sled::threadpool::perform_work (1 samples, 0.08%)</title><rect x="99.9161%" y="1173" width="0.0839%" height="15" fill="rgb(218,221,29)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1183.50"></text></g><g><title>sled::threadpool::Queue::recv_timeout (1 samples, 0.08%)</title><rect x="99.9161%" y="1157" width="0.0839%" height="15" fill="rgb(214,118,42)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until (1 samples, 0.08%)</title><rect x="99.9161%" y="1141" width="0.0839%" height="15" fill="rgb(251,200,26)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.08%)</title><rect x="99.9161%" y="1125" width="0.0839%" height="15" fill="rgb(237,101,39)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.08%)</title><rect x="99.9161%" y="1109" width="0.0839%" height="15" fill="rgb(251,117,11)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.08%)</title><rect x="99.9161%" y="1093" width="0.0839%" height="15" fill="rgb(216,223,23)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.08%)</title><rect x="99.9161%" y="1077" width="0.0839%" height="15" fill="rgb(251,54,12)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (1 samples, 0.08%)</title><rect x="99.9161%" y="1061" width="0.0839%" height="15" fill="rgb(254,176,54)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1071.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.08%)</title><rect x="99.9161%" y="1045" width="0.0839%" height="15" fill="rgb(210,32,8)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1055.50"></text></g><g><title>syscall (1 samples, 0.08%)</title><rect x="99.9161%" y="1029" width="0.0839%" height="15" fill="rgb(235,52,38)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.9161%" y="1013" width="0.0839%" height="15" fill="rgb(231,4,44)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.9161%" y="997" width="0.0839%" height="15" fill="rgb(249,2,32)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.9161%" y="981" width="0.0839%" height="15" fill="rgb(224,65,26)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.9161%" y="965" width="0.0839%" height="15" fill="rgb(250,73,40)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.9161%" y="949" width="0.0839%" height="15" fill="rgb(253,177,16)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="99.9161%" y="933" width="0.0839%" height="15" fill="rgb(217,32,34)" fg:x="1191" fg:w="1"/><text x="100.1661%" y="943.50"></text></g></svg></svg>